(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     65719,       1464]
NotebookOptionsPosition[     65316,       1445]
NotebookOutlinePosition[     65701,       1462]
CellTagsIndexPosition[     65658,       1459]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
An interactive version of an example from Zarchan & Musoff, Fundamentals of \
Kalman Filtering, fourth edition, chapter 7, for estimating height and speed \
of a falling object that experiences aerodynamic drag. You may interactively \
adjust observation noise (sigmaZeta), process noise (sigmaXi), number of \
Monte-Carlo iterations, the random seed, the internal integrator for the \
nonlinear differential equations of motion (euler, second-order Runge-Kutta, \
fourth-order Runge-Kutta), and the logarithm of the internal integration time \
step in seconds (-3, -2, -1). The filter diverges for many settings and \
converges for some with varying levels of speed of execution. Convergence \
means the dots stay mostly inside the one-sigma rails on the residuals plots. \
The goal is to find the settings that yield convergence with the fastest \
execution time. Some of the settings are sluggish (on purpose), so be patient \
when clicking.\
\>", "Text",
 CellChangeTimes->{3.672317097081765*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "foldStream", ",", "reify", ",", "takeUntil", ",", "last", ",", 
       "mapStream", ",", "pick", ",", "randn", ",", "dim", ",", "gen", ",", 
       "eulerAccumulator", ",", "rk2Accumulator", ",", "rk4Accumulator"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"foldStream", "[", 
        RowBox[{"f_", ",", "s_", ",", 
         RowBox[{"Null", "[", "]"}]}], "]"}], ":=", 
       RowBox[{"{", 
        RowBox[{"s", ",", "Null"}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"foldStream", "[", 
        RowBox[{"f_", ",", "s_", ",", 
         RowBox[{"{", 
          RowBox[{"z_", ",", "thunk_"}], "}"}]}], "]"}], ":=", 
       RowBox[{"{", 
        RowBox[{"s", ",", 
         RowBox[{
          RowBox[{"foldStream", "[", 
           RowBox[{"f", ",", 
            RowBox[{"f", "[", 
             RowBox[{"s", ",", "z"}], "]"}], ",", 
            RowBox[{"thunk", "[", "]"}]}], "]"}], "&"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"reify", "[", 
        RowBox[{"Null", "[", "]"}], "]"}], ":=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"reify", "[", 
        RowBox[{"{", 
         RowBox[{"v_", ",", "Null"}], "}"}], "]"}], ":=", 
       RowBox[{"{", "v", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"reify", "[", 
        RowBox[{"{", 
         RowBox[{"v_", ",", "thunk_"}], "}"}], "]"}], ":=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", "v", "}"}], ",", 
         RowBox[{"reify", "[", 
          RowBox[{"thunk", "[", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"takeUntil", "[", 
        RowBox[{
         RowBox[{"Null", "[", "]"}], ",", "_"}], "]"}], ":=", 
       RowBox[{"Null", "[", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"takeUntil", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"v_", ",", "thunk_"}], "}"}], ",", "predicate_"}], "]"}], "/;", 
        RowBox[{"predicate", "[", "v", "]"}]}], ":=", 
       RowBox[{"Null", "[", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"takeUntil", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"v_", ",", "thunk_"}], "}"}], ",", "predicate_"}], "]"}], ":=", 
       RowBox[{"{", 
        RowBox[{"v", ",", 
         RowBox[{
          RowBox[{"takeUntil", "[", 
           RowBox[{
            RowBox[{"thunk", "[", "]"}], ",", "predicate"}], "]"}], "&"}]}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"last", "[", 
        RowBox[{"Null", "[", "]"}], "]"}], ":=", "Null"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"last", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"v_", ",", "thunk_"}], "}"}], "/;", 
         RowBox[{
          RowBox[{"thunk", "[", "]"}], "===", 
          RowBox[{"Null", "[", "]"}]}]}], "]"}], ":=", "v"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"last", "[", 
        RowBox[{"{", 
         RowBox[{"v_", ",", "thunk_"}], "}"}], "]"}], ":=", 
       RowBox[{"last", "[", 
        RowBox[{"thunk", "[", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"mapStream", "[", 
        RowBox[{
         RowBox[{"Null", "[", "]"}], ",", "_"}], "]"}], ":=", 
       RowBox[{"Null", "[", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"mapStream", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"v_", ",", "thunk_"}], "}"}], ",", "f_"}], "]"}], ":=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"f", "[", "v", "]"}], ",", 
         RowBox[{
          RowBox[{"mapStream", "[", 
           RowBox[{
            RowBox[{"thunk", "[", "]"}], ",", "f"}], "]"}], "&"}]}], "}"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pick", "[", "n_", "]"}], ":=", 
       RowBox[{
        RowBox[{"#", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}], 
        "&"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pick", "[", 
        RowBox[{"m_", ",", "n_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"#", "\[LeftDoubleBracket]", 
         RowBox[{"m", ",", "n"}], "\[RightDoubleBracket]"}], "&"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"randn", "[", 
        RowBox[{"sigma_:", "1.0"}], "]"}], ":=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Chop", "@", "sigma"}], "\[Equal]", "0.0"}], ",", "0.0", 
         ",", "\[IndentingNewLine]", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"0.0", ",", "sigma"}], "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "generate", " ", "a", " ", "random", " ", "sample", " ", "from", " ", 
        "a", " ", "covariance", " ", "matrix"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"dim", "[", "squareMatrix_List", "]"}], ":=", 
       RowBox[{"Length", "[", 
        RowBox[{
        "squareMatrix", "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"gen", "[", "P_", "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "\[Sigma]s", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\[Sigma]s", "=", 
           RowBox[{"Sqrt", "/@", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"P", "\[LeftDoubleBracket]", 
               RowBox[{"i", ",", "i"}], "\[RightDoubleBracket]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"dim", "[", "P", "]"}]}], "}"}]}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"randn", "/@", "\[Sigma]s"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"eulerAccumulator", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"t_", ",", "x_"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"dt_", ",", "t_", ",", "Dx_"}], "}"}]}], "]"}], ":=", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"t", "+", "dt"}], ",", 
         RowBox[{"x", "+", 
          RowBox[{"dt", " ", 
           RowBox[{"Dx", "[", 
            RowBox[{"x", ",", "t"}], "]"}]}]}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"rk2Accumulator", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"t_", ",", "x_"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"dt_", ",", "t_", ",", "Dx_"}], "}"}]}], "]"}], ":=", 
       "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"dx1", "=", 
           RowBox[{"dt", " ", 
            RowBox[{"Dx", "[", 
             RowBox[{"x", ",", "t"}], "]"}]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"dx2", "=", 
             RowBox[{"dt", " ", 
              RowBox[{"Dx", "[", 
               RowBox[{
                RowBox[{"x", "+", 
                 RowBox[{".5", "dx1"}]}], ",", 
                RowBox[{"t", "+", 
                 RowBox[{".5", "dt"}]}]}], "]"}]}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"t", "+", "dt"}], ",", 
             RowBox[{"x", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"dx1", "+", "dx2"}], ")"}], "/", "2."}]}]}], "}"}]}], 
          "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"rk4Accumulator", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"t_", ",", "x_"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"dt_", ",", "t_", ",", "Dx_"}], "}"}]}], "]"}], ":=", 
       "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"dx1", "=", 
           RowBox[{"dt", " ", 
            RowBox[{"Dx", "[", 
             RowBox[{"x", ",", "t"}], "]"}]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"dx2", "=", 
             RowBox[{"dt", " ", 
              RowBox[{"Dx", "[", 
               RowBox[{
                RowBox[{"x", "+", 
                 RowBox[{".5", "dx1"}]}], ",", 
                RowBox[{"t", "+", 
                 RowBox[{".5", "dt"}]}]}], "]"}]}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"dx3", "=", 
               RowBox[{"dt", " ", 
                RowBox[{"Dx", "[", 
                 RowBox[{
                  RowBox[{"x", "+", 
                   RowBox[{".5", "dx2"}]}], ",", 
                  RowBox[{"t", "+", 
                   RowBox[{".5", "dt"}]}]}], "]"}]}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"dx4", "=", 
                 RowBox[{"dt", " ", 
                  RowBox[{"Dx", "[", 
                   RowBox[{
                    RowBox[{"x", "+", "dx3"}], ",", 
                    RowBox[{"t", "+", "dt"}]}], "]"}]}]}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"t", "+", "dt"}], ",", 
                 RowBox[{"x", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"dx1", "+", 
                    RowBox[{"2.", "dx2"}], "+", 
                    RowBox[{"2.", "dx3"}], "+", "dx4"}], ")"}], "/", 
                   "6."}]}]}], "}"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"g", "=", "32.2"}], ",", 
          RowBox[{"A", "=", "0.0034"}], ",", 
          RowBox[{"k", "=", "22000."}], ",", 
          RowBox[{"beta", "=", "500."}]}], "}"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "dragD", ",", "dragDStream", ",", "F21", ",", "F22", ",", "Phi", 
            ",", "Xi", ",", "EKFDrag"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"dragD", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x_", ",", "v_"}], "}"}], ",", "t_"}], "]"}], ":=", 
            RowBox[{"{", 
             RowBox[{"v", ",", 
              RowBox[{"g", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"A", " ", 
                  RowBox[{"Exp", "[", 
                   RowBox[{
                    RowBox[{"-", "x"}], "/", "k"}], "]"}], 
                  RowBox[{
                   SuperscriptBox["v", "2"], "/", 
                   RowBox[{"(", 
                    RowBox[{"2.", "beta"}], ")"}]}]}], "-", "1"}], ")"}]}]}], 
             "}"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"dragDStream", "[", 
             RowBox[{"Delta", ":", 
              RowBox[{"{", 
               RowBox[{"dt_", ",", "t_", ",", "Dx_"}], "}"}]}], "]"}], ":=", 
            RowBox[{"{", 
             RowBox[{"Delta", ",", 
              RowBox[{
               RowBox[{"dragDStream", "[", 
                RowBox[{"{", 
                 RowBox[{"dt", ",", 
                  RowBox[{"t", "+", "dt"}], ",", "Dx"}], "}"}], "]"}], 
               "&"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"F21", "[", 
             RowBox[{"x_", ",", "v_"}], "]"}], ":=", 
            RowBox[{
             RowBox[{"-", "A"}], " ", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "x"}], "/", "k"}], "]"}], "g", " ", 
             RowBox[{
              SuperscriptBox["v", "2"], "/", 
              RowBox[{"(", 
               RowBox[{"2.", " ", "k", " ", "beta"}], ")"}]}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"F22", "[", 
             RowBox[{"x_", ",", "v_"}], "]"}], ":=", 
            RowBox[{"A", " ", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "x"}], "/", "k"}], "]"}], "g", " ", 
             RowBox[{"v", "/", "beta"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Phi", "[", 
             RowBox[{"dt_", ",", 
              RowBox[{"{", 
               RowBox[{"x_", ",", "v_"}], "}"}]}], "]"}], ":=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "dt"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"dt", "*", 
                 RowBox[{"F21", "[", 
                  RowBox[{"x", ",", "v"}], "]"}]}], ",", 
                RowBox[{"1", "+", 
                 RowBox[{"dt", "*", 
                  RowBox[{"F22", "[", 
                   RowBox[{"x", ",", "v"}], "]"}]}]}]}], "}"}]}], "}"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Xi", "[", 
             RowBox[{"dt_", ",", 
              RowBox[{"{", 
               RowBox[{"x_", ",", "v_"}], "}"}]}], "]"}], ":=", 
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"f", "=", 
                RowBox[{"F22", "[", 
                 RowBox[{"x", ",", "v"}], "]"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"dt", "^", "3"}], "/", "3"}], ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"dt", "^", "2"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"3", "+", 
                    RowBox[{"2", "*", "dt", "*", "f"}]}], ")"}]}], ")"}], "/",
                    "6"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"dt", "^", "2"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"3", "+", 
                    RowBox[{"2", "*", "dt", "*", "f"}]}], ")"}]}], ")"}], "/",
                    "6"}], ",", 
                  RowBox[{"dt", "+", 
                   RowBox[{
                    RowBox[{"dt", "^", "2"}], "*", "f"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"dt", "^", "3"}], "*", 
                    RowBox[{"f", "^", "2"}]}], ")"}], "/", "3"}]}]}], "}"}]}],
                "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"EKFDrag", "[", 
              RowBox[{
              "sigmaXi_", ",", "kZeta_", ",", "integrator_", ",", "fdt_", ",",
                "idt_"}], "]"}], "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x_", ",", "P_"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"t_", ",", "A_", ",", "z_"}], "}"}]}], "]"}], ":=", 
            "\[IndentingNewLine]", 
            RowBox[{"Module", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x2", ",", "P2", ",", "kD", ",", "kK"}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"x2", "=", 
                RowBox[{
                 RowBox[{"last", "[", 
                  RowBox[{"takeUntil", "[", 
                   RowBox[{
                    RowBox[{"foldStream", "[", 
                    RowBox[{"integrator", ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "x"}], "}"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"dragDStream", "[", 
                    RowBox[{"{", 
                    RowBox[{"idt", ",", "t", ",", "dragD"}], "}"}], "]"}]}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"First", "@", "#"}], ">", 
                    RowBox[{"t", "+", "fdt"}]}], "&"}]}], "]"}], "]"}], 
                 "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
               ";", "\[IndentingNewLine]", 
               RowBox[{"P2", "=", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox["sigmaXi", "2"], 
                  RowBox[{"Xi", "[", 
                   RowBox[{"fdt", ",", "x"}], "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"Phi", "[", 
                   RowBox[{"fdt", ",", "x"}], "]"}], ".", "P", ".", 
                  SuperscriptBox[
                   RowBox[{"Phi", "[", 
                    RowBox[{"fdt", ",", "x"}], "]"}], "\[Transpose]"]}]}]}], 
               ";", "\[IndentingNewLine]", 
               RowBox[{"kD", "=", 
                RowBox[{"kZeta", "+", 
                 RowBox[{"A", ".", "P2", ".", 
                  SuperscriptBox["A", "\[Transpose]"]}]}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"kK", "=", 
                RowBox[{"P2", ".", 
                 SuperscriptBox["A", "\[Transpose]"], ".", 
                 RowBox[{"Inverse", "[", "kD", "]"}]}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"x2", "+", 
                  RowBox[{"kK", ".", 
                   RowBox[{"(", 
                    RowBox[{"z", "-", 
                    RowBox[{"A", ".", "x2"}]}], ")"}]}]}], ",", 
                 RowBox[{"P2", "-", 
                  RowBox[{"kK", ".", "kD", ".", 
                   SuperscriptBox["kK", "\[Transpose]"]}]}]}], "}"}]}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Block", "[", 
            RowBox[{
             RowBox[{"{", "$IterationLimit", "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"nStates", "=", "2"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"With", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"t0", "=", "0."}], ",", 
                   RowBox[{"t1", "=", "30."}], ",", 
                   RowBox[{"filterDt", "=", "0.1"}]}], "}"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"With", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"x0", "=", "200000"}], ",", 
                    RowBox[{"v0", "=", 
                    RowBox[{"-", "6000"}]}], ",", 
                    RowBox[{"\[CapitalZeta]", "=", 
                    RowBox[{
                    SuperscriptBox["sigmaZeta", "2"], 
                    RowBox[{"IdentityMatrix", "[", "1", "]"}]}]}], ",", 
                    RowBox[{"P0", "=", 
                    RowBox[{"1000000000000", 
                    RowBox[{"IdentityMatrix", "[", "nStates", "]"}]}]}]}], 
                    "}"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"fakes", ",", 
                    RowBox[{"integrators", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    "eulerAccumulator", ",", "rk2Accumulator", ",", 
                    "rk4Accumulator"}], "}"}]}], ",", "\[IndentingNewLine]", 
                    "integrationDt"}], "}"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"fakes", "[", "]"}], ":=", 
                    RowBox[{"foldStream", "[", 
                    RowBox[{"rk4Accumulator", ",", 
                    RowBox[{"{", 
                    RowBox[{"t0", ",", 
                    RowBox[{"{", 
                    RowBox[{"x0", ",", "v0"}], "}"}]}], "}"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"dragDStream", "[", 
                    RowBox[{"{", 
                    RowBox[{"filterDt", ",", "t0", ",", "dragD"}], "}"}], 
                    "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"integrationDt", "=", 
                    RowBox[{"10.0", "^", "logIntegratorDt"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"SeedRandom", "[", "randomSeed", "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "ffs", ",", "rffs", ",", "ts", ",", "xvs", ",", "xss", 
                    ",", "vss", ",", "txs", ",", "tvs", ",", "ps", ",", 
                    "sigmaxs", ",", "sigmavs"}], "}"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"xss", "=", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"0", ",", "nIterations"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"vss", "=", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"0", ",", "nIterations"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"ffs", "=", 
                    RowBox[{"takeUntil", "[", 
                    RowBox[{
                    RowBox[{"fakes", "[", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"First", "@", "#"}], ">", "t1"}], "&"}]}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"rffs", "=", 
                    RowBox[{"reify", "@", "ffs"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"ts", "=", 
                    RowBox[{
                    RowBox[{"pick", "[", "1", "]"}], "/@", "rffs"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"txs", "=", 
                    RowBox[{
                    RowBox[{"pick", "[", 
                    RowBox[{"2", ",", "1"}], "]"}], "/@", "rffs"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"tvs", "=", 
                    RowBox[{
                    RowBox[{"pick", "[", 
                    RowBox[{"2", ",", "2"}], "]"}], "/@", "rffs"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"xss", ",", "vss"}], "}"}], "=", 
                    RowBox[{"Transpose", "@", 
                    RowBox[{"Map", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"xvs", ",", "ps"}], "}"}], "=", 
                    RowBox[{"Transpose", "@", 
                    RowBox[{"Rest", "@", 
                    RowBox[{"reify", "@", 
                    RowBox[{"foldStream", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"EKFDrag", "[", 
                    RowBox[{"sigmaXi", ",", "\[CapitalZeta]", ",", 
                    RowBox[{"integrators", "[", 
                    RowBox[{"[", "integrator", "]"}], "]"}], ",", "filterDt", 
                    ",", "integrationDt"}], "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", "P0"}], "}"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"mapStream", "[", 
                    RowBox[{"ffs", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"(", GridBox[{
                    {"1", "0"}
                    }], ")"}], ",", 
                    RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "+", 
                    RowBox[{"gen", "[", "\[CapitalZeta]", "]"}]}]}], "}"}], 
                    "&"}]}], "]"}]}], "]"}]}]}]}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"sigmaxs", "=", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{
                    RowBox[{"pick", "[", 
                    RowBox[{"1", ",", "1"}], "]"}], "/@", "ps"}], "]"}]}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"sigmavs", "=", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{
                    RowBox[{"pick", "[", 
                    RowBox[{"2", ",", "2"}], "]"}], "/@", "ps"}], "]"}]}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"Transpose", "@", "xvs"}]}], ")"}], "&"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Range", "[", "nIterations", "]"}]}], "]"}]}]}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"Grid", "[", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ListPlot", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Transpose", "/@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ts", ",", "#"}], "}"}], "&"}], "/@", "xss"}], 
                    ")"}]}], ")"}], "~", "Join", "~", 
                    RowBox[{"{", 
                    RowBox[{"Transpose", "@", 
                    RowBox[{"{", 
                    RowBox[{"ts", ",", "txs"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
                    RowBox[{"GridLines", "\[Rule]", "Full"}], ",", 
                    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"FrameLabel", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<h/[ft]\>\"", ",", "\"\<\>\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<Time/[s]\>\"", ",", "\"\<Height vs. Time\>\""}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
                    RowBox[{"ListPlot", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Transpose", "/@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ts", ",", "#"}], "}"}], "&"}], "/@", "vss"}], 
                    ")"}]}], ")"}], "~", "Join", "~", 
                    RowBox[{"{", 
                    RowBox[{"Transpose", "@", 
                    RowBox[{"{", 
                    RowBox[{"ts", ",", "tvs"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
                    RowBox[{"GridLines", "\[Rule]", "Full"}], ",", 
                    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"FrameLabel", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<\!\(\*OverscriptBox[\(h\), \(.\)]\)/[ft/s]\>\"", 
                    ",", "\"\<\>\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<Time/[s]\>\"", ",", "\"\<Speed vs. Time\>\""}], 
                    "}"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ListPlot", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Transpose", "/@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ts", ",", 
                    RowBox[{"txs", "-", "#"}]}], "}"}], "&"}], "/@", "xss"}], 
                    ")"}]}], ")"}], "~", "Join", "~", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Transpose", "@", 
                    RowBox[{"{", 
                    RowBox[{"ts", ",", "sigmaxs"}], "}"}]}], ",", 
                    RowBox[{"Transpose", "@", 
                    RowBox[{"{", 
                    RowBox[{"ts", ",", 
                    RowBox[{"-", "sigmaxs"}]}], "}"}]}]}], "}"}]}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
                    RowBox[{"GridLines", "\[Rule]", "Full"}], ",", 
                    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"FrameLabel", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<\[CapitalDelta]h/[ft]\>\"", ",", "\"\<\>\""}], "}"}],
                     ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<Time/[s]\>\"", ",", 
                    "\"\<Height Residual vs. Time\>\""}], "}"}]}], "}"}]}]}], 
                    "]"}], ",", 
                    RowBox[{"ListPlot", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Transpose", "/@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ts", ",", 
                    RowBox[{"tvs", "-", "#"}]}], "}"}], "&"}], "/@", "vss"}], 
                    ")"}]}], ")"}], "~", "Join", "~", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Transpose", "@", 
                    RowBox[{"{", 
                    RowBox[{"ts", ",", "sigmavs"}], "}"}]}], ",", 
                    RowBox[{"Transpose", "@", 
                    RowBox[{"{", 
                    RowBox[{"ts", ",", 
                    RowBox[{"-", "sigmavs"}]}], "}"}]}]}], "}"}]}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
                    RowBox[{"GridLines", "\[Rule]", "Full"}], ",", 
                    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"FrameLabel", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<\[CapitalDelta]\!\(\*OverscriptBox[\(h\), \
\(.\)]\)/[ft/s]\>\"", ",", "\"\<\>\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<Time/[s]\>\"", ",", 
                    "\"\<Speed Residual vs. Time\>\""}], "}"}]}], "}"}]}]}], 
                    "]"}]}], "}"}]}], "}"}], "]"}]}]}], "]"}]}]}], 
                    "\[IndentingNewLine]", "]"}]}], "]"}]}], "]"}]}], "]"}]}],
             "]"}]}]}], "]"}]}], "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Control", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"sigmaZeta", ",", "25"}], "}"}], ",", "1", ",", "1000", 
           ",", "5", ",", 
           RowBox[{"Appearance", "\[Rule]", "\"\<Open\>\""}]}], "}"}], "]"}], 
        ",", 
        RowBox[{"Control", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"sigmaXi", ",", "0"}], "}"}], ",", "0", ",", "1000", ",", 
           "5", ",", 
           RowBox[{"Appearance", "\[Rule]", "\"\<Open\>\""}]}], "}"}], 
         "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Control", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"nIterations", ",", "2"}], "}"}], ",", "1", ",", "25", 
           ",", "1", ",", 
           RowBox[{"Appearance", "\[Rule]", "\"\<Open\>\""}]}], "}"}], "]"}], 
        ",", 
        RowBox[{"Control", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"randomSeed", ",", "42"}], "}"}], ",", "42", ",", "142", 
           ",", "1", ",", 
           RowBox[{"Appearance", "\[Rule]", "\"\<Open\>\""}]}], "}"}], 
         "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Control", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"integrator", ",", "1"}], "}"}], ",", "1", ",", "3", ",", 
           "1", ",", 
           RowBox[{"Appearance", "\[Rule]", "\"\<Open\>\""}]}], "}"}], "]"}], 
        ",", 
        RowBox[{"Control", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"logIntegratorDt", ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "1"}], ",", "1", ",", 
           RowBox[{"Appearance", "\[Rule]", "\"\<Open\>\""}]}], "}"}], 
         "]"}]}], "}"}]}], "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.67207802832646*^9, 3.672078082301094*^9}, {
   3.672078721791315*^9, 3.672078721860866*^9}, {3.67207894719575*^9, 
   3.672079001923333*^9}, {3.672079042727447*^9, 3.672079097436083*^9}, {
   3.672079366261854*^9, 3.672079372087109*^9}, {3.6720794325109577`*^9, 
   3.672079459934004*^9}, {3.672080130955469*^9, 3.6720801566229277`*^9}, {
   3.6720802343293877`*^9, 3.6720802402174892`*^9}, {3.672080270324428*^9, 
   3.672080424398239*^9}, {3.672080525494335*^9, 3.67208059742419*^9}, {
   3.6720806360944157`*^9, 3.672080642068927*^9}, {3.672080674217448*^9, 
   3.672080675608737*^9}, {3.672080803141523*^9, 3.672080876404312*^9}, {
   3.672088696609157*^9, 3.672088800028001*^9}, {3.672088851135715*^9, 
   3.6720888806001053`*^9}, {3.672088970958047*^9, 3.672088990491928*^9}, {
   3.672089077521968*^9, 3.672089429291443*^9}, {3.672089459723481*^9, 
   3.672089497513329*^9}, {3.672089534177483*^9, 3.672089587054035*^9}, {
   3.672089632501333*^9, 3.672089656924366*^9}, {3.672141039282879*^9, 
   3.672141088243935*^9}, {3.672141165820228*^9, 3.672141229264717*^9}, {
   3.672141289445434*^9, 3.672141304820818*^9}, {3.672141390629191*^9, 
   3.672141414793651*^9}, {3.672141666120234*^9, 3.672141713903614*^9}, {
   3.6721417542014437`*^9, 3.672141798188236*^9}, {3.672141847266889*^9, 
   3.672142048037698*^9}, {3.6721425413786983`*^9, 3.672142633337558*^9}, {
   3.67214267775948*^9, 3.672142698555931*^9}, {3.672142731066451*^9, 
   3.672142834816348*^9}, {3.67214317317633*^9, 3.6721432004726763`*^9}, {
   3.6721432675138597`*^9, 3.6721434825005627`*^9}, {3.672143531158864*^9, 
   3.6721437367892017`*^9}, {3.672145404270013*^9, 3.672145418472857*^9}, {
   3.6721454670569363`*^9, 3.672145467223752*^9}, {3.6721455181884737`*^9, 
   3.67214558727439*^9}, {3.67214561973744*^9, 3.6721456411461782`*^9}, 
   3.672145689880826*^9, {3.672145720927396*^9, 3.67214580457087*^9}, {
   3.672145844506915*^9, 3.67214592343093*^9}, 3.672146659982603*^9, {
   3.672146693122759*^9, 3.672146813277705*^9}, {3.672146875387218*^9, 
   3.672146907104793*^9}, {3.672154743267853*^9, 3.672154769233036*^9}, {
   3.672155228436448*^9, 3.672155239491686*^9}, {3.672155300203248*^9, 
   3.672155333787978*^9}, {3.672155377434462*^9, 3.672155377648306*^9}, {
   3.6721554485713377`*^9, 3.6721554571534863`*^9}, {3.6721554996409273`*^9, 
   3.67215550232876*^9}, {3.672155543909932*^9, 3.6721555854381237`*^9}, {
   3.672155629927045*^9, 3.672155741152095*^9}, {3.672155797281764*^9, 
   3.672155802215221*^9}, {3.67215585448473*^9, 3.672155920867836*^9}, {
   3.6721559576228943`*^9, 3.672155997959991*^9}, {3.6721560562790833`*^9, 
   3.672156210057097*^9}, {3.672156242522551*^9, 3.672156243704612*^9}, {
   3.672156385625041*^9, 3.6721564797472477`*^9}, {3.672156550984067*^9, 
   3.672156740726481*^9}, {3.672156785979732*^9, 3.67215679305762*^9}, {
   3.672156854409225*^9, 3.6721569031551237`*^9}, {3.672156937118688*^9, 
   3.672156960115789*^9}, {3.6721571155124063`*^9, 3.672157239592641*^9}, {
   3.672157312118548*^9, 3.672157344649341*^9}, {3.6721573927954483`*^9, 
   3.672157398113483*^9}, {3.672157475340238*^9, 3.672157575657157*^9}, {
   3.672157605672008*^9, 3.6721577416243877`*^9}, {3.6721578009286547`*^9, 
   3.672157808584498*^9}, {3.672157850695086*^9, 3.672157866575973*^9}, {
   3.672157935663512*^9, 3.672157935861308*^9}, {3.6721579858519793`*^9, 
   3.67215804094515*^9}, {3.672158076844577*^9, 3.672158078619166*^9}, {
   3.67215811906439*^9, 3.672158149887661*^9}, {3.67215828419084*^9, 
   3.6721583823225393`*^9}, {3.6721584314750957`*^9, 
   3.6721585239786882`*^9}, {3.6721586059181747`*^9, 3.672158669924478*^9}, {
   3.6721587053126717`*^9, 3.672158726780507*^9}, {3.672158919969138*^9, 
   3.672158927454815*^9}, {3.672159101197447*^9, 3.672159121806519*^9}, {
   3.672160667838113*^9, 3.6721606703725157`*^9}, {3.6721608436082087`*^9, 
   3.672160861638707*^9}, {3.67216090941853*^9, 3.672160974145441*^9}, {
   3.672161069273719*^9, 3.672161071504209*^9}, {3.672161120314766*^9, 
   3.672161153872919*^9}, {3.672161214013344*^9, 3.67216131732369*^9}, {
   3.672161374884507*^9, 3.672161375076635*^9}, {3.672161448205472*^9, 
   3.67216157509566*^9}, {3.672161637688727*^9, 3.6721616682227*^9}, {
   3.6721617949227343`*^9, 3.672161862946682*^9}, {3.672161930910589*^9, 
   3.672162035515214*^9}, {3.672162075253481*^9, 3.6721621438104753`*^9}, {
   3.672162177491231*^9, 3.67216219566825*^9}, {3.672162232187428*^9, 
   3.6721622602909327`*^9}, {3.672166726995528*^9, 3.6721667644742727`*^9}, {
   3.672166822976139*^9, 3.6721670990253696`*^9}, {3.672167142405487*^9, 
   3.672167154804472*^9}, {3.6721672132915497`*^9, 3.672167335831571*^9}, {
   3.672167375742997*^9, 3.6721673954537897`*^9}, {3.6721674511345177`*^9, 
   3.6721674615822077`*^9}, {3.672167511345984*^9, 3.672167550440782*^9}, {
   3.672167627669272*^9, 3.672167673120152*^9}, {3.672167753662035*^9, 
   3.672167833823881*^9}, {3.67218703415287*^9, 3.672187220789363*^9}, {
   3.672187280160375*^9, 3.672187293309499*^9}, {3.672188647052536*^9, 
   3.672188695328917*^9}, 3.672188725576434*^9, {3.67218881098186*^9, 
   3.672188926320984*^9}, {3.672189336795742*^9, 3.672189341678172*^9}, {
   3.672189376647326*^9, 3.67218940373376*^9}, {3.6721901620757837`*^9, 
   3.672190170513393*^9}, {3.672221758006234*^9, 3.672221758212624*^9}, {
   3.6722220307809553`*^9, 3.6722221046724367`*^9}, {3.67222214580226*^9, 
   3.672222297561707*^9}, {3.6722240245430737`*^9, 3.67222402581113*^9}, {
   3.672224138367456*^9, 3.6722243002466173`*^9}, 3.672224331700965*^9, {
   3.6722248625276318`*^9, 3.672224916657403*^9}, {3.672226862620839*^9, 
   3.6722268748611927`*^9}, {3.672226922494193*^9, 3.672226989897746*^9}, {
   3.672227021833284*^9, 3.672227101844049*^9}, {3.672227824720147*^9, 
   3.672227824793449*^9}, {3.672228106657362*^9, 3.672228129637958*^9}, {
   3.672228224563444*^9, 3.6722282371933203`*^9}, {3.672228409085046*^9, 
   3.67222840923554*^9}, {3.672239348556856*^9, 3.672239458592527*^9}, {
   3.672239501112507*^9, 3.672239525151663*^9}, {3.672241169635804*^9, 
   3.67224118491355*^9}, {3.672241277538686*^9, 3.672241279949581*^9}, {
   3.672306238166944*^9, 3.672306342400908*^9}, {3.672306384805818*^9, 
   3.672306399806191*^9}, {3.6723072383241034`*^9, 3.672307311081321*^9}, {
   3.6723073443772173`*^9, 3.6723073689415817`*^9}, {3.6723074394023314`*^9, 
   3.672307442537634*^9}, {3.672307501736401*^9, 3.672307617342957*^9}, {
   3.6723076485159197`*^9, 3.672307713412393*^9}, {3.672307758242284*^9, 
   3.6723078062472486`*^9}, {3.672307876638103*^9, 3.6723078845165367`*^9}, {
   3.672307962976404*^9, 3.672307980333955*^9}, {3.672308019741033*^9, 
   3.6723080756133223`*^9}, {3.6723081115616703`*^9, 3.672308139314624*^9}, {
   3.672308275909717*^9, 3.6723083224198093`*^9}, {3.6723083722039967`*^9, 
   3.6723083722739067`*^9}, {3.672308402466223*^9, 3.672308464009165*^9}, {
   3.6723087280681334`*^9, 3.672308731129487*^9}, {3.672308808866845*^9, 
   3.672308862485436*^9}, {3.6723089424017*^9, 3.672308963424363*^9}, {
   3.672309292319515*^9, 3.672309337703583*^9}, {3.672309757703631*^9, 
   3.672309769582399*^9}, {3.67230980386036*^9, 3.6723098722703543`*^9}, {
   3.6723099475431356`*^9, 3.672309948108012*^9}, {3.672309999564488*^9, 
   3.672310000042697*^9}, {3.672310105008093*^9, 3.672310143998296*^9}, {
   3.6723102358573017`*^9, 3.67231024578714*^9}, {3.672310283763543*^9, 
   3.6723103175762*^9}, {3.672310395333034*^9, 3.672310402622897*^9}, {
   3.672310477526335*^9, 3.6723104799952917`*^9}, {3.672312674182872*^9, 
   3.672312674313168*^9}, {3.672312712295452*^9, 3.67231273296992*^9}, 
   3.6723150940986423`*^9, {3.672315214332975*^9, 3.672315217148428*^9}, {
   3.672315283745263*^9, 3.6723152847068157`*^9}, {3.672315398361987*^9, 
   3.672315415118937*^9}, {3.672315467467965*^9, 3.67231549138475*^9}, {
   3.6723155292146*^9, 3.672315576479315*^9}, 3.672315616189312*^9, {
   3.6723156686186123`*^9, 3.672315675489482*^9}, {3.6723159408223658`*^9, 
   3.672315944272336*^9}, 3.672315988057513*^9, {3.672316062340808*^9, 
   3.672316071730461*^9}, {3.672316112844524*^9, 3.6723161620600243`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`integrator$$ = 
    1, $CellContext`logIntegratorDt$$ = -3, $CellContext`nIterations$$ = 
    2, $CellContext`randomSeed$$ = 42, $CellContext`sigmaXi$$ = 
    0, $CellContext`sigmaZeta$$ = 21, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`sigmaZeta$$], 25}, 1, 1000, 5}, {{
       Hold[$CellContext`sigmaXi$$], 0}, 0, 1000, 5}, {{
       Hold[$CellContext`nIterations$$], 2}, 1, 25, 1}, {{
       Hold[$CellContext`randomSeed$$], 42}, 42, 142, 1}, {{
       Hold[$CellContext`integrator$$], 1}, 1, 3, 1}, {{
       Hold[$CellContext`logIntegratorDt$$], -1}, -3, -1, 1}, {
      Hold[
       Grid[{{
          Manipulate`Place[1], 
          Manipulate`Place[2]}, {
          Manipulate`Place[3], 
          Manipulate`Place[4]}, {
          Manipulate`Place[5], 
          Manipulate`Place[6]}}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {911., {295.41754150390625`, 302.58245849609375`}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`sigmaZeta$9891$$ = 0, $CellContext`sigmaXi$9892$$ = 
    0, $CellContext`nIterations$9893$$ = 0, $CellContext`randomSeed$9894$$ = 
    0, $CellContext`integrator$9895$$ = 
    0, $CellContext`logIntegratorDt$9896$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`integrator$$ = 
        1, $CellContext`logIntegratorDt$$ = -1, $CellContext`nIterations$$ = 
        2, $CellContext`randomSeed$$ = 42, $CellContext`sigmaXi$$ = 
        0, $CellContext`sigmaZeta$$ = 25}, "ControllerVariables" :> {
        Hold[$CellContext`sigmaZeta$$, $CellContext`sigmaZeta$9891$$, 0], 
        Hold[$CellContext`sigmaXi$$, $CellContext`sigmaXi$9892$$, 0], 
        Hold[$CellContext`nIterations$$, $CellContext`nIterations$9893$$, 0], 
        
        Hold[$CellContext`randomSeed$$, $CellContext`randomSeed$9894$$, 0], 
        Hold[$CellContext`integrator$$, $CellContext`integrator$9895$$, 0], 
        Hold[$CellContext`logIntegratorDt$$, \
$CellContext`logIntegratorDt$9896$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`foldStream$, $CellContext`reify$, \
$CellContext`takeUntil$, $CellContext`last$, $CellContext`mapStream$, \
$CellContext`pick$, $CellContext`randn$, $CellContext`dim$, \
$CellContext`gen$, $CellContext`eulerAccumulator$, \
$CellContext`rk2Accumulator$, $CellContext`rk4Accumulator$}, \
$CellContext`foldStream$[
           Pattern[$CellContext`f, 
            Blank[]], 
           Pattern[$CellContext`s, 
            Blank[]], 
           Null[]] := {$CellContext`s, Null}; $CellContext`foldStream$[
           Pattern[$CellContext`f$, 
            Blank[]], 
           Pattern[$CellContext`s$, 
            Blank[]], {
            Pattern[$CellContext`z$, 
             Blank[]], 
            Pattern[$CellContext`thunk$, 
             
             Blank[]]}] := {$CellContext`s$, \
$CellContext`foldStream$[$CellContext`f$, 
            $CellContext`f$[$CellContext`s$, $CellContext`z$], 
            $CellContext`thunk$[]]& }; $CellContext`reify$[
           Null[]] := {}; $CellContext`reify$[{
            Pattern[$CellContext`v, 
             Blank[]], Null}] := {$CellContext`v}; $CellContext`reify$[{
            Pattern[$CellContext`v$, 
             Blank[]], 
            Pattern[$CellContext`thunk$, 
             Blank[]]}] := Join[{$CellContext`v$}, 
           $CellContext`reify$[
            $CellContext`thunk$[]]]; $CellContext`takeUntil$[
           Null[], 
           Blank[]] := Null[]; Condition[
           $CellContext`takeUntil$[{
             Pattern[$CellContext`v, 
              Blank[]], 
             Pattern[$CellContext`thunk, 
              Blank[]]}, 
            Pattern[$CellContext`predicate, 
             Blank[]]], 
           $CellContext`predicate[$CellContext`v]] := 
         Null[]; $CellContext`takeUntil$[{
            Pattern[$CellContext`v$, 
             Blank[]], 
            Pattern[$CellContext`thunk$, 
             Blank[]]}, 
           Pattern[$CellContext`predicate$, 
            Blank[]]] := {$CellContext`v$, $CellContext`takeUntil$[
            $CellContext`thunk$[], $CellContext`predicate$]& }; \
$CellContext`last$[
           Null[]] := Null; $CellContext`last$[
           Condition[{
             Pattern[$CellContext`v, 
              Blank[]], 
             Pattern[$CellContext`thunk, 
              Blank[]]}, $CellContext`thunk[] === 
            Null[]]] := $CellContext`v; $CellContext`last$[{
            Pattern[$CellContext`v$, 
             Blank[]], 
            Pattern[$CellContext`thunk$, 
             Blank[]]}] := $CellContext`last$[
           $CellContext`thunk$[]]; $CellContext`mapStream$[
           Null[], 
           Blank[]] := Null[]; $CellContext`mapStream$[{
            Pattern[$CellContext`v$, 
             Blank[]], 
            Pattern[$CellContext`thunk$, 
             Blank[]]}, 
           Pattern[$CellContext`f$, 
            Blank[]]] := {
           $CellContext`f$[$CellContext`v$], $CellContext`mapStream$[
            $CellContext`thunk$[], $CellContext`f$]& }; $CellContext`pick$[
           Pattern[$CellContext`n, 
            Blank[]]] := Part[#, $CellContext`n]& ; $CellContext`pick$[
           Pattern[$CellContext`m, 
            Blank[]], 
           Pattern[$CellContext`n, 
            Blank[]]] := 
         Part[#, $CellContext`m, $CellContext`n]& ; $CellContext`randn$[
           Optional[
            Pattern[$CellContext`sigma, 
             Blank[]], 1.]] := If[Chop[$CellContext`sigma] == 0., 0., 
           RandomVariate[
            NormalDistribution[0., $CellContext`sigma]]]; $CellContext`dim$[
           Pattern[$CellContext`squareMatrix, 
            Blank[List]]] := Length[
           Part[$CellContext`squareMatrix, 1]]; $CellContext`gen$[
           Pattern[$CellContext`P$, 
            Blank[]]] := 
         Module[{$CellContext`\[Sigma]s$}, $CellContext`\[Sigma]s$ = Map[Sqrt, 
              Table[
               
               Part[$CellContext`P$, $CellContext`i, $CellContext`i], \
{$CellContext`i, 
                $CellContext`dim$[$CellContext`P$]}]]; 
           Map[$CellContext`randn$, $CellContext`\[Sigma]s$]]; \
$CellContext`eulerAccumulator$[{
            Pattern[$CellContext`t, 
             Blank[]], 
            Pattern[$CellContext`x, 
             Blank[]]}, {
            Pattern[$CellContext`dt, 
             Blank[]], 
            Pattern[$CellContext`t, 
             Blank[]], 
            Pattern[$CellContext`Dx, 
             
             Blank[]]}] := {$CellContext`t + $CellContext`dt, $CellContext`x + \
$CellContext`dt $CellContext`Dx[$CellContext`x, $CellContext`t]}; \
$CellContext`rk2Accumulator$[{
            Pattern[$CellContext`t, 
             Blank[]], 
            Pattern[$CellContext`x, 
             Blank[]]}, {
            Pattern[$CellContext`dt, 
             Blank[]], 
            Pattern[$CellContext`t, 
             Blank[]], 
            Pattern[$CellContext`Dx, 
             Blank[]]}] := 
         With[{$CellContext`dx1 = $CellContext`dt \
$CellContext`Dx[$CellContext`x, $CellContext`t]}, 
           
           With[{$CellContext`dx2 = $CellContext`dt \
$CellContext`Dx[$CellContext`x + 0.5 $CellContext`dx1, $CellContext`t + 
                0.5 $CellContext`dt]}, {$CellContext`t + $CellContext`dt, \
$CellContext`x + ($CellContext`dx1 + $CellContext`dx2)/
              2.}]]; $CellContext`rk4Accumulator$[{
            Pattern[$CellContext`t, 
             Blank[]], 
            Pattern[$CellContext`x, 
             Blank[]]}, {
            Pattern[$CellContext`dt, 
             Blank[]], 
            Pattern[$CellContext`t, 
             Blank[]], 
            Pattern[$CellContext`Dx, 
             Blank[]]}] := 
         With[{$CellContext`dx1 = $CellContext`dt \
$CellContext`Dx[$CellContext`x, $CellContext`t]}, 
           
           With[{$CellContext`dx2 = $CellContext`dt \
$CellContext`Dx[$CellContext`x + 0.5 $CellContext`dx1, $CellContext`t + 
                0.5 $CellContext`dt]}, 
            
            With[{$CellContext`dx3 = $CellContext`dt \
$CellContext`Dx[$CellContext`x + 0.5 $CellContext`dx2, $CellContext`t + 
                 0.5 $CellContext`dt]}, 
             
             With[{$CellContext`dx4 = $CellContext`dt \
$CellContext`Dx[$CellContext`x + $CellContext`dx3, $CellContext`t + \
$CellContext`dt]}, {$CellContext`t + $CellContext`dt, $CellContext`x + \
($CellContext`dx1 + 2. $CellContext`dx2 + 
                 2. $CellContext`dx3 + $CellContext`dx4)/6.}]]]]; 
        With[{$CellContext`g$ = 32.2, $CellContext`A$ = 
           0.0034, $CellContext`k$ = 22000., $CellContext`beta$ = 500.}, 
          
          Module[{$CellContext`dragD$, $CellContext`dragDStream$, \
$CellContext`F21$, $CellContext`F22$, $CellContext`Phi$, $CellContext`Xi$, \
$CellContext`EKFDrag$}, $CellContext`dragD$[{
               Pattern[$CellContext`x$, 
                Blank[]], 
               Pattern[$CellContext`v$, 
                Blank[]]}, 
              Pattern[$CellContext`t$, 
               
               Blank[]]] := {$CellContext`v$, $CellContext`g$ \
($CellContext`A$ 
                Exp[(-$CellContext`x$)/$CellContext`k$] ($CellContext`v$^2/(
                 2. $CellContext`beta$)) - 1)}; $CellContext`dragDStream$[
              Pattern[$CellContext`Delta$, {
                Pattern[$CellContext`dt$, 
                 Blank[]], 
                Pattern[$CellContext`t$, 
                 Blank[]], 
                Pattern[$CellContext`Dx$, 
                 
                 Blank[]]}]] := {$CellContext`Delta$, \
$CellContext`dragDStream$[{$CellContext`dt$, $CellContext`t$ + \
$CellContext`dt$, $CellContext`Dx$}]& }; $CellContext`F21$[
              Pattern[$CellContext`x$, 
               Blank[]], 
              Pattern[$CellContext`v$, 
               Blank[]]] := (-$CellContext`A$) 
             Exp[(-$CellContext`x$)/$CellContext`k$] $CellContext`g$ \
($CellContext`v$^2/(2. $CellContext`k$ $CellContext`beta$)); $CellContext`F22$[
              Pattern[$CellContext`x$, 
               Blank[]], 
              Pattern[$CellContext`v$, 
               Blank[]]] := $CellContext`A$ 
             Exp[(-$CellContext`x$)/$CellContext`k$] $CellContext`g$ \
($CellContext`v$/$CellContext`beta$); $CellContext`Phi$[
              Pattern[$CellContext`dt$, 
               Blank[]], {
               Pattern[$CellContext`x$, 
                Blank[]], 
               Pattern[$CellContext`v$, 
                Blank[]]}] := {{
              1, $CellContext`dt$}, {$CellContext`dt$ \
$CellContext`F21$[$CellContext`x$, $CellContext`v$], 
               1 + $CellContext`dt$ $CellContext`F22$[$CellContext`x$, \
$CellContext`v$]}}; $CellContext`Xi$[
              Pattern[$CellContext`dt$, 
               Blank[]], {
               Pattern[$CellContext`x$, 
                Blank[]], 
               Pattern[$CellContext`v$, 
                Blank[]]}] := 
            With[{$CellContext`f$ = $CellContext`F22$[$CellContext`x$, \
$CellContext`v$]}, {{$CellContext`dt$^3/
                3, ($CellContext`dt$^2 (3 + 
                  2 $CellContext`dt$ $CellContext`f$))/
                6}, {($CellContext`dt$^2 (3 + 
                  2 $CellContext`dt$ $CellContext`f$))/
                6, $CellContext`dt$ + $CellContext`dt$^2 $CellContext`f$ + \
($CellContext`dt$^3 $CellContext`f$^2)/3}}]; $CellContext`EKFDrag$[
              Pattern[$CellContext`sigmaXi$, 
               Blank[]], 
              Pattern[$CellContext`kZeta$, 
               Blank[]], 
              Pattern[$CellContext`integrator$, 
               Blank[]], 
              Pattern[$CellContext`fdt$, 
               Blank[]], 
              Pattern[$CellContext`idt$, 
               Blank[]]][{
               Pattern[$CellContext`x$, 
                Blank[]], 
               Pattern[$CellContext`P$, 
                Blank[]]}, {
               Pattern[$CellContext`t$, 
                Blank[]], 
               Pattern[$CellContext`A$, 
                Blank[]], 
               Pattern[$CellContext`z$, 
                Blank[]]}] := 
            Module[{$CellContext`x2$, $CellContext`P2$, $CellContext`kD$, \
$CellContext`kK$}, $CellContext`x2$ = Part[
                 $CellContext`last$[
                  $CellContext`takeUntil$[
                   $CellContext`foldStream$[$CellContext`integrator$, \
{$CellContext`t$, $CellContext`x$}, 
                    $CellContext`dragDStream$[{$CellContext`idt$, \
$CellContext`t$, $CellContext`dragD$}]], 
                   First[#] > $CellContext`t$ + $CellContext`fdt$& ]], 
                 2]; $CellContext`P2$ = $CellContext`sigmaXi$^2 \
$CellContext`Xi$[$CellContext`fdt$, $CellContext`x$] + Dot[
                  $CellContext`Phi$[$CellContext`fdt$, $CellContext`x$], \
$CellContext`P$, 
                  Transpose[
                   $CellContext`Phi$[$CellContext`fdt$, $CellContext`x$]]]; \
$CellContext`kD$ = $CellContext`kZeta$ + 
                Dot[$CellContext`A$, $CellContext`P2$, 
                  Transpose[$CellContext`A$]]; $CellContext`kK$ = 
               Dot[$CellContext`P2$, 
                 Transpose[$CellContext`A$], 
                 Inverse[$CellContext`kD$]]; {$CellContext`x2$ + 
                Dot[$CellContext`kK$, $CellContext`z$ - 
                  Dot[$CellContext`A$, $CellContext`x2$]], $CellContext`P2$ - 
                Dot[$CellContext`kK$, $CellContext`kD$, 
                 Transpose[$CellContext`kK$]]}]; Block[{$IterationLimit}, 
             With[{$CellContext`nStates$ = 2}, 
              
              With[{$CellContext`t0$ = 0., $CellContext`t1$ = 
                30., $CellContext`filterDt$ = 0.1}, 
               
               With[{$CellContext`x0$ = 
                 200000, $CellContext`v0$ = -6000, \
$CellContext`\[CapitalZeta]$ = $CellContext`sigmaZeta$$^2 
                  IdentityMatrix[1], $CellContext`P0$ = 
                 1000000000000 IdentityMatrix[$CellContext`nStates$]}, 
                
                Module[{$CellContext`fakes$, $CellContext`integrators$ = \
{$CellContext`eulerAccumulator$, $CellContext`rk2Accumulator$, \
$CellContext`rk4Accumulator$}, $CellContext`integrationDt$}, \
$CellContext`fakes$[] := \
$CellContext`foldStream$[$CellContext`rk4Accumulator$, {$CellContext`t0$, \
{$CellContext`x0$, $CellContext`v0$}}, 
                    $CellContext`dragDStream$[{$CellContext`filterDt$, \
$CellContext`t0$, $CellContext`dragD$}]]; $CellContext`integrationDt$ = 
                  10.^$CellContext`logIntegratorDt$$; 
                 SeedRandom[$CellContext`randomSeed$$]; 
                 Module[{$CellContext`ffs$, $CellContext`rffs$, \
$CellContext`ts$, $CellContext`xvs$, $CellContext`xss$, $CellContext`vss$, \
$CellContext`txs$, $CellContext`tvs$, $CellContext`ps$, \
$CellContext`sigmaxs$, $CellContext`sigmavs$}, $CellContext`xss$ = 
                    ConstantArray[
                    0, $CellContext`nIterations$$]; $CellContext`vss$ = 
                    ConstantArray[
                    0, $CellContext`nIterations$$]; $CellContext`ffs$ = \
$CellContext`takeUntil$[
                    $CellContext`fakes$[], 
                    First[#] > $CellContext`t1$& ]; $CellContext`rffs$ = \
$CellContext`reify$[$CellContext`ffs$]; $CellContext`ts$ = Map[
                    $CellContext`pick$[
                    1], $CellContext`rffs$]; $CellContext`txs$ = Map[
                    $CellContext`pick$[
                    2, 1], $CellContext`rffs$]; $CellContext`tvs$ = Map[
                    $CellContext`pick$[
                    2, 2], $CellContext`rffs$]; {$CellContext`xss$, \
$CellContext`vss$} = Transpose[
                    Map[({$CellContext`xvs$, $CellContext`ps$} = Transpose[
                    Rest[
                    $CellContext`reify$[
                    $CellContext`foldStream$[
                    $CellContext`EKFDrag$[$CellContext`sigmaXi$$, \
$CellContext`\[CapitalZeta]$, 
                    
                    Part[$CellContext`integrators$, \
$CellContext`integrator$$], $CellContext`filterDt$, \
$CellContext`integrationDt$], {{0, 0}, $CellContext`P0$}, 
                    $CellContext`mapStream$[$CellContext`ffs$, {
                    Part[#, 1], {{1, 0}}, 
                    Part[#, 2, 
                    1] + $CellContext`gen$[$CellContext`\[CapitalZeta]$]}& \
]]]]]; $CellContext`sigmaxs$ = Sqrt[
                    Map[
                    $CellContext`pick$[
                    1, 1], $CellContext`ps$]]; $CellContext`sigmavs$ = Sqrt[
                    Map[
                    $CellContext`pick$[2, 2], $CellContext`ps$]]; 
                    Transpose[$CellContext`xvs$])& , 
                    Range[$CellContext`nIterations$$]]]; Grid[{{
                    ListPlot[
                    Join[
                    Map[Transpose, 
                    Map[{$CellContext`ts$, #}& , $CellContext`xss$]], {
                    Transpose[{$CellContext`ts$, $CellContext`txs$}]}], 
                    ImageSize -> Medium, GridLines -> Full, Frame -> True, 
                    FrameLabel -> {{"h/[ft]", ""}, {
                    "Time/[s]", "Height vs. Time"}}], 
                    ListPlot[
                    Join[
                    Map[Transpose, 
                    Map[{$CellContext`ts$, #}& , $CellContext`vss$]], {
                    Transpose[{$CellContext`ts$, $CellContext`tvs$}]}], 
                    ImageSize -> Medium, GridLines -> Full, Frame -> True, 
                    FrameLabel -> {{
                    "\!\(\*OverscriptBox[\(h\), \(.\)]\)/[ft/s]", ""}, {
                    "Time/[s]", "Speed vs. Time"}}]}, {
                    ListPlot[
                    Join[
                    Map[Transpose, 
                    
                    Map[{$CellContext`ts$, $CellContext`txs$ - #}& , \
$CellContext`xss$]], {
                    Transpose[{$CellContext`ts$, $CellContext`sigmaxs$}], 
                    Transpose[{$CellContext`ts$, -$CellContext`sigmaxs$}]}], 
                    ImageSize -> Medium, GridLines -> Full, Frame -> True, 
                    FrameLabel -> {{"\[CapitalDelta]h/[ft]", ""}, {
                    "Time/[s]", "Height Residual vs. Time"}}], 
                    ListPlot[
                    Join[
                    Map[Transpose, 
                    
                    Map[{$CellContext`ts$, $CellContext`tvs$ - #}& , \
$CellContext`vss$]], {
                    Transpose[{$CellContext`ts$, $CellContext`sigmavs$}], 
                    Transpose[{$CellContext`ts$, -$CellContext`sigmavs$}]}], 
                    ImageSize -> Medium, GridLines -> Full, Frame -> True, 
                    FrameLabel -> {{
                    "\[CapitalDelta]\!\(\*OverscriptBox[\(h\), \
\(.\)]\)/[ft/s]", ""}, {"Time/[s]", "Speed Residual vs. Time"}}]}}]]]]]]]]]], 
      "Specifications" :> {{{$CellContext`sigmaZeta$$, 25}, 1, 1000, 5, 
         Appearance -> "Open", ControlPlacement -> 
         1}, {{$CellContext`sigmaXi$$, 0}, 0, 1000, 5, Appearance -> "Open", 
         ControlPlacement -> 2}, {{$CellContext`nIterations$$, 2}, 1, 25, 1, 
         Appearance -> "Open", ControlPlacement -> 
         3}, {{$CellContext`randomSeed$$, 42}, 42, 142, 1, Appearance -> 
         "Open", ControlPlacement -> 4}, {{$CellContext`integrator$$, 1}, 1, 
         3, 1, Appearance -> "Open", ControlPlacement -> 
         5}, {{$CellContext`logIntegratorDt$$, -1}, -3, -1, 1, Appearance -> 
         "Open", ControlPlacement -> 6}, 
        Grid[{{
           Manipulate`Place[1], 
           Manipulate`Place[2]}, {
           Manipulate`Place[3], 
           Manipulate`Place[4]}, {
           Manipulate`Place[5], 
           Manipulate`Place[6]}}]}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{966., {429., 436.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.672315950309499*^9, 3.672315990005453*^9, 
  3.672316163190413*^9, 3.6723168168221817`*^9, 3.672316885118932*^9, 
  3.672317259324546*^9}]
}, Open  ]]
},
WindowSize->{1436, 855},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1.25 Inherited,
FrontEndVersion->"10.4 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 11, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1010, 15, 156, "Text"],
Cell[CellGroupData[{
Cell[1593, 39, 42856, 958, 2174, "Input"],
Cell[44452, 999, 20848, 443, 885, "Output"]
}, Open  ]]
}
]
*)

