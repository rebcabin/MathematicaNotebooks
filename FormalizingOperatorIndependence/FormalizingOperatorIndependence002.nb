(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    696872,      13570]
NotebookOptionsPosition[    663401,      13011]
NotebookOutlinePosition[    672975,      13222]
CellTagsIndexPosition[    671595,      13174]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Formalizing Operator Independence in the APU", "Title",
 CellChangeTimes->{{3.82109059565718*^9, 3.82109060355827*^9}},
 CellTags->"c:1",ExpressionUUID->"c6e381fd-f762-429a-958f-cb219874ee22"],

Cell["", "Subtitle",
 CellChangeTimes->{
  3.8210906101661377`*^9},ExpressionUUID->"98ac031c-408f-4a7d-9f1f-\
aa96fa5ebcef"],

Cell["Brian Beckman", "Author",
 CellChangeTimes->{{3.821090615276614*^9, 
  3.821090615637043*^9}},ExpressionUUID->"ea6c384c-2b54-4ceb-a855-\
c2983aa31b34"],

Cell[TextData[{
 "PRELIMINARY REVIEW DRAFT\n",
 StyleBox["4 February 2021",
  FontWeight->"Plain"]
}], "Date",
 CellChangeTimes->{{3.821090619518628*^9, 3.821090628052217*^9}, {
  3.8212690068231792`*^9, 3.821269010681856*^9}, {3.821454820171672*^9, 
  3.821454853903749*^9}},
 FontWeight->"Bold",ExpressionUUID->"83ad6d36-6499-470a-a63b-dbd9f886e3c7"],

Cell[CellGroupData[{

Cell["0 Prerequisites", "Section",
 CellChangeTimes->{{3.8212737666381474`*^9, 3.821273777253139*^9}},
 CellTags->"c:2",ExpressionUUID->"1cdcca01-f302-4db6-98e4-66151deb07b3"],

Cell["\<\
We assume a passing familiarity with the APU chip and the APL programming \
model. In particular, we assume familiarity with section masks, with SB and \
VR numbers, with their corresponding registers, and with bit-level \
operations. The README files in the repository at\
\>", "Text",
 CellChangeTimes->{{3.821273780714476*^9, 3.821273817373528*^9}, {
  3.8212738509005737`*^9, 3.821273907629238*^9}, {3.821273939999941*^9, 
  3.821273977646001*^9}, {3.821274137201598*^9, 3.821274143977579*^9}, {
  3.82127418657399*^9, 
  3.8212742071312723`*^9}},ExpressionUUID->"4352c74d-1cf7-46e2-af7c-\
2b24cb00537f"],

Cell["https://bitbucket.org/gsitech/nanosim-apu/src/master/", "Text",
 CellChangeTimes->{
  3.82119599015062*^9},ExpressionUUID->"d7b0d572-06ba-4715-9caf-ff76db5746b0"],

Cell["\<\
has some background information and references (scroll down on that web page \
to see the rendered README file).\
\>", "Text",
 CellChangeTimes->{{3.821195998605337*^9, 3.821196011304597*^9}, {
  3.821197089979456*^9, 3.8211970934870863`*^9}, {3.8212742338330393`*^9, 
  3.821274245597148*^9}, {3.8213815385790787`*^9, 3.821381544288159*^9}, {
  3.82144960531092*^9, 
  3.821449606308446*^9}},ExpressionUUID->"fe6b947f-0275-43b4-83da-\
b4e560cf13d5"],

Cell["\<\
The presumed audience is programmers with some mathematical background. The \
reader should know that an equivalence relation partitions a set into \
mutually disjoint equivalence classes whose union is the whole set. If that \
jargon is not familiar, please see the wikipedia page on equivalence \
relations:\
\>", "Text",
 CellChangeTimes->{{3.821449608065687*^9, 3.8214496299556093`*^9}, {
   3.8214496620323677`*^9, 3.821449783063208*^9}, {3.8214508533633957`*^9, 
   3.821450873346122*^9}, 3.821450913494735*^9, {3.821474621995776*^9, 
   3.821474622650312*^9}, {3.8214823894121428`*^9, 
   3.821482418029649*^9}},ExpressionUUID->"98cb9e89-112e-4cfc-b32c-\
ce760b976024"],

Cell["https://en.wikipedia.org/wiki/Equivalence_relation", "Text",
 CellChangeTimes->{
  3.8214508993340263`*^9},ExpressionUUID->"0bfa2687-72a7-4e2f-a424-\
f5240fd3f400"],

Cell["The first few paragraphs of that page should suffice.", "Text",
 CellChangeTimes->{{3.821449608065687*^9, 3.8214496299556093`*^9}, {
  3.8214496620323677`*^9, 3.821449783063208*^9}, {3.8214508533633957`*^9, 
  3.821450866494145*^9}, {3.821450923984886*^9, 
  3.821450940874938*^9}},ExpressionUUID->"7b59081b-7133-4110-953b-\
4bfb82b2eacc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["1 Overview", "Section",
 CellChangeTimes->{{3.821175087276546*^9, 3.821175088450384*^9}, {
   3.82117512705545*^9, 3.82117512723733*^9}, 3.8212633732263317`*^9},
 CellTags->"c:3",ExpressionUUID->"a5e872c3-10cd-49de-8b9d-2bb3ebdbd290"],

Cell["\<\
This note concerns the conditions under which functions of the state of the \
APU can be evaluated together, in parallel, or in any order. Up to four APL \
commands can be executed at once. A particularly rich example of an APL \
command is\
\>", "Text",
 CellChangeTimes->{{3.8211750929651318`*^9, 3.821175122189453*^9}, {
   3.821175179706374*^9, 3.821175195303314*^9}, {3.821175651901658*^9, 
   3.82117566972719*^9}, {3.821176293413939*^9, 3.821176337939891*^9}, {
   3.821176642228044*^9, 3.821176671109975*^9}, {3.821177474627076*^9, 
   3.821177480368902*^9}, {3.821177601686273*^9, 3.821177605876348*^9}, {
   3.821188570968479*^9, 3.821188577060115*^9}, {3.821263195328259*^9, 
   3.8212631965310307`*^9}, {3.821273454657939*^9, 3.821273469862011*^9}, {
   3.8212735014230537`*^9, 3.8212735099205303`*^9}, 3.821273925332306*^9, {
   3.821274007802869*^9, 3.8212740089643583`*^9}, {3.8213823193513403`*^9, 
   3.821382324240777*^9}, {3.821474664057143*^9, 
   3.821474679462844*^9}},ExpressionUUID->"13865de0-699a-4b47-a238-\
03c2c08eafa1"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"SM_", "0", 
     RowBox[{"X1111", ":", " ", "RL"}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{"SB", "[", 
      RowBox[{"x", ",", "y"}], "]"}], " ", "^", " ", "NRL"}]}], ";"}], 
  "Code"]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.821144100248398*^9, 3.821144153327766*^9}, {
   3.821144409202445*^9, 3.821144409203167*^9}, {3.821177619411875*^9, 
   3.8211776197774277`*^9}, 3.821474719033774*^9},
 CellTags->"command 1",ExpressionUUID->"f673e158-d6b2-4e05-b192-e9d0888d623e"],

Cell["This command ", "Text",
 CellChangeTimes->{{3.821177633766122*^9, 3.821177798024446*^9}, {
   3.821177855847389*^9, 3.8211778731732264`*^9}, {3.8211779688957644`*^9, 
   3.821178017578442*^9}, {3.821188599195429*^9, 3.821188608541901*^9}, 
   3.821213403219265*^9, {3.8212140599458427`*^9, 3.82121406353207*^9}, {
   3.82121439062997*^9, 3.8212143928765078`*^9}, 3.821214423516714*^9, {
   3.821214467648288*^9, 3.8212145086594143`*^9}, {3.821273484106943*^9, 
   3.821273487104669*^9}, {3.821312765427981*^9, 3.821312870668066*^9}, {
   3.821315226111457*^9, 3.8213152949070873`*^9}, {3.8213817784188833`*^9, 
   3.82138177954644*^9}, {3.8213823666602488`*^9, 
   3.821382369423665*^9}},ExpressionUUID->"6826bd6c-0fa9-46ad-8ee0-\
75e67083ce30"],

Cell[TextData[{
 "takes sections ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", ",", "4", ",", "8", ",", "12"}], TraditionalForm]],
  ExpressionUUID->"b428e008-ef1d-426c-be58-795753243011"],
 " of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"SB", "[", 
    RowBox[{"x", ",", "y"}], "]"}], TraditionalForm]],ExpressionUUID->
  "d0fb5fd0-dec2-4ed7-b04c-0a3073140977"],
 " \[LongDash] ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "ab29f372-1fb1-4fb4-a274-22f162d8f42a"],
 " and ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]],ExpressionUUID->
  "97700da3-497d-4f33-b695-068863b7270c"],
 " denote RN_REGs containing VR numbers"
}], "ItemNumbered",
 CellChangeTimes->{{3.821177633766122*^9, 3.821177798024446*^9}, {
   3.821177855847389*^9, 3.8211778731732264`*^9}, {3.8211779688957644`*^9, 
   3.821178017578442*^9}, {3.821188599195429*^9, 3.821188608541901*^9}, 
   3.821213403219265*^9, {3.8212140599458427`*^9, 3.82121406353207*^9}, {
   3.82121439062997*^9, 3.8212143928765078`*^9}, 3.821214423516714*^9, {
   3.821214467648288*^9, 3.8212145086594143`*^9}, {3.821273484106943*^9, 
   3.821273487104669*^9}, {3.821312765427981*^9, 3.821312870668066*^9}, {
   3.821315226111457*^9, 3.8213152949070873`*^9}, {3.8213817784188833`*^9, 
   3.82138177954644*^9}, {3.8213823666602488`*^9, 
   3.8213823741754637`*^9}},ExpressionUUID->"53bf8b0c-0b10-4520-a3fb-\
eae0d4236cc2"],

Cell[TextData[{
 "combines those sections from the two VRs ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "35c2f968-2a96-4bc5-914f-2a7dec761556"],
 " and ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]],ExpressionUUID->
  "41c8cd3c-bd9c-4c32-be50-c04ad6bd05b0"],
 " by AND"
}], "ItemNumbered",
 CellChangeTimes->{{3.821177633766122*^9, 3.821177798024446*^9}, {
   3.821177855847389*^9, 3.8211778731732264`*^9}, {3.8211779688957644`*^9, 
   3.821178017578442*^9}, {3.821188599195429*^9, 3.821188608541901*^9}, 
   3.821213403219265*^9, {3.8212140599458427`*^9, 3.82121406353207*^9}, {
   3.82121439062997*^9, 3.8212143928765078`*^9}, 3.821214423516714*^9, {
   3.821214467648288*^9, 3.8212145086594143`*^9}, {3.821273484106943*^9, 
   3.821273487104669*^9}, {3.821312765427981*^9, 3.821312870668066*^9}, {
   3.821315226111457*^9, 3.8213152949070873`*^9}, {3.8213817784188833`*^9, 
   3.82138177954644*^9}, {3.8213823666602488`*^9, 3.821382381942863*^9}, {
   3.821382434293107*^9, 
   3.821382440037125*^9}},ExpressionUUID->"3138da59-52e8-408c-9a36-\
50c146878b8d"],

Cell[TextData[{
 "combines the result (section-wise) by XOR with sections ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", ",", "4", ",", "8", ",", "12"}], TraditionalForm]],
  ExpressionUUID->"da6f702c-06cd-4a63-b1d6-8ac39f70c5dc"],
 " of NRL, i.e., sections ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", "1"}], ",", "3", ",", "7", ",", "11"}], TraditionalForm]],
  ExpressionUUID->"c5a51bd2-97fd-4af2-9da4-72bde7da0a96"],
 " of RL"
}], "ItemNumbered",
 CellChangeTimes->{{3.821177633766122*^9, 3.821177798024446*^9}, {
   3.821177855847389*^9, 3.8211778731732264`*^9}, {3.8211779688957644`*^9, 
   3.821178017578442*^9}, {3.821188599195429*^9, 3.821188608541901*^9}, 
   3.821213403219265*^9, {3.8212140599458427`*^9, 3.82121406353207*^9}, {
   3.82121439062997*^9, 3.8212143928765078`*^9}, 3.821214423516714*^9, {
   3.821214467648288*^9, 3.8212145086594143`*^9}, {3.821273484106943*^9, 
   3.821273487104669*^9}, {3.821312765427981*^9, 3.821312870668066*^9}, {
   3.821315226111457*^9, 3.8213152949070873`*^9}, {3.8213817784188833`*^9, 
   3.82138177954644*^9}, {3.8213823666602488`*^9, 
   3.8213823907507133`*^9}},ExpressionUUID->"0677db2b-aeeb-4b19-951c-\
37d6e7c8c3f2"],

Cell[TextData[{
 "deposits the results in sections ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", ",", "4", ",", "8", ",", "12"}], TraditionalForm]],
  ExpressionUUID->"334f5d88-5b13-4770-b676-ceb517fa85a3"],
 " of RL. "
}], "ItemNumbered",
 CellChangeTimes->{{3.821177633766122*^9, 3.821177798024446*^9}, {
   3.821177855847389*^9, 3.8211778731732264`*^9}, {3.8211779688957644`*^9, 
   3.821178017578442*^9}, {3.821188599195429*^9, 3.821188608541901*^9}, 
   3.821213403219265*^9, {3.8212140599458427`*^9, 3.82121406353207*^9}, {
   3.82121439062997*^9, 3.8212143928765078`*^9}, 3.821214423516714*^9, {
   3.821214467648288*^9, 3.8212145086594143`*^9}, {3.821273484106943*^9, 
   3.821273487104669*^9}, {3.821312765427981*^9, 3.821312870668066*^9}, {
   3.821315226111457*^9, 3.8213152949070873`*^9}, {3.8213817784188833`*^9, 
   3.82138177954644*^9}, {3.8213823666602488`*^9, 
   3.8213824003489017`*^9}},ExpressionUUID->"6e528035-6b22-4c70-9613-\
98ab76ec5d71"],

Cell[TextData[{
 "Section ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "1"}], TraditionalForm]],ExpressionUUID->
  "76820d1b-8621-4893-aaeb-740bb79b1b2a"],
 " of RL, by convention, contains all zeros. "
}], "Text",
 CellChangeTimes->{{3.821177633766122*^9, 3.821177798024446*^9}, {
   3.821177855847389*^9, 3.8211778731732264`*^9}, {3.8211779688957644`*^9, 
   3.821178017578442*^9}, {3.821188599195429*^9, 3.821188608541901*^9}, 
   3.821213403219265*^9, {3.8212140599458427`*^9, 3.82121406353207*^9}, {
   3.82121439062997*^9, 3.8212143928765078`*^9}, 3.821214423516714*^9, {
   3.821214467648288*^9, 3.8212145086594143`*^9}, {3.821273484106943*^9, 
   3.821273487104669*^9}, {3.821312765427981*^9, 3.821312870668066*^9}, {
   3.821315226111457*^9, 3.8213152949070873`*^9}, {3.8213817784188833`*^9, 
   3.82138177954644*^9}, {3.8213823666602488`*^9, 
   3.821382393209798*^9}},ExpressionUUID->"3a2cc645-81e6-4a4e-88e1-\
91a3c3b61dde"],

Cell["A command like", "Text",
 CellChangeTimes->{{3.821177801411564*^9, 
  3.821177803990182*^9}},ExpressionUUID->"477711e3-9ea0-4878-b3af-\
a6935342e79a"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"SM_", "0", 
     RowBox[{"X2222", ":", " ", "RL"}]}], " ", "^=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"SB", "[", "z", "]"}], " ", "&"}], " ", "GGL"}]}], ";"}], 
  "Code"]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.821144100248398*^9, 3.821144153327766*^9}, {
  3.821144409202445*^9, 3.821144409203167*^9}, {3.821177619411875*^9, 
  3.8211776197774277`*^9}, {3.821177808405285*^9, 3.821177813709765*^9}, {
  3.821195171375721*^9, 3.821195172453217*^9}, {3.821195571653821*^9, 
  3.821195579978889*^9}, {3.821196570222266*^9, 3.8211965706002274`*^9}},
 CellTags->"command 2",ExpressionUUID->"956cd92a-8102-4fcc-b1ae-199cb5297100"],

Cell[TextData[{
 "can run in parallel with command ",
 
 CounterBox["DisplayFormulaNumbered", "command 1"],
 " even if ",
 Cell[BoxData[
  FormBox["z", TraditionalForm]],ExpressionUUID->
  "0a505e48-c49c-4f02-bdd9-d94c98f1bb7f"],
 " equals either ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "2232c930-18f6-44c5-baa7-83b7c04b2e5b"],
 " or ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]],ExpressionUUID->
  "6013bc10-0ba4-4137-8512-327c0ac27220"],
 " because the section mask of command ",
 
 CounterBox["DisplayFormulaNumbered", "command 2"],
 " does not overlap the section mask of command ",
 
 CounterBox["DisplayFormulaNumbered", "command 1"],
 ". The bits read into RL in command ",
 
 CounterBox["DisplayFormulaNumbered", "command 1"],
 " cannot collide with the bits read into RL in command ",
 
 CounterBox["DisplayFormulaNumbered", "command 2"],
 ". Other, more subtle cases where section masks overlap are considered in \
the body of the document."
}], "Text",
 CellChangeTimes->{{3.821177818092616*^9, 3.8211778496139593`*^9}, {
   3.8211779009235983`*^9, 3.821177940363302*^9}, {3.821178033777164*^9, 
   3.821178041579863*^9}, 3.82118864788057*^9, {3.821195189285932*^9, 
   3.82119528951541*^9}, {3.821196858374154*^9, 3.821196871331703*^9}, {
   3.821263157645203*^9, 3.821263175006768*^9}, {3.8212740549179707`*^9, 
   3.8212740558985243`*^9}, 3.821315317466193*^9, {3.821315350926166*^9, 
   3.821315384971375*^9}, {3.82131542954494*^9, 3.821315455440035*^9}, {
   3.821315502243424*^9, 3.8213155239560347`*^9}, {3.821315661831601*^9, 
   3.821315715565666*^9}, {3.82131589582821*^9, 3.821315951444707*^9}, {
   3.821317975917534*^9, 3.821318108474023*^9}, {3.821318221169408*^9, 
   3.821318247260764*^9}, {3.821318295858603*^9, 3.821318313767342*^9}, {
   3.82131834435014*^9, 3.8213183457471323`*^9}, {3.821318401577054*^9, 
   3.821318411630414*^9}, {3.821319478561226*^9, 3.821319488313064*^9}, {
   3.821381803892136*^9, 3.8213818401897793`*^9}, {3.821382539440673*^9, 
   3.821382613988966*^9}, {3.821383964937644*^9, 3.821383978597632*^9}, {
   3.821533445264214*^9, 
   3.8215334462643757`*^9}},ExpressionUUID->"953405b9-aadd-4632-bb5a-\
c029bede1a36"],

Cell[TextData[{
 "Every APL command corresponds to a mathematical function from a state of \
the machine to another state of the machine, possibly the same state. The \
functions corresponding to commands ",
 
 CounterBox["DisplayFormulaNumbered", "command 1"],
 " and ",
 
 CounterBox["DisplayFormulaNumbered", "command 2"],
 " above are ",
 StyleBox["compatible",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " or ",
 StyleBox["non-interfering",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ". The goal of this document is to define ",
 StyleBox["compatible",
  FontSlant->"Italic"],
 " more thoroughly. "
}], "Text",
 CellChangeTimes->{{3.821178069219698*^9, 3.821178120739583*^9}, {
   3.821195295789456*^9, 3.8211953229671288`*^9}, {3.8211953678186913`*^9, 
   3.821195535495934*^9}, {3.821195603090921*^9, 3.821195607873562*^9}, {
   3.821196698495551*^9, 3.821196721064699*^9}, {3.82119687844611*^9, 
   3.821196957461772*^9}, {3.8212149339099817`*^9, 3.821214948596789*^9}, {
   3.821273566037641*^9, 3.821273606760532*^9}, {3.8212736388521357`*^9, 
   3.821273643434306*^9}, {3.821315972528778*^9, 3.8213159787101097`*^9}, 
   3.821383999759716*^9, {3.821384058992632*^9, 3.8213841193885193`*^9}, {
   3.8215334859873257`*^9, 3.8215335101263447`*^9}, {3.821533557247957*^9, 
   3.821533606396254*^9}},ExpressionUUID->"7a392039-5135-4b24-b583-\
d2c5ff62da63"],

Cell[TextData[{
 "The mathematical set of all states of (one bank of) the machine is \
stupendously large, of size ",
 Cell[BoxData[
  FormBox[
   RowBox[{"S", "=", 
    SuperscriptBox["2", "831488"]}], TraditionalForm]],ExpressionUUID->
  "9a39df78-e90a-4e5b-b3fa-06e5747bd6e6"],
 ", as we shall see. The space of functions is stupendously larger, of size ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["S", "S"], TraditionalForm]],ExpressionUUID->
  "15bbddc7-3910-4cd9-ab02-6867eea2491b"],
 ". Only a tiny minority of those functions correspond to APL commands. But \
we can still abstractly classify all functions that don\[CloseCurlyQuote]t \
interfere with one another."
}], "Text",
 CellChangeTimes->{{3.821178069219698*^9, 3.821178120739583*^9}, {
  3.821195295789456*^9, 3.8211953229671288`*^9}, {3.8211953678186913`*^9, 
  3.821195535495934*^9}, {3.821195603090921*^9, 3.821195607873562*^9}, {
  3.821196698495551*^9, 3.821196721064699*^9}, {3.8211969660646353`*^9, 
  3.8211969685903788`*^9}, {3.8212152159136047`*^9, 3.821215272881548*^9}, {
  3.821384135813323*^9, 3.8213841486145697`*^9}, {3.821533649623456*^9, 
  3.821533667748193*^9}},ExpressionUUID->"c952a072-005c-4c7e-91a2-\
3f1604505c0e"],

Cell["\<\
The actual APL commands available now are a handful, summarized in the next \
subsection. These commands are parameterized by section masks, by VR numbers, \
and by particular objects like RL and GGL in the machine. If we can classify \
the corresponding functions by those parameters into non-interfering groups, \
then we will have a foolproof guide for parallelizing command streams, say in \
the output of an optimizing compiler. This brief document lays the groundwork \
for such a classification. The classification, itself, will be attempted \
later.\
\>", "Text",
 CellChangeTimes->{{3.8211956217224007`*^9, 3.821195744284232*^9}, {
  3.821195792563396*^9, 3.8211958914622173`*^9}, {3.821196993513997*^9, 
  3.821197023368516*^9}, {3.82127336578826*^9, 3.8212734203031893`*^9}, {
  3.821273681420536*^9, 3.821273724761854*^9}, {3.821274106463768*^9, 
  3.821274108639619*^9}, {3.821274279812366*^9, 3.821274325957836*^9}, {
  3.8213161023450403`*^9, 3.821316104248102*^9}, {3.821384167423551*^9, 
  3.821384168708033*^9}, {3.8213847462167587`*^9, 3.821384799126953*^9}, {
  3.821533686119074*^9, 
  3.821533690660823*^9}},ExpressionUUID->"68c24fb1-cdfd-4cae-9203-\
ae0ea5f0e629"],

Cell[CellGroupData[{

Cell["1.1 Command Reference", "Subsection",
 CellChangeTimes->{{3.8211774899093447`*^9, 3.821177494314391*^9}},
 CellTags->"c:4",ExpressionUUID->"bed546ed-4365-49a2-84fd-84e57838c878"],

Cell[TextData[{
 "In the following pr\[EAcute]cis of the ",
 StyleBox["the APL command set",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ", curly braces enclose alternatives, i.e., choose one item out of a set \
enclosed in curly braces. The command numbers refer to a table in the README \
file cited above."
}], "Text",
 CellChangeTimes->{{3.8211750929651318`*^9, 3.821175122189453*^9}, {
  3.821175179706374*^9, 3.821175195303314*^9}, {3.821175651901658*^9, 
  3.82117566972719*^9}, {3.821176293413939*^9, 3.821176337939891*^9}, {
  3.821176642228044*^9, 3.821176671109975*^9}, {3.821177474627076*^9, 
  3.821177476327651*^9}, {3.821195900186141*^9, 3.8211959391911917`*^9}, {
  3.821197037964226*^9, 3.8211970457714987`*^9}, {3.821216633155107*^9, 
  3.8212166363247347`*^9}, {3.8212743406906147`*^9, 
  3.821274387521097*^9}},ExpressionUUID->"4a4cf28f-4fe8-4081-a459-\
91401963d6ee"],

Cell[BoxData[
 FormBox[GridBox[{
    {"Command", 
     RowBox[{"section", "\[LineSeparator]"}], "destination", "operator", 
     "source"},
    {
     RowBox[{"1", ",", "2"}], "msk", "RL", ":=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]},
    {
     RowBox[{
     "3", "\[Hyphen]", "5", ",", " ", "10", "\[Hyphen]", "15", ",", "18", 
      "\[Hyphen]", "20"}], "msk", "RL", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        StyleBox["\"\<\>",
         FontColor->GrayLevel[1]], ":=", 
        StyleBox["\"\<\>",
         FontColor->GrayLevel[1]]}], ",", 
       RowBox[{
        RowBox[{
         StyleBox["\"\<\>",
          FontColor->GrayLevel[1]], "|"}], "=", 
        StyleBox["\"\<\>",
         FontColor->GrayLevel[1]]}], ",", 
       RowBox[{
        RowBox[{
         StyleBox["\"\<\>",
          FontColor->GrayLevel[1]], "&"}], "=", 
        StyleBox["\"\<\>",
         FontColor->GrayLevel[1]]}], ",", 
       RowBox[{
        StyleBox["\"\<\>",
         FontColor->GrayLevel[1]], "^=", 
        StyleBox["\"\<\>",
         FontColor->GrayLevel[1]]}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"SB", ",", "SRC", ",", 
       RowBox[{
        RowBox[{"SB", "&"}], "SRC"}]}], "}"}]},
    {
     RowBox[{"6", ",", "7"}], "msk", "RL", ":=", 
     RowBox[{"SB", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         StyleBox["\"\<\>",
          FontColor->GrayLevel[1]], "|", 
         StyleBox["\"\<\>",
          FontColor->GrayLevel[1]]}], ",", 
        RowBox[{
         StyleBox["\"\<\>",
          FontColor->GrayLevel[1]], "^", 
         StyleBox["\"\<\>",
          FontColor->GrayLevel[1]]}]}], "}"}], "SRC"}]},
    {
     RowBox[{"8", ",", "9"}], "msk", "RL", ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"~", "SB"}], "&"}], "SRC"}], ",", " ", 
       RowBox[{
        RowBox[{"SB", "&"}], "~", "SRC"}]}], "}"}]},
    {
     RowBox[{"16", ",", "17"}], "msk", "RL", 
     RowBox[{
      RowBox[{
       StyleBox["\"\<\>",
        FontColor->GrayLevel[1]], "&"}], "=", 
      StyleBox["\"\<\>",
       FontColor->GrayLevel[1]]}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"~", "SB"}], ",", 
       RowBox[{"~", "SRC"}]}], "}"}]},
    {" ", "msk", "SB", ":=", "SRC"},
    {" ", "msk", 
     RowBox[{"{", 
      RowBox[{"GL", ",", "GGL", ",", "RSP16"}], "}"}], ":=", "RL"}
   }], TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.821176434877151*^9, 3.821176627116377*^9}, {
  3.82117667934846*^9, 3.8211767025218*^9}, {3.821176811588612*^9, 
  3.821176817979191*^9}, {3.821176860363575*^9, 3.821176931261366*^9}, {
  3.821177051467396*^9, 3.8211770710524197`*^9}, {3.821177115593328*^9, 
  3.8211772316929398`*^9}, {3.8211772621254997`*^9, 3.821177309311244*^9}, {
  3.8211971192562*^9, 3.821197119257044*^9}, {3.821385097543756*^9, 
  3.821385116058466*^9}, {3.8213851655874767`*^9, 3.821385169192935*^9}, {
  3.821387609930217*^9, 
  3.821387612656083*^9}},ExpressionUUID->"423f2468-d67a-4169-b1f8-\
64dffda0b841"],

Cell[TextData[{
 "SB denotes up to three VRs, as in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"SB", "[", "x", "]"}], TraditionalForm]],ExpressionUUID->
  "25082699-c55d-4907-96a0-2d4e121b0086"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"SB", "[", 
    RowBox[{"x", ",", "y"}], "]"}], TraditionalForm]],ExpressionUUID->
  "d6412811-1a00-40fa-a730-b381759341be"],
 ", or ",
 Cell[BoxData[
  FormBox[
   RowBox[{"SB", "[", 
    RowBox[{"x", ",", "y", ",", "z"}], "]"}], TraditionalForm]],
  ExpressionUUID->"a68cfe64-fd15-4abb-9198-b35462967f6d"],
 ", and SRC is is one of"
}], "Text",
 CellChangeTimes->{{3.821177312709569*^9, 3.821177404567178*^9}, 
   3.821177435433029*^9, 3.821177519143038*^9, {3.821274408773209*^9, 
   3.8212744656996183`*^9}},ExpressionUUID->"960b9f56-2ee1-472b-9a5c-\
bcc9c9c5b4ec"],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   FormBox[
    RowBox[{
     RowBox[{"(", "INV_", ")"}], "?", 
     RowBox[{"{", 
      RowBox[{"GL", ",", " ", "GGL", ",", " ", "RSP16", ",", " ", 
       RowBox[{"RL", " ", 
        RowBox[{"{", 
         RowBox[{"N", ",", "E", ",", "W", ",", "S"}], "}"}], "RL"}]}], "}"}]}],
    TraditionalForm], ".", " "}]}]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.821177312709569*^9, 3.821177404567178*^9}, 
   3.821177435433029*^9, {3.821177534436599*^9, 
   3.821177561717901*^9}},ExpressionUUID->"241e8e31-bfc0-4444-9a32-\
ef0175f0f11e"],

Cell["SRC does NOT include SB!", "Text",
 CellChangeTimes->{{3.821177312709569*^9, 3.82117739269704*^9}, {
  3.821188679804205*^9, 
  3.821188681148941*^9}},ExpressionUUID->"675e3f67-0b6f-4c2d-baa5-\
a1420d03a63b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2 Description of the Machine", "Section",
 CellChangeTimes->{{3.821113248878715*^9, 3.821113253673644*^9}, {
   3.821137091545085*^9, 3.821137091688313*^9}, 3.8211751307256327`*^9, 
   3.821263380123909*^9},
 CellTags->"c:5",ExpressionUUID->"db843c3d-2a2e-4c7d-bb7b-50ab5ab7b041"],

Cell[TextData[{
 "An APU chip has four APU cores. An APU core has 16 ",
 StyleBox["banks",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " full of bits (we used to call them \[OpenCurlyDoubleQuote]half-banks\
\[CloseCurlyDoubleQuote]). Each bank has a 3D ",
 StyleBox["cuboidal",
  FontSlant->"Italic"],
 " memory array, ",
 StyleBox["MMB",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ", of 2D ",
 StyleBox["sections",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ", 2D ",
 StyleBox["vector registers",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " (",
 StyleBox["VR",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 "s, aka ",
 StyleBox["SB",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 "s), and 2D ",
 StyleBox["plats",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ". Each section, VR, and plat is a 2D ",
 StyleBox["slice",
  FontSlant->"Italic"],
 " of the cuboid."
}], "Text",
 CellChangeTimes->{{3.821091669806733*^9, 3.82109174431868*^9}, {
   3.82109179175797*^9, 3.821091840123341*^9}, {3.82109187851394*^9, 
   3.82109188271031*^9}, 3.821091950509555*^9, {3.821092558041995*^9, 
   3.8210925602317657`*^9}, {3.821093639938137*^9, 3.82109370601859*^9}, {
   3.821093778683302*^9, 3.821093795628512*^9}, {3.8211006958131437`*^9, 
   3.821100700853779*^9}, {3.821113230973564*^9, 3.821113236870883*^9}, {
   3.82113635715801*^9, 3.821136371365065*^9}, {3.821137098785121*^9, 
   3.821137116906624*^9}, {3.821137311198598*^9, 3.821137348031349*^9}, {
   3.8211781951952753`*^9, 3.8211782186627073`*^9}, {3.8211960272370853`*^9, 
   3.821196030380906*^9}, {3.821263653760475*^9, 3.82126366032568*^9}, {
   3.82127448713197*^9, 
   3.821274494374481*^9}},ExpressionUUID->"9623b1ce-3907-4299-9667-\
5317abefe76d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"o", "=", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"e1", "=", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"e2", "=", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], ",", 
     RowBox[{"e3", "=", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ",", 
     RowBox[{"s", "=", ".24"}], ",", 
     RowBox[{"d", "=", "1.5"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Opacity", "[", "0.15", "]"}], ",", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Cuboid", "[", 
          RowBox[{
           RowBox[{"o", "+", 
            RowBox[{"d", " ", "k", " ", "e2"}]}], ",", 
           RowBox[{
            RowBox[{"96", "e1"}], "+", "s", "+", 
            RowBox[{"d", " ", "k", " ", "e2"}], "+", 
            RowBox[{"16", "e3"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"k", ",", "25"}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<2048 Plats\>\"", ",", "Red", ",", "Bold", ",", "12"}], 
         "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<24 SB + 1 RL\>\"", ",", "Red", ",", "Bold", ",", "12"}],
          "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<16 Sections\\n16-bit Vectors\>\"", ",", "Red", ",", "Bold", ",",
           "12"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesStyle", "\[Rule]", "LightGray"}], ",", 
     RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "575"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821091465928541*^9, 3.8210914994924393`*^9}, {
  3.8210915353685837`*^9, 3.8210915361130943`*^9}, {3.821091613485623*^9, 
  3.8210916315818567`*^9}, {3.82113743633899*^9, 3.821137456335204*^9}, {
  3.82113748824022*^9, 3.821137504561264*^9}, {3.8211375498937197`*^9, 
  3.82113759897793*^9}, {3.821137637978365*^9, 3.8211376561429234`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"9bb01439-ef8f-46d3-a737-127624d7dbea"],

Cell[BoxData[
 Graphics3DBox[
  {Opacity[0.15], CuboidBox[{0., 1.5, 0.}, {96.24, 1.74, 16.24}], 
   CuboidBox[{0., 3., 0.}, {96.24, 3.24, 16.24}], 
   CuboidBox[{0., 4.5, 0.}, {96.24, 4.74, 16.24}], 
   CuboidBox[{0., 6., 0.}, {96.24, 6.24, 16.24}], 
   CuboidBox[{0., 7.5, 0.}, {96.24, 7.74, 16.24}], 
   CuboidBox[{0., 9., 0.}, {96.24, 9.24, 16.24}], 
   CuboidBox[{0., 10.5, 0.}, {96.24, 10.74, 16.24}], 
   CuboidBox[{0., 12., 0.}, {96.24, 12.24, 16.24}], 
   CuboidBox[{0., 13.5, 0.}, {96.24, 13.74, 16.24}], 
   CuboidBox[{0., 15., 0.}, {96.24, 15.24, 16.24}], 
   CuboidBox[{0., 16.5, 0.}, {96.24, 16.74, 16.24}], 
   CuboidBox[{0., 18., 0.}, {96.24, 18.24, 16.24}], 
   CuboidBox[{0., 19.5, 0.}, {96.24, 19.74, 16.24}], 
   CuboidBox[{0., 21., 0.}, {96.24, 21.24, 16.24}], 
   CuboidBox[{0., 22.5, 0.}, {96.24, 22.74, 16.24}], 
   CuboidBox[{0., 24., 0.}, {96.24, 24.24, 16.24}], 
   CuboidBox[{0., 25.5, 0.}, {96.24, 25.74, 16.24}], 
   CuboidBox[{0., 27., 0.}, {96.24, 27.24, 16.24}], 
   CuboidBox[{0., 28.5, 0.}, {96.24, 28.74, 16.24}], 
   CuboidBox[{0., 30., 0.}, {96.24, 30.24, 16.24}], 
   CuboidBox[{0., 31.5, 0.}, {96.24, 31.74, 16.24}], 
   CuboidBox[{0., 33., 0.}, {96.24, 33.24, 16.24}], 
   CuboidBox[{0., 34.5, 0.}, {96.24, 34.74, 16.24}], 
   CuboidBox[{0., 36., 0.}, {96.24, 36.24, 16.24}], 
   CuboidBox[{0., 37.5, 0.}, {96.24, 37.74, 16.24}]},
  AspectRatio->{1, 1, 1},
  Axes->True,
  AxesLabel->{
    FormBox[
     StyleBox["\"2048 Plats\"", 
      RGBColor[1, 0, 0], Bold, 12, StripOnInput -> False], TraditionalForm], 
    FormBox[
     StyleBox["\"24 SB + 1 RL\"", 
      RGBColor[1, 0, 0], Bold, 12, StripOnInput -> False], TraditionalForm], 
    FormBox[
     StyleBox["\"16 Sections\\n16-bit Vectors\"", 
      RGBColor[1, 0, 0], Bold, 12, StripOnInput -> False], TraditionalForm]},
  AxesStyle->GrayLevel[0.85],
  Boxed->False,
  ImageSize->575,
  ImageSizeRaw->Automatic,
  ViewPoint->{-2.534421248096072, -1.827624256814308, 1.298652575981389},
  ViewVertical->{-0.04217205899033465, -0.0327939301116762, 
   0.9985720182282027}]], "Output",
 CellChangeTimes->{
  3.821091096633994*^9, {3.821091473120469*^9, 3.8210914999531603`*^9}, 
   3.821091537266103*^9, {3.8210916143307962`*^9, 3.821091631874926*^9}, {
   3.821137535235118*^9, 3.821137599894146*^9}, {3.821137640887292*^9, 
   3.821137656916856*^9}, {3.821381830248952*^9, 3.821381846837448*^9}, 
   3.821452979157023*^9, 3.821453093074131*^9, 3.821492882290432*^9, 
   3.821533239384768*^9, 3.821533775332809*^9},
 CellLabel->"Out[1]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
253I8qAVKQBlTzYj5EQBKKEsWGqJn2sE+zJIvm6DIDECRgDIUt0Thxw0uNS8
eNzos1cfdfihf2xpaeaA+cSAwUMihDxHDCAXjzjzwuf6sI8PwOOmwQcd/PKw
Y46HAPLps845943DDj+SQ+amaPwLw0aMWn79HWs5ZELtcPWYiXPh+fe7dm/j
kFm36cRTRkYB2tSr520485yxH7a39wDYfOfAIcM2jDjrosfn3/t02hT69ZHj
rvywtb0nv+fUQRuKUnOEGYvf+tzYiz/q0bMX/2BA44qfLlz5fBryNo+eMPtd
+FziXmLDxDnL3zp9zOUftfforXkJ+Oi+d8hRw+FQ4SXisEZ8Cfgov3fEp4+F
V9g4afpc6Mrx7nEnnsr/muE1NkafzxT285Pgf9EwHIZanIX1EsTxlSW0yS4C
DIdpAbv1ZyAdDtcQZofhcAaOw3Wzpxbvee4wPP35kV369Ls/QL54Pnt68enZ
U8ALK7C5dNWLb3VdPAwtBRyrW3K6uiuesumKVS54K3+7ZX8qACfwf2bZdFPL
zhqw03DWymXzsdKrnYzlnzGbsR3zxuB5ZZYek4M3tAQ5z0ta7xiQs/4eEWG7
suOuh+7c1bDZBRKqo6JjoZ74gQRCwV261M5ec2iScJ0DCdeu8XPtgKFQY4T1
fiDgKASc0WO4LvAsDXQXDYrhZ0U0KG0XBDAqWqF58koN3M7aZYaGd9YM1qHH
r8eO0+giMrHFMmwcSogWAZ9fVtM/Jxo42KTI5ZKnVC3OWcGT8WPZWHJhY+Sc
bIWcDsIJB2/qEwT8nMkiyoO3bt0KjRRWRxgHcsAGNYTeEB32XvT8ezGExl/r
Z4rH9auG0EcSFiqHUPBB64DQ7uw1QUVY5q6grX4QCrCJgVBL3b27MsNoj+3C
GS2KdlqElacmA+uAxUh9huQKUlq1OCdwi5TO+82dyc3BiZbYSTdqUpjWinv5
BSuUUUMPhhgYdspV+xZFfbg8Lpc6/oOMMfTyLIa6izOQHtkihj5aAbxxEbjJ
AG9C9IgBLwHRfjNnzgTAAxl9LGZ0BDyWUO4/GMBNADytzB7gDnKvNlpEGWkV
182oGmVCAFU1TFCTd/BBK03Y5oSRVgIN5eWnqRTSMFdROBWizohnj7oHbwgC
UDAyTWcJHG2pSyreK7LISUjjMc0aY93EZPyKp36za9r8lUDhMagyoJ8R9DVa
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
9dHMdb5d5OVvvnz2svLBhx9nq5UuNWr4iiymauUZqj3tPfuytR106J/PPveC
nRMmTRclU1XZLRbLNa25e+2/7Rx/xXwggYhw5uEcLMeyZfGTXVVdM0GsNm/9
+vXl6667bhlwHA34pbdjdPAHUbH3LSRpQODXk/czDsJ5Ejf6kr0Gpdq62BKZ
++xOSUxCiqPP2BqSl9mDZ+4ASEJYyT8Y6+N9yqhsJKPg95AxOV6ffMM9nJ9o
wsZ4GYyDb3QKPn/yvD1HDz97R/9Yxtayp1ff/gBndesvmXRVhIgpZ4sY1Zrd
GPwODsNyVFsePyntn1mOwrJtr732Wqp/Jtqi0UJn/cLJp5xuYxzip0izpux3
WrqGQ27PLTFJGVbZzuyQ0wyTVcSN9Vw2rZLMPcLJGwxxzJS9psJlnZJkdPtW
FU9DpNunC/7JkrrJlvOHOUsfhiqZgpXYIgLS+stn31YeOHjI+209esNdNsa0
F6dePa/UyKM1sZxTasxS9kF/vXv0JdesuPm+5/ych+WwdlcF1rDNyZycHDMy
a45qHjJrRx2an/FwsTwNIoU1QZ7SY+0W91gZR8QGEnPLNNrf4H3XToRM7gGP
x8ydsf1KoT7ALoDYmqVuiN2ZG6qLXqJaWnb1dw0ZelL5vInX1cHrlOpFeEyy
jj1lRPvVV938INyDRa4dRGvr5i5YKpZ7xExknRVvH2lSLIe3v6mGN1kXMxm8
wQtamGMZ4A2nsCbWnpmoGIa4w4HbjxmuIYJ45P7ca2h5xFzqWFMqf9VlbQvI
HmKKWOlrXZxwjGTmTheq5V4G88lYdtNzORivvlGmkE7OqLnjY8d59VCBmzBz
iRCe9VER6+H+K9LwxLgCMA2wTeawy1+vDl4sgk/h5UqtXv7FckBbUQE0WVvO
qkZnzHm/8R4BzDiglepuuPziCypoFj8fRWOclc9oIfWwNk5pLNXFC2gAIFux
YNFSIObHgVv8dP3TJ555EcBXfM4Mzlp+NmToyRzKOJytm3tTtEE4Jt4gJEPh
enZUKxmnsRGuLX+PK+8zfPgq23X+qecfv/6Vv1L+t5Lb0Jbff+aM8/mfGR/6
yi13fwvQD75PzhUOgVniQcJQPiM8ojv3VD4UZkyGbh494eqOocJdOD0rXzC/
MaQXzIbWi+fK31uYGQbzcxVmhpHCzJnzFRctnK9k0TkNTS24u+wqv7jq8R/x
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
O/pMwYtjhIz1cgXfW63g+QAgFX2pJ7KgTsbde2CYU2VDPtYoG4+GxefVPZg1
L8bh/yNtQi/YKq+bdALokcHWGID+/NSZ884suXrN78ZcPAnecyTbXTjfYtZE
rcqlh/ouDIhrvuSyldkZi9bl6UNVM61LZCl3mTe/Z9WWx0CRF4BGN80I0+lU
pVMqIHvtFU77gYEDbjCu6qgCb1PsVLdvGPkZooqKbL+8UpdNPLAp9RKROoLf
vA6hT4dodWzkQQjQyw4Bz3ipx3Z8kick+AxmC8NFXv43RNAEoO8sbr1q405w
l8Ft1r5s3B016aDCMt1zUOBnZs5ZeG7KzHloxpyhJmUDAhJqj7159rzFMPgM
UDPmewko2DY3DGgiSfNihRYX2Nd0vPTTpiqCiWcvLrzqBhF6SV3yIowUYaGB
J81Z8TSGIWYMFf3a3XIdPVCtoy1zA2rIvl3V9ipgJGUY+eAYSXcunJCBLwH8
V5+uf4i1TFXQrsimXwjpkY8P8MUTX2Yl7b/iuvb1x776FnSOnus3ZIwFIKZQ
9VGFuuZcZ7OX3nCuZ5/B0GsED+VcZU03V5CLC9dZCse5AKj94JVXXrt/+fLr
Wxsbh8D/HTiXlJNsWcx1x9VQF+53t6fTaSirHq2q7gEo93ebxs9m4EZpmVNg
PLPnujnjGeZzy+AuxiflmnpwXlNzIn7phBfKp+xoQeX9V/vqaWZfaEHNKeja
PDscV878YRm0KSxubwrjIBda7YwQomqmmXn3KqyM/StW38BVs9ADB4uDLA2q
niNi+xw/XL81MyI2ArLDk3A4tAK6tFl6aEPFeklVbYQuvZL2zkW9q6LtpBqf
08PN2p5ugEPRTkv33lfPn1HxVAN0oKpuNEONI6YwOeLE3g7qvJNC8U5kY4Kx
KY5Eh/bqPzyL9IXSDqG8qOXaTV14xGgSo+hofb+hWSb/hENs7ryFYgs6l3/i
MrvMCKZQkyJoMxVVSsvY0Re1Dx8y6Gg3QmMZ4z4jcWnT6jpjnCi5qNgOSpQa
aDjaa8q/QdhAzYqaW6Fph5G/kJEnm6ys9Y6RJ+G5xGhaSL9vCIWSeyAjDkYW
psSYhFht7LjGoaCA7C4iY/HvzP+XIGNR3XPuuhQVGH/v/l37AM8BfF1i406B
KxlLyr5+ji278YHz12x+CE7lxIJ3w9TqXvNudCAiItsjsR52bOGS67a/s+Km
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
0v3mi+eL0f0Gi+ejU0oj30Guu0Pcj9aRIyDNXzQ3uJYRp3s/ab5m2L6gDejb
kWeRxzDHfO/b5gYf3dQM5GH8vbgfuUvDmGtucPyJbO7T/QfTL2Spv0ifhYfO
Ir94Iw0F4F5mQ+cCaOK9lUi81kFDR/Io2RT/niD+B5ff9Jl8CsjCKCmKfdTb
CCmgK4FxozBQ6OiClber+kIVaSDM+eDjRl5ceNUNTs5X32kguzp3TQNtEn53
CHq7KCDldEn2EFcubW6IgAD8C9+viO73XfN1BN+XRiPugs4k5jPmeyf5fsV0
P1A6t/B96fIOT9BZ6N9L3I8prDPm6+wsFXJUylkCrMp87xV+bCG9I7uUk/+X
0XO8KP5NEG3ZJDZ755NfAJVGCd298VZrsotbZo3LNknp9unXmGtPZS3fFr2Q
UoCUJOkvfk9tTaPGAlaDp7/aizNVtjkkUrc1phdS8FEkWAZMDLZsGTCX8DzH
PJllf4IMGAgyB/mRJaQ01a4SzFYv2KhzNomDlR/h+zJJcpXgBLIfW/FjxP0o
Kio8CWbVR0D9/5Lvx4woPINNtmtYJJhVciDC/SfrsUoJ/k/zdSf/+8vk1dOM
Nb8oMEnpX7PaGQpSPoeCtHTG9hswuG1C3oI65F+TQU+8JQAWHh84cHBb08jR
7T161qN0Xkk1yjCh1njtVZUVMASBDy+xZxVSTndZ5DARhnBzSXZ6Wrn8H+dw
J0ogBPFlSxeCxz/w/Urpfr/NwiFsP4bFchVfpg62I9f9hLgfM+hhi+9OcT/m
SJxFjsXE93ZxP5X4Yp/n2+TV02g1v5SFgvj6Lt76r26x5OqJxWu2g1cL3q2d
lE8l/lHXsUNEs+yduWQ9eLeni0tIkNSeKa9w8yyCjzFpq6utccl8yoJe2yxt
/p2SzKcUI7lR+N236P7IKULR8+brD8ztZ+b2lywPGiN3i4fTtKq2RO9zXiYO
bvZ6cxtvblOz1L1+Nn+56ztB4A8794v/KUtzbjG2PwQw+7M5hxyT/U+Jp6FO
egyyDn8Stq+So8n+JPzm+4PbA874jeYGtMIANWd3BzR2MHrjRP60kXXi5f8X
3S/pHPUmaY/zzbxYFUJN3E8hEYLqciL0hTqUgoZLDhrOJDJ6WrvHklz496za
uGPvrMtWgg45WZhKe8tBy4BIjImaPjtn/jmM9HPCnn7ebdg5zZQG/xeIfP0w
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
rMkBP3c5IR2xk5Dh3PLP7h16IuMT/w9oJDaa\
\>", "ImageResolution" -> \
192.],ExpressionUUID->"0196d8f3-4dd4-48e4-980e-93ffefecc0d8"]
}, {2}]],

Cell[TextData[{
 "The bank also has a ",
 StyleBox["Read Latch",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " (",
 StyleBox["RL",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 "), of the same shape as a VR. Finally, the bank has three ",
 StyleBox["aggregator objects",
  FontSlant->"Italic"],
 ": ",
 StyleBox["GL",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ", ",
 StyleBox["GGL",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ", and ",
 StyleBox["RSP16",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ". We don\[CloseCurlyQuote]t go into the semantics of these objects in this \
document, but their index sets are important for enumerating the states of \
the bank."
}], "Text",
 CellChangeTimes->{{3.821094097715893*^9, 3.821094271035104*^9}, {
  3.821099811134285*^9, 3.8210998183035*^9}, {3.8211372880138493`*^9, 
  3.8211372979438877`*^9}, {3.821137758553315*^9, 3.821137759508621*^9}, {
  3.821137835076992*^9, 3.821137872245466*^9}, {3.821138770348817*^9, 
  3.821138771172777*^9}, {3.8211960498108377`*^9, 3.82119606142607*^9}, {
  3.82153381751502*^9, 
  3.8215338204305553`*^9}},ExpressionUUID->"fc7a3e9d-bafd-4836-8574-\
8e236e0c229a"],

Cell[CellGroupData[{

Cell["2.1 Read-Write Inhibit", "Subsection",
 CellChangeTimes->{{3.8212633569103327`*^9, 3.8212633666082573`*^9}, {
  3.82126343768192*^9, 3.8212634537557383`*^9}, {3.821263757012472*^9, 
  3.821263757337014*^9}, {3.8212745302206917`*^9, 3.8212745317690153`*^9}},
 CellTags->"c:6",ExpressionUUID->"943fba04-ccb0-4223-b9fa-05f5a35c6c3d"],

Cell[TextData[{
 "The machine also has a RWI (Read-Write Inhibit) object, of the same shape \
as a VR. Future versions of APL will have commands for manipulating this \
object. Because APL does not currently support it, we do not consider it \
further in this document. However, in future documents that address ",
 StyleBox["markers",
  FontSlant->"Italic"],
 " and ",
 StyleBox["Tartan",
  FontSlant->"Italic"],
 ", RWI will be critical."
}], "Text",
 CellChangeTimes->{{3.821263469353788*^9, 3.821263524361116*^9}, {
  3.821263686666716*^9, 3.821263748813545*^9}, {3.821274535613323*^9, 
  3.821274538298617*^9}, {3.821316208610326*^9, 
  3.8213162361547613`*^9}},ExpressionUUID->"fa04fa96-cbfb-40cc-917b-\
8483ef0fa465"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3 State of the Bank", "Section",
 CellChangeTimes->{{3.821090641723671*^9, 3.82109064715765*^9}, {
   3.821137881769149*^9, 3.82113788279853*^9}, {3.8211751356040773`*^9, 
   3.821175135669527*^9}, 3.821263385694634*^9},
 CellTags->"c:7",ExpressionUUID->"b6290b39-2283-4ae4-8d84-b1f6800b8740"],

Cell["\<\
Leslie Lamport (Turing Laureate, 2013) wrote a book called \
\[OpenCurlyDoubleQuote]Specifying Systems.\[CloseCurlyDoubleQuote] \
\>", "Text",
 CellChangeTimes->{{3.8210906596757183`*^9, 3.821090708638915*^9}, {
   3.821093621493168*^9, 3.821093622956115*^9}, {3.82110540919361*^9, 
   3.821105413412169*^9}, {3.821137893988798*^9, 3.821137899283306*^9}, {
   3.821196220059237*^9, 3.821196334937409*^9}, {3.8211964175941467`*^9, 
   3.821196449649963*^9}, {3.821197229773364*^9, 3.821197287755596*^9}, {
   3.821197421634499*^9, 3.821197455563449*^9}, {3.821229848482629*^9, 
   3.8212299018958817`*^9}, {3.821274574362402*^9, 3.821274578920863*^9}, {
   3.8213600892906427`*^9, 3.821360095716652*^9}, {3.821387720588849*^9, 
   3.8213877616119537`*^9}, {3.821533839757882*^9, 3.8215338518094397`*^9}, 
   3.821533910566732*^9},ExpressionUUID->"99e7313a-f6d0-46bc-9533-\
5017a195cc0a"],

Cell["https://lamport.azurewebsites.net/tla/book.html", "Text",
 CellChangeTimes->{{3.8210906596757183`*^9, 3.821090708638915*^9}, {
  3.821093621493168*^9, 3.821093622956115*^9}, {3.82110540919361*^9, 
  3.821105413412169*^9}, {3.821137893988798*^9, 3.821137899283306*^9}, {
  3.821196220059237*^9, 3.821196334937409*^9}, {3.8211964175941467`*^9, 
  3.821196449649963*^9}, {3.821197229773364*^9, 3.821197287755596*^9}, {
  3.821197421634499*^9, 3.821197455563449*^9}, {3.821229848482629*^9, 
  3.8212299018958817`*^9}, {3.821274574362402*^9, 3.821274578920863*^9}, {
  3.8213600892906427`*^9, 3.821360095716652*^9}, {3.821387720588849*^9, 
  3.8213877616119537`*^9}, {3.821533839757882*^9, 3.8215338518094397`*^9}, {
  3.821533914447146*^9, 
  3.821533920061035*^9}},ExpressionUUID->"679625cb-8414-4ddd-a604-\
152733d3995f"],

Cell["\<\
It delivers the best method that I know for formally specifying parallel, \
distributed systems. \[OpenCurlyDoubleQuote]Formal,\[CloseCurlyDoubleQuote] \
here, means \[OpenCurlyDoubleQuote]machine-checkable.\[CloseCurlyDoubleQuote] \
I borrow ideas and notation from that book for this document. Although this \
document is not a fully machine-checkable spec, it is a step in that \
direction, and there are a few formal checks and illustrations\
\>", "Text",
 CellChangeTimes->{{3.8210906596757183`*^9, 3.821090708638915*^9}, {
  3.821093621493168*^9, 3.821093622956115*^9}, {3.82110540919361*^9, 
  3.821105413412169*^9}, {3.821137893988798*^9, 3.821137899283306*^9}, {
  3.821196220059237*^9, 3.821196334937409*^9}, {3.8211964175941467`*^9, 
  3.821196449649963*^9}, {3.821197229773364*^9, 3.821197287755596*^9}, {
  3.821197421634499*^9, 3.821197455563449*^9}, {3.821229848482629*^9, 
  3.8212299018958817`*^9}, {3.821274574362402*^9, 3.821274578920863*^9}, {
  3.8213600892906427`*^9, 3.821360095716652*^9}, {3.821387720588849*^9, 
  3.8213877616119537`*^9}, {3.821533839757882*^9, 3.8215338518094397`*^9}, {
  3.821533914447146*^9, 3.821534030454763*^9}, {3.8215341194462643`*^9, 
  3.82153413153436*^9}},ExpressionUUID->"77676f03-3ed2-4968-a209-\
b0d33844c5ff"],

Cell["\<\
As an aside, the book is worth reading even if you don't care about \
\"specifying\" or about \"systems.\" It is the best technical book, of \
hundreds, I have ever read.\
\>", "Text",
 CellChangeTimes->{{3.8210906596757183`*^9, 3.821090708638915*^9}, {
  3.821093621493168*^9, 3.821093622956115*^9}, {3.82110540919361*^9, 
  3.821105413412169*^9}, {3.821137893988798*^9, 3.821137899283306*^9}, {
  3.821196220059237*^9, 3.821196334937409*^9}, {3.8211964175941467`*^9, 
  3.821196449649963*^9}, {3.821197229773364*^9, 3.821197287755596*^9}, {
  3.821197421634499*^9, 3.821197455563449*^9}, {3.821229848482629*^9, 
  3.8212299018958817`*^9}, {3.821274574362402*^9, 3.821274578920863*^9}, {
  3.8213600892906427`*^9, 3.821360095716652*^9}, {3.821387720588849*^9, 
  3.8213877616119537`*^9}, {3.821533839757882*^9, 3.8215338518094397`*^9}, {
  3.821533914447146*^9, 3.8215339780118313`*^9}, {3.8215340352049828`*^9, 
  3.8215341066759653`*^9}},ExpressionUUID->"80af6483-a3b1-477a-b0fb-\
89d2023ac1d4"],

Cell[TextData[{
 "Lamport\[CloseCurlyQuote]s way of specifying a state is as ",
 StyleBox["an association of values to variables",
  FontSlant->"Italic"],
 " (he uses the word \[OpenCurlyDoubleQuote]assignment,\
\[CloseCurlyDoubleQuote] which we avoid because of its irrelevant connotation \
of moving data). This idea is so important as to merit a slogan:"
}], "Text",
 CellChangeTimes->{{3.8210906596757183`*^9, 3.821090708638915*^9}, {
  3.821093621493168*^9, 3.821093622956115*^9}, {3.82110540919361*^9, 
  3.821105413412169*^9}, {3.821137893988798*^9, 3.821137899283306*^9}, {
  3.821196220059237*^9, 3.82119623248916*^9}, {3.8211972902159452`*^9, 
  3.8211972923842497`*^9}, {3.821197365382145*^9, 3.821197379169725*^9}, {
  3.821197467975597*^9, 3.821197499760745*^9}, {3.821197708727201*^9, 
  3.821197770415656*^9}, {3.821215372583211*^9, 3.821215375554019*^9}, {
  3.821263793167255*^9, 3.8212638064625263`*^9}, {3.821269097675539*^9, 
  3.821269098365265*^9}, {3.8212745974601927`*^9, 3.821274601076221*^9}, {
  3.821387789848497*^9, 
  3.8213877924254093`*^9}},ExpressionUUID->"00e85d01-c12a-45d4-af76-\
32b1bebd6b76"],

Cell[TextData[{
 "A ",
 StyleBox["state",
  FontSlant->"Italic"],
 " is an association of values to variables."
}], "Text",
 CellChangeTimes->{{3.821090790652215*^9, 3.821090800503334*^9}, {
  3.821192564983964*^9, 3.82119256767733*^9}, {3.821197507680716*^9, 
  3.821197514915409*^9}},
 FontWeight->"Bold",
 Background->RGBColor[
  1, 1, 0],ExpressionUUID->"1703f780-1c1b-4e35-b241-1a10c7ddad5b"],

Cell[TextData[{
 "In our case, we know the space of values: it\[CloseCurlyQuote]s the \
Booleans, or, equivalently, the numbers ",
 Cell[BoxData[
  FormBox[
   RowBox[{"B", "=", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}]}], TraditionalForm]],ExpressionUUID->
  "7014c087-ec9c-4fbc-94d9-45a70cef017b"],
 ". A state of the bank, then, is an association of 1 or 0 to every pertinent \
variable. What are the pertinent variables? "
}], "Text",
 CellChangeTimes->{{3.821091669806733*^9, 3.82109174431868*^9}, {
   3.82109179175797*^9, 3.821091840123341*^9}, {3.82109187851394*^9, 
   3.82109188271031*^9}, 3.821091950509555*^9, {3.821092558041995*^9, 
   3.8210925602317657`*^9}, {3.821093639938137*^9, 3.82109370601859*^9}, {
   3.821093778683302*^9, 3.821093795628512*^9}, {3.8211006958131437`*^9, 
   3.8211009593889093`*^9}, {3.821102333705764*^9, 3.821102336749297*^9}, 
   3.821102759021864*^9, {3.8211370403839493`*^9, 3.8211370505510283`*^9}, {
   3.821137909048564*^9, 3.8211379141652107`*^9}, {3.82119754696987*^9, 
   3.82119754714701*^9}, {3.821197798345683*^9, 3.821197799883451*^9}, {
   3.82119792398217*^9, 3.821197940277184*^9}, {3.8213878109560833`*^9, 
   3.821387812465899*^9}},ExpressionUUID->"93fc3bf3-cd02-49ec-89cf-\
937beefd14ff"],

Cell[TextData[{
 "The bank is divided into 5 ",
 StyleBox["tensors",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
    "MMB", ",", " ", "RL", ",", " ", "GL", ",", " ", "GGL", ",", " ", 
     "RSP16"}], "}"}], TraditionalForm]],ExpressionUUID->
  "f6c5edfa-879c-43ee-8ab0-35ae78add5fa"],
 ". The first tensor, MMB, has three ",
 StyleBox["indices",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["v", "MMB"], ",", 
    SubscriptBox["p", "MMB"], ",", 
    SubscriptBox["s", "MMB"]}], TraditionalForm]],ExpressionUUID->
  "0c505779-efd3-4d90-a59d-c4c63118da1a"],
 ", each drawn from a respective ",
 StyleBox["index set",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " of non-negative integers:"
}], "Text",
 CellChangeTimes->{{3.821102770250326*^9, 3.82110292207962*^9}, 
   3.8211144863967648`*^9, {3.821137919347591*^9, 3.821137920587882*^9}, {
   3.8215331074615183`*^9, 3.821533114097921*^9}, {3.821539697065536*^9, 
   3.821539719750189*^9}},ExpressionUUID->"e70576e6-606e-49c9-89b7-\
aca84713b796"],

Cell[BoxData[
 FormBox[GridBox[{
    {
     SubscriptBox["v", "MMB"], "\[Element]", "V", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1", ",", "2", ",", "\[Ellipsis]", ",", "23"}], 
      "}"}]},
    {
     SubscriptBox["p", "MMB"], "\[Element]", "P", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1", ",", "2", ",", "\[Ellipsis]", ",", "2047"}],
       "}"}]},
    {
     SubscriptBox["s", "MMB"], "\[Element]", "S", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1", ",", "2", ",", "\[Ellipsis]", ",", "15"}], 
      "}"}]}
   }], TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.8211010368703213`*^9, 3.8211014642576027`*^9}, 
   3.821102940899452*^9, {3.821144220886038*^9, 3.821144239878028*^9}, {
   3.821533115081263*^9, 
   3.821533116177341*^9}},ExpressionUUID->"837d3e80-c010-4ac6-b937-\
dc3668f26bfd"],

Cell[TextData[{
 "The indices of MMB always appear in that order, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["v", "MMB"], ",", 
    SubscriptBox["p", "MMB"], ",", 
    SubscriptBox["s", "MMB"]}], TraditionalForm]],ExpressionUUID->
  "8ba7faa2-ab59-49a4-a6e2-a392ce934f89"],
 ". The order is easy to remember because ",
 Cell[BoxData[
  FormBox[
   RowBox[{"v", ",", "p", ",", "s"}], TraditionalForm]],ExpressionUUID->
  "dabdc844-abee-48c6-8079-d0b5954f9274"],
 " sounds like \[OpenCurlyDoubleQuote]GPS.\[CloseCurlyDoubleQuote] Both ",
 Cell[BoxData[
  FormBox[
   RowBox[{"v", ",", "p", ",", "s"}], TraditionalForm]],ExpressionUUID->
  "04476b75-8d3f-42d1-8395-af5df2138b8f"],
 " and \[OpenCurlyDoubleQuote]GPS\[CloseCurlyDoubleQuote] are ways of \
specifying locations.  A triple ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["v", "MMB"], ",", 
    SubscriptBox["p", "MMB"], ",", 
    SubscriptBox["s", "MMB"]}], TraditionalForm]],ExpressionUUID->
  "e06a9c05-4d31-4c46-b4f3-eb7438469d20"],
 " specifies the location of a specific bit in MMB. The orders of indices of \
the other tensors are analogous to make the orders of indices easier to \
remember for all the tensors."
}], "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQPa/hcpt6xRtHgdslHSC6eE/IRxDN9Hg7owaQrsr1
6gfRvMuZZoFosdL+7SA6aELwLhBtIBxyAETz5/UdBtGnPa3itYH0zvczk0B0
iWr7Bx0grVAT9QVE/97rqqULpJfuuQume6791rcC0nzrWrxA9DyToHBbIH2C
1SUCRH9RvM1kB6RDJtxkBtErhcsUooH0N6eTSiBa+833b1lAehnDuZ8g+pC3
xqEGIK2m8vMYiPZLWq47DUhP+s5pAKIDVq39/g9It+3I+gGizSIaG/8DaaWG
iWA6bPuNVhAt2GDQAaJPWRT+ZKh84/jOtOEPiAYA6bGZQw==
  "],ExpressionUUID->"0aeb862c-f00b-4991-81bf-3b57709a01b6"],

Cell[TextData[{
 "Each indexed expression of the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{"MMB", "[", 
    RowBox[{
     SubscriptBox["v", "MMB"], ",", 
     SubscriptBox["p", "MMB"], ",", 
     SubscriptBox["s", "MMB"]}], "]"}], TraditionalForm]],ExpressionUUID->
  "61eebb99-164c-4f4e-a7ad-db66d668c18d"],
 " is a distinct variable. For instance, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"MMB", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["v", "MMB"], "=", "3"}], ",", 
     RowBox[{
      SubscriptBox["p", "MMB"], "=", "42"}], ",", 
     RowBox[{
      SubscriptBox["s", "MMB"], "=", "6"}]}], "]"}], TraditionalForm]],
  ExpressionUUID->"e5ae7fdb-efe9-4582-a852-5675e56e8ec3"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"MMB", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["v", "MMB"], "=", "14"}], ",", 
     RowBox[{
      SubscriptBox["p", "MMB"], "=", "999"}], ",", 
     RowBox[{
      SubscriptBox["s", "MMB"], "=", "2"}]}], "]"}], TraditionalForm]],
  ExpressionUUID->"f0e937a6-8600-4482-a8d5-c5273da875e6"],
 " are distinct variables because each can associate to a Boolean value \
independently. To specify one, entire state of the MMB tensor, we need ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
     "\[LeftDoubleBracketingBar]", "V", "\[RightDoubleBracketingBar]"}], 
     "\[Times]", 
     RowBox[{
     "\[LeftDoubleBracketingBar]", "P", "\[RightDoubleBracketingBar]"}], 
     "\[Times]", 
     RowBox[{
     "\[LeftDoubleBracketingBar]", "S", "\[RightDoubleBracketingBar]"}]}], 
    "=", 
    RowBox[{
     RowBox[{"24", "\[Times]", "2048", "\[Times]", "16"}], "=", 
     FormBox["786432",
      TraditionalForm]}]}], TraditionalForm]],ExpressionUUID->
  "94d80dbc-7330-458b-ba3d-5acf5d6e86d8"],
 " Boolean-valued variables. There are ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", "786432"], TraditionalForm]],ExpressionUUID->
  "35fdef6c-4ff4-410f-826b-c95a4093f7ff"],
 " distinct states of MMB \[LongDash] associations of Boolean values to the ",
 Cell[BoxData[
  FormBox["786432", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "9da44295-b342-4e64-b829-516d3f263602"],
 " variables. "
}], "Text",
 CellChangeTimes->{{3.821103206301952*^9, 3.821103400359256*^9}, {
   3.8211034627080097`*^9, 3.821103515473962*^9}, {3.821105463895912*^9, 
   3.821105466872753*^9}, {3.82110556566257*^9, 3.821105567816434*^9}, {
   3.821130336623623*^9, 3.821130339544434*^9}, {3.821132003806505*^9, 
   3.8211320402245398`*^9}, {3.821137957720504*^9, 3.821137957890604*^9}, {
   3.8211400760620003`*^9, 3.821140079099839*^9}, {3.8211438346492558`*^9, 
   3.821143848727118*^9}, {3.821178396641741*^9, 3.821178499477016*^9}, {
   3.821188731679696*^9, 3.821188765600183*^9}, 3.821189628374926*^9, {
   3.821197603087832*^9, 3.821197685227491*^9}, {3.821197836751769*^9, 
   3.821197863841353*^9}, {3.821197968350067*^9, 3.821197976543077*^9}, {
   3.821216069839925*^9, 3.82121607198596*^9}, {3.821263850146351*^9, 
   3.821263852181098*^9}, {3.821269172577042*^9, 3.821269172995803*^9}, {
   3.82126925608309*^9, 3.821269256617147*^9}, {3.821269288340892*^9, 
   3.821269390192998*^9}, {3.821274701429727*^9, 3.82127474860812*^9}, {
   3.821533138042555*^9, 3.821533167537662*^9}, {3.8215342870470953`*^9, 
   3.821534399613966*^9}, 3.8215373281119947`*^9, {3.821537391565572*^9, 
   3.821537448700244*^9}, {3.821539621959804*^9, 3.82153967842901*^9}, {
   3.821539755785693*^9, 
   3.821539775935233*^9}},ExpressionUUID->"c0183398-62e0-4b6a-ae2e-\
ae9154a252d2"],

Cell[TextData[{
 "The set of variables for MMB is equivalent to the Cartesian product, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"V", "\[Cross]", "P", "\[Cross]", "S"}], TraditionalForm]],
  ExpressionUUID->"6a169d21-8890-4975-8f0f-4bafc55f5c50"],
 ", of its",
 " index sets",
 ". But there are 4 more tensors. Writing them all out in a 5-tuple, the ",
 StyleBox["state tuple",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ","
}], "Text",
 CellChangeTimes->{{3.821537454938517*^9, 3.821537529659317*^9}, {
  3.821538236136855*^9, 3.8215382414101*^9}, {3.82153978479565*^9, 
  3.82153981818906*^9}},ExpressionUUID->"491a10c6-0b58-4c30-be33-\
4d2cc4e6f1e6"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[LeftGuillemet]MMB", "[", 
    RowBox[{
     SubscriptBox["v", "MMB"], ",", 
     SubscriptBox["p", "MMB"], ",", 
     SubscriptBox["s", "MMB"]}], "]"}], ",", 
   RowBox[{"RL", "[", 
    RowBox[{
     SubscriptBox["p", "RL"], ",", 
     SubscriptBox["s", "RL"]}], "]"}], ",", 
   RowBox[{"GL", "[", 
    SubscriptBox["p", "GL"], "]"}], ",", 
   RowBox[{"GGL", "[", 
    RowBox[{
     SubscriptBox["p", "GGL"], ",", 
     SubscriptBox["g", "GGL"]}], "\[VeryThinSpace]", "]"}], ",", 
   RowBox[{
    RowBox[{"RSP16", "[", 
     RowBox[{
      SubscriptBox["r", "RSP16"], ",", 
      SubscriptBox["s", "RSP16"]}], "]"}], "\[RightGuillemet]"}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.821094922745513*^9, 3.821094946823571*^9}, {
  3.8210952600070543`*^9, 3.821095359644395*^9}, {3.821095414581355*^9, 
  3.821095456833084*^9}, {3.8210999492004213`*^9, 3.821099997551385*^9}, {
  3.8212300756439877`*^9, 3.8212300987161293`*^9}, {3.821533172640399*^9, 
  3.821533175062772*^9}, {3.8215355644109287`*^9, 3.8215355829544983`*^9}},
 CellTags->
  "state tuple",ExpressionUUID->"bb8f1e4a-56eb-4907-a9ea-86a14476ff95"],

Cell[TextData[{
 "we see 10 indices grouped by their tensor identifiers. The ",
 "index sets",
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"V", ",", "P", ",", "S", ",", "G", ",", "R"}], TraditionalForm]],
  ExpressionUUID->"91611107-feea-42fe-b3a0-f7c158478435"],
 ", all together, are"
}], "Text",
 CellChangeTimes->{{3.821095464778041*^9, 3.821095507474738*^9}, {
  3.821096342932522*^9, 3.821096349036371*^9}, {3.821100014902034*^9, 
  3.821100073350711*^9}, {3.821100111887196*^9, 3.8211001289582043`*^9}, {
  3.82110181567575*^9, 3.8211018820726624`*^9}, {3.821101914177678*^9, 
  3.8211019158815613`*^9}, {3.821101967041397*^9, 3.821102017778968*^9}, {
  3.821102092942646*^9, 3.821102135968019*^9}, {3.821102438273848*^9, 
  3.821102501435112*^9}, {3.8211035247104816`*^9, 3.821103670108961*^9}, {
  3.821105478074051*^9, 3.8211054912141533`*^9}, {3.821143855860899*^9, 
  3.821143868189598*^9}, {3.821188800734288*^9, 3.8211888031432343`*^9}, {
  3.8211978852143*^9, 3.821197885349231*^9}, {3.821263874621251*^9, 
  3.821263899155999*^9}},ExpressionUUID->"ade60b78-d939-4db8-8389-\
d022dcbea6ac"],

Cell[BoxData[
 FormBox[GridBox[{
    {
     SubscriptBox["v", "MMB"], "\[Element]", "V", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1", ",", "2", ",", "\[Ellipsis]", ",", "23"}], 
      "}"}]},
    {
     SubscriptBox["p", "MMB"], "\[Element]", "P", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1", ",", "2", ",", "\[Ellipsis]", ",", "2047"}],
       "}"}]},
    {
     SubscriptBox["s", "MMB"], "\[Element]", "S", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1", ",", "2", ",", "\[Ellipsis]", ",", "15"}], 
      "}"}]},
    {
     SubscriptBox["p", "RL"], "\[Element]", "P", " ", " "},
    {
     SubscriptBox["s", "RL"], "\[Element]", "S", " ", " "},
    {
     SubscriptBox["p", "GL"], "\[Element]", "P", " ", " "},
    {
     SubscriptBox["p", "GGL"], "\[Element]", "P", " ", " "},
    {
     SubscriptBox["g", "GGL"], "\[Element]", "G", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1", ",", "2", ",", "3"}], "}"}]},
    {
     SubscriptBox["r", "RSP16"], "\[Element]", "R", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1", ",", "2", ",", "\[Ellipsis]", ",", "127"}], 
      "}"}]},
    {
     SubscriptBox["s", "RSP16"], "\[Element]", "S", " ", " "}
   }], TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.8211010368703213`*^9, 3.8211014642576027`*^9}, {
   3.821144249232018*^9, 3.821144278669557*^9}, {3.821533176853324*^9, 
   3.8215331778855047`*^9}, 3.821538280603366*^9, {3.821538312793213*^9, 
   3.821538371077537*^9}, {3.821539263410074*^9, 
   3.821539292552202*^9}},ExpressionUUID->"9b6d23d4-bed9-414a-8b50-\
e888ba32537e"],

Cell["\<\
The set of variables for the entire state is the union of the 5 sets of \
variables. Each set of variables is equivalent to the Cartesian product of \
its corresponding index sets. There are\
\>", "Text",
 CellChangeTimes->{{3.8215356804043818`*^9, 3.82153568826534*^9}, {
  3.8215382557034616`*^9, 3.821538269386601*^9}, {3.8215384257562037`*^9, 
  3.8215384905063667`*^9}, {3.8215391526484127`*^9, 3.8215391667529097`*^9}, {
  3.821539386520288*^9, 
  3.8215393881844463`*^9}},ExpressionUUID->"a89ba421-0df2-46ce-a0a9-\
db28beacd35d"],

Cell[BoxData[
 FormBox[
  RowBox[{GridBox[{
     {
      RowBox[{
       RowBox[{
       "\[LeftDoubleBracketingBar]", "V", "\[RightDoubleBracketingBar]"}], 
       "\[Times]", 
       RowBox[{
       "\[LeftDoubleBracketingBar]", "P", "\[RightDoubleBracketingBar]"}], 
       "\[Times]", 
       RowBox[{
       "\[LeftDoubleBracketingBar]", "S", "\[RightDoubleBracketingBar]"}]}], 
      "=", "786432", 
      RowBox[{
      "variables", " ", "necessary", " ", "to", " ", "specify", " ", "one", 
       " ", "state", " ", "of", " ", "MMB"}]},
     {
      RowBox[{
       RowBox[{
       "\[LeftDoubleBracketingBar]", "P", "\[RightDoubleBracketingBar]"}], 
       "\[Times]", 
       RowBox[{
       "\[LeftDoubleBracketingBar]", "S", "\[RightDoubleBracketingBar]"}]}], 
      "=", "32768", 
      RowBox[{
      "variables", " ", "necessary", " ", "to", " ", "specify", " ", "one", 
       " ", "state", " ", "of", " ", "RL"}]},
     {
      RowBox[{
      "\[LeftDoubleBracketingBar]", "P", "\[RightDoubleBracketingBar]"}], "=",
       "2048", 
      RowBox[{
      "variables", " ", "necessary", " ", "to", " ", "specify", " ", "one", 
       " ", "state", " ", "of", " ", "GL"}]},
     {
      RowBox[{
       RowBox[{
       "\[LeftDoubleBracketingBar]", "P", "\[RightDoubleBracketingBar]"}], 
       "\[Times]", 
       RowBox[{
       "\[LeftDoubleBracketingBar]", "G", "\[RightDoubleBracketingBar]"}]}], 
      "=", "8192", 
      RowBox[{
      "variables", " ", "necessary", " ", "to", " ", "specify", " ", "one", 
       " ", "state", " ", "of", " ", "GGL"}]},
     {
      RowBox[{
       RowBox[{
       "\[LeftDoubleBracketingBar]", "R", "\[RightDoubleBracketingBar]"}], 
       "\[Times]", 
       RowBox[{
       "\[LeftDoubleBracketingBar]", "S", "\[RightDoubleBracketingBar]"}]}], 
      "=", "2048", 
      RowBox[{
      "variables", " ", "necessary", " ", "to", " ", "specify", " ", "one", 
       " ", "state", " ", "of", " ", "RSP16"}]}
    }], " "}], TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.821104632381617*^9, 3.821104922820135*^9}, {
   3.8211050759304647`*^9, 3.821105177856868*^9}, {3.821115264948195*^9, 
   3.821115302279244*^9}, {3.821132242790284*^9, 3.8211322735747747`*^9}, 
   3.821533179574967*^9, {3.8215344329279833`*^9, 3.821534471273892*^9}},
 CellTags->
  "union of \
cartesians",ExpressionUUID->"3255982c-98f4-418a-bda5-408e3d3f2626"],

Cell[TextData[{
 "for a total of ",
 Cell[BoxData[
  FormBox["831488", TraditionalForm]],ExpressionUUID->
  "bfc40248-6a18-473c-ad22-a90e552fb6da"],
 " variables, one variable for the state of each bit in each tensor in the \
bank. There are ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", "831488"], TraditionalForm]],ExpressionUUID->
  "de09ad7e-f8a3-4238-a0d0-3f8e95ea8b5f"],
 " distinct states of the bank, each state an independent association of 1 or \
0 to each variable."
}], "Text",
 CellChangeTimes->{{3.8211041100004377`*^9, 3.8211041502867327`*^9}, 
   3.821105260164065*^9, {3.821105920738721*^9, 3.8211059645409117`*^9}, {
   3.8211153334435673`*^9, 3.821115339358083*^9}, {3.821136630696265*^9, 
   3.82113663285183*^9}, {3.82113984868217*^9, 3.821139850481881*^9}, 
   3.8211401431659937`*^9, {3.821197910172123*^9, 3.821197911937903*^9}, {
   3.821213327860454*^9, 3.821213328843916*^9}, {3.8212694997257833`*^9, 
   3.821269502606917*^9}, {3.821534480798377*^9, 3.821534485603986*^9}, {
   3.821538509304961*^9, 3.821538510698173*^9}, {3.821539404222911*^9, 
   3.82153940442478*^9}},ExpressionUUID->"3b877db3-3adf-4efb-b7d8-\
2841168daff2"],

Cell[TextData[{
 "It might be tempting to multiply the sizes of all 10 index sets because the \
10 indices can be chosen, independently, in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"3", "\[Times]", 
    SuperscriptBox["2", "68"]}], TraditionalForm]],ExpressionUUID->
  "4df64ee2-f942-4eaa-80f8-20962116ab26"],
 " distinct ways, but that does not mean we need ",
 Cell[BoxData[
  FormBox[
   RowBox[{"3", "\[Times]", 
    SuperscriptBox["2", "68"]}], TraditionalForm]],ExpressionUUID->
  "78e057ef-b4db-4a14-8a70-33a03494fe2a"],
 " variables. The set of variables for the whole bank is the ",
 StyleBox["union",
  FontSlant->"Italic"],
 " of the sets of variables for its 5 constituent tensors, not the Cartesian \
product of the sets of variables for its 5 constituent tensors."
}], "Text",
 CellChangeTimes->{{3.821105609628599*^9, 3.821105811030264*^9}, {
   3.8211058789877243`*^9, 3.821105912629426*^9}, {3.821105994647914*^9, 
   3.8211060169194508`*^9}, {3.82111347005875*^9, 3.821113563017158*^9}, {
   3.821113605030504*^9, 3.82111391706396*^9}, {3.821113976391054*^9, 
   3.821114138241341*^9}, {3.821114169140388*^9, 3.821114335949088*^9}, {
   3.821114426853148*^9, 3.821114496046288*^9}, {3.82111482013756*^9, 
   3.8211148871255627`*^9}, {3.821115048823778*^9, 3.821115075926306*^9}, {
   3.821115189141667*^9, 3.8211152422631493`*^9}, {3.8211153923318853`*^9, 
   3.821115503698318*^9}, {3.821115626843596*^9, 3.8211156329810877`*^9}, {
   3.821115670972013*^9, 3.8211157965878487`*^9}, {3.821115840905219*^9, 
   3.8211160585388727`*^9}, {3.821116091355096*^9, 3.8211161374680357`*^9}, {
   3.821116169882272*^9, 3.821116171892836*^9}, {3.8211163235476227`*^9, 
   3.821116398111466*^9}, 3.821116590168221*^9, {3.8211166560761957`*^9, 
   3.821116808763088*^9}, {3.821116858861019*^9, 3.821116897506217*^9}, {
   3.821116933268577*^9, 3.82111700522861*^9}, {3.821117946733675*^9, 
   3.821118010814394*^9}, {3.821118202866665*^9, 3.821118219865738*^9}, {
   3.821130683113793*^9, 3.821130805710841*^9}, {3.821131860058756*^9, 
   3.82113187978612*^9}, {3.8211324618876743`*^9, 3.821132560895749*^9}, {
   3.821133119311524*^9, 3.821133139588314*^9}, {3.821138037741867*^9, 
   3.821138042606938*^9}, {3.8211381713450727`*^9, 3.821138178918714*^9}, {
   3.8211389223772097`*^9, 3.821138923347*^9}, {3.821178539918845*^9, 
   3.821178608968622*^9}, {3.821178743431899*^9, 3.821178749524124*^9}, 
   3.821188830408477*^9, {3.8211899927963877`*^9, 3.8211900087223053`*^9}, {
   3.821198013413718*^9, 3.821198050295518*^9}, {3.821216116235231*^9, 
   3.821216133985978*^9}, {3.821268748838924*^9, 3.821268820541503*^9}, {
   3.821269520357275*^9, 3.821269525987893*^9}, {3.8212695669288807`*^9, 
   3.8212695912060013`*^9}, {3.821387977610263*^9, 3.8213879854401007`*^9}, {
   3.821388173067642*^9, 3.821388173297265*^9}, {3.821391209632061*^9, 
   3.821391241234756*^9}, {3.821533181817244*^9, 3.821533186212861*^9}, {
   3.82153457524295*^9, 3.821534588827737*^9}, {3.821539192092268*^9, 
   3.821539239912241*^9}, {3.821539325863037*^9, 3.821539362515543*^9}, {
   3.821539423075673*^9, 3.821539445873692*^9}, {3.8215398809689713`*^9, 
   3.82153995628024*^9}, {3.8215400301421213`*^9, 3.8215400799040127`*^9}, {
   3.821540143549938*^9, 3.8215401612221413`*^9}, {3.821540192527812*^9, 
   3.821540334279173*^9}},ExpressionUUID->"1e3d70ac-3201-4e9f-849f-\
0ea6ddaf7575"],

Cell[TextData[{
 "To make the point more starkly, Imagine a smaller MMB that only needs 3 \
variables, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["MMB", "1"], ",", 
     SubscriptBox["MMB", "2"], ",", 
     SubscriptBox["MMB", "3"]}], "}"}], TraditionalForm]],ExpressionUUID->
  "d3ed63c7-90fc-4bdf-a4ee-6f1133233553"],
 ", to specify its state and a smaller RL that only needs 2 variables, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["RL", "1"], ",", 
     SubscriptBox["RL", "2"]}]}], TraditionalForm]],ExpressionUUID->
  "28b499c5-590f-4204-bef7-99fe907231a0"],
 "}, to specify its state. There are ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["2", "3"], "=", "8"}], TraditionalForm]],ExpressionUUID->
  "67a13820-cfe0-47a6-9e3f-b121bc0647c7"],
 " possible states of this smaller MMB and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["2", "2"], "=", "4"}], TraditionalForm]],ExpressionUUID->
  "2afa2a80-f991-4ad7-98de-d45a57e8a06b"],
 " possible states of this smaller RL. How many states are there of this \
miniature machine overall? For each state of the smaller MMB, there are 4 \
states of the smaller RL. Thus there are ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["2", "3"], "\[Times]", 
     SuperscriptBox["2", "2"]}], "=", 
    SuperscriptBox["2", "5"]}], TraditionalForm]],ExpressionUUID->
  "77fb9daf-d36b-42b1-b582-ccd8be0d3bd3"],
 " states overall, needing just 5 variables, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["MMB", "1"], ",", 
      SubscriptBox["MMB", "2"], ",", 
      SubscriptBox["MMB", "3"]}], "}"}], "\[Union]", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["RL", "1"], ",", 
      SubscriptBox["RL", "2"]}], "}"}]}], TraditionalForm]],ExpressionUUID->
  "79be7269-b90f-47df-8181-009c903bb8a0"],
 ". Enumerating all possible combinations of the index sets ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], TraditionalForm]],
  ExpressionUUID->"25c065e8-dcf2-4421-919c-8fec325bd97f"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], TraditionalForm]],ExpressionUUID->
  "bf1955f0-b7e3-4f67-b479-2600d572f970"],
 " yields the Cartesian product of the variables, namely ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["MMB", "1"], ",", 
      SubscriptBox["MMB", "2"], ",", 
      SubscriptBox["MMB", "3"]}], "}"}], "\[Cross]", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["RL", "1"], ",", 
      SubscriptBox["RL", "2"]}], "}"}]}], TraditionalForm]],ExpressionUUID->
  "0d7659ec-6988-405c-80c3-6a410ef7c300"],
 ", the wrong kind of structure."
}], "Text",
 CellChangeTimes->{{3.821105609628599*^9, 3.821105811030264*^9}, {
   3.8211058789877243`*^9, 3.821105912629426*^9}, {3.821105994647914*^9, 
   3.8211060169194508`*^9}, {3.82111347005875*^9, 3.821113563017158*^9}, {
   3.821113605030504*^9, 3.82111391706396*^9}, {3.821113976391054*^9, 
   3.821114138241341*^9}, {3.821114169140388*^9, 3.821114335949088*^9}, {
   3.821114426853148*^9, 3.821114496046288*^9}, {3.82111482013756*^9, 
   3.8211148871255627`*^9}, {3.821115048823778*^9, 3.821115075926306*^9}, {
   3.821115189141667*^9, 3.8211152422631493`*^9}, {3.8211153923318853`*^9, 
   3.821115503698318*^9}, {3.821115626843596*^9, 3.8211156329810877`*^9}, {
   3.821115670972013*^9, 3.8211157965878487`*^9}, {3.821115840905219*^9, 
   3.8211160585388727`*^9}, {3.821116091355096*^9, 3.8211161374680357`*^9}, {
   3.821116169882272*^9, 3.821116171892836*^9}, {3.8211163235476227`*^9, 
   3.821116398111466*^9}, 3.821116590168221*^9, {3.8211166560761957`*^9, 
   3.821116808763088*^9}, {3.821116858861019*^9, 3.821116897506217*^9}, {
   3.821116933268577*^9, 3.82111700522861*^9}, {3.821117946733675*^9, 
   3.821118010814394*^9}, {3.821118202866665*^9, 3.821118219865738*^9}, {
   3.821130683113793*^9, 3.8211306966278133`*^9}, {3.8211308199003963`*^9, 
   3.821130826826104*^9}, {3.8211309420716143`*^9, 3.821131020927668*^9}, {
   3.821131237999977*^9, 3.82113136213706*^9}, {3.821131668365204*^9, 
   3.821131691942059*^9}, {3.821132371728791*^9, 3.821132372631822*^9}, {
   3.821138954070326*^9, 3.821138961611817*^9}, {3.82114023312671*^9, 
   3.821140238460792*^9}, {3.821178624923473*^9, 3.821178709885393*^9}, {
   3.821178859162367*^9, 3.821178904714671*^9}, {3.821179386126307*^9, 
   3.821179409855975*^9}, {3.821188869511232*^9, 3.821188870418955*^9}, {
   3.821188917769413*^9, 3.8211889538435*^9}, {3.821189708497998*^9, 
   3.821189714620372*^9}, {3.821190643953302*^9, 3.821190664464213*^9}, {
   3.821216174005424*^9, 3.8212161897962713`*^9}, {3.821230229934222*^9, 
   3.821230239470462*^9}, {3.821268879083078*^9, 3.821268888867559*^9}, {
   3.821269666506631*^9, 3.8212697415273314`*^9}, {3.821269793096724*^9, 
   3.821269794181595*^9}, {3.821274932243287*^9, 3.8212749737925453`*^9}, {
   3.821391247534254*^9, 3.821391259523383*^9}, {3.8215331886248827`*^9, 
   3.821533197920085*^9}, {3.821534640006693*^9, 3.82153470784546*^9}, {
   3.821536018335861*^9, 3.82153605199166*^9}, {3.821536556342627*^9, 
   3.821536623443762*^9}, {3.821536756366981*^9, 3.821536756415388*^9}, {
   3.821539465870064*^9, 3.8215394698536673`*^9}, {3.82153950062392*^9, 
   3.821539504861309*^9}},ExpressionUUID->"d37d2db3-32f8-4d9d-bb96-\
3c1addb9841f"],

Cell[CellGroupData[{

Cell[TextData[{
 "3.1 ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Var", 
    RowBox[{"(", "k", ")"}]}], TraditionalForm]],ExpressionUUID->
  "0628fece-41a3-4e58-bc82-860c57cb9e14"],
 ": Serializing the Variables"
}], "Subsection",
 CellChangeTimes->{{3.821179474851326*^9, 3.821179484028317*^9}, {
  3.821451387489594*^9, 3.821451394145192*^9}},
 CellTags->"c:8",ExpressionUUID->"481f16be-c72a-479e-8e9a-c63aa38bc6ee"],

Cell[TextData[{
 "Put the variables in a canonical, serial order, say left-to-right across \
the sate tuple, then row-major order (right-most index increasing fastest) \
for each tensor. Imagine a linear, 1\[NoBreak]-\[NoBreak]based index, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "\[Element]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "\[Ellipsis]", ",", "831488"}], "}"}]}], 
   TraditionalForm]],ExpressionUUID->"0426760c-a0c7-42fa-9486-1b14e936edf6"],
 ", that uniquely identifies each of the ",
 Cell[BoxData[
  FormBox["831488", TraditionalForm]],ExpressionUUID->
  "1e5fee39-2c29-42f3-9510-d8f7e913522e"],
 " variables. The first ",
 Cell[BoxData[
  FormBox["786432", TraditionalForm]],ExpressionUUID->
  "ad7fd889-a398-4329-af73-2e371f60a0c9"],
 " values of ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],ExpressionUUID->
  "8cd9a2d0-44cd-4369-8c84-5b3dc2a510b3"],
 " specify variables in MMB in row-major order, the next ",
 Cell[BoxData[
  FormBox["32768", TraditionalForm]],ExpressionUUID->
  "e7fed1e4-764d-4a0c-82bb-d224c088bd1a"],
 " values of ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],ExpressionUUID->
  "431d24a3-61fc-4538-9047-1588fc4bfe14"],
 " specify variables in RL in row-major order, and so on. Letting ",
 Cell[BoxData[
  FormBox["//", TraditionalForm]],ExpressionUUID->
  "72f23179-bf25-418c-9175-2b85c3e4bb42"],
 " denote integer quotient and ",
 Cell[BoxData[
  FormBox["%", TraditionalForm]],ExpressionUUID->
  "461a424f-800c-441e-a5ca-531e9b6392cf"],
 " integer remainder, as in Python, define ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Var",
     FontSlant->"Italic"], "(", "k", ")"}], TraditionalForm]],ExpressionUUID->
  "883091ac-e25f-4a41-b4da-d45ccfb24a6e"],
 " by the piecewise formula (formally spot-checked in the Appendix of this \
document)"
}], "Text",
 CellChangeTimes->{{3.82111490409763*^9, 3.821114962667677*^9}, {
   3.821133307939776*^9, 3.821133474601128*^9}, {3.821133685067184*^9, 
   3.8211337495671*^9}, {3.82113420993506*^9, 3.821134435328855*^9}, {
   3.821134466878311*^9, 3.821134633060528*^9}, {3.82113498030954*^9, 
   3.821134983070449*^9}, {3.8211350151464157`*^9, 3.821135095006688*^9}, {
   3.82113577655765*^9, 3.82113578830306*^9}, {3.8211362405985117`*^9, 
   3.8211362424372997`*^9}, 3.821138990543335*^9, {3.8211402743931293`*^9, 
   3.821140280061965*^9}, {3.821178968364596*^9, 3.821178969283208*^9}, 
   3.821230256943348*^9, {3.821274987801996*^9, 3.82127505422204*^9}, {
   3.821275161988797*^9, 3.8212751877498713`*^9}, {3.8213515167544403`*^9, 
   3.821351536224573*^9}, {3.82135173679635*^9, 3.821351749669924*^9}, {
   3.8213566651339703`*^9, 3.821356701354004*^9}, {3.8213598057674007`*^9, 
   3.821359822282619*^9}, {3.821360042938106*^9, 3.82136005046632*^9}, 
   3.8215332005367107`*^9, {3.8215347176189947`*^9, 3.821534718836257*^9}, {
   3.821540392157095*^9, 
   3.821540426058887*^9}},ExpressionUUID->"71c39ff2-169d-4889-a2f9-\
066b09f2f075"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    StyleBox["Var",
     FontSlant->"Italic"], "(", 
    RowBox[{"k", "+", "1"}], ")"}], "=", 
   RowBox[{"\[Piecewise]", GridBox[{
      {
       RowBox[{
        RowBox[{"MMB", "[", 
         RowBox[{
          RowBox[{"k", "//", "32768"}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"k", "//", "16"}], ")"}], "%2048"}], ",", 
          RowBox[{"k", "%16"}]}], "]"}], "]"}], 
       RowBox[{"0", "\[LessEqual]", "k", "<", "786432"}]},
      {
       RowBox[{"RL", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k", "'"}], "//", "16"}], ")"}], "%2048"}], ",", 
         RowBox[{"k", "%16"}]}], "]"}], 
       RowBox[{
        RowBox[{"0", "\[LessEqual]", 
         RowBox[{"k", "'"}], "<", 
         FormBox["32768",
          TraditionalForm]}], ",", 
        RowBox[{
         RowBox[{"k", "'"}], "=", 
         RowBox[{"k", "-", "786432"}]}]}]},
      {
       RowBox[{"GL", "[", 
        RowBox[{
         RowBox[{"k", "''"}], "%2048"}], "]"}], 
       RowBox[{
        RowBox[{"0", "\[LessEqual]", 
         RowBox[{"k", "''"}], "<", "2048"}], ",", 
        RowBox[{
         RowBox[{"k", "''"}], "=", 
         RowBox[{
          RowBox[{"k", "'"}], "-", "32768"}]}]}]},
      {
       RowBox[{"GGL", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k", "'''"}], "//", "4"}], ")"}], "%2048"}], ",", 
         RowBox[{
          RowBox[{"k", "'''"}], "%4"}]}], "]"}], 
       RowBox[{
        RowBox[{"0", "\[LessEqual]", 
         RowBox[{"k", "'''"}], "<", "8192"}], ",", 
        RowBox[{
         RowBox[{"k", "'''"}], "=", 
         RowBox[{
          RowBox[{"k", "''"}], "-", "2048"}]}]}]},
      {
       RowBox[{"RSP", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k", "''''"}], "//", "16"}], ")"}], "%128"}], ",", 
         RowBox[{
          RowBox[{"k", "''''"}], "%16"}]}], "]"}], 
       RowBox[{
        RowBox[{"0", "\[LessEqual]", 
         RowBox[{"k", "''''"}], "<", "2048"}], ",", 
        RowBox[{
         RowBox[{"k", "''''"}], "=", 
         RowBox[{
          RowBox[{"k", "'''"}], "-", "8192"}]}]}]}
     }]}]}], TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.821351231646497*^9, 3.821351283704362*^9}, {
   3.8213513265215807`*^9, 3.821351388902321*^9}, {3.821351457811242*^9, 
   3.821351495929124*^9}, {3.82135153927654*^9, 3.821351589169223*^9}, {
   3.821351769196278*^9, 3.821351769196405*^9}, {3.821351809989162*^9, 
   3.8213518285724087`*^9}, {3.82135195102713*^9, 3.8213519524108353`*^9}, {
   3.82135201057257*^9, 3.821352012982958*^9}, {3.8213520574566317`*^9, 
   3.821352065965479*^9}, {3.821356298674662*^9, 3.821356661735056*^9}, {
   3.821356713204241*^9, 3.8213567812281322`*^9}, {3.8213568152343693`*^9, 
   3.821356815235096*^9}, {3.8213594328563423`*^9, 3.82135943393743*^9}, 
   3.821533202621887*^9, 3.821534733002223*^9},
 CellTags->
  "def of var k",ExpressionUUID->"0146e041-2b0f-462f-ab7b-07c12ac9be6a"],

Cell[TextData[{
 "We might write out the inverse mapping (from variables to indices) just as \
easily, but we shall not need it. The point is simply to show that a 1\
\[NoBreak]-\[NoBreak]to\[NoBreak]-\[NoBreak]1 and ",
 "\[OpenCurlyDoubleQuote]onto\[CloseCurlyDoubleQuote]",
 " correspondence exists between the numbers ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "\[Element]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "\[Ellipsis]", ",", "831488"}], "}"}]}], 
   TraditionalForm]],ExpressionUUID->"43ea3ceb-5cde-458a-aac0-ebfb324b3500"],
 " and the state variables."
}], "Text",
 CellChangeTimes->{{3.821360467124675*^9, 3.821360508939645*^9}, {
  3.821451006934786*^9, 3.8214510661227493`*^9}, {3.8215347421195097`*^9, 
  3.8215347517584047`*^9}, {3.8215347841838493`*^9, 3.821534801354788*^9}, {
  3.821540570416957*^9, 
  3.8215405957889013`*^9}},ExpressionUUID->"2e6e03e6-099c-4216-a7b7-\
dcf2ae89200a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["4 State Functions", "Section",
 CellChangeTimes->{{3.821139067884848*^9, 3.821139098921989*^9}, {
   3.821139539185371*^9, 3.821139541172716*^9}, {3.821175140689242*^9, 
   3.821175140735187*^9}, 3.821263393392569*^9},
 CellTags->"c:9",ExpressionUUID->"0d58ae6e-6667-4992-b2c7-e35d8756ab69"],

Cell[TextData[{
 "Let ",
 Cell[BoxData[
  FormBox["\[CapitalPsi]", TraditionalForm]],ExpressionUUID->
  "5d0df256-4ee2-47e8-8c9a-700928e22d03"],
 " be the set of all possible states (associations of Boolean values to all ",
 Cell[BoxData[
  FormBox["831488", TraditionalForm]],ExpressionUUID->
  "6507aa30-665d-4b6f-a31d-b6f55dfbf4e9"],
 " variables), and let ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Psi]", "i"], TraditionalForm]],ExpressionUUID->
  "f2e8e59b-f3b5-401b-ae62-f8c0582326ab"],
 " be the ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]],ExpressionUUID->
  "5140350a-82a1-437f-82c9-25608670e687"],
 "\[NoBreak]-\[NoBreak]th state in \[CapitalPsi], one of the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", "831488"], TraditionalForm]],ExpressionUUID->
  "ab10dff7-947f-4d2f-ac80-f264928d10ad"],
 " distinct states in ",
 Cell[BoxData[
  FormBox["\[CapitalPsi]", TraditionalForm]],ExpressionUUID->
  "c890822b-af96-4eb9-b96c-634952299ec7"],
 ". ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Psi]", "i"], TraditionalForm]],ExpressionUUID->
  "c1d94bd1-2153-4ba6-9d62-0ec8bee67d0b"],
 " is a vector with ",
 Cell[BoxData[
  FormBox["831488", TraditionalForm]],ExpressionUUID->
  "17fdd7cc-8c75-4bd4-ac6e-ad29882792df"],
 " Boolean-valued slots, one slot for each of the ",
 Cell[BoxData[
  FormBox["831488", TraditionalForm]],ExpressionUUID->
  "652c9df2-c1a0-46c9-87af-3b8cc1677f2b"],
 " variables. The slots are indexed by the serialization of variables \
outlined above; ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    RowBox[{"(", 
     SubscriptBox["\[Psi]", "i"], ")"}], "k"], TraditionalForm]],
  ExpressionUUID->"28ca1ba2-8f02-4bbf-ab06-4cd3b24c9f8f"],
 " means the ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],ExpressionUUID->
  "d78d5e4e-45ef-40d1-86c4-d397b4a5af98"],
 "\[NoBreak]-\[NoBreak]th slot of vector ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Psi]", "i"], TraditionalForm]],ExpressionUUID->
  "f89438c9-3681-4945-8575-bf283c5e1161"],
 "."
}], "Text",
 CellChangeTimes->{{3.821112990641913*^9, 3.821113208069319*^9}, {
   3.821113260457286*^9, 3.82111332167899*^9}, {3.821114394468589*^9, 
   3.82111439469524*^9}, {3.821114675194729*^9, 3.821114675253796*^9}, {
   3.821114750519452*^9, 3.821114757101802*^9}, {3.821139521459972*^9, 
   3.821139576356471*^9}, 3.821139696455666*^9, {3.821139744333212*^9, 
   3.821139744374893*^9}, {3.821139803827692*^9, 3.821139830261693*^9}, {
   3.821139882330064*^9, 3.82113999210213*^9}, {3.821140335359824*^9, 
   3.821140368033083*^9}, {3.821198094630992*^9, 3.821198097644108*^9}, {
   3.821198149194468*^9, 3.821198234025956*^9}, {3.821198276704377*^9, 
   3.821198310590209*^9}, {3.8211983761766768`*^9, 3.8211983939958363`*^9}, {
   3.821230326826439*^9, 3.82123032894492*^9}, {3.821273194325563*^9, 
   3.821273313041898*^9}, {3.821275215239052*^9, 3.821275219529763*^9}, {
   3.82131930955357*^9, 3.8213193123711863`*^9}, {3.82136015173643*^9, 
   3.821360153267579*^9}, {3.8213883420092087`*^9, 3.821388374904299*^9}, {
   3.821451085660205*^9, 3.8214511282612743`*^9}, {3.821486012519161*^9, 
   3.8214860417753973`*^9}, {3.821534864022134*^9, 3.821534874538459*^9}, {
   3.82154063712074*^9, 
   3.821540650545184*^9}},ExpressionUUID->"26d64340-ce67-4ade-a9f4-\
a5898d3c4857"],

Cell[TextData[{
 "Let ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "debf3019-eacd-44b2-984d-a76a73a5338e"],
 " be a ",
 StyleBox["state function",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " that transforms a state ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Psi]", "i"], TraditionalForm]],ExpressionUUID->
  "2ef7f4c1-4a88-4332-a3bf-0491cd6a8f2d"],
 " into another state ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", 
    SubscriptBox["\[Psi]", "i"], ")"}], TraditionalForm]],ExpressionUUID->
  "5d36a53b-05de-4f0f-9d5b-1b40f836e99f"],
 ", possibly into the same state ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Psi]", "i"], TraditionalForm]],ExpressionUUID->
  "df112d7e-5a60-4a3c-a8df-58be057bb30e"],
 "."
}], "Text",
 CellChangeTimes->{{3.821112990641913*^9, 3.821113208069319*^9}, {
   3.821113260457286*^9, 3.82111332167899*^9}, {3.821114394468589*^9, 
   3.82111439469524*^9}, {3.821114675194729*^9, 3.821114675253796*^9}, {
   3.821114750519452*^9, 3.821114757101802*^9}, {3.821139521459972*^9, 
   3.821139576356471*^9}, 3.821139696455666*^9, {3.821139744333212*^9, 
   3.821139744374893*^9}, {3.821139803827692*^9, 3.821139830261693*^9}, {
   3.821139882330064*^9, 3.82113999210213*^9}, {3.821140335359824*^9, 
   3.821140368033083*^9}, {3.821198094630992*^9, 3.821198097644108*^9}, {
   3.821198149194468*^9, 3.821198250741798*^9}, {3.82119831595986*^9, 
   3.82119832643999*^9}, {3.821216232684465*^9, 3.821216258708852*^9}, {
   3.821230339459565*^9, 
   3.821230342040544*^9}},ExpressionUUID->"f32f1040-ecc2-4f9e-956a-\
c831b7c7320c"],

Cell[CellGroupData[{

Cell[TextData[{
 "4.1 ",
 Cell[BoxData[
  FormBox[
   StyleBox["VarsChangedBy",
    FontSlant->"Italic"], TraditionalForm]],ExpressionUUID->
  "b0a81674-f571-4c1d-b6ed-d9f6a71fd6db"],
 " and ",
 Cell[BoxData[
  FormBox[
   StyleBox["VarsUnchangedBy",
    FontSlant->"Italic"], TraditionalForm]],ExpressionUUID->
  "e933af5d-9dad-49c2-bd12-f12d8bfec47d"]
}], "Subsection",
 CellChangeTimes->{{3.821139997812909*^9, 3.821140003041923*^9}, {
  3.821175144112112*^9, 3.8211751442205*^9}, {3.821275781137322*^9, 
  3.821275805510721*^9}, {3.8213500724205112`*^9, 3.8213500764671593`*^9}, {
  3.821350674796028*^9, 3.8213506775131617`*^9}, {3.821451423998013*^9, 
  3.821451428309133*^9}},
 CellTags->"c:10",ExpressionUUID->"11a7eb5b-656f-4d58-ae7a-989da7ae3d25"],

Cell[TextData[{
 "The function ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "62f9492b-679e-4b6b-9ec9-ea76197cf4a3"],
 " may not affect all the bits in the state. For a particular state ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Psi]", "i"], TraditionalForm]],ExpressionUUID->
  "a7aeafe5-53fd-4f9b-ad16-22699508312a"],
 ", the vector "
}], "Text",
 CellChangeTimes->{{3.821140389336874*^9, 3.821140475441557*^9}, {
  3.821198332182349*^9, 3.821198358798478*^9}, {3.8215349081188593`*^9, 
  3.821534912854683*^9}},ExpressionUUID->"ddd5d0e1-942c-4c62-bbea-\
d1c6add2ea1f"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[Del]", 
    RowBox[{"(", 
     RowBox[{"i", ",", "f"}], ")"}]}], "   ", 
   OverscriptBox["=", "def"], "   ", 
   RowBox[{
    SubscriptBox["\[Psi]", "i"], "XOR", " ", 
    RowBox[{"f", "(", 
     SubscriptBox["\[Psi]", "i"], ")"}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.82114048327665*^9, 3.821140504126671*^9}, {
  3.821141736013132*^9, 3.821141736014537*^9}, {3.821444110831094*^9, 
  3.8214441233263683`*^9}, {3.821444292479512*^9, 3.821444296042121*^9}},
 CellTags->
  "del of i f",ExpressionUUID->"46a43257-97bc-4f1c-a6ec-a5b805dbcea4"],

Cell[TextData[{
 "has 0 precisely in those slots unchanged by ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", 
    SubscriptBox["\[Psi]", "i"], ")"}], TraditionalForm]],ExpressionUUID->
  "b6d6c091-6590-4d31-acba-4081ab4fdb8a"],
 ". The vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Del]", 
    RowBox[{"(", 
     RowBox[{"i", ",", "f"}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "dbcc76b9-9bf6-4285-b1b5-d9db131388fa"],
 " has ",
 Cell[BoxData[
  FormBox["831488", TraditionalForm]],ExpressionUUID->
  "49144933-b0d8-4c19-8eeb-1073f6fd7550"],
 " slots, just as do ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Psi]", "i"], TraditionalForm]],ExpressionUUID->
  "2c5e999a-d4e6-4bfd-bedf-f2802ecf775e"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", 
    SubscriptBox["\[Psi]", "i"], ")"}], TraditionalForm]],ExpressionUUID->
  "6253e1e8-0e4f-4df1-8a98-349fb523abb6"],
 ". "
}], "Text",
 CellChangeTimes->{{3.821140534337448*^9, 3.8211405633652887`*^9}, {
  3.821141518671055*^9, 3.821141551298408*^9}, {3.821142046362308*^9, 
  3.821142098015482*^9}, {3.821142312451857*^9, 3.8211423358099613`*^9}, {
  3.821142664661179*^9, 3.8211426855513887`*^9}, {3.821189196477973*^9, 
  3.821189196613904*^9}, {3.821198138729686*^9, 3.82119813933252*^9}, {
  3.82119836484055*^9, 3.821198366045651*^9}, {3.821216279895714*^9, 
  3.821216355835891*^9}, {3.821230373921365*^9, 3.8212303922229433`*^9}, {
  3.821451150783515*^9, 3.821451152865139*^9}, {3.821451545596239*^9, 
  3.821451564492722*^9}, {3.8215406831637983`*^9, 
  3.821540694008355*^9}},ExpressionUUID->"387343e6-a741-4676-88b5-\
a2f94afa8f92"],

Cell[TextData[{
 "The OR of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Del]", 
    RowBox[{"(", 
     RowBox[{"i", ",", "f"}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "69a29734-0252-486c-a4e8-2da08ca0369c"],
 " across all states"
}], "Text",
 CellChangeTimes->{{3.821140534337448*^9, 3.8211405633652887`*^9}, {
  3.821141518671055*^9, 3.821141551298408*^9}, {3.821142046362308*^9, 
  3.821142098015482*^9}, {3.821142312451857*^9, 3.8211423358099613`*^9}, {
  3.821142664661179*^9, 3.8211426855513887`*^9}, {3.821189196477973*^9, 
  3.821189196613904*^9}, {3.821198138729686*^9, 3.82119813933252*^9}, {
  3.82119836484055*^9, 3.821198366045651*^9}, {3.821216279895714*^9, 
  3.821216352820898*^9}, {3.821444366876055*^9, 
  3.821444377862706*^9}},ExpressionUUID->"8a7ef943-64fb-4d1f-be2e-\
b94adcc61b25"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[Del]", 
    RowBox[{"(", "f", ")"}]}], "   ", 
   OverscriptBox["=", "def"], "   ", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["OR", 
      RowBox[{"  ", 
       RowBox[{"i", "=", "1"}]}], 
      RowBox[{"  ", 
       SuperscriptBox["2", "831488"]}]], 
     RowBox[{"\[Del]", 
      RowBox[{"(", 
       RowBox[{"i", ",", "f"}], ")"}]}]}], "   ", "=", "   ", 
    RowBox[{
     SubsuperscriptBox["OR", 
      RowBox[{"  ", 
       RowBox[{"i", "=", "1"}]}], 
      RowBox[{"  ", 
       SuperscriptBox["2", "831488"]}]], 
     StyleBox["[",
      FontSize->18], 
     RowBox[{
      SubscriptBox["\[Psi]", "i"], "XOR", " ", 
      RowBox[{"f", "(", 
       SubscriptBox["\[Psi]", "i"], ")"}]}], 
     StyleBox["]",
      FontSize->18]}]}]}], TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.8213203732429323`*^9, 3.821320391138929*^9}, {
  3.82132052693644*^9, 3.821320551027135*^9}, {3.821320598840336*^9, 
  3.821320616312338*^9}, {3.821444228325061*^9, 3.8214442859977818`*^9}},
 CellTags->"del of f",ExpressionUUID->"265c435f-4fa3-45de-8b1e-effab07fd86c"],

Cell[TextData[{
 "has 0 in only those slots that ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "77481513-3c85-46ab-a90f-a758b57b18d9"],
 " does not change for any input state ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Psi]", "i"], TraditionalForm]],ExpressionUUID->
  "fccbbd79-036f-435f-8a02-14daeb1dbf6a"],
 ". The ones and zeros in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Del]", 
    RowBox[{"(", "f", ")"}]}], TraditionalForm]],ExpressionUUID->
  "7c911f28-dc33-438d-ba84-2e763ee129b5"],
 " partition the ",
 Cell[BoxData[
  FormBox["831488", TraditionalForm]],ExpressionUUID->
  "e06db5f5-2ab4-4883-8492-519ebc59b27c"],
 " variables into two subsets. One subset, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["VarsChangedBy",
     FontWeight->"Bold",
     FontSlant->"Italic"], "(", "f", ")"}], TraditionalForm]],ExpressionUUID->
  "693de5ff-ea0d-4cd6-9f77-861d8de5e0e9"],
 ", contains those variables that ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "5a572f0a-edfb-4665-94fb-6182d07a2bd9"],
 " changes for at least one input state ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Psi]", "i"], TraditionalForm]],ExpressionUUID->
  "19122757-81d9-41d6-a104-3285e72a2a6e"],
 ". Those variables correspond to the indices of the ones in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Del]", 
    RowBox[{"(", "f", ")"}]}], TraditionalForm]],ExpressionUUID->
  "2286f71d-bdea-429a-978c-f8535b0fce59"],
 ":"
}], "Text",
 CellChangeTimes->{{3.8211423492846212`*^9, 3.8211423688449173`*^9}, {
   3.821142415657003*^9, 3.821142581597031*^9}, {3.82114263451586*^9, 
   3.821142644362463*^9}, {3.821142743878364*^9, 3.821142819674405*^9}, 
   3.821143214353948*^9, {3.821179068437859*^9, 3.8211790714115877`*^9}, {
   3.821189103895638*^9, 3.821189104016996*^9}, {3.821189206133329*^9, 
   3.821189206205415*^9}, {3.821189327336637*^9, 3.821189328184073*^9}, {
   3.8211895760042553`*^9, 3.8211895807667418`*^9}, {3.8211984242393513`*^9, 
   3.821198432892434*^9}, {3.821216380899832*^9, 3.8212163844017897`*^9}, {
   3.821230413131949*^9, 3.821230428644904*^9}, {3.821275254487173*^9, 
   3.82127526487458*^9}, {3.8212753536315947`*^9, 3.8212753603589983`*^9}, {
   3.821275465064143*^9, 3.821275471323337*^9}, {3.821275559091642*^9, 
   3.821275559709887*^9}, {3.821275744691187*^9, 3.821275748324009*^9}, {
   3.82127619858282*^9, 3.8212762085134363`*^9}, {3.821276382233653*^9, 
   3.821276469554967*^9}, {3.82131934840609*^9, 3.821319441550686*^9}, {
   3.821320430215342*^9, 3.821320443654656*^9}, {3.8213500528835573`*^9, 
   3.821350066602857*^9}, {3.82135014145124*^9, 3.8213501462034607`*^9}, {
   3.82135039817423*^9, 3.8213505713696012`*^9}, {3.821350862800325*^9, 
   3.8213510108074713`*^9}, 3.8213603088152733`*^9, {3.821368217490387*^9, 
   3.8213682358993692`*^9}, {3.821388568497469*^9, 3.821388587561174*^9}, {
   3.821390448683185*^9, 3.8213904517544327`*^9}, {3.821444392719137*^9, 
   3.821444460738556*^9}, {3.8214511620975122`*^9, 3.821451175764045*^9}, {
   3.821451212790474*^9, 
   3.8214512155368757`*^9}},ExpressionUUID->"60bef436-d09e-4023-b015-\
1611285e9872"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    StyleBox["VarsChangedBy",
     FontSlant->"Italic"], "(", "f", ")"}], "  ", 
   OverscriptBox["=", "def"], "   ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       StyleBox["Var",
        FontSlant->"Italic"], "(", 
       RowBox[{"k", "\[Element]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "\[Ellipsis]", ",", "831488"}], "}"}]}], 
       ")"}], " ", "such", " ", "that", " ", 
      RowBox[{"\[Del]", 
       SubscriptBox[
        RowBox[{"(", "f", ")"}], "k"]}]}], "=", "1"}], "}"}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.821351018710428*^9, 3.821351169988035*^9}, {
  3.821360239752738*^9, 3.821360258287918*^9}, {3.821360289715062*^9, 
  3.821360289715678*^9}, {3.8214511956106157`*^9, 3.821451199234215*^9}, {
  3.8215349631874447`*^9, 3.8215349765314283`*^9}},
 CellTags->
  "vars changed by",ExpressionUUID->"79c90c6a-2a37-4e57-a445-7be4982bba39"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Var",
     FontSlant->"Italic"], "(", "k", ")"}], TraditionalForm]],ExpressionUUID->
  "a1411af1-3e06-425a-b886-1e2f6e6ea4b0"],
 " is defined in Formula ",
 
 CounterBox["DisplayFormulaNumbered", "def of var k"],
 ". "
}], "Text",
 CellChangeTimes->{{3.8214516277294903`*^9, 3.8214516822899723`*^9}, 
   3.821535037051175*^9},ExpressionUUID->"95fe5b27-bbf9-4b11-a76f-\
2325c35f3798"],

Cell[TextData[{
 "The other subset, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["VarsUnchangedBy",
     FontWeight->"Bold",
     FontSlant->"Italic"], "(", "f", ")"}], TraditionalForm]],ExpressionUUID->
  "59646b10-f197-4094-b434-a39227029522"],
 ", contains those variables that ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "032b3b38-9767-403e-8b89-b9a28808e7a3"],
 " never changes, corresponding to the indices of the zeros in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Del]", 
    RowBox[{"(", "f", ")"}]}], TraditionalForm]],ExpressionUUID->
  "61db308d-a0d2-418d-a642-c693d5eec494"],
 ":"
}], "Text",
 CellChangeTimes->{{3.8211423492846212`*^9, 3.8211423688449173`*^9}, {
   3.821142415657003*^9, 3.821142581597031*^9}, {3.82114263451586*^9, 
   3.821142644362463*^9}, {3.821142743878364*^9, 3.821142819674405*^9}, 
   3.821143214353948*^9, {3.821179068437859*^9, 3.8211790714115877`*^9}, {
   3.821189103895638*^9, 3.821189104016996*^9}, {3.821189206133329*^9, 
   3.821189206205415*^9}, {3.821189327336637*^9, 3.821189328184073*^9}, {
   3.8211895760042553`*^9, 3.8211895807667418`*^9}, {3.8211984242393513`*^9, 
   3.821198432892434*^9}, {3.821216380899832*^9, 3.8212163844017897`*^9}, {
   3.821230413131949*^9, 3.821230428644904*^9}, {3.821275254487173*^9, 
   3.82127526487458*^9}, {3.8212753536315947`*^9, 3.8212753603589983`*^9}, {
   3.821275465064143*^9, 3.821275471323337*^9}, {3.821275559091642*^9, 
   3.821275559709887*^9}, {3.821275744691187*^9, 3.821275748324009*^9}, {
   3.82127619858282*^9, 3.8212762085134363`*^9}, {3.821276382233653*^9, 
   3.821276469554967*^9}, {3.82131934840609*^9, 3.821319441550686*^9}, {
   3.821320430215342*^9, 3.821320443654656*^9}, {3.8213500528835573`*^9, 
   3.821350066602857*^9}, {3.82135014145124*^9, 3.8213501462034607`*^9}, {
   3.82135039817423*^9, 3.8213505713696012`*^9}, {3.821350862800325*^9, 
   3.821351012887885*^9}, {3.8213602746350803`*^9, 3.821360274859099*^9}, 
   3.821368261105706*^9, {3.821451222070421*^9, 
   3.8214512222178783`*^9}},ExpressionUUID->"a59e7da6-1757-40b7-abec-\
92d996e72c71"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    StyleBox["VarsUnhangedBy",
     FontSlant->"Italic"], "(", "f", ")"}], "  ", 
   OverscriptBox["=", "def"], "   ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       StyleBox["Var",
        FontSlant->"Italic"], "(", 
       RowBox[{"k", "\[Element]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "\[Ellipsis]", ",", "831488"}], "}"}]}], 
       ")"}], " ", "such", " ", "that", " ", 
      RowBox[{"\[Del]", 
       SubscriptBox[
        RowBox[{"(", "f", ")"}], "k"]}]}], "=", "0"}], "}"}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.821351018710428*^9, 3.821351169988035*^9}, {
  3.821360239752738*^9, 3.821360258287918*^9}, {3.821360289715062*^9, 
  3.821360289715678*^9}, {3.821360331609029*^9, 3.82136033815408*^9}, {
  3.821451228964045*^9, 3.821451232419985*^9}, {3.821534987625265*^9, 
  3.8215350175837584`*^9}},
 CellTags->
  "vars unchanged by",ExpressionUUID->"1aa530d3-aa56-4bf5-a64c-3813c5449a14"],

Cell[TextData[{
 "The only difference between Definitions ",
 
 CounterBox["DisplayFormulaNumbered", "vars changed by"],
 " and ",
 
 CounterBox["DisplayFormulaNumbered", "vars unchanged by"],
 " is the 1 or 0 at the extreme right."
}], "Text",
 CellChangeTimes->{{3.821390481898608*^9, 3.8213904991651297`*^9}, {
  3.821390572992571*^9, 3.821390635928361*^9}, {3.8215350549928226`*^9, 
  3.821535064756365*^9}},ExpressionUUID->"f1feca4c-7a06-48a8-863a-\
85e3a11feccc"],

Cell[CellGroupData[{

Cell["4.1.1 Examples", "Subsubsection",
 CellChangeTimes->{{3.8214488325775957`*^9, 3.821448836177561*^9}},
 CellTags->"c:11",ExpressionUUID->"e0441781-2a34-44f2-b25f-edd9f2931432"],

Cell[TextData[{
 "The function, ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]],ExpressionUUID->
  "797bf1f0-3d8b-453f-8e56-18b02de9ffca"],
 ", corresponding to Command 1 above"
}], "Text",
 CellChangeTimes->{{3.8211423492846212`*^9, 3.8211423688449173`*^9}, {
   3.821142415657003*^9, 3.821142581597031*^9}, {3.82114263451586*^9, 
   3.821142644362463*^9}, {3.821142743878364*^9, 3.821142819674405*^9}, 
   3.821143214353948*^9, {3.821179068437859*^9, 3.8211790714115877`*^9}, {
   3.821189103895638*^9, 3.821189104016996*^9}, {3.821189206133329*^9, 
   3.821189206205415*^9}, {3.821189327336637*^9, 3.821189328184073*^9}, {
   3.8211895760042553`*^9, 3.8211895807667418`*^9}, {3.8211984242393513`*^9, 
   3.821198432892434*^9}, {3.821216380899832*^9, 3.8212163844017897`*^9}, {
   3.821230413131949*^9, 3.821230428644904*^9}, {3.821275254487173*^9, 
   3.82127526487458*^9}, {3.8212753536315947`*^9, 3.8212753603589983`*^9}, {
   3.821275465064143*^9, 3.821275471323337*^9}, {3.821275559091642*^9, 
   3.821275559709887*^9}, {3.821275744691187*^9, 3.821275748324009*^9}, {
   3.82127619858282*^9, 3.8212762085134363`*^9}, {3.821276382233653*^9, 
   3.821276469554967*^9}, {3.82131934840609*^9, 3.821319441550686*^9}, {
   3.821320430215342*^9, 3.821320443654656*^9}, {3.8213500528835573`*^9, 
   3.821350066602857*^9}, {3.82135014145124*^9, 3.8213501462034607`*^9}, {
   3.82135039817423*^9, 3.821350566890375*^9}, {3.8213603444688168`*^9, 
   3.821360345180814*^9}, {3.821486075610487*^9, 3.821486079804606*^9}, 
   3.821535073425125*^9},ExpressionUUID->"29a4d306-2a4a-4240-b85f-\
1e637b79735e"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"g", " ", "\[TildeFullEqual]", " ", 
     RowBox[{"SM_", "0", 
      RowBox[{"X1111", ":", " ", "RL"}]}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{"SB", "[", 
      RowBox[{"x", ",", "y"}], "]"}], " ", "^", " ", "NRL"}]}], ";"}], 
  "Code"]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.821144100248398*^9, 3.821144153327766*^9}, {
  3.821144409202445*^9, 3.821144409203167*^9}, {3.821275347665269*^9, 
  3.8212753480998983`*^9}, {3.8212757531808863`*^9, 3.8212757622799997`*^9}},
 CellTags->
  "function 1",ExpressionUUID->"01cf4f13-ac96-4c42-8571-61cc24bfa972"],

Cell[TextData[{
 "(with \[OpenCurlyDoubleQuote]",
 Cell[BoxData[
  FormBox["\[TildeFullEqual]", TraditionalForm]],ExpressionUUID->
  "b6626a2b-9166-4251-ab42-2eb8e27838f2"],
 "\[CloseCurlyDoubleQuote] meaning \[OpenCurlyDoubleQuote]corresponding to\
\[CloseCurlyDoubleQuote]) can only change bits in sections 0, 4, 8, and 12 of \
RL, so ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["VarsChangedBy",
     FontSlant->"Italic"], "(", "g", ")"}], TraditionalForm]],ExpressionUUID->
  "7ccc065c-7d03-4aad-a7a9-ba3c552322d2"],
 " includes all ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"4", "\[Times]", "2048"}], "=", "8192"}], TraditionalForm]],
  ExpressionUUID->"f3c800d9-164b-4342-a1c6-164acda5f18e"],
 " variables for those sections of RL and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["VarsUnchangedBy",
     FontSlant->"Italic"], "(", "g", ")"}], TraditionalForm]],ExpressionUUID->
  "db71a7f7-67c3-4edc-a62a-a97b072aeda3"],
 " includes all other variables of the bank."
}], "Text",
 CellChangeTimes->{{3.821144162960699*^9, 3.8211441807992907`*^9}, {
  3.821144419518561*^9, 3.8211444396077337`*^9}, {3.8211891271252747`*^9, 
  3.8211891488372583`*^9}, {3.8211893194629793`*^9, 3.821189336516747*^9}, {
  3.8211984594575*^9, 3.821198505462739*^9}, {3.821218860797662*^9, 
  3.8212188632550364`*^9}, {3.821230452572754*^9, 3.821230471308749*^9}, {
  3.82127529313968*^9, 3.821275295677079*^9}, {3.8212765076696043`*^9, 
  3.8212765199258423`*^9}, {3.821350156563662*^9, 3.821350167320571*^9}, {
  3.821390726376039*^9, 3.821390803344701*^9}, {3.82145125829123*^9, 
  3.821451258479918*^9}, {3.821453182584527*^9, 3.821453186901402*^9}, {
  3.821540752934965*^9, 
  3.821540788043318*^9}},ExpressionUUID->"e614c6f3-d230-4de7-b9cf-\
0af9f9f3fc90"],

Cell[TextData[{
 "For another example, consider a tiny machine, with three state variables, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["m", "1"], ",", 
    SubscriptBox["m", "2"], ",", 
    SubscriptBox["r", "1"]}], TraditionalForm]],ExpressionUUID->
  "c297ec0e-ba36-4312-8da0-aaf9474c3b0a"],
 " and eight states:"
}], "Text",
 CellChangeTimes->{{3.821439385273069*^9, 3.821439440394477*^9}, {
  3.8214427696631603`*^9, 3.821442777361368*^9}, {3.821448852360445*^9, 
  3.821448853075137*^9}, {3.821535108288238*^9, 
  3.821535113202632*^9}},ExpressionUUID->"481ba1d6-dabf-43e6-8d5f-\
70b0976c5690"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{GridBox[{
     {" ", 
      SubscriptBox["m", "1"], 
      SubscriptBox["m", "2"], 
      SubscriptBox["r", "1"]},
     {
      SubscriptBox["\[Psi]", "1"], "0", "0", "0"},
     {
      SubscriptBox["\[Psi]", "2"], "0", "0", "1"},
     {
      SubscriptBox["\[Psi]", "3"], "0", "1", "0"},
     {
      SubscriptBox["\[Psi]", "4"], "0", "1", "1"},
     {
      SubscriptBox["\[Psi]", "5"], "1", "0", "0"},
     {
      SubscriptBox["\[Psi]", "6"], "1", "0", "1"},
     {
      SubscriptBox["\[Psi]", "7"], "1", "1", "0"},
     {
      SubscriptBox["\[Psi]", "8"], "1", "1", "1"}
    }], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"None", ",", "None", ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "\[Rule]", "True"}], ",",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "9"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "\[Rule]", "True"}], ",",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "9"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "\[Rule]", "True"}]}], 
       "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821439451332171*^9, 3.821439483235721*^9}, {
  3.821439513469924*^9, 3.821439664527225*^9}, {3.8214397611815*^9, 
  3.821439916207294*^9}, {3.821439951649825*^9, 3.8214399813720903`*^9}, {
  3.82144003363345*^9, 3.821440103415723*^9}, {3.821440140173809*^9, 
  3.8214401574819736`*^9}, {3.821441724094194*^9, 3.8214417641404457`*^9}, {
  3.82144184346949*^9, 3.821441848780486*^9}, {3.8214418825024223`*^9, 
  3.8214420115416107`*^9}, {3.821442050418539*^9, 3.8214420559973803`*^9}, {
  3.8214421363937674`*^9, 3.82144219156496*^9}, {3.8214422435452137`*^9, 
  3.8214424324556713`*^9}, {3.8214424735742197`*^9, 3.8214425837296762`*^9}, {
  3.821442648218877*^9, 3.821442648910405*^9}, {3.8214636890233097`*^9, 
  3.82146369723908*^9}, {3.8215351181717997`*^9, 3.8215351208002653`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"223fd26a-0710-479f-ba04-f8bea178e3be"],

Cell[BoxData[
 TagBox[GridBox[{
    {"", 
     SubscriptBox["m", "1"], 
     SubscriptBox["m", "2"], 
     SubscriptBox["r", "1"]},
    {
     SubscriptBox["\[Psi]", "1"], "0", "0", "0"},
    {
     SubscriptBox["\[Psi]", "2"], "0", "0", "1"},
    {
     SubscriptBox["\[Psi]", "3"], "0", "1", "0"},
    {
     SubscriptBox["\[Psi]", "4"], "0", "1", "1"},
    {
     SubscriptBox["\[Psi]", "5"], "1", "0", "0"},
    {
     SubscriptBox["\[Psi]", "6"], "1", "0", "1"},
    {
     SubscriptBox["\[Psi]", "7"], "1", "1", "0"},
    {
     SubscriptBox["\[Psi]", "8"], "1", "1", "1"}
   },
   AutoDelete->False,
   GridBoxFrame->{
    "Columns" -> None, "Rows" -> None, 
     "ItemsIndexed" -> {{{1, 1}, {2, 4}} -> True, {{2, 9}, {1, 1}} -> 
       True, {{2, 9}, {2, 4}} -> True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.821439653372789*^9, {3.821439878821789*^9, 3.8214399012987623`*^9}, 
   3.821439986862631*^9, {3.821440040847644*^9, 3.821440066243284*^9}, {
   3.8214400965640707`*^9, 3.821440104378483*^9}, 3.821440158466545*^9, {
   3.821441743290614*^9, 3.821441766191638*^9}, 3.821441850538795*^9, 
   3.821441885730612*^9, {3.821441935209597*^9, 3.8214420125009613`*^9}, {
   3.821442052100572*^9, 3.821442057508832*^9}, {3.821442169801326*^9, 
   3.821442192286581*^9}, {3.821442248055769*^9, 3.821442321038327*^9}, {
   3.821442370685883*^9, 3.821442404549082*^9}, {3.8214425378556433`*^9, 
   3.821442584317341*^9}, 3.821442649283128*^9, 3.821452979243031*^9, 
   3.821453093111331*^9, 3.8214928823410187`*^9, 3.821533239517157*^9, 
   3.821533775456594*^9, 3.821535125733717*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"2e71808f-cff9-4c68-9e30-cc684e45461f"]
}, {2}]],

Cell[TextData[{
 "A similar table for the bank has ",
 Cell[BoxData[
  FormBox["831488", TraditionalForm]],ExpressionUUID->
  "c4946be1-4fae-427a-86c7-bdca656edbdb"],
 " columns and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", "831488"], TraditionalForm]],ExpressionUUID->
  "5e56cd45-5bab-438f-b748-62fba0b6aa77"],
 " rows, so is obviously only in our imaginations."
}], "Text",
 CellChangeTimes->{{3.8214494393721313`*^9, 3.8214495237940598`*^9}, {
  3.821451272175397*^9, 3.821451292067463*^9}, {3.821453210124237*^9, 
  3.821453213569894*^9}, {3.8214825347925997`*^9, 
  3.821482539518848*^9}},ExpressionUUID->"894dfcf5-be77-49ac-aa6e-\
e40818dc8ce4"],

Cell[TextData[{
 "Now consider a function ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "6c4cd497-de56-418d-aa4a-b8f867ab4f20"],
 " that copies the value of the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["r", "1"], TraditionalForm]],ExpressionUUID->
  "abeb040a-3d1d-497f-9857-445559f75b96"],
 " slot of its input state into the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["m", "2"], TraditionalForm]],ExpressionUUID->
  "0e431726-685b-4179-8c17-6e290936b8ab"],
 " slot of its output state. Adapting a state-tuple notation from Formula ",
 
 CounterBox["DisplayFormulaNumbered", "state tuple"],
 ":"
}], "Text",
 CellChangeTimes->{{3.821442786477809*^9, 3.821442849286107*^9}, {
  3.821442916057947*^9, 3.821443061263358*^9}, {3.821448459406855*^9, 
  3.821448492604302*^9}, {3.821448530106677*^9, 3.821448567333808*^9}, {
  3.821451304259605*^9, 3.8214513059195766`*^9}, {3.82145322574393*^9, 
  3.82145322972647*^9}, {3.821456641789906*^9, 3.821456644544626*^9}, {
  3.8215351392323093`*^9, 3.821535144600666*^9}, {3.821540858868444*^9, 
  3.8215408664051113`*^9}},ExpressionUUID->"e4e7bc8e-c52c-46a7-8b82-\
3e809a425d9a"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"f", "(", 
     RowBox[{
      RowBox[{"\[LeftGuillemet]", "[", 
       RowBox[{
        SubscriptBox["m", "1"], ",", 
        SubscriptBox["m", "2"]}], "]"}], ",", 
      RowBox[{
       RowBox[{"[", 
        SubscriptBox["r", "1"], "]"}], "\[RightGuillemet]"}]}], ")"}], "   ", 
    "=", "   ", 
    RowBox[{"\[LeftGuillemet]", "[", 
     RowBox[{
      SubscriptBox["m", "1"], ",", 
      SubscriptBox["r", "1"]}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"[", 
     SubscriptBox["r", "1"], "]"}], "\[RightGuillemet]"}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.821442786477809*^9, 3.821442849286107*^9}, {
  3.821442916057947*^9, 3.8214431473182487`*^9}, {3.821443912276219*^9, 
  3.821443912276704*^9}, {3.8215351492474422`*^9, 3.821535153526946*^9}, {
  3.8215408853281927`*^9, 3.8215409206608*^9}, {3.8215409557554283`*^9, 
  3.821540958138936*^9}},ExpressionUUID->"a7adaa0a-148d-4ed8-b0db-\
5a10298261b3"],

Cell["For the corresponding command, one might write", "Text",
 CellChangeTimes->{{3.8214517750525637`*^9, 3.821451785409465*^9}, {
  3.821451851172799*^9, 
  3.821451854132288*^9}},ExpressionUUID->"64f15936-a69c-41c9-8ac6-\
bcf70e510a38"],

Cell[BoxData[
 RowBox[{"m2", ":=", "r1"}]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.821451792402998*^9, 3.821451805612355*^9}, {
  3.821451836006261*^9, 3.82145184231122*^9}, {3.821535166953639*^9, 
  3.821535167015588*^9}},ExpressionUUID->"fa5cb32b-9ccf-4008-aa15-\
9171076e67ee"],

Cell[TextData[{
 "Look at the results of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", 
    SubscriptBox["\[Psi]", "i"], ")"}], TraditionalForm]],ExpressionUUID->
  "b7ab23d3-3bc6-476d-8200-c4bdedfd0b5f"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Psi]", "i"], "\[Xor]", 
    RowBox[{"f", "(", 
     SubscriptBox["\[Psi]", "i"], ")"}]}], TraditionalForm]],ExpressionUUID->
  "0fc9c667-c157-422d-b73e-70393bdd7582"],
 " in the table below, with \[Xor] meaning XOR. Observe that the only \
variable (column) with ones is ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["m", "2"], TraditionalForm]],ExpressionUUID->
  "e1533814-f4b8-4fc8-8322-9628cb033e28"],
 " (highlighted), the only variable changed by ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "9985a831-0c91-49c6-ab49-3755e28600f8"],
 ". OR\[CloseCurlyQuote]ing down the rows produces ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Del]", 
    RowBox[{"(", "f", ")"}]}], TraditionalForm]],ExpressionUUID->
  "962ec611-44b4-477e-a62b-1c0cf037a333"],
 ", which has the same shape as a state, so we can talk about its variables, \
too. If variable ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Del]", 
     SubscriptBox[
      RowBox[{"(", "f", ")"}], "k"]}], "=", "1"}], TraditionalForm]],
  ExpressionUUID->"48143caa-26e1-43c2-b4a3-a7888f850deb"],
 ", then ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Del]", 
    SubscriptBox[
     RowBox[{"(", "f", ")"}], "k"]}], TraditionalForm]],ExpressionUUID->
  "7c7297a9-0baf-48e4-95a2-02dac5e753bf"],
 " is in ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["VarsChangedBy",
     FontSlant->"Italic"], "(", "f", ")"}], TraditionalForm]],ExpressionUUID->
  "f8a66bf4-147d-4b40-93b9-a2cf2f71cb09"],
 ", else ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Del]", 
    SubscriptBox[
     RowBox[{"(", "f", ")"}], "k"]}], TraditionalForm]],ExpressionUUID->
  "9fa4bd0d-a5cd-4d7b-af79-32ffc72b36a6"],
 " is in ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["VarsUnchangedBy",
     FontSlant->"Italic"], "(", "f", ")"}], TraditionalForm]],ExpressionUUID->
  "2e666d2c-1b10-4859-91b4-60690cd2d479"],
 ". The last, lonely row of the table below shows the partitioning into ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["VarsChangedBy",
      FontSlant->"Italic"], "(", "f", ")"}], "=", 
    RowBox[{"{", 
     SubscriptBox["m", "2"], "}"}]}], TraditionalForm]],ExpressionUUID->
  "a525f86d-2dee-4c8e-bdff-63a7d9c65ca4"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["VarsUnchangedBy",
      FontSlant->"Italic"], "(", "f", ")"}], "=", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["m", "1"], ",", 
      SubscriptBox["r", "1"]}], "}"}]}], TraditionalForm]],ExpressionUUID->
  "c494fe3f-196e-4496-8d84-622aca304465"],
 "."
}], "Text",
 CellChangeTimes->{{3.821443919547827*^9, 3.8214439203743677`*^9}, {
  3.821446639750408*^9, 3.821446643743803*^9}, {3.82144669069663*^9, 
  3.821446806234702*^9}, {3.821446845711503*^9, 3.821446859750293*^9}, {
  3.821448951622808*^9, 3.821449132663176*^9}, {3.8214491668332777`*^9, 
  3.82144917208114*^9}, {3.8214492646628428`*^9, 3.8214494336433067`*^9}, {
  3.821449546690526*^9, 3.821449554218678*^9}, {3.821451325365327*^9, 
  3.821451358439252*^9}, {3.821456667463688*^9, 3.8214566714655*^9}, {
  3.821482597538061*^9, 3.821482643374947*^9}, {3.821535175270544*^9, 
  3.821535233182354*^9}, {3.821540971780633*^9, 3.821540974972398*^9}, {
  3.8215412831896353`*^9, 
  3.821541339012179*^9}},ExpressionUUID->"540721a4-c2ad-4993-822a-\
f91eb29bcc8b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{GridBox[{
     {" ", 
      SubscriptBox["m", "1"], 
      SubscriptBox["m", "2"], 
      SubscriptBox["r", "1"], " ", 
      SubscriptBox["m", "1"], 
      SubscriptBox["m", "2"], 
      SubscriptBox["r", "1"], " ", 
      SubscriptBox["m", "1"], 
      SubscriptBox["m", "2"], 
      SubscriptBox["r", "1"]},
     {
      SubscriptBox["\[Psi]", "1"], "0", "0", "0", 
      "\"\<f(\!\(\*SubscriptBox[\(\[Psi]\), \(1\)]\))\>\"", "0", "0", "0", 
      "\"\<\!\(\*SubscriptBox[\(\[Psi]\), \(1\)]\)\[Xor]f(\!\(\*SubscriptBox[\
\(\[Psi]\), \(1\)]\))\>\"", "0", "0", "0"},
     {
      SubscriptBox["\[Psi]", "2"], "0", "0", "1", 
      "\"\<f(\!\(\*SubscriptBox[\(\[Psi]\), \(2\)]\))\>\"", "0", "1", "1", 
      "\"\<\!\(\*SubscriptBox[\(\[Psi]\), \(2\)]\)\[Xor]f(\!\(\*SubscriptBox[\
\(\[Psi]\), \(2\)]\))\>\"", "0", "1", "0"},
     {
      SubscriptBox["\[Psi]", "3"], "0", "1", "0", 
      "\"\<f(\!\(\*SubscriptBox[\(\[Psi]\), \(3\)]\))\>\"", "0", "0", "0", 
      "\"\<\!\(\*SubscriptBox[\(\[Psi]\), \(3\)]\)\[Xor]f(\!\(\*SubscriptBox[\
\(\[Psi]\), \(3\)]\))\>\"", "0", "1", "0"},
     {
      SubscriptBox["\[Psi]", "4"], "0", "1", "1", 
      "\"\<f(\!\(\*SubscriptBox[\(\[Psi]\), \(4\)]\))\>\"", "0", "1", "1", 
      "\"\<\!\(\*SubscriptBox[\(\[Psi]\), \(4\)]\)\[Xor]f(\!\(\*SubscriptBox[\
\(\[Psi]\), \(4\)]\))\>\"", "0", "0", "0"},
     {
      SubscriptBox["\[Psi]", "5"], "1", "0", "0", 
      "\"\<f(\!\(\*SubscriptBox[\(\[Psi]\), \(5\)]\))\>\"", "1", "0", "0", 
      "\"\<\!\(\*SubscriptBox[\(\[Psi]\), \(5\)]\)\[Xor]f(\!\(\*SubscriptBox[\
\(\[Psi]\), \(5\)]\))\>\"", "0", "0", "0"},
     {
      SubscriptBox["\[Psi]", "6"], "1", "0", "1", 
      "\"\<f(\!\(\*SubscriptBox[\(\[Psi]\), \(6\)]\))\>\"", "1", "1", "1", 
      "\"\<\!\(\*SubscriptBox[\(\[Psi]\), \(6\)]\)\[Xor]f(\!\(\*SubscriptBox[\
\(\[Psi]\), \(6\)]\))\>\"", "0", "1", "0"},
     {
      SubscriptBox["\[Psi]", "7"], "1", "1", "0", 
      "\"\<f(\!\(\*SubscriptBox[\(\[Psi]\), \(7\)]\))\>\"", "1", "0", "0", 
      "\"\<\!\(\*SubscriptBox[\(\[Psi]\), \(7\)]\)\[Xor]f(\!\(\*SubscriptBox[\
\(\[Psi]\), \(7\)]\))\>\"", "0", "1", "0"},
     {
      SubscriptBox["\[Psi]", "8"], "1", "1", "1", 
      "\"\<f(\!\(\*SubscriptBox[\(\[Psi]\), \(8\)]\))\>\"", "1", "1", "1", 
      "\"\<\!\(\*SubscriptBox[\(\[Psi]\), \(8\)]\)\[Xor]f(\!\(\*SubscriptBox[\
\(\[Psi]\), \(8\)]\))\>\"", "0", "0", "0"},
     {" ", " ", " ", " ", " ", " ", " ", " ", "\"\<\[Del](f)\>\"", "0", "1", 
      "0"}
    }], ",", "\[IndentingNewLine]", 
   RowBox[{"Background", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", "None", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "10"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"11", ",", "11"}], "}"}]}], "}"}], "\[Rule]", 
        "LightYellow"}], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"None", ",", "None", ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"6", ",", "8"}], "}"}]}], "}"}], "\[Rule]", "True"}], ",",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "9"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"5", ",", "5"}], "}"}]}], "}"}], "\[Rule]", "True"}], ",",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "9"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"6", ",", "8"}], "}"}]}], "}"}], "\[Rule]", "True"}], ",",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"10", ",", "12"}], "}"}]}], "}"}], "\[Rule]", "True"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "9"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"9", ",", "9"}], "}"}]}], "}"}], "\[Rule]", "True"}], ",",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "9"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"10", ",", "12"}], "}"}]}], "}"}], "\[Rule]", "True"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "\[Rule]", "True"}], ",",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "9"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "\[Rule]", "True"}], ",",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "9"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "\[Rule]", "True"}], ",",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"10", ",", "10"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"9", ",", "9"}], "}"}]}], "}"}], "\[Rule]", "True"}], ",",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"10", ",", "10"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"10", ",", "12"}], "}"}]}], "}"}], "\[Rule]", "True"}]}], 
       "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQrbowy/pixRtH9u50exA9j1PfGcy/LxAGom+eU00C
0eqL2kpBdNzpL5UgWuvF6loQbelq0gKiZ/m+7QHRN/pbJ4LokJz1k0H0Yubm
8EtAuqOuJQZEC7Dlp4HofT8l0kH0DeGAbBD9IKSwGkSvSfFtANFdr/6D6X0z
ebpBtLrIp4kgOqWocAaIvjOFbwOIZkow2gqimyK/HwLRXIzsp8G0kiyYDg+w
ErwMpK/0/bUE0Q3SF2xBdLvxNUcQ/UA50wNEL5m5LwVEM/zeseUqkFbL/XQK
RCceDVp2E0hXvQs+CKLNdK6I3gXSnY4XxUE0M/syBobKN44aMi8ZQTQAVryz
jw==
  "],
 CellLabel->"In[24]:=",ExpressionUUID->"a392166e-42ba-42fb-b83d-119b9ef1a00f"],

Cell[BoxData[
 TagBox[GridBox[{
    {"", 
     SubscriptBox["m", "1"], 
     SubscriptBox["m", "2"], 
     SubscriptBox["r", "1"], "", 
     SubscriptBox["m", "1"], 
     SubscriptBox["m", "2"], 
     SubscriptBox["r", "1"], "", 
     SubscriptBox["m", "1"], 
     SubscriptBox["m", "2"], 
     SubscriptBox["r", "1"]},
    {
     SubscriptBox["\[Psi]", "1"], "0", "0", 
     "0", "\<\"f(\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(1\\)]\\))\"\>", "0", 
     "0", "0", "\<\"\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \
\\(1\\)]\\)\[Xor]f(\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(1\\)]\\))\"\>", "0",
      "0", "0"},
    {
     SubscriptBox["\[Psi]", "2"], "0", "0", 
     "1", "\<\"f(\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(2\\)]\\))\"\>", "0", 
     "1", "1", "\<\"\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \
\\(2\\)]\\)\[Xor]f(\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(2\\)]\\))\"\>", "0",
      "1", "0"},
    {
     SubscriptBox["\[Psi]", "3"], "0", "1", 
     "0", "\<\"f(\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(3\\)]\\))\"\>", "0", 
     "0", "0", "\<\"\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \
\\(3\\)]\\)\[Xor]f(\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(3\\)]\\))\"\>", "0",
      "1", "0"},
    {
     SubscriptBox["\[Psi]", "4"], "0", "1", 
     "1", "\<\"f(\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(4\\)]\\))\"\>", "0", 
     "1", "1", "\<\"\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \
\\(4\\)]\\)\[Xor]f(\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(4\\)]\\))\"\>", "0",
      "0", "0"},
    {
     SubscriptBox["\[Psi]", "5"], "1", "0", 
     "0", "\<\"f(\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(5\\)]\\))\"\>", "1", 
     "0", "0", "\<\"\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \
\\(5\\)]\\)\[Xor]f(\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(5\\)]\\))\"\>", "0",
      "0", "0"},
    {
     SubscriptBox["\[Psi]", "6"], "1", "0", 
     "1", "\<\"f(\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(6\\)]\\))\"\>", "1", 
     "1", "1", "\<\"\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \
\\(6\\)]\\)\[Xor]f(\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(6\\)]\\))\"\>", "0",
      "1", "0"},
    {
     SubscriptBox["\[Psi]", "7"], "1", "1", 
     "0", "\<\"f(\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(7\\)]\\))\"\>", "1", 
     "0", "0", "\<\"\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \
\\(7\\)]\\)\[Xor]f(\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(7\\)]\\))\"\>", "0",
      "1", "0"},
    {
     SubscriptBox["\[Psi]", "8"], "1", "1", 
     "1", "\<\"f(\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(8\\)]\\))\"\>", "1", 
     "1", "1", "\<\"\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \
\\(8\\)]\\)\[Xor]f(\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(8\\)]\\))\"\>", "0",
      "0", "0"},
    {"", "", "", "", "", "", "", "", "\<\"\[Del](f)\"\>", "0", "1", "0"}
   },
   AutoDelete->False,
   GridBoxBackground->{
    "Columns" -> {{None}}, "Rows" -> {{None}}, 
     "ItemsIndexed" -> {{{1, 10}, {11, 11}} -> RGBColor[1, 1, 0.85]}},
   GridBoxFrame->{
    "Columns" -> None, "Rows" -> None, 
     "ItemsIndexed" -> {{{1, 1}, {6, 8}} -> True, {{2, 9}, {5, 5}} -> 
       True, {{2, 9}, {6, 8}} -> True, {{1, 1}, {10, 12}} -> 
       True, {{2, 9}, {9, 9}} -> True, {{2, 9}, {10, 12}} -> 
       True, {{1, 1}, {2, 4}} -> True, {{2, 9}, {1, 1}} -> 
       True, {{2, 9}, {2, 4}} -> True, {{10, 10}, {9, 9}} -> 
       True, {{10, 10}, {10, 12}} -> True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.821448739956946*^9, 3.821448751968165*^9}, 
   3.821448792659788*^9, 3.821452979264895*^9, 3.821453093130814*^9, {
   3.821456731557102*^9, 3.8214569076031513`*^9}, 3.821492882366468*^9, 
   3.821533239566543*^9, 3.821533775485961*^9, 3.821535252216236*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"3bcd7035-6ac1-4680-ba68-edacb34d095c"]
}, {2}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["4.1.2 By Equivalence Relation", "Subsubsection",
 CellChangeTimes->{{3.821448922204097*^9, 3.821448940620922*^9}},
 CellTags->"c:12",ExpressionUUID->"76609778-9f9f-436e-8bfe-1843167c32db"],

Cell[TextData[{
 "A more mathematically conventional way of partitioning the variables is to \
define an ",
 StyleBox["equivalence relation",
  FontSlant->"Italic"],
 " on variables and then to observe its equivalence classes. Let us say that \
two variables, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", 
    RowBox[{" ", "1"}]], TraditionalForm]],ExpressionUUID->
  "2b4fc451-1fdf-4b31-a8a6-4bde85e549b3"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", 
    RowBox[{" ", "2"}]], TraditionalForm]],ExpressionUUID->
  "3d6ff653-6ef7-4cfb-8b34-4bbf57be7217"],
 ", with indices ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", 
    RowBox[{" ", "1"}]], TraditionalForm]],ExpressionUUID->
  "7e140b48-bec8-43e8-9a9e-f7392d010c96"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "2"], TraditionalForm]],ExpressionUUID->
  "ac9592e2-79c8-4ea1-b1dd-c40ad9770a58"],
 ", are ",
 StyleBox["equivalent to change under ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "cac6b0f2-86e8-4e82-a085-80f106be23b5"],
 ", written ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", 
     RowBox[{" ", "1"}]], 
    OverscriptBox["\[Tilde]", 
     RowBox[{"!", " ", "f"}]], 
    SubscriptBox["x", 
     RowBox[{" ", "2"}]]}], TraditionalForm]],ExpressionUUID->
  "6b2467ee-57c3-47d9-b4c7-e4cd2b0f6333"],
 ", iff [sic, \[OpenCurlyDoubleQuote]if and only if\[CloseCurlyDoubleQuote]] \
they have the same value, 0, or 1, under ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Del]", 
    RowBox[{"(", "f", ")"}]}], TraditionalForm]],ExpressionUUID->
  "a9c1944a-edf1-419a-9d5c-bfe4d078acc0"],
 ":"
}], "Text",
 CellChangeTimes->{{3.821276732259329*^9, 3.821276825832243*^9}, {
   3.821276918361699*^9, 3.8212769218005247`*^9}, {3.8212769985621653`*^9, 
   3.821277004661956*^9}, {3.821277053476088*^9, 3.821277080855303*^9}, {
   3.821277125809216*^9, 3.821277150725088*^9}, {3.8212772207630577`*^9, 
   3.821277275471078*^9}, {3.8213201387479553`*^9, 3.8213201769729567`*^9}, {
   3.8213202076178303`*^9, 3.821320339278915*^9}, {3.821320661468869*^9, 
   3.82132078369698*^9}, 3.821350202183504*^9, {3.82135034572885*^9, 
   3.821350353945486*^9}, {3.821350707061246*^9, 3.8213508060617647`*^9}, {
   3.8213603758749733`*^9, 3.821360454870316*^9}, {3.821360636710266*^9, 
   3.821360689694696*^9}, {3.821360722524634*^9, 3.82136072914332*^9}, {
   3.82136829226263*^9, 3.8213682938564243`*^9}, {3.821368328837961*^9, 
   3.8213683531437273`*^9}, {3.821368384193981*^9, 3.821368400402308*^9}, {
   3.821368527911991*^9, 3.8213686088796673`*^9}, {3.82139144542446*^9, 
   3.821391456650264*^9}, {3.821541373680984*^9, 
   3.821541383848998*^9}},ExpressionUUID->"9719fb0d-86ad-4321-9b2f-\
73bc0c373b25"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["x", 
     RowBox[{" ", "1"}]], 
    OverscriptBox["\[Tilde]", 
     RowBox[{"!", " ", "f"}]], 
    RowBox[{
     SubscriptBox["x", 
      RowBox[{" ", "2"}]], "   ", "iff", "    ", 
     RowBox[{"\[Del]", 
      SubscriptBox[
       RowBox[{"(", "f", ")"}], 
       SubscriptBox["k", "1"]]}]}]}], "=", 
   RowBox[{"\[Del]", 
    SubscriptBox[
     RowBox[{"(", "f", ")"}], 
     SubscriptBox["k", "2"]]}]}], TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.821276732259329*^9, 3.821276825832243*^9}, {
   3.821276918361699*^9, 3.8212769218005247`*^9}, {3.8212769985621653`*^9, 
   3.821277004661956*^9}, {3.821277053476088*^9, 3.821277080855303*^9}, {
   3.821277125809216*^9, 3.821277150725088*^9}, {3.8212772207630577`*^9, 
   3.821277275471078*^9}, {3.8213201387479553`*^9, 3.8213201769729567`*^9}, {
   3.8213202076178303`*^9, 3.821320339278915*^9}, {3.821320661468869*^9, 
   3.82132078369698*^9}, 3.821350202183504*^9, {3.82135034572885*^9, 
   3.821350353945486*^9}, {3.821350707061246*^9, 3.8213508060617647`*^9}, {
   3.8213603758749733`*^9, 3.821360454870316*^9}, {3.821360636710266*^9, 
   3.821360689694696*^9}, {3.821360722524634*^9, 3.82136072914332*^9}, {
   3.82136829226263*^9, 3.8213682938564243`*^9}, {3.821368328837961*^9, 
   3.8213683531437273`*^9}, {3.821368384193981*^9, 3.821368499017818*^9}, 
   3.82139127510989*^9, {3.82153528378971*^9, 
   3.821535287343697*^9}},ExpressionUUID->"e178bad5-086d-4a68-87cf-\
f45a11babc1d"],

Cell[TextData[{
 "that is, that they\[CloseCurlyQuote]re both changed by ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "8710b3e6-2788-4a37-8e70-91807de0da37"],
 " or they\[CloseCurlyQuote]re both not changed by ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "b5fe616b-0018-4279-8331-4655a8c64c51"],
 ". The relation ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["\[Tilde]", 
    RowBox[{"!", " ", "f"}]], TraditionalForm]],ExpressionUUID->
  "e67c31da-9c25-4446-81da-1293c83e3918"],
 " is obviously reflexive, symmetric, and transitive, being based on equality \
of bits. Thus, ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["\[Tilde]", 
    RowBox[{"!", " ", "f"}]], TraditionalForm]],ExpressionUUID->
  "7c861eb4-2465-46d0-906f-9e933f72c7c0"],
 " is an equivalence relation. As with any equivalence relation, ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["\[Tilde]", 
    RowBox[{"!", " ", "f"}]], TraditionalForm]],ExpressionUUID->
  "4b86c0e9-d5b1-4da8-b3e8-801171b80d7e"],
 " induces a partition of the set of variables into equivalence classes, \
precisely ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["VarsChangedBy",
     FontSlant->"Italic"], "(", "f", ")"}], TraditionalForm]],ExpressionUUID->
  "521607bd-ff8c-4f66-a88c-0e1bbb93dc9c"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["VarsUnchangedBy",
     FontSlant->"Italic"], "(", "f", ")"}], TraditionalForm]],ExpressionUUID->
  "e4de3ff5-8cac-4306-90b8-e6da3a162a68"],
 ". To be explicit, ",
 StyleBox["partitioning",
  FontSlant->"Italic"],
 " means"
}], "Text",
 CellChangeTimes->{{3.821276732259329*^9, 3.821276825832243*^9}, {
   3.821276918361699*^9, 3.8212769218005247`*^9}, {3.8212769985621653`*^9, 
   3.821277004661956*^9}, {3.821277053476088*^9, 3.821277080855303*^9}, {
   3.821277125809216*^9, 3.821277150725088*^9}, {3.8212772207630577`*^9, 
   3.821277275471078*^9}, {3.8213201387479553`*^9, 3.8213201769729567`*^9}, {
   3.8213202076178303`*^9, 3.821320339278915*^9}, {3.821320661468869*^9, 
   3.82132078369698*^9}, 3.821350202183504*^9, {3.82135034572885*^9, 
   3.821350353945486*^9}, {3.821350707061246*^9, 3.8213508060617647`*^9}, {
   3.8213603758749733`*^9, 3.821360454870316*^9}, {3.821360636710266*^9, 
   3.821360689694696*^9}, {3.821360722524634*^9, 3.82136072914332*^9}, {
   3.82136829226263*^9, 3.8213682938564243`*^9}, {3.821368328837961*^9, 
   3.8213683531437273`*^9}, {3.821368384193981*^9, 3.8213684151488*^9}, 
   3.821368615552308*^9, {3.821390872054433*^9, 3.82139090079461*^9}, {
   3.821391294280055*^9, 3.821391314479966*^9}, 3.821391481256871*^9, {
   3.821472628098239*^9, 3.821472648687044*^9}, 3.821472720211156*^9, 
   3.8214728323609543`*^9, {3.821482683589787*^9, 3.8214826963957157`*^9}, {
   3.821483934887341*^9, 3.8214839481929626`*^9}, {3.8215414023142653`*^9, 
   3.821541406598832*^9}},ExpressionUUID->"2f2de24c-68ca-45d7-8278-\
45ac91c52242"],

Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{
      StyleBox["VarsChangedBy",
       FontSlant->"Italic"], "(", "f", ")"}], "\[Intersection]", 
     RowBox[{
      StyleBox["VarsUnchangedBy",
       FontSlant->"Italic"], "(", "f", ")"}], "=", "\[EmptySet]", 
     RowBox[{"the", " ", "empty", " ", "set"}]},
    {
     RowBox[{
      StyleBox["VarsChangedBy",
       FontSlant->"Italic"], "(", "f", ")"}], "\[Union]", 
     RowBox[{
      StyleBox["VarsUnchangedBy",
       FontSlant->"Italic"], "(", "f", ")"}], "=", " ", 
     RowBox[{"the", " ", "set", " ", "of", " ", "all", " ", "variables"}]}
   }], TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.821541495896968*^9, 3.8215416097943773`*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellTags->
  "changed unchanged",ExpressionUUID->"07cc4c66-7b36-4f3b-9d8f-30aaa0c11bd0"],

Cell[TextData[{
 "Formula ",
 
 CounterBox["DisplayFormulaNumbered", "changed unchanged"],
 " is highlighted because it, along with four friends defined immediately \
below, are important to remember."
}], "Text",
 CellChangeTimes->{{3.821541953082203*^9, 3.821542012310183*^9}, {
  3.821542042478222*^9, 
  3.821542042815833*^9}},ExpressionUUID->"7b12c4b6-3434-410e-8270-\
bd01a2f30023"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "4.2 ",
 Cell[BoxData[
  FormBox[
   StyleBox["VarsUsedBy",
    FontSlant->"Italic"], TraditionalForm]],ExpressionUUID->
  "ea1d2d7c-43fc-4331-8a9a-8684fd16b4ed"],
 " and ",
 Cell[BoxData[
  FormBox[
   StyleBox["VarsUnusedBy",
    FontSlant->"Italic"], TraditionalForm]],ExpressionUUID->
  "cbefd0a6-80d9-475a-8543-a5d04b3becba"]
}], "Subsection",
 CellChangeTimes->{{3.8212731038735523`*^9, 3.821273109959982*^9}, {
  3.821275811605528*^9, 3.821275820950986*^9}, {3.821451882258851*^9, 
  3.8214519081424913`*^9}},
 CellTags->"c:13",ExpressionUUID->"0ce205b3-f812-4401-be40-5248af7433e9"],

Cell[TextData[{
 "If the ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],ExpressionUUID->
  "72e27aca-a30a-42ae-ad51-2c82c418b370"],
 "\[NoBreak]-\[NoBreak]th variable, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", "k"], TraditionalForm]],ExpressionUUID->
  "13fc3d3d-1563-451c-9718-25bde8cb1f48"],
 ", is not used by ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "773b323d-17d0-4109-8a91-66c003b198ef"],
 ", then the output for all input states with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["v", "k"], "=", "0"}], TraditionalForm]],ExpressionUUID->
  "1cf8a629-6f96-4406-b9ff-68ee17f86954"],
 " equals the output for all input states with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["v", "k"], "=", "1"}], TraditionalForm]],ExpressionUUID->
  "e4ed1a3c-bd18-4c51-a13e-2a47a9ffcd5a"],
 ", if we ignore ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", "k"], TraditionalForm]],ExpressionUUID->
  "f47f3ead-34da-46e8-a2cc-72027a72c495"],
 " on the output side. For instance, in the table below, the output columns \
for ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["h", "2"], TraditionalForm]],ExpressionUUID->
  "c8892e93-39a5-4d6d-a013-b2f304772e0e"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["r", "1"], TraditionalForm]],ExpressionUUID->
  "464074ae-26b6-4f3b-887a-0aa643994eb1"],
 " and for input ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["h", "1"], "=", "0"}], TraditionalForm]],ExpressionUUID->
  "4b999192-642b-41fc-ad33-b5c0b5529267"],
 ", highlighted in green in the ",
 StyleBox["first",
  FontSlant->"Italic"],
 " four rows, are equal to the output columns for ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["h", "2"], TraditionalForm]],ExpressionUUID->
  "7a940bd9-9d37-4e25-9c77-abba8c3129ff"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["r", "1"], TraditionalForm]],ExpressionUUID->
  "c1abd8a4-9500-443c-b4c1-c0faf3b82679"],
 " and for input ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["h", "1"], "=", "1"}], TraditionalForm]],ExpressionUUID->
  "6caffb86-11c1-456d-a165-549ceaa79c2f"],
 ", highlighted in blue in the ",
 StyleBox["last",
  FontSlant->"Italic"],
 " four rows. "
}], "Text",
 CellChangeTimes->{{3.821451959818853*^9, 3.821451978535452*^9}, {
  3.82145232337197*^9, 3.821452343187346*^9}, {3.821452529399393*^9, 
  3.8214527586520357`*^9}, {3.821453258268322*^9, 3.8214532745291643`*^9}, {
  3.8214533185289793`*^9, 3.821453446206253*^9}, {3.821453733284975*^9, 
  3.8214538564089737`*^9}, {3.821453899754923*^9, 3.821453913009165*^9}, {
  3.821454650747736*^9, 3.821454651852161*^9}, {3.821454705525158*^9, 
  3.821454708246613*^9}, {3.821454787656534*^9, 3.821454797682529*^9}, {
  3.82145637974471*^9, 3.821456429555416*^9}, {3.8214729403406277`*^9, 
  3.821472979773138*^9}, {3.821473026853796*^9, 3.8214732001362762`*^9}, {
  3.821482745968074*^9, 3.821482763482477*^9}, {3.821541658150485*^9, 
  3.821541672491119*^9}},ExpressionUUID->"b8b47e38-8036-444f-9592-\
60b3df9c63f3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{GridBox[{
     {" ", 
      SubscriptBox["h", "1"], 
      SubscriptBox["h", "2"], 
      SubscriptBox["r", "1"], " ", 
      SubscriptBox["h", "1"], 
      SubscriptBox["h", "2"], 
      SubscriptBox["r", "1"]},
     {
      SubscriptBox["\[Psi]", "1"], "0", "0", "0", 
      "\"\<f(\!\(\*SubscriptBox[\(\[Psi]\), \(1\)]\))\>\"", "0", "0", "0"},
     {
      SubscriptBox["\[Psi]", "2"], "0", "0", "1", 
      "\"\<f(\!\(\*SubscriptBox[\(\[Psi]\), \(2\)]\))\>\"", "0", "1", "1"},
     {
      SubscriptBox["\[Psi]", "3"], "0", "1", "0", 
      "\"\<f(\!\(\*SubscriptBox[\(\[Psi]\), \(3\)]\))\>\"", "0", "0", "0"},
     {
      SubscriptBox["\[Psi]", "4"], "0", "1", "1", 
      "\"\<f(\!\(\*SubscriptBox[\(\[Psi]\), \(4\)]\))\>\"", "0", "1", "1"},
     {
      SubscriptBox["\[Psi]", "5"], "1", "0", "0", 
      "\"\<f(\!\(\*SubscriptBox[\(\[Psi]\), \(5\)]\))\>\"", "1", "0", "0"},
     {
      SubscriptBox["\[Psi]", "6"], "1", "0", "1", 
      "\"\<f(\!\(\*SubscriptBox[\(\[Psi]\), \(6\)]\))\>\"", "1", "1", "1"},
     {
      SubscriptBox["\[Psi]", "7"], "1", "1", "0", 
      "\"\<f(\!\(\*SubscriptBox[\(\[Psi]\), \(7\)]\))\>\"", "1", "0", "0"},
     {
      SubscriptBox["\[Psi]", "8"], "1", "1", "1", 
      "\"\<f(\!\(\*SubscriptBox[\(\[Psi]\), \(8\)]\))\>\"", "1", "1", "1"}
    }], ",", "\[IndentingNewLine]", 
   RowBox[{"Background", "\[Rule]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"None", ",", "None", ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "2"}], "}"}]}], "}"}], "\[Rule]", 
         "LightGreen"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"7", ",", "8"}], "}"}]}], "}"}], "\[Rule]", 
         "LightGreen"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"6", ",", "9"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "2"}], "}"}]}], "}"}], "\[Rule]", "LightBlue"}],
         ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"6", ",", "9"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"7", ",", "8"}], "}"}]}], "}"}], "\[Rule]", 
         "LightBlue"}]}], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"None", ",", "None", ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"6", ",", "8"}], "}"}]}], "}"}], "\[Rule]", "True"}], ",",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "9"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"5", ",", "5"}], "}"}]}], "}"}], "\[Rule]", "True"}], ",",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "9"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"6", ",", "8"}], "}"}]}], "}"}], "\[Rule]", "True"}], ",",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "9"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"9", ",", "9"}], "}"}]}], "}"}], "\[Rule]", "True"}], ",",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "\[Rule]", "True"}], ",",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "9"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "\[Rule]", "True"}], ",",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "9"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "\[Rule]", "True"}]}], 
       "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821439451332171*^9, 3.821439483235721*^9}, {
   3.821439513469924*^9, 3.821439664527225*^9}, {3.8214397611815*^9, 
   3.821439916207294*^9}, {3.821439951649825*^9, 3.8214399813720903`*^9}, {
   3.82144003363345*^9, 3.821440103415723*^9}, {3.821440140173809*^9, 
   3.8214401574819736`*^9}, {3.821441724094194*^9, 3.8214417641404457`*^9}, {
   3.82144184346949*^9, 3.821441848780486*^9}, {3.8214418825024223`*^9, 
   3.8214420115416107`*^9}, {3.821442050418539*^9, 3.8214420559973803`*^9}, {
   3.8214421363937674`*^9, 3.82144219156496*^9}, {3.8214422435452137`*^9, 
   3.8214424324556713`*^9}, {3.8214424735742197`*^9, 
   3.8214425837296762`*^9}, {3.821442648218877*^9, 3.821442648910405*^9}, {
   3.821443209822307*^9, 3.821443535923685*^9}, {3.821443566503357*^9, 
   3.82144359869379*^9}, {3.8214436512856293`*^9, 3.821443877956255*^9}, {
   3.8214486137806396`*^9, 3.821448791575824*^9}, {3.8214539478498297`*^9, 
   3.821453992115829*^9}, {3.821454182224613*^9, 3.821454237222056*^9}, {
   3.82145427153769*^9, 3.8214546162726383`*^9}, 3.82145467088695*^9, {
   3.821454736492202*^9, 3.82145476125699*^9}, 3.8214548021582537`*^9, {
   3.821454948271805*^9, 3.82145495648289*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"844a75ba-6941-4312-86d2-7dc4ba2e26f6"],

Cell[BoxData[
 TagBox[GridBox[{
    {"", 
     SubscriptBox["h", "1"], 
     SubscriptBox["h", "2"], 
     SubscriptBox["r", "1"], "", 
     SubscriptBox["h", "1"], 
     SubscriptBox["h", "2"], 
     SubscriptBox["r", "1"]},
    {
     SubscriptBox["\[Psi]", "1"], "0", "0", 
     "0", "\<\"f(\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(1\\)]\\))\"\>", "0", 
     "0", "0"},
    {
     SubscriptBox["\[Psi]", "2"], "0", "0", 
     "1", "\<\"f(\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(2\\)]\\))\"\>", "0", 
     "1", "1"},
    {
     SubscriptBox["\[Psi]", "3"], "0", "1", 
     "0", "\<\"f(\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(3\\)]\\))\"\>", "0", 
     "0", "0"},
    {
     SubscriptBox["\[Psi]", "4"], "0", "1", 
     "1", "\<\"f(\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(4\\)]\\))\"\>", "0", 
     "1", "1"},
    {
     SubscriptBox["\[Psi]", "5"], "1", "0", 
     "0", "\<\"f(\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(5\\)]\\))\"\>", "1", 
     "0", "0"},
    {
     SubscriptBox["\[Psi]", "6"], "1", "0", 
     "1", "\<\"f(\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(6\\)]\\))\"\>", "1", 
     "1", "1"},
    {
     SubscriptBox["\[Psi]", "7"], "1", "1", 
     "0", "\<\"f(\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(7\\)]\\))\"\>", "1", 
     "0", "0"},
    {
     SubscriptBox["\[Psi]", "8"], "1", "1", 
     "1", "\<\"f(\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(8\\)]\\))\"\>", "1", 
     "1", "1"}
   },
   AutoDelete->False,
   GridBoxBackground->{
    "Columns" -> {{None}}, "Rows" -> {{None}}, 
     "ItemsIndexed" -> {{{2, 5}, {2, 2}} -> 
       RGBColor[0.88, 1, 0.88], {{2, 5}, {7, 8}} -> 
       RGBColor[0.88, 1, 0.88], {{6, 9}, {2, 2}} -> 
       RGBColor[0.87, 0.94, 1], {{6, 9}, {7, 8}} -> RGBColor[0.87, 0.94, 1]}},
   GridBoxFrame->{
    "Columns" -> None, "Rows" -> None, 
     "ItemsIndexed" -> {{{1, 1}, {6, 8}} -> True, {{2, 9}, {5, 5}} -> 
       True, {{2, 9}, {6, 8}} -> True, {{2, 9}, {9, 9}} -> 
       True, {{1, 1}, {2, 4}} -> True, {{2, 9}, {1, 1}} -> 
       True, {{2, 9}, {2, 4}} -> True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.821454068810474*^9, {3.821454204699131*^9, 3.821454216976061*^9}, {
   3.8214542616412983`*^9, 3.821454323517466*^9}, {3.821454381966978*^9, 
   3.8214544926547117`*^9}, {3.821454539902474*^9, 3.821454617741605*^9}, 
   3.82145467788225*^9, 3.821454762138618*^9, 3.821454957609694*^9, 
   3.8214928823961573`*^9, 3.8215332396088142`*^9, 3.821533775524124*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"32d51a1e-e34e-4d36-b0b2-eb35aba89d1f"]
}, {2}]],

Cell[TextData[{
 "The equality of the green and blue output blocks means that ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "94c54153-7294-4b23-be2d-5482211d6900"],
 " does not use ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["h", "1"], TraditionalForm]],ExpressionUUID->
  "01bafa20-8bd7-438a-8224-902d5defd4d8"],
 ". Let\[CloseCurlyQuote]s rearrange the input rows for visual convenience, \
and see whether ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "1aab97f7-09d8-416e-9a8d-700f64b658ef"],
 " uses ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["h", "2"], TraditionalForm]],ExpressionUUID->
  "7c0dea52-6d2f-4ff4-bf46-88976e13439f"],
 ". We\[CloseCurlyQuote]ll put the rows and states with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["h", "2"], "=", "0"}], TraditionalForm]],ExpressionUUID->
  "bfcda731-f618-4777-a3d8-b68c2b283f9c"],
 " at the top of the table and the rows and states with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["h", "2"], "=", "1"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "45290bdf-45c8-4193-98c0-41a8dbb3b979"],
 " at the bottom:"
}], "Text",
 CellChangeTimes->{{3.821451959818853*^9, 3.821451978535452*^9}, {
  3.82145232337197*^9, 3.821452343187346*^9}, {3.821452529399393*^9, 
  3.8214527586520357`*^9}, {3.821453258268322*^9, 3.8214532745291643`*^9}, {
  3.8214533185289793`*^9, 3.821453446206253*^9}, {3.821453733284975*^9, 
  3.821453853887416*^9}, {3.821454988284548*^9, 3.821454999591296*^9}, {
  3.821456057578926*^9, 3.8214560729187613`*^9}, {3.8214564458332367`*^9, 
  3.821456457471261*^9}, {3.821473226088552*^9, 3.821473253281631*^9}, {
  3.821482805731957*^9, 3.8214828071589527`*^9}, {3.821541719508835*^9, 
  3.821541734432757*^9}},ExpressionUUID->"4ab64029-516c-4041-b96b-\
ae24f7b2d822"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{GridBox[{
     {" ", 
      SubscriptBox["h", "1"], 
      SubscriptBox["h", "2"], 
      SubscriptBox["r", "1"], " ", 
      SubscriptBox["h", "1"], 
      SubscriptBox["h", "2"], 
      SubscriptBox["r", "1"]},
     {
      SubscriptBox["\[Psi]", "1"], "0", "0", "0", 
      "\"\<f(\!\(\*SubscriptBox[\(\[Psi]\), \(1\)]\))\>\"", "0", "0", "0"},
     {
      SubscriptBox["\[Psi]", "2"], "0", "0", "1", 
      "\"\<f(\!\(\*SubscriptBox[\(\[Psi]\), \(2\)]\))\>\"", "0", "1", "1"},
     {
      SubscriptBox["\[Psi]", "5"], "1", "0", "0", 
      "\"\<f(\!\(\*SubscriptBox[\(\[Psi]\), \(5\)]\))\>\"", "1", "0", "0"},
     {
      SubscriptBox["\[Psi]", "6"], "1", "0", "1", 
      "\"\<f(\!\(\*SubscriptBox[\(\[Psi]\), \(6\)]\))\>\"", "1", "1", "1"},
     {
      SubscriptBox["\[Psi]", "3"], "0", "1", "0", 
      "\"\<f(\!\(\*SubscriptBox[\(\[Psi]\), \(3\)]\))\>\"", "0", "0", "0"},
     {
      SubscriptBox["\[Psi]", "4"], "0", "1", "1", 
      "\"\<f(\!\(\*SubscriptBox[\(\[Psi]\), \(4\)]\))\>\"", "0", "1", "1"},
     {
      SubscriptBox["\[Psi]", "7"], "1", "1", "0", 
      "\"\<f(\!\(\*SubscriptBox[\(\[Psi]\), \(7\)]\))\>\"", "1", "0", "0"},
     {
      SubscriptBox["\[Psi]", "8"], "1", "1", "1", 
      "\"\<f(\!\(\*SubscriptBox[\(\[Psi]\), \(8\)]\))\>\"", "1", "1", "1"}
    }], ",", "\[IndentingNewLine]", 
   RowBox[{"Background", "\[Rule]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"None", ",", "None", ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "3"}], "}"}]}], "}"}], "\[Rule]", 
         "LightGreen"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"6", ",", "6"}], "}"}]}], "}"}], "\[Rule]", 
         "LightGreen"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"8", ",", "8"}], "}"}]}], "}"}], "\[Rule]", 
         "LightGreen"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"6", ",", "9"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "3"}], "}"}]}], "}"}], "\[Rule]", "LightBlue"}],
         ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"6", ",", "9"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"6", ",", "6"}], "}"}]}], "}"}], "\[Rule]", "LightBlue"}],
         ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"6", ",", "9"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"8", ",", "8"}], "}"}]}], "}"}], "\[Rule]", 
         "LightBlue"}]}], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"None", ",", "None", ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"6", ",", "8"}], "}"}]}], "}"}], "\[Rule]", "True"}], ",",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "9"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"5", ",", "5"}], "}"}]}], "}"}], "\[Rule]", "True"}], ",",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "9"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"6", ",", "8"}], "}"}]}], "}"}], "\[Rule]", "True"}], ",",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "9"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"9", ",", "9"}], "}"}]}], "}"}], "\[Rule]", "True"}], ",",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "\[Rule]", "True"}], ",",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "9"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "\[Rule]", "True"}], ",",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "9"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "\[Rule]", "True"}]}], 
       "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821439451332171*^9, 3.821439483235721*^9}, {
   3.821439513469924*^9, 3.821439664527225*^9}, {3.8214397611815*^9, 
   3.821439916207294*^9}, {3.821439951649825*^9, 3.8214399813720903`*^9}, {
   3.82144003363345*^9, 3.821440103415723*^9}, {3.821440140173809*^9, 
   3.8214401574819736`*^9}, {3.821441724094194*^9, 3.8214417641404457`*^9}, {
   3.82144184346949*^9, 3.821441848780486*^9}, {3.8214418825024223`*^9, 
   3.8214420115416107`*^9}, {3.821442050418539*^9, 3.8214420559973803`*^9}, {
   3.8214421363937674`*^9, 3.82144219156496*^9}, {3.8214422435452137`*^9, 
   3.8214424324556713`*^9}, {3.8214424735742197`*^9, 
   3.8214425837296762`*^9}, {3.821442648218877*^9, 3.821442648910405*^9}, {
   3.821443209822307*^9, 3.821443535923685*^9}, {3.821443566503357*^9, 
   3.82144359869379*^9}, {3.8214436512856293`*^9, 3.821443877956255*^9}, {
   3.8214486137806396`*^9, 3.821448791575824*^9}, {3.8214539478498297`*^9, 
   3.821453992115829*^9}, {3.821454182224613*^9, 3.821454237222056*^9}, {
   3.82145427153769*^9, 3.8214546162726383`*^9}, 3.82145467088695*^9, {
   3.821454736492202*^9, 3.82145476125699*^9}, 3.8214548021582537`*^9, {
   3.821454948271805*^9, 3.82145495648289*^9}, {3.821455814228936*^9, 
   3.821455921473193*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"703460b4-3edf-4a1d-b70a-454c1df678f2"],

Cell[BoxData[
 TagBox[GridBox[{
    {"", 
     SubscriptBox["h", "1"], 
     SubscriptBox["h", "2"], 
     SubscriptBox["r", "1"], "", 
     SubscriptBox["h", "1"], 
     SubscriptBox["h", "2"], 
     SubscriptBox["r", "1"]},
    {
     SubscriptBox["\[Psi]", "1"], "0", "0", 
     "0", "\<\"f(\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(1\\)]\\))\"\>", "0", 
     "0", "0"},
    {
     SubscriptBox["\[Psi]", "2"], "0", "0", 
     "1", "\<\"f(\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(2\\)]\\))\"\>", "0", 
     "1", "1"},
    {
     SubscriptBox["\[Psi]", "5"], "1", "0", 
     "0", "\<\"f(\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(5\\)]\\))\"\>", "1", 
     "0", "0"},
    {
     SubscriptBox["\[Psi]", "6"], "1", "0", 
     "1", "\<\"f(\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(6\\)]\\))\"\>", "1", 
     "1", "1"},
    {
     SubscriptBox["\[Psi]", "3"], "0", "1", 
     "0", "\<\"f(\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(3\\)]\\))\"\>", "0", 
     "0", "0"},
    {
     SubscriptBox["\[Psi]", "4"], "0", "1", 
     "1", "\<\"f(\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(4\\)]\\))\"\>", "0", 
     "1", "1"},
    {
     SubscriptBox["\[Psi]", "7"], "1", "1", 
     "0", "\<\"f(\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(7\\)]\\))\"\>", "1", 
     "0", "0"},
    {
     SubscriptBox["\[Psi]", "8"], "1", "1", 
     "1", "\<\"f(\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(8\\)]\\))\"\>", "1", 
     "1", "1"}
   },
   AutoDelete->False,
   GridBoxBackground->{
    "Columns" -> {{None}}, "Rows" -> {{None}}, 
     "ItemsIndexed" -> {{{2, 5}, {3, 3}} -> 
       RGBColor[0.88, 1, 0.88], {{2, 5}, {6, 6}} -> 
       RGBColor[0.88, 1, 0.88], {{2, 5}, {8, 8}} -> 
       RGBColor[0.88, 1, 0.88], {{6, 9}, {3, 3}} -> 
       RGBColor[0.87, 0.94, 1], {{6, 9}, {6, 6}} -> 
       RGBColor[0.87, 0.94, 1], {{6, 9}, {8, 8}} -> RGBColor[0.87, 0.94, 1]}},
   GridBoxFrame->{
    "Columns" -> None, "Rows" -> None, 
     "ItemsIndexed" -> {{{1, 1}, {6, 8}} -> True, {{2, 9}, {5, 5}} -> 
       True, {{2, 9}, {6, 8}} -> True, {{2, 9}, {9, 9}} -> 
       True, {{1, 1}, {2, 4}} -> True, {{2, 9}, {1, 1}} -> 
       True, {{2, 9}, {2, 4}} -> True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.821454068810474*^9, {3.821454204699131*^9, 3.821454216976061*^9}, {
   3.8214542616412983`*^9, 3.821454323517466*^9}, {3.821454381966978*^9, 
   3.8214544926547117`*^9}, {3.821454539902474*^9, 3.821454617741605*^9}, 
   3.82145467788225*^9, 3.821454762138618*^9, 3.821454957609694*^9, {
   3.821455839381822*^9, 3.821455858409401*^9}, 3.8214558896138277`*^9, 
   3.821455922449107*^9, 3.821492882421137*^9, 3.821533239648305*^9, 
   3.821533775560231*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"b2f52387-7ce5-4c8e-bae5-f227a422e438"]
}, {2}]],

Cell[TextData[{
 "Again, the equality of the green and blue highlighted output blocks shows \
that ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "2b75ffe3-e3a7-49d3-a75c-17599f634e5d"],
 " does not use ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["h", "2"], TraditionalForm]],ExpressionUUID->
  "b5f99a9a-02fe-48c2-89a5-acbee4563412"],
 ". Notice, however, that ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["h", "2"], TraditionalForm]],ExpressionUUID->
  "fd71f107-e2aa-4f19-918b-aa8ad5378537"],
 " is changed by ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "ab12e3e1-d4c8-4af1-9f07-52191e843356"],
 ", even though it\[CloseCurlyQuote]s not used by ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "c130cc6c-850c-4da3-a8bc-16bcf875975b"],
 ". That fact shows that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["VarsChangedBy",
     FontSlant->"Italic"], "(", "f", ")"}], TraditionalForm]],ExpressionUUID->
  "06fee5db-4c2e-4545-8536-fef5d9a1997c"],
 " can overlap ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["VarsUnusedBy",
     FontSlant->"Italic"], "(", "f", ")"}], TraditionalForm]],ExpressionUUID->
  "bae5292c-6afa-4fdf-9de9-f39a34e2b2a8"],
 ". That's important to remember: "
}], "Text",
 CellChangeTimes->{{3.821455329455955*^9, 3.821455383619347*^9}, {
  3.821456001161765*^9, 3.821456023714368*^9}, {3.821456481727859*^9, 
  3.82145648905951*^9}, {3.821463638670809*^9, 3.821463667965002*^9}, {
  3.821463827423202*^9, 3.8214638612135963`*^9}, {3.821482835521223*^9, 
  3.821482904030368*^9}, {3.821483554660161*^9, 3.82148356832119*^9}, {
  3.8215417478321867`*^9, 
  3.8215417790204906`*^9}},ExpressionUUID->"abe3cc6f-7d31-49ba-af84-\
99c6bbdcd9b5"],

Cell[BoxData[
 FormBox[
  RowBox[{GridBox[{
     {
      RowBox[{
       StyleBox["VarsChangedBy",
        FontSlant->"Italic"], "(", "f", ")"}], "\[Intersection]", 
      RowBox[{
       StyleBox["VarsUnusedBy",
        FontSlant->"Italic"], "(", "f", ")"}]}
    }], " ", "may", " ", "not", " ", "be", " ", "empty"}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.821483595847278*^9, 3.821483684608032*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellTags->
  "changed unused",ExpressionUUID->"ef577549-3985-4d7e-aa7e-04b17d14b1e6"],

Cell[TextData[{
 "Let's rearrange once more and check ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["r", "1"], TraditionalForm]],ExpressionUUID->
  "2ec9081b-cada-477c-823e-ff1c2b6a9bfa"],
 ":"
}], "Text",
 CellChangeTimes->{{3.821455329455955*^9, 3.821455383619347*^9}, {
  3.821456001161765*^9, 3.821456023714368*^9}, {3.821456481727859*^9, 
  3.82145648905951*^9}, {3.821463638670809*^9, 3.821463667965002*^9}, {
  3.821463827423202*^9, 3.8214638612135963`*^9}, {3.821482835521223*^9, 
  3.821482904030368*^9}},ExpressionUUID->"c64fcd02-c9d0-45f0-997b-\
5513848e9a2d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{GridBox[{
     {" ", 
      SubscriptBox["h", "1"], 
      SubscriptBox["h", "2"], 
      SubscriptBox["r", "1"], " ", 
      SubscriptBox["h", "1"], 
      SubscriptBox["h", "2"], 
      SubscriptBox["r", "1"]},
     {
      SubscriptBox["\[Psi]", "1"], "0", "0", "0", 
      "\"\<f(\!\(\*SubscriptBox[\(\[Psi]\), \(1\)]\))\>\"", "0", "0", "0"},
     {
      SubscriptBox["\[Psi]", "3"], "0", "1", "0", 
      "\"\<f(\!\(\*SubscriptBox[\(\[Psi]\), \(3\)]\))\>\"", "0", "0", "0"},
     {
      SubscriptBox["\[Psi]", "5"], "1", "0", "0", 
      "\"\<f(\!\(\*SubscriptBox[\(\[Psi]\), \(5\)]\))\>\"", "1", "0", "0"},
     {
      SubscriptBox["\[Psi]", "7"], "1", "1", "0", 
      "\"\<f(\!\(\*SubscriptBox[\(\[Psi]\), \(7\)]\))\>\"", "1", "0", "0"},
     {
      SubscriptBox["\[Psi]", "2"], "0", "0", "1", 
      "\"\<f(\!\(\*SubscriptBox[\(\[Psi]\), \(2\)]\))\>\"", "0", "1", "1"},
     {
      SubscriptBox["\[Psi]", "4"], "0", "1", "1", 
      "\"\<f(\!\(\*SubscriptBox[\(\[Psi]\), \(4\)]\))\>\"", "0", "1", "1"},
     {
      SubscriptBox["\[Psi]", "6"], "1", "0", "1", 
      "\"\<f(\!\(\*SubscriptBox[\(\[Psi]\), \(6\)]\))\>\"", "1", "1", "1"},
     {
      SubscriptBox["\[Psi]", "8"], "1", "1", "1", 
      "\"\<f(\!\(\*SubscriptBox[\(\[Psi]\), \(8\)]\))\>\"", "1", "1", "1"}
    }], ",", "\[IndentingNewLine]", 
   RowBox[{"Background", "\[Rule]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"None", ",", "None", ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"4", ",", "4"}], "}"}]}], "}"}], "\[Rule]", 
         "LightGreen"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"6", ",", "7"}], "}"}]}], "}"}], "\[Rule]", 
         "LightYellow"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"6", ",", "9"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"4", ",", "4"}], "}"}]}], "}"}], "\[Rule]", "LightBlue"}],
         ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"6", ",", "9"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"6", ",", "7"}], "}"}]}], "}"}], "\[Rule]", 
         "LightRed"}]}], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"None", ",", "None", ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"6", ",", "8"}], "}"}]}], "}"}], "\[Rule]", "True"}], ",",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "9"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"5", ",", "5"}], "}"}]}], "}"}], "\[Rule]", "True"}], ",",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "9"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"6", ",", "8"}], "}"}]}], "}"}], "\[Rule]", "True"}], ",",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "9"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"9", ",", "9"}], "}"}]}], "}"}], "\[Rule]", "True"}], ",",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "\[Rule]", "True"}], ",",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "9"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "\[Rule]", "True"}], ",",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "9"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "\[Rule]", "True"}]}], 
       "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821439451332171*^9, 3.821439483235721*^9}, {
   3.821439513469924*^9, 3.821439664527225*^9}, {3.8214397611815*^9, 
   3.821439916207294*^9}, {3.821439951649825*^9, 3.8214399813720903`*^9}, {
   3.82144003363345*^9, 3.821440103415723*^9}, {3.821440140173809*^9, 
   3.8214401574819736`*^9}, {3.821441724094194*^9, 3.8214417641404457`*^9}, {
   3.82144184346949*^9, 3.821441848780486*^9}, {3.8214418825024223`*^9, 
   3.8214420115416107`*^9}, {3.821442050418539*^9, 3.8214420559973803`*^9}, {
   3.8214421363937674`*^9, 3.82144219156496*^9}, {3.8214422435452137`*^9, 
   3.8214424324556713`*^9}, {3.8214424735742197`*^9, 
   3.8214425837296762`*^9}, {3.821442648218877*^9, 3.821442648910405*^9}, {
   3.821443209822307*^9, 3.821443535923685*^9}, {3.821443566503357*^9, 
   3.82144359869379*^9}, {3.8214436512856293`*^9, 3.821443877956255*^9}, {
   3.8214486137806396`*^9, 3.821448791575824*^9}, {3.8214539478498297`*^9, 
   3.821453992115829*^9}, {3.821454182224613*^9, 3.821454237222056*^9}, {
   3.82145427153769*^9, 3.8214546162726383`*^9}, 3.82145467088695*^9, {
   3.821454736492202*^9, 3.82145476125699*^9}, 3.8214548021582537`*^9, {
   3.821454948271805*^9, 3.82145495648289*^9}, {3.821456111767065*^9, 
   3.8214561462210693`*^9}, {3.821456180088223*^9, 3.821456237024713*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"da6b44e6-973d-4a6e-97e4-7805f796eec1"],

Cell[BoxData[
 TagBox[GridBox[{
    {"", 
     SubscriptBox["h", "1"], 
     SubscriptBox["h", "2"], 
     SubscriptBox["r", "1"], "", 
     SubscriptBox["h", "1"], 
     SubscriptBox["h", "2"], 
     SubscriptBox["r", "1"]},
    {
     SubscriptBox["\[Psi]", "1"], "0", "0", 
     "0", "\<\"f(\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(1\\)]\\))\"\>", "0", 
     "0", "0"},
    {
     SubscriptBox["\[Psi]", "3"], "0", "1", 
     "0", "\<\"f(\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(3\\)]\\))\"\>", "0", 
     "0", "0"},
    {
     SubscriptBox["\[Psi]", "5"], "1", "0", 
     "0", "\<\"f(\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(5\\)]\\))\"\>", "1", 
     "0", "0"},
    {
     SubscriptBox["\[Psi]", "7"], "1", "1", 
     "0", "\<\"f(\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(7\\)]\\))\"\>", "1", 
     "0", "0"},
    {
     SubscriptBox["\[Psi]", "2"], "0", "0", 
     "1", "\<\"f(\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(2\\)]\\))\"\>", "0", 
     "1", "1"},
    {
     SubscriptBox["\[Psi]", "4"], "0", "1", 
     "1", "\<\"f(\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(4\\)]\\))\"\>", "0", 
     "1", "1"},
    {
     SubscriptBox["\[Psi]", "6"], "1", "0", 
     "1", "\<\"f(\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(6\\)]\\))\"\>", "1", 
     "1", "1"},
    {
     SubscriptBox["\[Psi]", "8"], "1", "1", 
     "1", "\<\"f(\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(8\\)]\\))\"\>", "1", 
     "1", "1"}
   },
   AutoDelete->False,
   GridBoxBackground->{
    "Columns" -> {{None}}, "Rows" -> {{None}}, 
     "ItemsIndexed" -> {{{2, 5}, {4, 4}} -> 
       RGBColor[0.88, 1, 0.88], {{2, 5}, {6, 7}} -> 
       RGBColor[1, 1, 0.85], {{6, 9}, {4, 4}} -> 
       RGBColor[0.87, 0.94, 1], {{6, 9}, {6, 7}} -> RGBColor[1, 0.85, 0.85]}},
   GridBoxFrame->{
    "Columns" -> None, "Rows" -> None, 
     "ItemsIndexed" -> {{{1, 1}, {6, 8}} -> True, {{2, 9}, {5, 5}} -> 
       True, {{2, 9}, {6, 8}} -> True, {{2, 9}, {9, 9}} -> 
       True, {{1, 1}, {2, 4}} -> True, {{2, 9}, {1, 1}} -> 
       True, {{2, 9}, {2, 4}} -> True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.821454068810474*^9, {3.821454204699131*^9, 3.821454216976061*^9}, {
   3.8214542616412983`*^9, 3.821454323517466*^9}, {3.821454381966978*^9, 
   3.8214544926547117`*^9}, {3.821454539902474*^9, 3.821454617741605*^9}, 
   3.82145467788225*^9, 3.821454762138618*^9, 3.821454957609694*^9, {
   3.821456184320381*^9, 3.821456237883095*^9}, 3.8214928824489183`*^9, 
   3.8215332396853113`*^9, 3.821533775597247*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"1d6514b3-0018-45f8-936d-0d918d67e6af"]
}, {2}]],

Cell[TextData[{
 "Sure enough, the highlighted output blocks are not equal. We\
\[CloseCurlyQuote]ve changed colors to suggest \
\[OpenCurlyDoubleQuote]warning.\[CloseCurlyDoubleQuote] The meaning is that ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "9bf211e3-a496-471a-acbd-d1ce5f00cb67"],
 " ",
 StyleBox["does",
  FontSlant->"Italic"],
 " use ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["r", "1"], TraditionalForm]],ExpressionUUID->
  "ec1863c0-b15e-469c-b639-167afb4ce126"],
 ". We also see that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["VarsUnchangedBy",
     FontSlant->"Italic"], "(", "f", ")"}], TraditionalForm]],ExpressionUUID->
  "fe5d605e-bb46-45f3-b393-f844f57139ca"],
 " can overlap ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["VarsUsedBy",
     FontSlant->"Italic"], "(", "f", ")"}], TraditionalForm]],ExpressionUUID->
  "be7f5b55-848d-4cc7-a804-417d1d195acd"],
 " because ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["r", "1"], TraditionalForm]],ExpressionUUID->
  "9dff7a47-e360-4a5e-a83a-cb6a8e723351"],
 " is not changed by ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "d856b8a3-18ed-4596-b56c-a827ad3c71f6"],
 ":"
}], "Text",
 CellChangeTimes->{{3.821456256030587*^9, 3.82145631407162*^9}, {
  3.82145652021765*^9, 3.821456521750531*^9}, {3.82145703044144*^9, 
  3.8214570342646303`*^9}, {3.821463874944161*^9, 3.8214638767231493`*^9}, {
  3.82148294827395*^9, 3.821483017755021*^9}, {3.821483729155937*^9, 
  3.821483768954486*^9}, {3.821541807765938*^9, 
  3.821541849375464*^9}},ExpressionUUID->"39a6c105-e29d-4eaf-b782-\
5c6051d05494"],

Cell[BoxData[
 FormBox[
  RowBox[{GridBox[{
     {
      RowBox[{
       StyleBox["VarsUsedBy",
        FontSlant->"Italic"], "(", "f", ")"}], "\[Intersection]", 
      RowBox[{
       StyleBox["VarsUnchangedBy",
        FontSlant->"Italic"], "(", "f", ")"}]}
    }], " ", "may", " ", "not", " ", "be", " ", "empty"}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.821483595847278*^9, 3.821483684608032*^9}, {
  3.821483743968438*^9, 3.8214837493057957`*^9}, {3.821484502293392*^9, 
  3.821484508399577*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellTags->
  "used unchanged",ExpressionUUID->"3e6760e7-d3fc-4fa9-b6fc-0480300427af"],

Cell[TextData[{
 "In general, even in our huge, notional, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["2", "831488"], "\[Times]", "831488"}], TraditionalForm]],
  ExpressionUUID->"c3531344-01bb-49a3-ba65-aaa9361586e0"],
 " table for the bank, it is clear that any variable ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]],ExpressionUUID->
  "76360d97-9eac-4782-b2d3-dcdb2ded1552"],
 " is either used or not used by ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "e8305a84-2c5f-4dc7-8271-c926dd0fcbb0"],
 ", because the output blocks for inputs ",
 Cell[BoxData[
  FormBox[
   RowBox[{"v", "=", "0"}], TraditionalForm]],ExpressionUUID->
  "c5e4f0fc-7789-4caf-b5f1-be2467c340a5"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"v", "=", "1"}], TraditionalForm]],ExpressionUUID->
  "e58a4f74-e377-4688-8bad-e08e0aa8d017"],
 ", striking out the column for ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]],ExpressionUUID->
  "d25a5ff0-abc5-440f-985a-adda592568da"],
 ", are either equal or not equal. An equivalence relation for this \
happenstance exists because the variables are partitioned into ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     StyleBox["VarsUsedBy",
      FontSlant->"Italic"], "(", "f", ")"}],
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "3fea06b9-6be6-49a5-ad58-9a5d0eb792a5"],
 " and ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     StyleBox["VarsUnusedBy",
      FontSlant->"Italic"], "(", "f", ")"}],
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "b77d26e1-df36-4eb2-8d64-e864fdfa8cbc"],
 ". "
}], "Text",
 CellChangeTimes->{{3.821457173220751*^9, 3.8214573313276253`*^9}, {
   3.82145737867138*^9, 3.821457522241972*^9}, {3.821463887822371*^9, 
   3.821464005605297*^9}, {3.821473341181497*^9, 3.8214734978646593`*^9}, {
   3.821481472626108*^9, 3.8214815713101683`*^9}, 3.821481698121853*^9, {
   3.821483045306964*^9, 3.82148306455124*^9}, {3.821541878191106*^9, 
   3.8215418867494173`*^9}},ExpressionUUID->"b79f452e-2088-4778-ae06-\
bcd877cadc11"],

Cell[TextData[{
 "Formalizing that equivalence relation is straightforward, but I did not \
find a way without tedious notation. However, because we know the equivalence \
relation exists, we can name it. Let us say that two variables, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", 
    RowBox[{" ", "1"}]], TraditionalForm]],ExpressionUUID->
  "9e2dc688-d62a-49af-a671-3be2f7daa23a"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", 
    RowBox[{" ", "2"}]], TraditionalForm]],ExpressionUUID->
  "883259a4-dbae-4b17-8d8c-587c0daf83fc"],
 ", are ",
 StyleBox["equivalent under application of f",
  FontSlant->"Italic"],
 ", written ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", 
     RowBox[{" ", "1"}]], 
    OverscriptBox["\[Tilde]", 
     RowBox[{"f", " ", "@"}]], 
    SubscriptBox["x", 
     RowBox[{" ", "2"}]]}], TraditionalForm]],ExpressionUUID->
  "354c623e-83c7-44db-a93b-58f7c66315ac"],
 ", iff they are both used by ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "46458265-ffc3-47af-b9bb-b2439e99af8e"],
 " or both not used by ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "60252ac4-a6ee-4c03-ade5-c5d9a83264da"],
 ". The equivalence classes induces the partitions ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["VarsUsedBy",
     FontSlant->"Italic"], "(", "f", ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "9c9f80e4-a800-47c1-84dd-f6186f7f8cd0"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["VarsUnusedBy",
     FontSlant->"Italic"], "(", "f", ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "7e118ae3-449a-4fd2-95a3-d7c2b30b1187"],
 ". Explicitly,"
}], "Text",
 CellChangeTimes->{{3.821457173220751*^9, 3.8214573313276253`*^9}, {
   3.82145737867138*^9, 3.821457522241972*^9}, {3.821463887822371*^9, 
   3.821464005605297*^9}, {3.821473341181497*^9, 3.8214734978646593`*^9}, {
   3.821481472626108*^9, 3.8214815713101683`*^9}, 3.8214817256862507`*^9, {
   3.821482305217524*^9, 3.821482360692321*^9}, {3.821484027421056*^9, 
   3.821484033036296*^9}},ExpressionUUID->"5c3a7c9a-67fa-4acd-a481-\
1bf114a30b0c"],

Cell[BoxData[
 FormBox[
  RowBox[{GridBox[{
     {
      RowBox[{
       StyleBox["VarsUsedBy",
        FontSlant->"Italic"], "(", "f", ")"}], "\[Intersection]", 
      RowBox[{
       StyleBox["VarsUnusedBy",
        FontSlant->"Italic"], "(", "f", ")"}], "=", 
      RowBox[{"\[EmptySet]", ","}]}
    }], "must", " ", "be", " ", "empty"}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.821483595847278*^9, 3.821483684608032*^9}, {
  3.821483958399309*^9, 3.8214840042009983`*^9}, {3.821484040516623*^9, 
  3.821484047620891*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellTags->
  "used unused",ExpressionUUID->"b46d505f-d553-4604-b8cc-8198095212d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["4.3 The Other Intersection", "Subsection",
 CellChangeTimes->{{3.821484170062199*^9, 3.821484185067754*^9}, 
   3.821542054511777*^9},
 CellTags->"c:14",ExpressionUUID->"764d03aa-d1ff-456f-87fd-b1a671fa4aa3"],

Cell["We\[CloseCurlyQuote]ve seen that ", "Text",
 CellChangeTimes->{{3.821484196902645*^9, 
  3.8214842013633623`*^9}},ExpressionUUID->"55955480-48e8-4900-ac32-\
97795406fcb2"],

Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{
      StyleBox["VarsChangedBy",
       FontSlant->"Italic"], "(", "f", ")"}], "\[Intersection]", 
     RowBox[{
      StyleBox["VarsUnchangedBy",
       FontSlant->"Italic"], "(", "f", ")"}], "=", "\[EmptySet]", 
     RowBox[{"(", 
      CounterBox["DisplayFormulaNumbered", "changed unchanged"], ")"}]},
    {
     RowBox[{
      StyleBox["VarsChangedBy",
       FontSlant->"Italic"], "(", "f", ")"}], "\[Intersection]", 
     RowBox[{
      StyleBox["VarsUnusedBy",
       FontSlant->"Italic"], "(", "f", ")"}], "\[NotEqual]", "\[EmptySet]", 
     RowBox[{"(", 
      CounterBox["DisplayFormulaNumbered", "changed unused"], ")"}]},
    {
     RowBox[{
      StyleBox["VarsUsedBy",
       FontSlant->"Italic"], "(", "f", ")"}], "\[Intersection]", 
     RowBox[{
      StyleBox["VarsUnchangedBy",
       FontSlant->"Italic"], "(", "f", ")"}], "\[NotEqual]", "\[EmptySet]", 
     RowBox[{"(", 
      CounterBox["DisplayFormulaNumbered", "used unchanged"], ")"}]},
    {
     RowBox[{
      StyleBox["VarsUsedBy",
       FontSlant->"Italic"], "(", "f", ")"}], "\[Intersection]", 
     RowBox[{
      StyleBox["VarsUnusedBy",
       FontSlant->"Italic"], "(", "f", ")"}], "=", "\[EmptySet]", 
     RowBox[{"(", 
      CounterBox["DisplayFormulaNumbered", "used unused"], ")"}]}
   }], TraditionalForm]], "DisplayFormula",
 CellChangeTimes->{{3.821483595847278*^9, 3.821483684608032*^9}, {
   3.821483958399309*^9, 3.8214840042009983`*^9}, {3.821484269551147*^9, 
   3.821484491935573*^9}, {3.821484685283663*^9, 3.82148470813195*^9}, {
   3.821484742364326*^9, 3.821484810333232*^9}, 3.82148490072797*^9},
 Background->None,ExpressionUUID->"14a3a8de-9f0d-49ea-88aa-3cf5c01de72c"],

Cell["\<\
There is one more possibility (actually two if you\[CloseCurlyQuote]re \
counting carefully, but set-intersection is commutative, so the two are the \
same):\
\>", "Text",
 CellChangeTimes->{{3.821484206510459*^9, 3.821484217521366*^9}, {
  3.821484855476007*^9, 3.8214848621501083`*^9}, {3.821485046106901*^9, 
  3.8214850521756077`*^9}, {3.8214853469849463`*^9, 3.821485376573287*^9}, {
  3.821542064836615*^9, 
  3.8215420750559683`*^9}},ExpressionUUID->"ab87ea26-e85c-4d20-8212-\
ec8f7527aefe"],

Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{
      StyleBox["VarsChangedBy",
       FontSlant->"Italic"], "(", "f", ")"}], "\[Intersection]", 
     RowBox[{
      StyleBox["VarsUsedBy",
       FontSlant->"Italic"], "(", "f", ")"}], "\[NotEqual]", "\[EmptySet]"}
   }], TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.821483595847278*^9, 3.821483684608032*^9}, {
   3.821483958399309*^9, 3.8214840042009983`*^9}, {3.821484269551147*^9, 
   3.821484491935573*^9}, {3.821484685283663*^9, 3.82148470813195*^9}, {
   3.821484742364326*^9, 3.821484810333232*^9}, 3.82148490072797*^9, 
   3.8214849587134457`*^9, {3.821485062816514*^9, 3.821485085317479*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellTags->
  "changed used",ExpressionUUID->"b172f3ef-ad2c-4417-881c-edd588fdce5e"],

Cell[TextData[{
 "That means that some commands may both use and change some of the same \
variables. An example is a modification of function ",
 
 CounterBox["DisplayFormulaNumbered", "function 1"],
 ", above:"
}], "Text",
 CellChangeTimes->{{3.821485394205983*^9, 3.8214854192125397`*^9}, {
   3.82148546642527*^9, 3.8214855000758333`*^9}, 3.821488401043779*^9, {
   3.82148875493141*^9, 3.821488792870069*^9}, {3.821542083250547*^9, 
   3.821542084239296*^9}},ExpressionUUID->"8e21ee72-d52c-4c69-9033-\
5c89365a12db"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"SM_", "0", 
     RowBox[{"X1111", ":", " ", "RL"}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{"SB", "[", 
      RowBox[{"x", ",", "y"}], "]"}], " ", "^", " ", "RL"}]}], ";"}], 
  "Code"]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.821144100248398*^9, 3.821144153327766*^9}, {
  3.821144409202445*^9, 3.821144409203167*^9}, {3.821275347665269*^9, 
  3.8212753480998983`*^9}, {3.8212757531808863`*^9, 3.8212757622799997`*^9}, {
  3.8214887995715647`*^9, 3.821488808656423*^9}},
 CellTags->
  "function 2",ExpressionUUID->"c65167ab-33a6-4667-bafa-dc28528892f0"],

Cell[TextData[{
 "This command uses sections ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", ",", "4", ",", "8", ",", "12"}], TraditionalForm]],
  ExpressionUUID->"4011b26d-7c59-4c9d-93e5-d4c4a901e0c6"],
 " of RL ",
 StyleBox["and then",
  FontSlant->"Italic"],
 " changes them. The hardware allows this kind of command, but it\
\[CloseCurlyQuote]s not compatible with other instances of its kind, as we \
see below."
}], "Text",
 CellChangeTimes->{{3.821488829006586*^9, 
  3.821488911725864*^9}},ExpressionUUID->"e1d756c3-2b45-43a5-ba92-\
b8536bf9538e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5 Compatible and Interfering State Functions", "Section",
 CellChangeTimes->{{3.821142863157693*^9, 3.821142876369504*^9}, {
   3.8211751522736673`*^9, 3.8211751523535357`*^9}, {3.821179237820746*^9, 
   3.821179241185357*^9}, 3.821273120083519*^9, {3.821484193614924*^9, 
   3.8214841940498743`*^9}, 3.8214857771391582`*^9},
 CellTags->"c:15",ExpressionUUID->"54a76e33-2666-497d-93be-d90ea8342824"],

Cell[TextData[{
 "Two state functions, ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "779bf11f-4c27-4178-9568-3fd6f20131b7"],
 " and ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]],ExpressionUUID->
  "e5e9ebe2-bc86-402b-b547-115bcf537db0"],
 ", are ",
 StyleBox["compatible",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ", written ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "~", "g"}], TraditionalForm]],ExpressionUUID->
  "ac440308-d770-4dce-aaf9-ad2f8c616974"],
 ", if their ",
 StyleBox["VarsChangedBy",
  FontSlant->"Italic"],
 " subsets are disjoint and if their ",
 StyleBox["VarsUsedBy",
  FontSlant->"Italic"],
 " subsets do not mutually overlap their ",
 StyleBox["VarsChangedBy subsets:",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.821142894614141*^9, 3.821142959089999*^9}, {
   3.8211430142098637`*^9, 3.821143044139348*^9}, {3.821143640396101*^9, 
   3.821143640396266*^9}, {3.821473575446287*^9, 3.8214736668790197`*^9}, 
   3.82148551354076*^9, {3.8214859309048023`*^9, 3.821485932059174*^9}, {
   3.8214881771277018`*^9, 3.821488178413903*^9}, {3.821488225840744*^9, 
   3.821488254326166*^9}},ExpressionUUID->"64f25f3a-e19a-4f21-a5de-\
7381f436509f"],

Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{"f", "\[Tilde]", "g"}], "iff", 
     RowBox[{
      StyleBox["VarsChangedBy",
       FontSlant->"Italic"], "(", "f", ")"}], "\[Intersection]", 
     RowBox[{
      StyleBox["VarsChangedBy",
       FontSlant->"Italic"], "(", "g", ")"}], "=", "\[EmptySet]"},
    {" ", "\[And]", 
     RowBox[{
      StyleBox["VarsUsedBy",
       FontSlant->"Italic"], "(", "f", ")"}], "\[Intersection]", 
     RowBox[{
      StyleBox["VarsChangedBy",
       FontSlant->"Italic"], "(", "g", ")"}], "=", "\[EmptySet]"},
    {" ", "\[And]", 
     RowBox[{
      StyleBox["VarsUsedBy",
       FontSlant->"Italic"], "(", "g", ")"}], "\[Intersection]", 
     RowBox[{
      StyleBox["VarsChangedBy",
       FontSlant->"Italic"], "(", "f", ")"}], "=", "\[EmptySet]"}
   }], TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.8214737170965023`*^9, 3.821473963207456*^9}, {
  3.8214740215111217`*^9, 3.821474081265893*^9}, {3.821474221105276*^9, 
  3.82147422110573*^9}, {3.8214748310258923`*^9, 3.821474846140135*^9}},
 CellTags->
  "compatibility",ExpressionUUID->"f396e5ed-5394-4a99-a33c-bac49ad035e0"],

Cell[TextData[{
 "illustrated in the following Venn diagram (recall from Formula ",
 
 CounterBox["DisplayFormulaNumbered", "changed used"],
 " that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["VarsChangedBy",
     FontSlant->"Italic"], "(", "f", ")"}], TraditionalForm]],ExpressionUUID->
  "9c049469-66d2-4b5e-a614-edae9ac88c73"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["VarsUsedBy",
     FontSlant->"Italic"], "(", "f", ")"}], TraditionalForm]],ExpressionUUID->
  "13f39080-9f47-4c2e-a3dd-c6c5f1b229de"],
 " may overlap for a single function, but compatibility does not allow mutual \
overlap of ",
 Cell[BoxData[
  FormBox[
   StyleBox["VarsChangedBy",
    FontSlant->"Italic"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "26aec04b-1b04-4090-b3fa-d9310e074766"],
 " in pairs):"
}], "Text",
 CellChangeTimes->{{3.8214873664894447`*^9, 3.821487375913136*^9}, {
  3.821487623769052*^9, 3.8214877006653223`*^9}, {3.821488188503937*^9, 
  3.821488198480159*^9}, {3.821488268033489*^9, 3.821488313738614*^9}, {
  3.821542170051107*^9, 
  3.821542218780568*^9}},ExpressionUUID->"87e34ae1-5230-4d5c-89b2-\
75fa9a146995"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3Vd7W0e2+OnzzMzFXM5XmNv/J5jbuZzLNrPEHJUly0GyLVuWJVmpndrt
bls5UTnnnAOVExVJZVLMJAKJQEpag9o0SRSwwUzWBvDDc97TMklsLGwSG7UW
qlb934UzPyn93/7nf/7ns/8z9P8+KZjz/86eXfBVyv8V+o+0GZ9NLptRUvz/
zfi8pKxk9v9T+L+Hvvh96P/9r//jf/4n9H//09n5XgAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgHnBYKe0trqloaHZov6tvmY6
LuIjPicgPuIjPuIjPuIjPuIjPuIjPuIjvvGNTx23vr5Jo75m+vkTH/E5AfER
H/ERH/ERH/ERH/ERH/ERH/GNb3yRj6Gouojp5098xOcExEd8xEd8xEd8xEd8
xEd8xEd8xDe+8aljOvk8EB/xER/xER/xER/xER/xER/xER/xEZ954xUf80qI
j/iIj/iIj/iIj/iIj/iIj/iIj/jMI75u9n0wuow/f+IjPicgPuIjPuIjPuIj
PuIjPuIjPuIjvviIDwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPEp
GOyU1la3NDQ0W9S/1ddMx0V8xOcExEd8xEd8xEd8xEd8xEd8xEd8xDe+8anj
1tc3adTXTD9/4iM+JyC+BI/vdY003KuUxqvXpPH0WWk6eFjadu2Rjm3bpWP1
Gmn/7V/i/fFH8c6bJ545c8Uz+zNxz5wlnmnTxDNpkrhLSsSdny/u7GxxZWaK
65NP+qj/Dn3d+n5xsfXznqlTxT1jpnUcz5dzxPPNPPEuWiTeX36V9lWrpWPL
VvEdOCj+02fEX3Fd2m7ckoa7D6Sh6rkzz5/Tf7/ER3zEF7fx1b1pkur7r+Tx
tSq5d/aR3DxyX67vuyfXd92TSxtuyOn/XJaj/zwr+xeekD3fHZNdXx+WHXMO
ybbPD8iWWXtl8/Q9smHyTllXsl3WFGyVvyZu7qX+e13xdtkwaadsmrbb+vlt
n+2X7V8etI6z59ujsv+HE3Jk+Rk59e9LcnH9dbm2867cPfJIHp+vluc33kjV
rVdSde+VvK6uceT5c/rvl/iIj/iIbyCRj6Gouojp5098xOcExBfn8XnaJfCs
SnwXLknHjp3S/vu/xfvtt+IuLRVXSopeV4gDbQUF0vrlHKt+omop/nPnJfD4
iQRbXcn5+yU+4iO+uI2vwxOQuqomeXr5pdzce1/O/nVFDiw8IeUz9shf2Zu1
ukI8UDWRXd8etuonqpby9OILefe0QbytvqT8/RIf8REf8Y2UOqaTzwPxER/x
Ed9AglXV4j97zpqP4P3pZ2uugjs313hdYVxlZ1vzNLzLV0jHps3iP3XaqmF0
ejvi/vdLfMRHfPEbX/3zJnly4blc33FXTv5+0ZqrsL5sh/G6wnhSczfUPI3j
v56Xim135NHZKquG4fMG4/73S3zER3zEN1bxMa+E+IiP+OIiPjU3IpR3+0+e
ko71G8S7eLF4pkyJy3kR481dVibeBQukY81a8R07LoEHlRJsG/nfSVL9/REf
8RFfTGpuhMq7Vf59pfyWHFlxRrbO3heX8yLGW/mMvXJo6Sm5tPGGVJ58KjUP
66TdNfI5GMn090d8xEd8iRmffR+MLuPPn/iIzwmIz1x8gXv3rbUa3oULrT4Q
Y5G/t6n/TU0VV1qauDIyuntKZGVZcxNcOTnd8vLEXVAgnsJCcStFReIJcYWo
vhNWj4rS0u7/LSvro77W83X1c4q6jxI6Tu/x8vPFpeZ+qMecOFHciopBxZOe
Lm2h2NrGqBajnpf3u++ko3yL+G/eHvLci0T++yM+4iO+2N48eCc39tyXw8tO
W30gxiJ/X5WzRdbl75TNxXtle9kh2TXlmOyfcUqOzL4gJ7+4ImfnXpeL8+5I
xfwHcm3BQ7nxw2O5tfCJ3F70TO4urpJ7S6rl/pKXUrn0lTxc9kqe/LOm18Nl
r62vPwh9/96Pz+XO4urQ/Z7KzdD91XHU8SrmV8qleXfl3Nwboce7KkdDj3tg
xmnZM+W4bJ90OBTXPlmfv0tW524dk+e/cfIuObD4pFzbcVde3q4Z8tyLRP77
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
2njPk5dnfGwOIDl4ZsyQ8FvHL78Yj8lJ6rPy9L0+MgqM1wicoCUjT3vfap4w
2fjYHEg0T3+r1a7Pb3Y0GY8JzlfxfaVWp9j+xQHjuQ6A+KTGwtq6j6Ii42Nz
AMmBOkX/Ivf6aMpM8r0+emQW6Xt+fJIiT5a/Mj4+BxIJdQoMx8Nlr7U6xV/Z
myXg7zSe7wCIM+0+vUah1n04YGwOIDlQp+hHaZneQ1Pt9ZHFXh892lJStfeu
5wuuGR+fA4mEOgWGa33+Tq1WUf+8yXzOAyCuBCof6nWKtDTzY3MASYM6RWyt
hcVajeIde31E1CnStfev13P2Gh+bA4mEOgWGa+fkI1qd4vH5auM5D4D44jty
VK9TZGYaH5sDSB7UKWJrzmOvj/60pk3Q3r9qp/1hfGwOJBLqFBiuI7PPa3WK
K+W3jOc8AOJLx9p1+pqPnBzjY3MAyYM6RWyN2QURe33kG68NOElreo72/tVQ
vMD42BxIJNQpMFznv76p1SmO/XzOeM4DIL60L12q1yny842PzQEkD+oUsUXu
9dHIXh+alox8fc+P7OnGx+ZAIqFOgeG68cMjrU6xc+5h4zkPgPjimf2ZXqdg
rw8A44g6RWx1Gbns9dGf0PnQ9vxIm2h8bA4kEuoUGK4HS15qdYp1JduN5zwA
4os7N1evU5SWGh+bw9m8X38t8uGDNWb52NEh7T/9NOj7+v76SyQYtO77oanJ
/vjz5ol/717pevpUPrS2ysfOTutx3r98aX3dM2tWv48RvHKlO7ZAQLzz5/c9
9saN8v7VKwn94Vusx58yRb//tGni37xZuh48kA8uV99jv30rgVOnxLto0YjO
Xcd//qON+dyTJw94H3UOem7+rVtj/pzniy8kcOCAvH/+XD62t8vHri754HbL
++pqCezfb31/MDF6vvxS/Hv2SNezZ/Kxra37HISOp85/4OhR8X7zzdCe8++/
S9eNG9b5lvDfZegxPDNnUqfoR21qxF4fmez1EaktYr+qJ8teGB+fm1S9si50
8et+LX0IfJQ32wefV9YeaAldN7rv3Ol6b/szz1fVSdNFt/jeBqXL814+vu9+
HH9dp/X1Z/+q7fcx3JUd3dfnzo/yYm1979frjreKvz50fegSi/X4P+v3ffpr
6OdOtEn7C7+87/jQ/dj+jxJo6pTWW155ubFhROeuZl+zdi168tPA9+nyvu/9
+fpTbTF/ruo/76Tpcui81QZDMYfeP0P/p56D+u+mS26p+u+7wf1+Qz/XeOHv
8+/tOQcfrPPfcs1j/X6G8pzf7m4Wz2Ofdb7VeVfnUx1LPcaz32qpU2BEVmVv
0WoV/o6g8bwHQJzwBfQemikpxsfliA8qj++5dVVWDvp+Kt/vzblDear2/Vmz
JHj+fGjw9l76u6n6gVqvFOsxeuoUVs67apX1tc6rV6OO89Hn0+7XvnixfGhs
7PexrfH7zZvi+fTTYZ23sapT+NaulY9+/wCBd0rg4EFxT5oU87FUPaOnjhT7
F/BBAseODRi7qot0PXrU76E+ut3S8dtv2teoU3RzlZba7Elqvi7gNG2f6HuT
Vn9fYXxsbprK43tu7S8Cg75foLGz934qTw3/3rPfa6XtbruVX/d3U7n3q82N
MR+jp06hbrWHWrq/9rAj6jgfgh+1+73c1GDl0gPdPE99VqzDOW9jVad4d6RV
PnR+7DduVSNQdYz+HkvVM3rqSLEPJNJy3TNg7Kou0vEq0O+h3rd/kDc7m7Sv
UafAUGwq2qvvTVrN3qQABidY/Zw9STEsHX/80TdwCeWtao7FQPdRtYXeoVQo
Z/Z8/nnv97zffy8fGhr04ZbHI12PH0vnnTvy4c2b0Bf6xmfqM3lPjMcMr1P4
t2yRwKFDtmOwD/X1fY8/d651zN5bKFfvrKiw8nZFxaBiDj/usM7bGNQprN9F
+Llpa5PO8+clsGePBI4ckfdVVdrvqn3hwujHmTRJOm/c0GJT8ykChw+Lf9s2
q6bUefdu7zwadVPnJ1bMqkbxvq5O/316vdIVOo/BCxek89Ytq95kfb2rS/s5
6hTdWotK2JN0MHWK1AztfezlV4eNj81Nq9kTlm+HLg1qjsVA91G1hd67hFLv
qj/6Pt9/sa5eOtv01+l73wfpeB0Qb5VfAg2d2vfU/IrnMR4zvE6h8vrmKx6x
u3W2dvXep/qvOutz/t74Qrm6qm2ovF1RMXwMK2H0N6+h3/M2BnUK7XcRuqk5
EKre03jeLc0VHvHVhNWFQ0/x5Xr7OSGeJz7tOGo+RfNVjzScbrNqSt5qf+88
GnVzP+qIGbOa2xFsjf59qvPoutdu1XpUvan7l6n/XqhTYCgi9yatuvrKeO4D
ID74r1SwJymGJ5Rff2hp6R27WJ/TD3CfzkuX+sag169r31NrR3pybbUmwBfK
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
o6YRypubr3jGbF9SV+g+aq+Smv0ttt9X+Xj4/qsNp13DPk9q3UXvLfR8VO/J
yJ9R/Sz9ddH7nkTWKVSNIdDQadVN1FwNu8d7vaVR60Fh93Oq5hB+U+ft+ero
eRVWfeJEm7XuRd2svpwRP6P2DAmvJanzZtefU/Xq6DlOrD6swGCc/rJCr1Os
u248BwLgbB2by/X+FNnZxsfmiH9aDv73TeXA/d5v2jStB4P6bF995u9budLa
6yNw7Fjv9z/U1krX7dt9xx6FOkVk70fVx1PVRHwbNlj1iE61d0bY3qqqLjDg
fIN+qPw/fE5Fz2N2Xrtm9YdQ/+6Nv7JSuu7d6/3vyDpFeM8M6+cfPbL2J7XW
3YT+Vx0vvLaj5jrEiit4+rT+iwvdT9VK1PlU63a6Hjyw+odEPl7k3qSKVVOK
uFm/uzt3rPv07kXy8aPVuzN87g11ijJpzCnQ6hQN6fnGawFO1pqeo72f1ZX+
aHxs7kRaDv73re5YdC0hnNorM7wHg/psX33mr+ZOqL0+Wq57er+vemx6n/Vd
I0ajThHZ+1E9hqqJqLhVPaLtbru2t6qqCww036A/Kv8Pn1PR85juRz6rP4T6
d89N9Rf1hu2DElmnCF9bYz3fVwFrf1J1XtT/quOF13bUXIdYcbXe9uq/uI9i
1UrU+VTrdtpf+K3+IZGPZ7f3qFVTirhZv7sqv3Wf8L1IVO/O8Lk31CkwVBe+
vqXVKU7+ftF4DgTA2dr/+6dep8jJMT42R/xT+3RoQ6mODts8Nup+P/0Ulbvr
B/oonZcvi2fmTCsH77mNynyKSZMksG9f/48fdrzB9L4c8Pn+9pvVWzTm7cMH
CRw/3j2PJKzPR2Sdwj1rVndt6OPH2Mf6+/ypOsRA+4uoPVnC14DEPJzP171+
JBRfrGOp+PuLS8256fjjD+tnO+/e7f06dYoyaZwYUafIoE7Rn5aMPO39rKHw
G+NjcycK74lpXWYCH23z2EiqD2dk7h55U2sgnv1Wa+XgPbfRmk/RdNE94OP3
HG8wvS8HomojHzv7ebzQt1que616SHgtImo+xe+11hqbwdxUHWKg/UXU8cPX
gMS6qXqFtX6kn3qNir+/m5pzU7Onu8+mt7qvFkOdAkN19bv7Wp3i0JJTxnMg
AM7mXb5CX/eRn298bI7EEN5vIHjmzKDvp+YZBC9elI/Nzda6AZUvq8/gVX6t
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
azlo/QNdg5I7Ndfr2rHR9SvNGdEf946iZerxPtq2dkjnjuZxeG/0fv7jGcuM
TOPr0fqKirYmdf3BLM91uvY+bZ3Ce6PrZPquXn8cqgFpr42LdPNIvLxzFWg+
wsJdmw1rTmiMS/Zs9R2HPolbC5cajqOtU3hvVIehz1x/Xumcaj+vVleP6bmg
OSzeG9Ws/myyFoPmO2jrZ3Q+aCy0jkX/WO3vG81xeHhNuuk5ofFpa2T/8px3
s8dRXUj7mVJ9Sz//gmojdA56dfM3UKewJ319PX7nFvbY6gi7V8nzKTz5HnfO
CYND6wu011rpb1/i9/F0HUx1B+/j33rofOn+x278je8+ur4u+c/lhmPQfIfv
aq4b333EfB6Otk5xw+RTff+mtRy0/oGubcn6L/dfr2vHRtevNGdEf9yyr65U
j/fiXb8b0rmjeRzamsdTt54jegqMNRdaX3Her45R1x905crrorR1Ci+6Tqbv
6vU1o6+fHy3Ns7hCN4/EyztXgeZd/OW6XxvWnNAYb5t1uu84VNfZsmiK4Tja
OoW2DkOfuf680jk9SfN5/eioQ0zPBa2B8T7mlOMPF9sTjWsxaL6Dtn5G54PG
0mcyD0L7+0ZrRrIHWHdC4ztFUyP70HPezR5HdSHtZ0r1Lf38C6qN0Dmg84s6
hf31p10q1ym2fMYfWyFoi3dt8ZvvgT2s31fvu9bK8vNdM/nb2gzfY2neBK17
0N5P13BUh3hg9Qq/x6H1Bt4b9Ywwe4z2updu1AfhmbKB95eha23tNSatE4nU
OXtyQ7Y0toHmDwSir1OUNNUYahlaKdVbpfc4L9v4HmmeB8078NfHgq69qzRz
NGgOhv4x+joFzXMwqyt4Pb8xT3o8nSP9Y7Zr5p/Q4wccX8YCtY+G90ZjMYzP
8/763G71fqrf3FOi7+kru71oqe/x9Lulv1+/juPdraV+j/eU7ncAdQp70set
d8tL2WOrI5R/Lu9JmuZ/vTtY05jf75/jTt+P+3vsirfG+x5L8yZo3YOU83uu
4agOUfCx//1pab2B9zjUM8LsMdo6BaE+CPEvDrzega61tdeYtE4kUucs6ZWx
Qc0fCERfp7j8guMNtQytW2eeLr3Hlsw5hsfQPA+ad+CvjwVde9NaDu+xaA6G
/jH6OgXNczCrK3gteG609Hg6R/rHnKOZf0KPH+hYVJOgPhrex9JY9I+h93fQ
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
QfuXausTVEuhHpFUu3l6Q464uzhV7WH53tZS32OiWaegPWE+93yedOvuV3x7
cHhvtM6D6mR3a/ab1dP3IrnfpH/FYGh7ydLNXy9ZL9QpnEMfv8r3NbLHWFvr
bNHVKUKffw7WsOiF/d8p0/fZrVn795KgfUC8990+64wBj0HXj9p5F/Sd/QXn
HCf+esNZ4stnR6nz6yvipxjm2YezTuFF8xzou3rqk/CzY401i1HnHhdSr039
fIqh9OuMRJ2C9i/V1ieo7wLtoUq1m8X/HCPWfnGF2sPytfv311uiWaegPWGe
8Hye9JgfHHqgbw8OL+qVcu0Vv1THOdDrUB1G+5yiINZp+KPtJUua/PSS9UKd
wjn6kkfJ8WzvRv4YCwFVtbX6zfPAfuh6W3s9750XT9ds2mvj24uWmT7/6twE
0diz//m0X8NA+1ga+lNEoE6hRdfGVLPY0toovW6w61e0HtftXxlo3wp/wl2n
oFqC97qf/i+t95ir2zvWS9ufIpp1CupvSrdGz+8a/R7MyPxa/T2h+pVZP1Uz
NGdGex7eDLD+ZbCf6S1B9BxBncI59PGrpKGGPcba2r5dcl6XGHo/P7AGut7W
Xs9758XT/h/aa+ONC640ff7elbPECcftry3Qfg0D7WOp708RiTqFFl0bU81i
+G+OlV432PUrWsteHycdI9C+Ff6Eu05BtQTvdT/ViGi9h7bepKXtTxHNOgX1
N6X7jz/uULE7ZZroKYhTf0/K46eY9lM1Q3NmtOfh3UeGVifVf6Y0lkDPQZ3C
OfqWjpXnU1Tn88dYCGhTc4PfPA/sifaS9N4q25vVn324bY3vZxtb9g74XO93
5HSjeoC/vg3RrlN40fUtvQfvzazXYyBUt3Frxk5rBkIdT7jrFNr9UuN3b/F7
HI46Ba358J67RQHGFwjNh/HechuqhnQs6uOqvdGclEDPQZ3CuTJqdrLHWFtr
WCfldX1LRrPnmjB0tJek97rrt2ccrf7sn/f83vezC889bsDner8jJ1QP8Ne3
Idp1Ci+6vqX34D2uWa/HQOi7dm1vB1ozEOp4wl2n0O6Xev/Vv/J7HI46Ba35
8J67BwKML5DRv93/OU6/+KQhHYv6uGrf68IXAv89Q53COfpSx8l1953L+GMs
BFRYXy3ldVOw14cjUP1A22GRrlXLNftD/nNTwYDPXdNc53sc7bER6HW0t2jV
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
pV9RnhGq8ehXIGFl/rPvFsH75+hPAMBtul/R+MNgfbY5ct2Wu1UWyp4QaTpk
v9YEVqv5iCyU7xGV90D0/kTNd+hPIGX4/Y6Mjk7I4OBNQ//a76H58eRLvXw3
Jsflt5dOyYHKo1FruZVqPcAzFvtqaeWR/4ye16L7dHfOn0jE55d85CMf+TYs
31i3qJafiMqNchdj1iZZOPG4SMPzG15bLjQFa8umw4u8t5+DfAmQr+mQLJTt
FpUTpQeXvUWcxnfvmj+RkM8v+ci3SvrzDgwM30V/zPbXTz7yjd66Jf+41iYv
1ORErwGj1H6AVaY/Eb2fpu8X/dOVMzIwPZVUz68XkI985EvSfDOj4pz/vaiC
r0R973n+2CPmjP/G17Deq7XJ5+18gbp0mT/xWPS9E3k7RZ37lTiT/cn1/HoA
+RIj3/J/h6b7Ira/fvKRb8ktvyPHb1yV1xqOrVgXciYE1sX4+vvXugLJ6roo
k7OR7zdPhueXfOQjH/k2LN/crKiOHHFK9kev95bOhDQeXMc6dnkNG2K7viaf
h/PpvRMVe1aePVH8lDjtfzH39Sb180s+8q1Af04v/z2Qj3x3qh+8Ie+cLota
/5n7QcozQvUiPQvEie6RxXIW6dtNJVLW1ylzjkq555d85CMf+TYsX0+lKN+r
0es/s8fi4cU9Fvf23nhK1tnkW9Pn0vfozh9/1JxJivbadEqPiOosFMfvT73n
l3zkc8G+EvIlYr5LYzflo9aaletHcyYkg34FNsTSnbnR5k4see+sT1qGw/du
puLzSz7ykc++ZM2nhs+LU/f2iv0KlbO0x2JtcyxS/dwC+VbQeNC8vlT+tpVf
i9X/Lk5fA88v+ci3jPscjJXf54sX8pEvGj3DQu+df62xOIZ6Ut8VEvkuESAm
d/W8ou+feKk2X/7ScU76piLv3Uzl55d85CMf+TYs3/So2TuvSp5boU68T+YL
H5QFfbfpKs+FMAeSfHcJ/rmA7ymZL35o5d5E0R5Rrb8RZ6KX55d85AOS3LmR
AXNfwv4V7gnReyzM/aZR7j8F7mLOEMX2etH36up7ResGbsR0tgMAsMEGToXu
Nc1ZYS7A0ftlvuhBCeieBfebIiaHJVCZJvPFD6/cm9D36tZ8R5weX0xnOwAA
yWVidk4Krl+WN5pKYqgrM0IzBXQNytkQ3MHswfGFelqx/Pmv1xea+2mGZ2as
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
    "], {{0, 896.}, {1066., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
    Association[
     "Comments" -> 
      Association[
       "Software" -> "gnome-screenshot", "Creation Time" -> 
        DateObject[{2021, 2, 4, 20, 15, 26.680009`8.178760953813999}, 
          "Instant", "Gregorian", -8.]]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{391.42500000000007`, Automatic},
  ImageSizeRaw->{1066., 896.},
  PlotRange->{{0, 1066.}, {0, 896.}}]], "DisplayFormulaNumbered",
 CellChangeTimes->{
  3.821487326755579*^9, {3.821490614012186*^9, 3.821490614012747*^9}},
 CellTags->
  "venn compatibility",ExpressionUUID->"387c1289-2533-4444-96f6-0164cd740ded"],

Cell[TextData[{
 "Compatibility pertains to state functions, but we also say that ",
 StyleBox["commands",
  FontSlant->"Italic"],
 " are compatible or not because commands correspond, \
1\[NoBreak]-\[NoBreak]to\[NoBreak]-\[NoBreak]1, to state functions."
}], "Text",
 CellChangeTimes->{{3.821218406504039*^9, 3.821218468940922*^9}, {
  3.821483122906646*^9, 3.821483124409178*^9}, {3.821485606307631*^9, 
  3.821485607087783*^9}, {3.821485942146545*^9, 3.8214859428392963`*^9}, {
  3.821542239385354*^9, 
  3.821542240865563*^9}},ExpressionUUID->"77bbf858-ceb5-44f2-bbda-\
b3caf3bf6892"],

Cell[TextData[{
 "Let\[CloseCurlyQuote]s dispose of the comment after Function ",
 
 CounterBox["DisplayFormulaNumbered", "function 2"],
 " before going further. Imagine two similar instances"
}], "Text",
 CellChangeTimes->{{3.821489116219391*^9, 3.821489168418277*^9}, 
   3.821542257495264*^9},ExpressionUUID->"8065283f-46f0-4b34-817d-\
9bd11d89e06b"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"f", " ", "\[TildeFullEqual]", " ", 
     RowBox[{"SM_", "0", 
      RowBox[{"X1111", ":", " ", "RL"}]}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{"SB", "[", 
      RowBox[{"x", ",", "y"}], "]"}], " ", "^", " ", "RL"}]}], ";"}], 
  "Code"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"g", " ", "\[TildeFullEqual]", " ", 
     RowBox[{"SM_", "0", 
      RowBox[{"X1111", ":", " ", "RL"}]}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"SB", "[", 
       RowBox[{"z", ",", "w"}], "]"}], " ", "&"}], " ", "RL"}]}], ";"}], 
  "Code"]}], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.821144100248398*^9, 3.821144153327766*^9}, {
  3.821144409202445*^9, 3.821144409203167*^9}, {3.821275347665269*^9, 
  3.8212753480998983`*^9}, {3.8212757531808863`*^9, 3.8212757622799997`*^9}, {
  3.8214887995715647`*^9, 3.821488808656423*^9}, {3.821489204806796*^9, 
  3.821489253754568*^9}, {3.821489427535715*^9, 3.821489452726247*^9}},
 CellTags->
  "function 2",ExpressionUUID->"1ceee126-c88e-4089-8f07-1f01b65864af"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["VarsChangedBy",
     FontSlant->"Italic"], "(", "f", ")"}], TraditionalForm]],ExpressionUUID->
  "31298fb3-5984-46b7-9765-949f924b2936"],
 " overlaps ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["VarsUsedBy",
     FontSlant->"Italic"], "(", "f", ")"}], TraditionalForm]],ExpressionUUID->
  "4f69218e-218c-4c45-900c-2a7552f89c8a"],
 "; that\[CloseCurlyQuote]s allowed, and the same goes for ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]],ExpressionUUID->
  "d184358b-e40e-4f10-9490-0680139735f7"],
 ", in isolation. However, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["VarsChangedBy",
     FontSlant->"Italic"], "(", "f", ")"}], TraditionalForm]],ExpressionUUID->
  "5a47cb84-fd8f-4b87-bdf8-b66fee771622"],
 " overlaps ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["VarsUsedBy",
     FontSlant->"Italic"], "(", "g", ")"}], TraditionalForm]],ExpressionUUID->
  "17630057-b99c-4040-83ae-e684466dc1fd"],
 ", so ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "2cdd8119-e218-403c-99f4-d36c99c13b7d"],
 " and ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]],ExpressionUUID->
  "1f994f31-e92a-4f17-a61e-449ba8b41c3e"],
 " are not compatible."
}], "Text",
 CellChangeTimes->{{3.821489288929935*^9, 3.8214893287386217`*^9}, {
  3.8214893863361692`*^9, 3.821489416767377*^9}, {3.821489462569398*^9, 
  3.821489482482246*^9}, {3.8214895223826513`*^9, 
  3.821489626157193*^9}},ExpressionUUID->"b5014d69-a720-4ed9-a585-\
bcd7f5ca92ce"],

Cell[TextData[{
 "Informally, compatibility means that ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "0df556e5-a1ed-4b6b-8940-ff77b48fb708"],
 " and ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]],ExpressionUUID->
  "1c4cd5a2-e050-4455-848e-f772426662bd"],
 " don\[CloseCurlyQuote]t change any of the same variables and don\
\[CloseCurlyQuote]t use variables that the other changes. Compatibility \
encodes absence of race conditions when running compatible commands in \
parallel. This fact yields our first operational result. ",
 StyleBox["It\[CloseCurlyQuote]s safe to run mutually compatible commands in \
parallel. An optimizing compiler can write them together in a parallel bundle",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ". "
}], "Text",
 CellChangeTimes->{{3.8214741998624163`*^9, 3.821474203197631*^9}, {
  3.821474238117613*^9, 3.8214742855158443`*^9}, {3.8214743422289886`*^9, 
  3.821474408287705*^9}, {3.821474521456101*^9, 3.82147452754288*^9}, {
  3.821474559956646*^9, 3.8214745973203487`*^9}, {3.8214749150118217`*^9, 
  3.821474917238461*^9}, {3.8214808479338017`*^9, 3.821480885284659*^9}, {
  3.821481408827682*^9, 3.821481422247548*^9}, {3.821483219186743*^9, 
  3.821483247954588*^9}, {3.8214834530043592`*^9, 3.821483487041287*^9}, {
  3.821485626641588*^9, 3.8214856743259363`*^9}, {3.821486251416711*^9, 
  3.821486420656114*^9}, {3.821488653940984*^9, 3.821488655296301*^9}, {
  3.8214897908396473`*^9, 3.821489793105167*^9}, {3.821542292165751*^9, 
  3.821542292620159*^9}},ExpressionUUID->"b5f92f6d-74b4-4a87-994b-\
8c65d66a5e27"],

Cell["\<\
Compatible commands aren't the only pairs that are safe to run in parallel. \
More cases are coming up.\
\>", "Text",
 CellChangeTimes->{{3.8214741998624163`*^9, 3.821474203197631*^9}, {
  3.821474238117613*^9, 3.8214742855158443`*^9}, {3.8214743422289886`*^9, 
  3.821474408287705*^9}, {3.821474521456101*^9, 3.82147452754288*^9}, {
  3.821474559956646*^9, 3.8214745973203487`*^9}, {3.8214749150118217`*^9, 
  3.821474917238461*^9}, {3.8214808479338017`*^9, 3.821480885284659*^9}, {
  3.821481408827682*^9, 3.821481422247548*^9}, {3.821483219186743*^9, 
  3.821483247954588*^9}, {3.8214834530043592`*^9, 3.821483487041287*^9}, {
  3.821485626641588*^9, 3.8214856743259363`*^9}, {3.821486251416711*^9, 
  3.821486432505096*^9}},ExpressionUUID->"472fbbd3-9113-4ef5-ae4e-\
c143a8a15f5c"],

Cell[CellGroupData[{

Cell["5.1 Compatibility is not an Equivalence Relation", "Subsection",
 CellChangeTimes->{{3.821489678433792*^9, 3.8214896898875513`*^9}},
 CellTags->"c:16",ExpressionUUID->"8f586212-a80b-4ae6-acdf-4c65bc3faf6a"],

Cell["\<\
Compatibility is not an equivalence relation. First of all, it\
\[CloseCurlyQuote]s not reflexive. A function is not compatible with itself. \
Operationally, this means that we cannot run two copies of the same command \
in parallel. \
\>", "Text",
 CellChangeTimes->{{3.821143332139772*^9, 3.821143349069481*^9}, {
   3.821143405163046*^9, 3.821143408785267*^9}, {3.821143462164404*^9, 
   3.821143480493897*^9}, {3.821179093538536*^9, 3.821179117948921*^9}, {
   3.821198519815672*^9, 3.821198529237074*^9}, {3.8212714540269737`*^9, 
   3.8212714582812853`*^9}, {3.821271918096505*^9, 3.821271966443021*^9}, {
   3.821481255865136*^9, 3.821481318921441*^9}, 3.821486489707851*^9, {
   3.821489805517153*^9, 
   3.821489816489008*^9}},ExpressionUUID->"753b23aa-49f5-432c-ac82-\
0b3df562f8e7"],

Cell[TextData[{
 "Compatibility is symmetric. If ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "\[Tilde]", "g"}], TraditionalForm]],ExpressionUUID->
  "83f4cc08-e5b3-49de-b574-cf06c6bf8cfa"],
 ", then ",
 Cell[BoxData[
  FormBox[
   RowBox[{"g", "\[Tilde]", "f"}], TraditionalForm]],ExpressionUUID->
  "d306bebd-e9db-4b60-9337-92efb8587841"],
 ". Operationally, this means that the programmer may write compatible \
commands in either order."
}], "Text",
 CellChangeTimes->{{3.821481338334712*^9, 3.821481368028645*^9}, {
  3.821481462450697*^9, 3.8214814640556297`*^9}, {3.821486499124796*^9, 
  3.8214865215067587`*^9}},ExpressionUUID->"4d23a0c3-95bf-4933-b671-\
5211c606a846"],

Cell[TextData[{
 "Compatibility is not transitive; ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "1291fbe4-0df3-42fe-a313-5d288ce8c254"],
 " may be compatible with ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b378da24-f3f4-4966-b29c-604759e1b0fc"],
 ", and ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "e3c351fd-1966-4f16-9ec6-aa6e977cdf76"],
 " with ",
 Cell[BoxData[
  FormBox["h", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "a94a822d-7f6f-4265-a994-790ceafe7243"],
 ", but ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "02eab8ae-1039-4632-ac7c-cbd9c5f7b631"],
 " may not be compatible with ",
 Cell[BoxData[
  FormBox["h", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "852c0692-1295-4850-9600-79a10de03754"],
 ", as shown in the following diagram:"
}], "Text",
 CellChangeTimes->{{3.821486524149713*^9, 3.821486573860581*^9}, {
  3.8214866140853043`*^9, 3.82148662094291*^9}, {3.821487768223506*^9, 
  3.821487770469146*^9}, {3.8214880298644533`*^9, 3.821488044997285*^9}, {
  3.8214898638063517`*^9, 
  3.821489882824551*^9}},ExpressionUUID->"5a1a8a58-5edf-43bf-a38e-\
4a3049c2ee81"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
vH/zAvnw9kXW7efekybz7s+w7mfxY0sl7ckcyXqhQPJeL5JV75VL2YL1sj5r
q2xbsUt2VxyQnWv2yc4N+2T/rk9c+fi5/fd7Xvmam8XMtF9HelZ17b449mtf
912jk4985CMf+bo2X+A+Ob3EqDvJ+beH+WdTVI+qOxf5yOcG5IvwfDV10rRj
pzSsLJL6+Quk7rXXpfaxx6T6xhulatQoe58YAU5PmiSn7n/A6k1Vh9pYuEKa
tn0szaeqYvP3Sz7ykS9i89XXNMnhncdl++q9UpmyUZa/XSzpT+XIrKmL5e2k
j2x9YiRQXejCx5ZYvanqULev2iOfbj8qtacaYvL32535zP3Zfvvi9BE1N69r
r3/9r33b6L4uJx/53IB85IvWfC2Z/e1zvLfO4Pzbw1QW8pGPfOSL5HzNO3dJ
4/JCa/xh7Z9ftsYmVo8fr71P7FFJSda4zNoXXpT6Dz+Sxrx8q7s0ausj/vdL
PvKRL3LzHdl9XD5euVvK56+X3NdWWWMT37tpvvY+sSepsZpqXGb2qyukdO46
2bp8p9VdNtQ2R/zvV0c+c+VtfvviDI2o61/y6Uc+8pGPfI73XXi1/e9fS6/h
/NvD3D6+k3zkIx/5LGos5LaPpTE3T+rfe19qn3lGam69NSLHQfa06ptukto/
/lHq350hDcuypWnTZmk+ff7Pk5h6/pGPfOQLSo2FVH2b6t2KZ62RrBcLZM7d
qRE5DrKnzZqaIpnP5UnRBxWyOXe7fLLlsNRVnf+Yy6h9/lUf8pt/9zvxlCV0
w/VvbM5vJJ/+bOQjn24xna8yydpvzTaG8tMyzr89yHl9TFN7LvKRzw3Ipy9f
04aN1pzs2qeestZ57I7e7rT6/9GjpSouTqri49vWjBw71hqLWJWc3GbCBKme
NElqJk+WauX666XGq8pLrStprUF5441t/3/TTWepj7V/XN1OUV+jeO/nzP1N
nChVaqyn+p7jxkm1ojKoPGPGyGlvttPd1MGqn6v28celftZsaaxce85jLaP5
+Uc+8pEvuAObPpWKxRtlyfP51jqP3dHbTU+eLTMnLpCPbkiReTdlysJbl0na
1DzJunul5N5XLMsfLJdVj66T0ic2Sdkft0jFk9tkzVMfy9qnd8j6Z3bKhj/t
ko1/2iubn9snW57fJx+/9MkZW57fb318k/fzG57dLeue2eX9uu1S6f16dT/q
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
/auc9vieNl2MhiaOfxGQr7nZlIpFG2T6+FmO3WTa1DzZ/Px+F/Q1QOzY+9ci
v7EovTvsJn3HUjbkOY+lbNvjO75TYylbK5K9kj7jvrGY5CMf+chHPn35WpYM
sPeTBwqi+v1zT1F5jhw5bqM+pjsX+cjnBp3J13zosNQ8+JDzWKu4OGssVvd0
L+7riMhHvqjLd/311j5WTq/vmjvukObde2L6+Of2fKcOV0vKE8sce8n3Jy2U
0j9s1t7TALHo0P/NtveT6ZeeQz/Zvn/OWKkLMpayPi9OWsuTOnnt675rdPKR
j3zkI5/efC05V9j7yc3To/b9c0/yz6aoHlV3LvKRzw3ONV9jfoFUjRvnPGbS
+/HqLhozebZ/8e9e2ujuhchHPjfornw1XlXJyda+VgGv8zFjpH5xihjNZswd
/9yeb1vhLplxwzzHbjJjaoFsffGA9o4GiFXHZzxn7yeXDDnnfvLsWMp453Up
c0ZJc9HYMK9//a992+i+Licf+dyAfOQjnzdH4dX2frLkoah8/9zTVBbykY98
55mvulbqnnvOuZccPVqqJ02KqP6FfPqzkS8C8qmxlEHWpax55FFpPhb6WBY1
xz+X56uvbpRlLxc69pLvjp8rxY9v1N7NALGu6qNb7f1k9tWd7Cc/W5eyIPi6
lA0FY8TTwVgbt1z/ko98HeWb+UQfueCCCywXfv4C1+Vz++OnM1/1ioQzvzsl
983LtWeLpMdPdz7PavuebmZufFS9f9bF7eM7yUc+t+dr2rBRqm+4wXk+dzfv
zR2T82vJpz0X+XzceKNUjR3r/PpPSpKGouKoPv65Pd/BzZ/Kh7cvcuwm592U
KRv/tEd7LwPgE2mcN9zvOm/UefWTZ/f4jgsyltJ7XVmSGOL61x3zB8lHvo7y
6ekno+fx05nPvf1kZDx+2vNVJtnPW4t7idHcFBXvn3VyXh+z43lp5CMf+Vra
9sAZNcp53OT48Ro6GPd0Q+Qjnxv0WL6JE+V0kGNB3Vtvi9HYHHXHP906yqf2
wHk7KbCXnJY0S/IfKNXexwBos/3Pu+1z5JSCxC7oJ9s05ic4d5TW3jkJYV4D
u+fanHzk86Wjn4ymx09nPrf2k5Hy+Lkhn5nax95RntgW8e+fAUSg2nqpffpp
515S7YFzww3aexkAPWzKlOB75zzwYIfzvdE1GmqbJeuFAscxkx9OXixrnt6u
vY8BcNbe1/Lt13ep/bqsmzy7d06i1OU4j6WsD2O+N+BWuvpJnL/aVYmu7ScR
npalg+znr71LtL8PBhBbmvYdkJrbb3fuJhMTu3wPHACRQ+2do+Z1O+2do8ZY
Nm3Zqv0YFs2O7z8lc+9Nd94D584C2fbiQe1dDAC7Q9Nm2sdPZgzq8n6yo71z
6nJHS0vpOO3XusC5op+MXPSTka81d6i9n9z4mvb3wgBiR2NpufNac6NGddse
OAAi0OTJznvnxMVJQ3qG9mNZNNpdcUDenTwnoJecnjxbih5br72DAeDs+Ixn
7P1k1tBu6id9985x3t/bWB3e/t6AW9BPRi76ycjnWXmNvZ8svk/7+2EAMaDJ
kPoPPgy+PzfzuQH4qVLHhfh4x+NG7YsvidHQpP/YFgXUmjkls9c6jpl8f9JC
Wfv0Du39C4Dgqj6cau8ns0d0az95dr638/7ejYXx4qlkvjciA/1k5KKfjHye
4jj7+SsvSfv7YgBRrqpGah97zLmbVPtzM58bQDBqf+9x45z3977r99J86LD+
Y1wEq6tqlPSncxy7yfk3Z8nm5/dp714AhFY3Z6z9+q5L9u4Oc7537hjnNSnz
46S1PEn7tS/QEfrJyEU/GQXKE+3jJzMGa39vDCB6NR08JDW33OLcTSYl6e8+
AESEqgkTnDvK8eNZk7KTTh6qktl3pTp2k9n3FmvvXACEp3nBYHs/mR/fQ/1k
m6D7e+eMYk3KDnzwZL8z3cq/f+8rctz7uwv3a+9J+rl8/vNtXzvx6n93vM3q
GUOt2/3Pz74h//SNL8nffOFz8u1/+JJc0euf5f0n+3a4b++/fufL1v3/5Ptf
PXNb1Qk9NOmX8mPvx9T9feWiL0j85f8a8LWHs+Pkjzf/l/T+1bfkG3//xTPf
u89/fUuevOW/5dPs0V36WK6fe7XcP/4X8uuffkO+9fUvyRe930/9zL1++S0r
xydLnb9fsH5ye8q1cp/3/n7xo6/J1/7uC/Llv71QfvqvX5WpCT+TfZmjwsrU
Up4si14cYP1+fvZvX5N/8D4OX/qbz8n3/+nLkjj0h1I4fUjIr9+bcd2ZbL8f
9/MzHz+1PF5evfe30tf7WH7nmxdZ9/m9b39Zxnrvs+jdoWE/ZjlvXn4mm/o9
qt/RP//jRXJ1/+/J4hcvFbP83MZBH1o2Wv50+6/lkl9/W/7lWxdZvwP1u//N
z78pD0z4hexOG3lO95f5l0GSMOTf5Iff/Yr87ZcutB6/33rv69nbfi01q8bS
T0YJM7W3/RzWVK/9PTKA6NO0dZtUJyc7rzU5ebL2vgNAhLn+euc1KceMkYaV
RdqPeZHk0MdHZeaU+QG95DvJc6T0ic3a+xYA4dprv65b3KtHu8mz873VmpQO
871zRolZQkcZTGPxOPnm1754pl95bur/hPV1R3LHWF1S+9eVzLzS9vktC0ZY
HaRvd+Pkd//5Teu+gn2f9n5SUX2i6sV++eOvB9zPiP7fs32d6l1V3xXqe6u+
6Q83/VeHHWlHVE+VPOxH8rnPhf5ZL/J+P9WL+q894N9PqjyPT/mV1a2Fyq76
u1C5VLem+syOfgc3XPvjoD2gbz/5Hz/8mvWxuX/qb/Wvoe5TdYGhsqnu+NLf
/FOH2dRjprpZX749aTv1mD7lfWxVhxvq/tTjqzrkjnpP9Vy77OLvhLwv1ctm
v3EZ/WQUMDP62cdQnmDcAYCu1VBUbHUGTj1C9ZQp+nsOAJHJe/yoCrImZf2i
xdqPfZFgZ8k+mT5+dkA3+dH1KbL+2V0u6FsAhGvvX1bb+8m0flr6SYu1JmVc
QEdZ49VcxL45wdyd9PMz/YoakxjO2p2qx2z/mv/6yddtn1Pj9fy7QXW/V/b9
rgy/5LvWWDTfz6nxaEaZ81x8335y0/wR0v/X33bsiqaM/MmZr0l/ZZCtK1Tj
6G4e/f+szA9P/qU15q/9c2r854a5V3f6sTtREG+Nl/TNojo0Nf5PZVK9pX9H
+PoDF9vuw7+fHD34B2f+/W//8hXrMVPjQ3/+o6/Z7kf1l07Z1e9P/Zz+vZzK
qXKp3ti3k1buSvwPx5/Pt5/8u4sulBfu/N8z/1ZjCVWHp8ZMqsf0ws/bfydv
PdzL8T7rihJtj4n6OdTjpMY9qsdGjRlVY3mdfs/qtm8/Yr9f1eeO8T4+vrdT
4ycfvf6X8tf7LrbGOqqf2zffuCt/GPR3qrrT//cD++9MPV7XDvy+9Tsd5f39
qHGx6uN/49ch009GppasQfbz2IEC7e+VAUSP+rnznOdhjh2rv9sAEB2CrElZ
99fXxGg2tR8H3ap84QbH+dwLblkqW184oL1rAXBuDr652D7uJH2gvn7yszUp
64OsSdm4Ivy5y7FEzSP27VgK3roi5O1V/6X6xvbb/99Dv7N9/okbf3Xmc6pX
q/zoqoD7UOMbP+/TF017tLfj9/LtJ6+/5sdn/lvN2VbznFWnpWycd7an882m
eis1RtT/fjfPH2Hd30t3/e95PXZq3KZv1/nMbf8tTaWBXauaR33xL75pzTNu
WJ1o+5xvP9lO9WNqbJ5/V7zwhQG2cZVX+40bbdc+NlGNs3xw0n8GzC1XGW+P
/+mZ+1F97seLrw24H99+0rd/Vb9z/8dVPaY/8Pl9/ePXv+T4WKi57u23+dF3
vyJ70gPnXKvxjb69uXo8VJYWh3GPvs83NTd8VZD55Srfj3y68Rnex93pdqoP
9v2dql7bf7yl6kTVY6AeX/rJyNeaM8TeT348S/v7ZQBRoMmQ2ldedV5rctw4
/X0GgOgyfrzz3t5PPilGXYP+Y6KLqD26894ocuwmM+9cLh+/qL9nAXDuDk97
295PZl6huZ/8bE3KvHjHjrJh+RiRSv3Xw24z8Ddn57Kq8XChbpv3f5efua0a
J6nmN9uu9SuSrf6x9P1hIe9HzStuvx+1JqTTbXz7SUWtc5jyUvB5zapj8+2W
1Hzw7nrMMl4dFNZ4wY7495NX9ftuQIfp67YxP7X9jFUrAscGq3GdapxhqHUq
Veem5my335cac+l/G/9+Uo1rdOoT2y14foDt9uox8r/Nf/uMN1W3D3ZfqotU
62S231Zl8b+N+vm+cOHnzoxlXDsrsAv3tXXhiDO3V88t//5XrYfpm/+1+y8O
eX9qrC79ZORrXT7cfh5b92ft75sBRLiauuB7dI8fr7/HABCVqiZOdDzu1Pz+
bmk+dkL/sdEFGmqbJP0p5z26lz9Yrr1fAdB5J2Y+ZR93snSY9m6yXVOQfXPU
3t6e81xzMNqoNQV9O0DVbwW7re9c2huv+0mnv6fv2n1qTKDT2Dj/fvLdx53H
WbYrnjn0zG3V2oXnur/KuRj027OdbrB+NRz+87uDzXVvp+Z0+z4m+W91vhNT
+wy134/6efw/799PdvS9VN+n9qNpv/1jN/wq4Dbtc6OVXR3sV+M7llH14v6f
V2tRtn9+0ogfh/UzXzPg7JhX/7G9vp9TPWpHax2wP0508Kwaae8nV9+j/b0z
gMjVfOSYVN8x1XkfnEmTtPcXAKJb1eTJjvvmqLUqm3bv1X6M1KnqaK3MvS8j
oJecnjRbih/fqL1bAXB+qj68w95PZo/Q3kv6svbNcego6/LipLU8dA8US1Qn
pva2bu9ZXrn7N463O5Y3xja/uKPxaqHsTB1p63bUffvfxref/M9//3qHfZHa
18T3PtW6ik695/lSY0Z91zOcGWSucDiC7d8djFq/0fdnnP3MJZ3+3tMf633m
ftT6lv6f9+8ng82d9vW//3F2fKRTf63WKw2371Rrk7bftuLDwOea7zqRaixj
OD+z7/xy3zGv6jVwkc987WCvAV/0k9HBUxxnP4/ljtP+/hlAZGraf7BtT13/
bnL0aOvjunsLADFC7ZsTF+e4tkTTltjcB/DEwdPy4W2LArrJGRPmSeVTH2vv
VQCcv7o58X7XdaO0d5KBHaXaN8dpb+/R0lLK3t7t1DqF7T3LLxy6KuXFu87u
j6LWUzyf73cwy94lOs1F9u0nVa8Uzv2qfXh871d1WCq3+n5d9Vj5znFXVNfa
2fs6135SUWNc27/mncdCjykN5cOn+p25H7UXj//nO9NPDvHZtz1pWOBaAb5j
NtVY3GD3o9bsbN/nSO0X7j8W9nRhgi1bZ6g9v9vvr/yDYbbPlX0Qen0ChX4y
SpQn2sdPpvbX/h4aQORp2rPPcf23avboBqDDjTc67+2dkCBNGzdpP2b2pGN7
T8p7N80P6CY/vH6xbHh2t/ZOBUDXaFpwhb2fzI/X3kc6c97buzZnlLR0MJ82
Vqh1BX33vVZzpf1v47vvcrD9Rfytmz3c2kNZ7Xusxs6p+b1qX5HP++337LS+
oG8/6dslhaLGUKqxlk59lNqfRo2LO+owVvNcqPU1fe/3fMZonm8/Ob2DflKN
C1R9quqfVXf7s3/7mrUftRoH6/v7Vo+1/9eebz/ptE+2Gifru4+O2stn6WuD
rd+bGhuq5q+rtTC//LcXhvwZfdca7SzfvZ3Uuqa+nzuS2/FzhH4yepipve3n
ssZa7e+lAUSOpu07pDopKbAHiI+3OgLtPQWAmFU1dmzgsWnMGGksr9R+7OwJ
h3cek5lT5gV0k3NvypQtz+/X3qcA6DrGIp/rOUV7Dxm6o3Tc2ztnlJgljKNU
fLsl//X8lr99xZnPff2rX5T6EHu4qM+9eu9vrTF54XZFXdVPKqqTe37q/1j7
OTt9L9WPPnr9L0PuQxPK6w9cbLuv83nMu6ufPLRstLUHttpvO5zHv6f6SUV1
i7/8sXOH7Es9Hk/f6vx73zR/hO22au8b1ReGy//5+94f+9ruT3WlHf2s9JPR
w0zvZ+8nqz/R/n4aQGRQ45Acr/8TErT3EgBgGTfOcd2JhpVF2o+h3eng5sPy
7uQ5Ad3kwluXyrYXD2rvUgB0nR1/3m6fE5fS2wUdZMca6CiDWvzi2TFkavxa
9cqze0Orfb3bP3dH/M+C3ofqjXzHWaoxev3++9vyyPW/lHnP9bfm0e5IuTZg
Pm1X9pPt1LhGNTZPrYP4L98K7Cr7//rbndpDx3/85Pnsw9Md/eTCFwbYekm1
ruKI/t+zOtu0lwfK+rlXW3vT/PW+sz1rT/aTao/3J72/T3Wbv7vowjN7ardT
a6FOvPrfrZzBvo/qX32/pjyM+dih+O4RpZwMsUdUO/rJ6NGS2d9+Pju+Rft7
agDu17h2vTUOKWBO99ix+vsIAPBR5TTG26txeaH2Y2l32L/+kEyfMDugm1x0
WzbdJBCFdr9a6bdmVz/t3WPYHWVeYEdZ42UWd248XbRQPZtvj9c+/1Xt5+3b
iW1ZMMLx64/nx8v3vn22U1T7L6t540639V9/sjv6SV+qE1NdZe9ffcv2fcOd
p+5r2euX2e6jo32oQ+nqflJ1iO19n+qG1bxu357Zl+/6kz3ZT6p9i9Tnv/vt
i+RA1ihpKk2ynifbU6513CfJiRoj6/s4THu08+twOv1OVZaOvoZ+Mnq0LB1k
Hz95qET7+2oA7tZYXOq8/0RiovYeAgCcVCUnO3aUDUuytB9Tu9Kusv0yffys
gG4y7Y48ukkgSu19rcDeT6b31947novGvHjHjtIocu5yYsVjN/zqTN/yPz/7
hvWxl+/+zZmPXfLrbwf92vYxcYrqAUOty9jT/WQ71Wupn6H9fp32cOmIGlvn
u3ajmhvc2Txd3U8O+u13znzuvvG/CHk/OvpJNbe7/bG7v4N8HRnwP2d/j6MH
/+C87kvtz+T7sy56cUCHX0M/GT1asi+zn8/2LdP+3hqAe6k5kVWjRtFNAog4
VQ77eFkdZWqa9mNrV9i+eq+8nfRRQDeZfmeB9v4EQPc58Gaa/XouY6D2zrEr
OkrF6OS6hNFAjWe78PP23vB3//nNM/+e9XS/oF97hU83pfbMDvV9dPWTyks+
+5CH2kM6FLV/eft9qPnrnc3Slf2kpzLZWg+z/XMVH14V8n509JPq+dP++V//
9BvWmNuu+D3+zRc+57gH/LlQ88rb72/C8B91eHs15pN+Mjq05g6xj5/cMU/7
+2sA7tSQk+t4ba/Wd9PdOwBAOIKNo6z/4EPtx9jzsSV/R0AvqWTeVai9OwHQ
vQ69Nct+PZd5mfa+sVMdZb5zR9m8KkH7NbMuV/f/3pnO5U+3//rMeLd//PqX
rLm4wb5u8MVnx+49MCH02Ljfj/u5tn5SrUfZfr9qXczO3Idvz6bM7GCe+Knl
8ZL/VmB/1dXjJ1VP1/45NZ892H3UrBprrb/Z0/2k6kx971P1qWocZOLQH1rr
mt459mfW/G81jve1+y+WrL8OtrI6fS81b913nU01drQ5xPNTUfveqMfMaX/u
W+N+eua+1P7maqxnsPtRvar/PvH0k5GrtWCY/Xy2eZr299gA3KdxxUrncZPe
a33dfQMAnJMJE5w7ytlztB9rO2N70R7HcZPL7l6lvTcB0P0OT3/bPn5yyRXa
u8bOd5QJQTrK2JzrnfmXQWc6l299/eyYsnuTfx7y66Ym/OzMbX/43a84rnuo
1he8btAPbL1OV/WT6vv990+/YY1nXDd7uONtit4danVP6j5V7xpqD5ZQ1Nx1
37Us1ZqPas9ypznt6a8MOrOup3+f2NX95K989sUeFWTOs3ps/PfP1rH+ZLjU
HjoPTfqlNTff/77Uz+97W9VR7kwNXA9U7df99iO9zqyPqrpZtSap723UHuC+
/a56Dpf57bujvkbtMaTuRz1/fPf2oZ+MXK2FV9vPZ+te0v4+G4C7NK4usfa7
DRg3OX68/p4BADpj4kTnud4ZmdqPuediZ+l+mZYUuN5k3v2l2jsTAD3j2Lsv
2sebZF2pvWfsjo7SWB17HaXqYHy7wfYuz6n38aW6vs/7zA3/8fe/aq1dqfaT
Vt3Q5Gt+LF+5qG28m1ov8D9++LUu7SfVXjC+mS+7+DvWntWqA1T/r76nb75b
4n56Xo+Tmk/sux+QonpINRZQjQNUe1D/5PtftX3+mdvsP0dX95O+e3IrA3/z
HWvvmAXPD7A+N6zvd63vox4HNXZURz+Z8tKl1t446jbf+Psvyle//AXbep7B
TBn5E8f7U+MufW+nfjY1/378VT+yvkb9zH//d1+w3UY9N+od1nF4fMqvAr7v
L370Nbl24Petr2nvmVVe9bj69sH0k5HLs+Ia+/ms9FHt77UBuEdjeaXjNTzj
JgFEuqpgHWV2jvZjbzj2VB50nNNd8ECZ9r4EQM85OfNx+/XcsuHaO8bz1RS0
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
ABiU68239HMny8rIx+UAAEbXVVQezyajcygtxbp13u3VD5HnGgCQ+Y48fVDM
J1dMlCD3yxy+Rv06b88WK/k4HRJDPgmQvYJrzxfzyY6PyHMXAEjNe/zkwFxJ
9Vg3N5d8TA4AYHS9lVWsWZNNtplLWHdepTJnUvt7peP31pNnGwCQ6U6L4zmu
MZ8898skidZ5B/cUkI/VQQ/5JED2Cqw6V7ye2U6QZy8AkILXzxy33Y5+3QAA
EmqzFuvmTnbnVij5JP/f3ini75Z6cstY0+PHJMg3ACCT+ZZq1sQ1WMkzv8yS
oJ93nYmxA/TjdRAhnwTIXsGVE8VrmdNGn78AQFKuZcvRrxsAQEJdxfp13R3W
soFs8qwea4nuO7x12tPk2QYAZDbXe1PEMV1djgSZX2ZJ1M/buzWXfLwOomT5
ZPMGE7uv5ufs//z0O+w7/+Or7GvnfJn98w++yaZbfso+X3qd7jih/UXsx9/7
hnKcP48cZ6rpX4ZcQ3udhf3o7HO5PW9eNeL349lVwN584Fx2w4U/YD/4u6+z
v4zUzfHayq//Cds9/0rycw4wLvbni3uVLJ9Inr0AQHK+ljZlHbcwtrVaycfk
AABGx9d1t5jEbLLVVCxkk1G9JvF7nO9LeWzWDvJ8AwAyV9+CqeK4btN15Hlf
JnLVieu8HVjnLZ1E+eQr905k3/jaV2I/1/qLr3yJ/WnGf+qONefO/4495ktf
+jPWtOKGIdVwb8V/xJ73q3//6xG/l13zrxByzmS++fWvsG/9lWjZkxeQfxYA
6RTebRavY7Vm8vwFAJJz3H2PvicO1nUDAJBLtK67K7quWyu3nPVq+nl359ew
Q0+eIs84ACAz9cz/ozh/cv1V5FlfRmrM182hdNWbycftEKfNJ9VZ4b/88Jvs
+gu+z0wX/5D99B+/qcv5Xrz7V8Kx+rfnK1lf9P6brD8d9PV9ewrZ333nnNhz
3nn41yN6Hx+/dy37+l9+OXacv/32Oexm68/YM3f8N5t923+yG80/FWpT4/ND
3194NflnAZBO4e2TxXxyxy3k+QsAJObZuk2fTRYWko/JAQCMrru0Qr+u21Ka
OJs8y2Yp0n2nn5kxnzzjAIDM1D7vOXFct+5S+qwvQ3kacnUZpW871nnLQp1P
Rv3sn77Fts67XPfYTXMvYX/9ra/GHvdXX/syO7UuR3jMHUX/KsxT7NuWl/L1
Fz50Xuzx3/vu15h/b+GI3seF//X3seNcd/73mWO7/nV7Gq3sgv/73djjCq78
EWvbhLwcslNo8zXidez9R8kzGABIwO1lfeXl4ljWYiEfkwMAGJ29upq1mos0
67qLWHdekrmT6owyxyKu8zZZWdOjh8hzDgDIPM0vLhbHdWsuJM/5Mpmrzixm
lLU5LIxeOVLQ5pPn/eK7zLkjP+njt792hbJ2O/r435X9u3A/zyu/8uUvxe7n
8xdTvf7E//23scc+PP0XI3oPts3WWE18DmiqzJGvOY++3j/+/dfJzz/AWAnV
XS6uA/j8DfocBgB0XO++p587WVFBPi4HADC6riJ9T5zO3PJBs8mBdd5lyt6T
6u/2tprHyXMOAMg8J57bLI7rVp1HnvFlMl+Cdd7erVby8TuI+STva9O7ZfC5
rVed+73Yc/h+j9r7rZf+Y+z+n/zgmyx8oCjhcT5YeHXscbyHTXfjyP5OfLH0
+thxvv/dwTPH6N6aPNMM7EtcG0CmC264UPw926lN5DkMAIh8nd36njiRf6Ye
kwMAGJ29qlrXE6fNnLgnTtI5lKY8Xa+co/ftIc86ACCzHHn6czGfXD6BPOPL
dO56fa+c0AjX8kL6JOvfncpL90wQ5lx2NYi5Iu+/rb5/7ZyLEh6n4vqfxB5T
ecNPRvweeKYaPQ6fu+ndk/zvFV/3zXPY6Pp06vMPMFYCq88Tr2Odn5BnMQAg
6n/6Gd3cSXtlJfm4HADA6DryS4feEyfpHMoKXa+czuLbyLMOAMg8vqW/Fsd2
jVbyjC+z5SvruoVeOY0W8jG80Y0kn9zx2hVC/sjzSO1jJv08vm77sgn/oLuf
r8n+2jnxfjafLr5uVO9DvU587sxfJn3c/VN/Hnvc5At/SH7+AcZKcOVE8RrW
30WexQBAnO/IUX02WVBAPiYHADA6W0WVLptsH6QnTjI9CXrlnJy5mjzrAIDM
4nzPLI7t6nMkyPgyW6JeOYHdBeTjeCMbST75+dLrhHxy4/OX6B6z5PELYvfz
ddR8Dbb6/j/N+M/Y/Rf/8u9H/T62vXo5++pXvhR7H3xuJs9N+dxKvm585+tX
sLwrfhTbp/Kcv/jSqDNRAGntLxDXdq88jzyLAQCR466Z4p6TZjPrq64mH5cD
ABhde26JmE8OsSdOMr05ZuH7vsdayg49cZI87wCAzGFfME3MJzddT57vZQNn
rUnIJ511pqT7E8LYG0k+eVjVYyZZPhncV8T+6X9+I/aY6Zafxu7jn/f/+n78
vjXPJF7/PVyrn76I/c23z9H1I9f69je/yjY8dzH5uQcYK+HdFvH6VZtLnsUA
QJyncbO+J05JCfmYHADA6HpKK3RzJzusZSPOJhXWUt13fvOM18jzDgDIHN3z
7xPHd+uvJM/2soG3MU83h9K3PY98PG9UI8kn31f1tUm2vpt76vb/ij2G96Tp
2zbwOa+bc5HQPye0Pz35tH1rHrvhwh8ox/3WX31Fl0vy17q77D9Yex32FYDs
Ft52gzh/cudt5HkMAJzl9rK+8nJxrGqxkI/JAQCMzl5dzVrNRUI22arMnRxF
NhnrlSP2Qus1WdnhRz4jzzwAIDO0vvKKmE+uvZg828sWrjqxVw7flzKcpowK
hmck+eRi1dptrnWTKeHjeB75P/4qnhM+fft/KT9X9/9+9s7ke0UOh29PIfvV
v/+1csxLf/UPzLOrQHn9IysnK6LZKIARhOqvEvPJj56hz2QAQOFavEQ/d7Ki
gnxcDgBgdF1FZQl64pSnJZ/sjhynV/Pd3zb1SfLMAwAyw8nnN4n5JN+/S4Js
Lxv4GvN1cyg9W63kY3ojGkk++dvCf4095wd/9/WUj72tIP7Yf/nhN9nJtTmx
/tk8u3Skae7sy7+P9xRf/yzWboOxBTdcKOaTx1eTZzIAENHvYvbCQnEOTV4e
+ZgcAMDwqmuUfSbV2WSbuSQ92WR0DqW5QPz+n2Jihx/+hDz3AAD5Nc0+KuaT
Sg/vfPJsL1u46626OZShfYXk43qjGW4+yecpfv+7X489p2bKP6d8/Ik1U5Tj
Rh9fdNWPY3/m2WW63kfV5H+OHZf3xuF1Up9bACqBlZPEfLLrM/pcBgCY6513
9XMnq6rox+UAAAbXVVSeYO7kyHviJJ5DWcF6p+SIcyirHyXPPQAgM3gWXSmO
8epM5Lle9tDPofRiDuW4U+eTvLc173Od6vH31fxcWNv9wcKrB30N08U/1O0F
yedQHls1OW3v40lVP3Dur7/1VXbFpP/JSq75Mbs172cKnoc+eOMvlLmWO167
ggX2YU8ByEIHCsXr1vIJzO/zkecyAIZndzB7Xp6YT+bnk4/JAQCMju872WIS
s8n2NM+djOqxaObQT8lhRx78kDz3AAD59S2YKo7zNl0rQa6XPTyaOZSOiDAy
o3Glziejva0XPXa+7nF8PqI2myy++sdDeg2eeWrzyesv+H5a30f/9nx23i++
O2jvbrXvffdr7K0HziP/DADSKbzLJF63ai30uUwW8Pn8zGbrYx0d3Qr+Z/4z
6rpQX+bU53rr7VHNneytqo6oOquafDyP+lCfTFAf6huNRPtOdqd77mSKOZTt
1Q+R5x4AIL+u1x8Rx3nrLyfP9LJLPuuvNYn7UG4Z2zmUvFd0aH/hWfJloeNd
nzqf/NH3vsG++/+do/z5x5E/87XYN1t/xiyX/iP7m2+fI2R7//GTb7PuhqH3
wY72rona/PJlaX0fvB8O7xf+F1/5knL8v/vOOexr53x5SDnlwofGL6PE3z/U
N+Y1bLlO3Jtk993Ih9KA19Pe3iXgP6OuC/VlRn0+m10/d7KgYIRjc/kyBNSH
+lAf6svU+hLOnbSMzdzJ5PtQTmFHHjhAnn0AgNxaXloo5pNrLpQg08suieZQ
jtU+lGJ2IF/GQVGfOp/kcxo/fOca9sO//3rKPO/Kc7/HOurMw6pv7sxfxp7/
83/+dlrfQ9smM/vP//87sVxy0/OX6M4fn//ZWW9R5nI+PP0XyvrvaD3/9uNv
Ze3ni/qMV1+o7jIxnzw4D/lQGmhr43iOSl0X6suM+lyvzxezyZycYc6d1I7N
B1DnBqgP9ckA9aG+0egsHMe5k8IcSpNwXeiovI88+wAAuZ2Ys1PMJ1eeS57n
ZZ/xm0Opzw4GUOcalPVF80m+HySff8h/Zt+axx6a9gv2f376HWW9N5+HyOdW
5l3+I7ZuzkUjqu+yCf8QywNfj7xmOt8Dz1Wj+2fue+vKIdW3/bX4mnM+5zJb
P1/UZ7z6gusuEPPJ05uRD6UBrwX1ob6R8HV2M7vVOuK5k8gPUB811If6srU+
e1WiuZOlY5tNxvahLNLt+XH0vj3k+QcAyOw08y+bII71GvMkyPSyi6chV9cr
J7Q3/eN6WfIDo9XHe+hEs8C//fY5zJvG3tr8WF/58pdia9KHWl93ozVWE1/T
LvP5k/3zRX1y1RdYOVG8ZtlPGz4fSgfZ53eiPnnrc74yTz93snp4axONvv4S
9aE+1If6xqK+zoJS/dzJvDGeO5lqDmXZ7yXIPwBAZs73zOJYr3YKeZ6XffRz
KN2bh7634dDzAznWXxqtPr5/ZTQL/EPl/05rTY7tebFjf+NrX2H2rdYh1ffC
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
7yaen6rkyKo5pm0bbAkf139MNdc+ctnlWWmi99pe16vM61TfsjmfbJp9mHmX
XCRmlKvOJ8/4Mpm7ziLkk74defRZBQAYSnDTJWI2uWIS8/e1kOcwAKDnXrVa
zCcLCsjH5JA5+F6HsQjKZkuZtfE9I/l+kNFboj0rXc88w1wvvpjyNd2vvRYf
VgUCrO/mm3WPUeeT0RvPFXV7Taqoc08lGx2jc5bufNI5a1b8YKHQiNadK/uJ
nl1Tz8/pYHts8j09o48PdXcn/BzVt1R7ZiqPV8/FZcgno7pLKoR8st1cQp4F
yshmLhCuYy3T55DnHDLga4WjN55Vpsra+J6RYdX640R7VvJ1vjy/S/Warevi
v7Pi8+6antGvs1bnk9EbzxW1e02qqXPPRNlouqQ7nzz+Wnv8YJHTO5J158p+
otG3H/nfwfbY5Ht6Rh8f6NPvIapdrz3YXFPt/M9szieVv8OvzEvQK+ca8pwv
U3nqrUI+6d2WS55VAIBxhHfm6L7TAx/PIc9gACAx16uvib1xiorIx+SQOXgf
FfVeker5iFruhQtjj+PzE0f8mjfdJKwxTjTPT5tP8jmUgx1XvXbb+fjjY3bO
0p5PqtbM8zXpI5nX6auvj58rPjd0CM/h691j5+vhh5Pex9flD/qZoj9OQp2F
ZUI+2WEpJc8CZdRjKRKuY+2Vs8gzDhnwPirqtbnq+YhafJ5c7GukJzDi1+Rz
A9VrjBPN89Pmk3wO5WDHVa/dPvVO8r0tRyvd+eTJhao184HwiOZ12g70x46h
zA0dwnP4Ou3ojc9rTXYfX5c/6GdqkP44caeY8928BL1yrORZXybyNuQK+aRn
i5U8rwAAYwgfKGTB1eeK2eT6a5jf00+ewQBAYs5HHxXzydJS8jE5ZJaAKovi
uVSyxyn7R569eRYvHtVrqvM69yuv6O5X55PKPpczZw56TPVeibxv+Ej73wwm
3fkkX4euvvGscbgZpfq987mMQ3mOeu6sZ+HC+H3Tpgn9dTyLFg16LOSTiXXk
lwr5ZKe1jDwLlFGPtVS4jnUV3iRBxiEHdRbF/5zscer9Izs2J15jPFTqvI73
A9fer84nee549KXB+1bzzDT2nX/GN+L+N4NJdz7J16GrbzxrHG5Gqd4nks9l
HMpz1HNn22tVNT3VLPTX6Wgc/LM2Xj7ZzI7P2aXrleNfcyF51peJfI15Qj7p
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
9oVUG00+qXiqWZk3Gb31fSZmq+r7HE3u4R9f5egrbcL7a141eD9wo+eT3JkX
l+rnUK65iDz3yxSuOouQT/p25kmcb8iev6A+1If6kgnWX6H7ru774BXy3CWT
8iGZ65N9fifqG319nfWNYs9Tq5V8XB4fn8u//hL16fG+0dEbzw15T5nojffI
SVafW9U7m6/xHux1xj6fTHz+nA8/HB+n9/WN6Bw5VZktv0X340z5flV7Sg66
vjsJz5IlsWPwua7J7uPr9HnGOJq/B/zcRG983umg67s1mSbWd1ezrpIKIZ9s
MyOfTJlPmvKE69np375DnmnIxtcTXwvNc0N1nsd75CR7nnr/Sr7Ge7DXocon
T6j6kAddoZEd401Nf+tB9uPk+GtFbyPKJyM6tsS/49XzW7X38XX6PGMczXlS
1zuUeabHNJmmEfNJzv72TQn6eV9Lnv1lArc2n9yRK/X6UNnXr6I+1If69MIJ
1nV7NuUxm62XPHfJpHxI5voS748ZIK8L9aWvvt51G8R8Mi+PfFyePEOQJztA
fcl5Fi+OZ2B79gh9ZvofeihpfZ6Vq2KP4726U72G++WXhb0uxyKfTHb+XKq9
FYNHjozsPE2bxiL/AsbP044dyR/Le4pH7lffkvbHGeR1+X6U0ZvSJ0d1H5/X
GnbFMwN+zhzTp6c+5s03M/dbbyWc6+rbsiV2LD6Xtv+Pf0x6HD7PVrvHJ/rj
1LDuknJNPllCngHKzGYuEK5nzbfOI88zZNOxOZ5z9X3uYt7O+Npuvp9jsud1
7Yjnk7xXd6rXaFndI+x1OZ75ZMva+N6K7ubUdSbF11MHwrHj2D9Nkd/Nblbu
V99Gmk/2qnqo8z456vv4vNaQN16Tcs6eSn083vembZMt4VzX3g/jr8Xn0h5P
scabzx/V7vFp1Hzy8FOfMe+SS8U5lMsnMH+DhTz/k5273irkk95tedJlG8kz
GNSH+lCf9PUdKGSB1eeKvz9acS6zN38uXf4iez4kc32Q/dwrV4m9uwsKyMfk
kNkct9+u9IlWxj0OR+T/hZU/B0+cSPk83jM7Nl7i8/c0WaaC96desyYy9hV7
CqQrn/RHnsPnZbpeeinh/TyHU8/b9CxaNOLzxLPb2C3yfnjuqX0M71MTPH6c
aW/RfDJ2zmfMYKHTp5W8lK+nT/R6zieeiO8xGflMnAkex7NG9Y2ft/5779Uf
7+ablZ5H0TXnSr+dqVPFczVrlpAhh7q69H13Is/he3Eqx+F/T4LxOVfjkU/K
rlszf7LdgnxyOPlky7RnyPMM2Rx+vlXpE618J7vj36OetuR9cTihZ0woSZb5
VDPr3sW/88Xvq3Tlk/bIc3jv8eZVPQnv5zkcvz9662iwj/g88fXVsVvk/fCe
MtrH8D41njZ9H3NtPsmzRW+HX8lL+dzMRK936p1OYY/JRI/jWaP6xs/bsVf1
8yiVXLK2V1nfzm9Kvx3NY3gPcHWGzM9bor47fC/O6HGS9VcymlNz1+rXea86
n/kb88kzQJl5tPnkVit9ngEAWSO46RL9d3PTu+RZCwAMj2vBQnH/ycJC8jE5
ZD4hezt749lXyufddJOwxyKfy8fn+LlfeUXp3e3duDF2f6ilhQU++CB+7DTk
k9qeLrw/D89C3W++qeSQft4L2xPvXcvzwEHnF6bAcz/1HMroa/r37lX2f+R/
jtV/8CALfPxx7J+1+aR6T0zl8Z9/zrzLlg2sr4/8Lz+eOtPlcxuT1eVraBA/
uMjzeEbKzydfnx/49FNlf1Dt6/HMUnssJUvW3JTP7sMPlefEeouHw0pPHvVc
W+STNayzqEzIJzsspeQZoMxsliLhetZW/Qh5liEjIXs7e2vbqM8Q1ZqeEfdY
5HP5+Bw/PleS9+7u2eeI3c975/Qfjn9HpCOf1PZ04a/Bs1BeN88hez9yspA/
HLuf54GDzS9Mhed+6jmU0dfs+9yt7P/I/xy98b5B/aq+5tp8Ur2GXnm/J72s
c6tdOS/8f/nx1Jkun9uYrC7bB/3iBxdmSkbKzydfn+887lH2B9W+Hs8stcdS
smTNTfnsjniU56h7i/OePOq5tkbOJ5XPdP4s/Th4w5XkGaDMPA25Qj7p2YJ8
EgDSI7R9sn7vjW3TyXMWABg+54sviflkURH5mBwyH++7LQyhXK6E+ZXuebNn
6zI78UBh5t+5kzluvVXJ3qK3tMyfnDqVeVeuTP36quMNpafNoO93zhylZ1DS
WyjEvJs2DcwbVe3jqc0n+2bMGMiEz85VTXX+eP44WL9w3mNdvdY76eHc7oF1
4pH6kh2L15+qLj7H1jV3rvJY/0cfxX6OfLKGdRZo8kkr8slUeqwlwvWso/z3
5DmGjNS9bpSvGW84YX6lxfvraDM77Y2vdT48p0XJ3qK3dM2f7NreN+jrR483
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
CRDX+vLbCdZ6R2Rozxy3Jp/0bUc+CZDtlF44ifab/OR58gwEAOTk3rFLzCet
VvIxOcB4yMZ80r1gAQv7/SzRzb97N3l9MDw9pdp8spg8A5SZzZwnXM9O3/42
ecYAQ4d8EkB05sXFCdZ6R2y8jjxvHHY+WWcR88kdeeTZCQCMHZ5NBjFvEgCG
yfvxJ8J4rtdsJh+TA4yHbMsnnXPmRMb04fjw3u9n/o8+Yr76euZdt445Z88m
rxGGx1ZRJeSTraYi8gxQZr05VuF6duqu5eT5Agwd8kkAvdMvLGf+ZZMSZJTX
kmeOw+HS5JOBXfnk+QkAjI3wzsi/4ysm6LPJI0vIsw/IbD6fn9lsfayjo1vB
/8x/Rl0X6ktjfZ9+Ls6fNJnIx+RqvVXVEVVnVZPXg/qyp76h5JOZdP6Cx4/H
3kuoo4M57rpLqvpkP38y1merqEQ+Oax80iJcz07cs4k8W4ChQz4JkNip59cz
/7Jz9WP9DVeT545DzyfNQj7p35XPQvsLzyoiz1O0eE2oD/WhvuHXF9o+OWE2
GTi2CvkL6hs1Xk97e5eA/4y6LtSXvvo6Dh8V88kI6jF54uxAvgwB9WV2fYPl
k9T1Dev8TZ8uzJ3kcymlqk/28ydpfdp8kqPOAGXWm2MWrmXHZu0gzxVg6JBP
AiR38vla5lt6vj6jXH8FefY4FM5akyafzFPlG3JlMGL2gvpQH+oban2hbTfo
s8kVk5j/ZB3yF9SXFtraOJ6jUteF+tJYX1unxPmkNjsYQF0X6suO+gbPJzPn
/Nl/9zvhvfRH/lmm+mQ/fzLXp88nK8hzQFnZc0zCtezIgx+SZwowdMgnAVI7
/uxW5lv6G31GufZS5m/MJ88gU+nX5JPBvQW6jIM6d4nnL9rsBfWhPtQ3WH2h
xqsj30e/1GeTzTuQv6C+tOG1oL7sr683X+x56pBkjJ4p+QHqy8z6simf7NO8
F8edd0pVn+znT+b6WkxFQj7ZlYt8Mpleze/amh5rIs8TYOiQTwIM7vizO5h3
ycX6jHL1hczfmEeeQybNJ1XZpJJP7kM+ifpQX3bUV8CCmy7Rr+deeT7zt+5F
/oL60kr2+Z2oLz319U6bJs6fLC8nH5sPjM/lX3+J+jK3vqT55M03M8/ChSzQ
1MTCdrvSZyZkszHf/gOJ101PncpCnZ1nN34MMf/WrUOuof/OO1moqytew2OP
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
n6O+v2NLfF9h1yl9fjlcfF/McHQr4jBT5mby3JTnoHzdOM9U+76Irzvnjx1t
JgqgdfipyH9fLKxIsifl5cy/JX9csklfY76YT9bmkGcuADC40OZrEn9/1EW+
O/payLMLAMhufD88IZ8sLSUfkwOMpZHmk+He+HrCRPlk3403snB3d/wxmzcL
94c64/N9XM8/n5b3gnwyu7Xnlfw/9u7Dral02x/4f/W79/Rz7rntnHvOvTPS
IfSijnXsvTt2x7ErdgFBFBBQEFGKoNLEggJK7zWEThJ1/fJu1GGzd0JAkpVk
f3mezzMzDMILCXtnfV3vu2T5ZI9fOH8m6Er8wmT3rz7dEvZsAGZvLvlk/YWZ
80lxrqNp8NfZZQOV8v3bpoFf/19rivr+79lqs3yeqfPFrb19nPikvmaA+XCk
hXou7VfPGNL/TKaH/k7IJwNk+eRIrjd77gIA1n0q19HH+/+uet0wP11Ppolx
9twCADzfyLnz8jModTr2mhzAkeacT4792veitr9bGL9589cye3ychlaulN4v
zqP8WpeK+TmLFs3L94J80rP1BIXJ8slu3zD+TNCF9PsGy+5fXZFb+XMBmLW5
5JNT59qIN7X93UJ33q89kmImzbvjk7N3xHmUX95szc+ZLfH5h9+Pf80gp7+J
r9X3bMjmfG+A+dJyOo2Mt/6ozChTf0umB14OzSfHH/rL8smxPF/2/AUArCgN
IHPGH1TOmrRcK94lsucVAKAdY+kZ8v7JgAD2mhzAkeaSTw6tXi37M6Oxseof
t3KlLMccT0qS3m9+/frX9yUmztv3gnzSs/WFRsjyyU6fUPZM0JXofQJl96/2
pSfZ8wCYvbnkk9P3br8/o573ibzwo/HT14/rfmSQ3j91/nf3Q+tnRc7K0TYa
75g8g3K0aUKakSO+fv2FTsmXbBTAmcSZlKOJ3ytzh9sW2X93WD45lusryycn
Cv35MxgAUPhU8L9kTvtX5TXi7t/I1POKPasAAG2ZePlK3j/p48NekwM40lzy
SbEfe+rb8ObNVj/WmJv79eM+dHbSsPh6Hyf3+4nscmjFinn7XpBPerb+iChZ
PtnhHcyeCboSvZef7P7VvO42exYAszeXfLK/bPjrHzEPfbD5sfryXz/WqDdT
3fnOr/OzRXYp5mnPy/cxZaZ4623s3QbXUXukjgauL7ex39tv3vPJ0Qc+snzS
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
GtaP8b/2BwAAAHBREy9eKnsoAwPZa3MAAK3TR0Qp8slOn9DJfd0+gYprd/O6
2+x1OQCA1mWvKVL0Tr559J79NT8AAACAqxs5cVKZUUZEsNfm7spg0R8TTX3R
UdRr0R0VSV0WnZER1B4ZTm0WrRFh1BweKmkKD7EIpUbLPxvCQr7+sz4smOpC
lcT7xf9v+PxP8fGNYSHS55n8nGHUYvmn+Brtlq/ZGRUhff0eC7GevuhoaX0D
6JMFcHndQWGKjLLHL1Sxr7snbC17TQ4AoHWVe9/TuaB4WTaZtjNnbq/P+wdp
oKWTemrqqb3iDTU/LqO67EJ6ezubXl1PpYqzCfTs6AUq2nuSCnf8QvlbjtCj
jQfp4bp9lLtqD+Ws2EnZS7bRvUWb6G7UekoPWfWV+O97CzdZ/v9Wy8ftkD5e
/LlHGw5Kn6dg+zEq2nOSnh2JpfLTcfTyWgq9vZVF77PyqamwlNrKXlNPdR3p
mztouM/AXssAAACAhzAMSXkk9nnbR8ofo6OpJzpKyhzbPmeNIiOsC9WpZoqu
SyflnM2W70HkpuL7EXmqyC8NC/H4A3CT9nn7TNnnvSCI+hfI93UPePvR+z0v
2etyAAAtE/u646PSZNnkhbAbpO8YVH39PT40Sn11zdTy5DnVpOXQ89hEKvrp
FD1YuYvSQ1fL8kR3cH/5Dnq8+4SUm4oMtbmonHprG2lUP8Rf6wAAAIDbGCss
UvZQanyet8ggRVbXMaXfsZ49T3Qu0asp+jJbI8ItP4cIKZOdzC75Hx8AregP
j/y1d3KBr+Ja3frjVfa6HABA67JWPVbs666485r661ukrE70H5advCb1Jmb9
sIU9T3Qm0asp+jJLj1+hN0l3qSm/hHrfNdL4CM7kBAAAAKXhn37S3DzvL3ux
J3PICGlfdINb9kE6m07qF22R9pCHSz8/sW/cgJ5bAIfoDgyjzgUBin3dvcHL
qOZQC3tdDgCgZaU73yqyycuhl+hOiPv1QTrbgx9305ODZ+lVXBo1PCymnrd1
NGoYZq+LAAAAgI+xT0+DYWHyjNLLiwajo9lr8/nS+3lPdkt4mHRuo6OyO3V8
WaJ8XdPfP79Evit6TUXfqZRZusDjDuDuDNExNGC5HsvmdS/woqptT9nrcgAA
Las60ERXwpKn5ZPXKCV44zfldnfD1tL9qI2Ut2grPV62i56t/Imerz1Irzf+
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
juvd6Nxsb/O1K99/Rzz8dq+xhuSbsbe0/24ES2pvm/Y+AwhHU2OzormgQ+Te
KRFPvo4XV17f+Lg+p6v/vSf+eOeJePhhrLHHtMzpMg+UGHvxlB9tDvu54rU/
d4ji7+pF1sEykbQ7Vzz/NFn8uSNK/P7mw03lkM752g933BUZe+4ba0hOnGV8
JABspbwvjrhllB1ZRdr7ZQCwmpybN+YN6q65gUi1/85ZY13DrC8+Er3/+uem
cje3cZcOck3MAWeG6dD3r/8z5o4bWear/zbmkMs8c6vnkbcac69fFe2vvWpk
qPL95bqbMlftc7RLzmmX4yCHjL1qNjcW0kqeN/+zD8TNY4fEoVtnxL+T7mr/
3LfKf7KeiL6pKe19BxAJOit7ReGjChF9LFlcf/f+prM3sxtv3hd333shHn4Y
J55+kiSiv0gTCbtyjLnjGQdKjP1h5J7VZUcaRdWxti3NG6uPtYvyH5pE0Xd1
Iu/rKpF5oFSk7i00xoRGf5FurAv56KM4cW/HC3H99eDeh6v/vS2ef3RP5B94
INp/eiJmLuiv1QHATmbOPxIJ7+xT8snYHfvFZP+w9n4YAMx+qyt0q3+Z1w1s
nQ+eXRPfXz9pZGmpuz8TTW+9HtSszh9jxhjDl+MMR0zkHGpJZohyLKPMPocN
fz3nr/8/+tc5Aln3cbNaXn9VZPzvY/HH0YPi2OVfwmSudnAdKE3V3ncAkWi4
a0w05XeIggflIv5Eurj7xebmLQdCrtco97OWOeGNNx+Im289NPaUuf3uU2N9
zLs7XhhjGWX2Kf9d/lw+Luehy/GN19+4L669fi+gdR833fZXr4vfXzsr7rz2
i3jw3yOi8qsr2utyAMBz0X/8ptsYyqwjZ7X3uwDgVDnSr73OBvBy353d986L
02ePGnvv5H/6gWh+47Vtz/5CiRyPWfjxDmNtz3Onj4h9d8+J/yTe0f5Z6eDp
b0aJ3ey/CGwHue9Od22/qEqsN/beef59orjz+cb334kktz99Ip4dTjDW9qyI
rRU18aXi+X93KXVv3udHtNfjAACXqn0n3DLKtrR87f0sEIkWFhbF6OiEGBgY
Nsh/lj/T3a5Qbd+s47135EVrr7sBePdK2n3xVsxNsfP+BfHD1V/FhZPfiwff
7RPJez4XpR++K9pf+48Y+7v+LHGj5JqTFe+/LVJ3fWqsEXn512+NdSL33Dsn
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
F5mfmy8S4xOClsHJfE9mfTL3kxlgY22D6GhuF/1dfUqeGPK6+o18s6m2UVSX
Vzuup1jkOq5LZoyJccG7X7lZucbeQHLNzunpje/ZBHcJn3yt1I3tRy5rr2UB
AJFj8JdbSj8T9dZuMTc5o73/AxAcVSMD2utWAID9pPa2ae8Dt9rkxLTo6uwW
1ZXVIisje/PjIBOSRHZ61ssMsrzKyPBklqc9U9xGcjxnU12TqKmoFiWFJUYm
m5KQvOl7K+fQy/14Oto7xPjYpPbfnXAzWNus1IzRb+4ScxeeaK9lAQCRJfG9
/erfwjILtfeBAILjckOp9hoVABD5rGMof6jM0t4HBtv8/KLo6x0QNVU1m1oz
Uu4Bk50hx0IWidqKatHS0Cx62ru1Z4OhrLezx5hLLueQlxaWiNyMHJGaGHhu
KefaV1VUiZ7uvi3deydSVNx6os65+/JH7TUsACDyVB84pfQ3+Seuau8DAQQH
c7sBANtD7V8iZY63HCPZ2tJmrB8ZyPqJckxkXlauqCqtMHJIuZaj7qwvkrzM
LVtEdVmVsd5lSmJg+50X5hWI5qYWMTY2rv13LhRZ53Z3Hb2mvYYFAESekRN3
mOMNRKCK4f4QqFcBAHaV3NOqvS/cKLkuttxjRa5dmJWx8TGS6SlpoiivUNRV
1YrOFnvNzQ4V3a1doqG6zljbUu7Ns9HPUO4TXlVZbawlytjKZTFQ3ajUijGO
WnH+4lPtNSwAIDIl7/hKneOdXqC9LwSwORcbSpQ60Tr3DgCArfRdRYb2vtAf
MpPs7e0X5aXlIjkhye8cS+7nIudpy/2qm+oaRR9jI0OS3IO8pb5JVJZWGHvx
JMf7/xnLMbOlxaWiu6vHmN+v+3dVh/LfHyl1YvHOY9prVwBA5Kr9Sp3jnXf8
sva+EMDmWOd2AwCwnf6e/jCk53jLcZKV5ZUiJcn/OcFpKamitLDYyLv6u8Ns
72ysaW1sEeXFpSIzNcPvz15m12UlZcaalQvzS9p/f7eLdW5394/XtdeuAIDI
NXb6ntLvvHhjJ3O8gTBWPtynvS4FANiRug5lYneL9j7RbHBgyNhvOy051b9c
Ki7eGHNXU14luto6tedqCL7u9i5j35387Dy/1xiVexxVlFUY+yXJ8be6f6+3
Sn9VA3O7AQDbLvWDQ0r/05aap71PBBCY8/XFIVCjAgDsxroP2+HydO19otzj
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
Joyf/VKTZ+Svvg6ZBfpqm8yOq8YG122bvE6ZzZqZc1KzO457KzNcX4e8vzJD
Xi/3lL9r5ev8/socVear5oN8MjxZ/6ZW3NKsPacB7KavvVup62Sdp7vWRHhY
7XT11zLL8/t1IxNrr5MZmPL47zFipbbNccJ1vt3Nzoulpxle32Mtn5TvkVL8
8meNne7nWVxSXrf0JP1lhrbOsdLS42hrbED3bavyyeW0EuN6fB7LK2K5uN7n
e8kcU+a6Pg/H57NS3rR+2/+IF6vd63zvlJ9lTK7yI/JJbETK+weVfmykuUN7
VgPYTdP4iM86D6HveVfDWj8sxyT68xqZYzqPtukx5TE5Xs+aDcrzloz0iaLh
XmMsmvmQ49H+n5e8yJxPfl4UL6rHPX+3SOxtWXvND1VZSlYox9HF9zQbbX7Y
UWuM+XMeMq/6oigh4Hsnxw7L8ZLmQ2ZocvyfbJPMLa0Z4eXGEuUc1nwyZ7Br
7d8HHPdK3jM5PrRzZkI5j8wvvbVdXqf5kOeV7ZTtkrmxOZOWx4uuRo/nMeeT
cytL4nfT5y7HEsoMT46ZlPd0xZLQXmgo9njOf2U+Vu6JvA55n+SYRHlv5JhR
OZbX0yGfe95yXpnnZg+q3/Xl+MkH7bXiSlOpcV553eb2ybGj3j5TmZ32WD4z
eb/yh7qNzzR3qMsYF+tsj/kgnwxPf7OsSZJQX609qwHspq24UqnrZJ2nu9ZE
eFiKz3d1xI6uXo6pXPc1T01/X1xZEYu34lyPP0gRYkL9rirmFsRq95BYbe8T
q8OWv5MvLHp9TyWfzK4UKyUNwuMxPu163Z2El2MO1164LFYau4y8TpJtMMYR
ms4b0H3bgnxS+SzkMTNn5LzLBTVipbTRGD9p/qyWHqV5vm8tPcpp5PjJldIG
4z2N8azyHpiy45WmLu/t/iPecX8t3yvnHZ9nW59YqWsXq629L8enGidSv8uS
T2Ij8j4/ovRjXfkV2rMawG5y+rt81nkIfXIesfk4VO57zq8k80bncbFRzYv+
bK9Ze0zmajuLk9xeL8c3mvOi8w1FHt/HnE8m9bWu/bOcsy3nOcvsSfrclNOZ
2yZzKzlG1HrezwrjjfPdaC7f1L2T4zbXvhs5rue2oy3/yHB/PzmPunFyxJhn
/H+Zj5XHzPmk85D5mBybZz2PzH7NmVihZdyok3Nsohx/+Lijzm1uuWxjTHeT
63ufw8cFcW7nMeeTzkPmr/Izt95XeU/Nn9fE4rzHeyHHrDoPmVW/72HOtRzf
aM7N5f2QbZHz1a3PNf++yTGNB8pSPd4T2T5zNv6b4757ep7Mg82fqcy1reMt
ZSYq78GCZbwm+WR4sv5d7W51ifasBrCb+qRspa6TdZ7uWhNh4orMzWZdfXeJ
73F50kp9h+v5zd3KY0tROa7vR4NjRo5nfb0xvnHWNZfEWz5mzieNcZPOXHFi
2sjGZNYmx27Kecee2iZzNY9zoW/FGXmdfK68/kDu21bkk+Zc1xjbeS3K/X0f
phrtXs6r9nzPHJ/f2jEzJ5aeZ3luv+M85jGmy+mlHp+32mGaD7MqjKzU07Uu
Z1W8nPNtOsgnsRHle48r/VhjTJr2rAawm+cd9T7rPISHyrGBtb4408fYMunr
8vS158pxknJ+s/lxmd3I/HFPSbLP88h5xc5Drgnp6TnmvMv47rS6In6s9r5f
vMzY1r4XOb6EyPngW3XPjlRlKW3zNl5wPdZ8snik1y3DNIvtaVKu8dUs92uU
4zrlOENf61TKzK3LNCZTjrm0PseaT8pxjZ7yRKefa9R5MfIeWZ/TahpvKp/v
tX3pD411Mp2HbItb+xzXt/zX389lbvtlsXWvLtWnhXFrz5e/W9bHrfO1LzeV
+jzfD5bfAfLJ8GTtt86U5WjPagC7qXgQo9R1ss7TXWsifMi1DteO6Tnfmd2N
GGXesKc1K+U836VE91xSec/UEtd7rqyKxWvRbs8x55NrTy1t8JkFmnNPT9lo
sAQ9n7yf4jqZHMcayLxzYz3R1bV7uu4am3Ksq/P5U7MeP0fz4XPNzMvu4z/J
J7ERDV+fVfqxiltPtGc1gN1cbSz1WechPMg1Bde+n6yuuO15ZGaeS5tgmle9
UeYsSGZLnsbGWfNJb2PenPaWur4bybFtG91fZSPMma63fNUf1vnd3ua6O8k5
3eZD5sWBvrfcZ8h5yOuxPm7NJ/15rynT3HG5jqb1cefcaHmst1+NeSyjp/d+
YRpj6W2PJivzmFfr2F7zYzJHXe9c7I8Tmb4pStGe1QB2U3jprlLXyTpPd62J
MHI7QZnvax6PaGWMk3MecnxioO95NUqYl7ZZeuE+zs+aT8oxlOud1zx3e+l5
5pbds2Dnk0vPMl0nW17263xu96uy2XWv5NhQP15jzPV23q8n6V4fk/Py1z0f
++NgEzp+uKr0Y/knrmrPagC7OephfBTCj8zEzHueXGsu8/i8Nyz74qw3Xs2X
Dy3zyt/wsE+OOZ/smB5f95xyXxPzIddV9JR7bpbMpczz08+sk5v64m3/bm/k
+o3m49favIDf+1xD0dp5Ov/a/8bMmk96mztt1jw1uvZ8T/m1XK/UeayXd8q1
SZ3HrhL3dQLM60T+4Od/i8zzy81jXuX/Bszztb39b8D6e2A+yCfDlbouySe5
MdqzGsBuso5dUOo6WefprjURXuR6gs5D5lJen2daP3I5r2pT72nO65aSitwe
V/JJuc7l7YT1z2laK1HuGx7o/jfrCfr4SbnOo+lYqWzZ8Nxz87XLsYz+vMY8
dnY5q9z1mON61vZnl4/l+vFZk09iE4Z+va30Y2kHjmvPagC7+aLImk+x/mS4
emwaS9fhIauSfm8pX3uOXE9xM+/3bl6U8h3A01xkcz4pcyV/ziv34TEfMsOS
7ZbvF6x7ZZ7jLg+ZtQZ6ro3mk9KiKSM+W+957U5/nKxzzWORe/FYHw8knywd
dd3/9P52t8fNYzblWFxv55FrdjoTYJmdW8fCvpr9VGz2uGPaT313SZLy2O51
1ieQyCcjg3Xc/z8zHmnPagC7Sd57TKnrZJ2nu9ZEeFmKNc3lXV31uG7j0hPT
Oi7LK2Lx5uayP/N6i8tp7usfmvPJ1Z4hv84p10dUjvkFY1zh0mPPe8kEfL+2
YP1JuX+6coxPieX8amPPn3Xb9HuMP1/dfB5y/6C163uqrtnja5/1NeST2ITp
cw+Vfiz6nT3asxrAbt60jHljfnf4kusKmnetk3Olrc8x77u83lxrp/8VJxp7
2Mh9j+XYOTm/V45Ts+737Gl9QXM+ac6SfJFjKOVYS0+H3J9Gjouz/t5ulFxf
03xsZozmZvPJc172FnKS4wJlnirzZ5ndds1MGvtRy3Gw5k/A03qMm80nPe2T
LcfJmj9XuZfPd5WZxucmx4bK+etyLcx501hGT9doXms00MO8t5Nc19R8+PM7
Qj4ZuTq6erTnNYCdxH54UKnrZJ2nu9ZE+FH2SymsdXtc7knjPPyZa224k2jM
CZfPXx0YfZnRyfUrV9XvsZ72Z1HyyW7/8kmZE8o9ezwejutbKW801l3c7L3a
inxSZsKro5PWVr+8/sGxl2MYzXulm5nXrwzwkJ+T1+vztM+QFfkkNin6zV1K
XzYn10UNgcwGsAvdNSSCy5wtWdfzO1ietvbY9NKizz1c5GNXm8qMMXn+HsHK
JyWZyd1sqTD2c/Z0yHz0QXutz2vw5XJjiXKuzdzzrconZd4n98CW+237c2xX
PinJbLHdS4ZsPuT9uNPq+XP/vEidRyT3vpF5ob+sn/1pS+b8Lz9+N8gnI4f1
b2u17e3a8xrATsz1nKS7xkR4knthrx2TM+rjMntaXFp7WK6X6Otccn+c1f5R
4e8RtHzS/P4jE17fz9h33J9xid7OvxX5pOQ4jzEGdMbzd3A5btXYI8iyt7ex
H7e5PTKDdXxmfrPsTyTHsyrnu+6+f5Eb8klsUvKOA0pfNtE3pD2vAexifG7O
Z32H8HOsOmetT5bj1/5j2ptb7uvtPKK7m7yeQ+ZG5nGW8q/LteNDxpi44zW5
xjzajwpi3ebTBjOfdJLjGuXYPLkO4sjCrNtXpOrxwYD20HEbP7mJfXi2Ip/8
yfE5mnNJmaHKvV9kZnu0Klv8ryjB2JvmSpPru9t25pNyj/e7js9THnMrS2t7
ajsPOZ9b5uOynd7ex7rW6G4P61NuhHmPKHn42iPKiXwyclj7r6KWZu15DWAX
vU0dSj0X/85e7TUmwtStOGPfZ+exFO3Kl5YzXWsUydzP6zl+jxGrHf1K/y7G
psRKdauReRn74NxPMcZVKuM1g5xPOsk9rFfKGj2PS5ydN9oR0Hm3Kp90uiLn
3OeJldp2j1mlsbam+T1vq/s/+jUf24fl5CLlfH7N5SefxCZlfPyN0p8NN3do
z2wAu+ianPBZ3yH8yJzNnOM557/KrMaciX1aGO/x9a/nPBPD867Xy/2X3/ey
R7Pb+pNbkE+ayUxMZpX1E8PK+/o7T93s2wp1TZv19qH2Jdj5pMwQnXmf/L9y
Xrc5ZzYzrz+5nfmk3LdIHsOO3zX5e/CPjEfG74nMrT3tk+SJHCNrvg/n15nn
vtHP9CM/1hQln4wc1v4rvbFOe2YD2EVnRb1Sz6W+f1B7jYnwtdLS4/peJccY
/vXz1SHX/nzL2RVeX6+soTg25XFfbidl/cktyifN5BqUcp65+fB7nrr1XFud
T1rfLzbPbTyqcs+M/Wxc3+tknrype2Vej1Re3/3k9V9HPolNyvv8iNKf9ZbV
ac9sALuoHR30Wd8hPN1vd63L3TI1avzsenPZ2s9qxoe8vtY5Jk4eMgf0tS7j
dueTTjLXktfgPDzt4bIemdeaR/zJucGBtifY+WTlmOt79dPOep/n0ZFPyrnd
znv3ZJ32rUeOf3UeOYNdmzqX3J/JfMgxqOu9hnwyckXXVWnPbAC7aMkrU+q5
zI8Pa68xEb7kmEnXFyu5B06ckeutHUuOOuZGjOfXvshyPW9xad01C7c7n1w7
b1mjq53Tc4HdpxhLfudtXUjz9W4inzRceSFW+1zjBFYau5TH5ZjKtfvV2rO5
+3Q3Ubm+pcTC9V9DPolNKtqp7vXWkV2sPbMB7KJgoEep5/7G3t0RQeaG5p1T
ZEbVMDmy9u8navO9vrZs1DUfRu6Zvd77mI/tyielG82uOT6+9pD2pdF0T2p9
ZLbrCXY+uWDaV2bXOnOedeST8vfHebRMjRljboPxOcr9fjztAb8Rcl6580jt
b1v3+XLMp/kgnwxnav91v6ZUe2YD2EVDSo5Sz+V/fkR7jYnwJveNdh4yN5R7
yqx916pr9/o6uaeO85BzvNd9H0355NKTdNeXDznHO5BzPEpTvsOstx6ncb2z
ru9JAeWT8h7nVbs+i5Yer4/JefoyY9zU74GpvfKzWPc199S1p8gnsVEVe39V
+rPm+EztmQ1gFyk9rUo9Rz4ZOQqHXXNj5N7bzrRyYnHemIvr7XUVprF7jzvr
fL7Hi64G5TvAduaTcj1K5yHXxQzkHOacTR5n1pkn/lr2U2MfbevPg51PLpke
k/PZvZ1Djv0zjz/crnxyl2XdUZmnynbI58p1TaO6G43533Ic7+WmUuMa/u1l
frqct25eZ1OOHfX1+ynJfW/kPfO0P3dsT7PrO6njPsqxnt7OI3NV6z7x5JPh
yzr+/3plgfbMBrCLmugUpZ4r3vWT9hoT4U3JwJq6lH1m5HqOXl9XVLf2PLlX
t6/3WEoqVNa63M58cjml2HXe/pHAziPnUy+5/qa9Ut/h47nPjcfNR6D5pLEe
pfM95T455sdvxDi+GLr2MFrtcdyzq+vMO78eLZYzyjyOdV2paXU1WI6lve9j
3/ObcW5rfJJPYqNqD55R+rPaR3HaMxvALp511Pus7xC+jlS65reYx5Q9W2c+
bnS36+/T/XPTHtc9lOsL5g11C+sRjHxSvl/r1JgxnvF/xYken7O/NGUtw5Pf
Kn3tweKLnLtuXstSrvko9yz3NKf9h6qstXU9rXlisPPJNlNmljvkec6zvDfW
/bN1rD/p7yH30HnUUWfMzbeeS16/+ZAZ5Yce1o6U+3WfbyheWx9VZqKvWJ4j
9wA357vyd3h3SbLyHPkauceQPM/qX5+78yCfDF/W/uu3smztmQ1gF+UPopV6
rnL/Ce01JsLczVjXWoZzC2v99OrgmM/XyT2z146VVc9Z5pUXYqWk3nEydW+/
YOWTxmsmZ4z80+Nz/ohX9+UJMCc03quxy3UBjuuRuafbPXmaYdw36+H2vjdi
xOrwuFjtGzHm03u8v8+zjJzQecgxnNbnyKzRfBgZ5Z/J7ue7Fv1yz6O/5pwb
++1Yn/MgRcmQjfvqYd8dYy1O59x10+dKPomNavr2vNKfVdx8oj2zAezij5ZK
S33H+MlIITMYczZodNcOnnIfM5n1meeG985OGWtXyrX8ZDaU3Ncq5pZf/l1U
rhfYNeP6e3Yw8km5F4z5KB/tN/aslhmg/P/yPc3ti+tp3tR9kvOJzfsByUPm
kDKXk+MA5R7U8h6Yj9ut6v9ugp1PmvfklofM6+TeMT/X5BqPFY/0Gu8jybGj
zmM788kfq7ONvXHkMbW0IGYdvxPqt3zPR2Jvi8fzyXGX5kNem5x/n9bfbrxG
XrN5nKU85O+GzCyt5zKvv+o8Ohy/p/lD3cZrnDmzbK+8r+Y8mHwyfFnzyaMl
6dozG8Auim88VOq5ukNntNeYCH9K9vbXYYyz8/W6a1HKGotyLJ8c4yf3gpZ7
d6+UN7nysNFJsdra6zp3EPJJ654u8j1kFirbLfPAldo2Y13MtceHx9cfX+jL
n8nKGMq195RjTlt7lPGEct8g877m1nxSWRPTuN5BsVxQY9wX+f/l+cxf9lZq
2rx/dtWtQj3Zy2xZ7gUk5+evdvYr98H5fjKzdDuXzJIth/HZtfUZrzHvLS7z
TmWsLfkkNqjjyGWlPys6e0t7ZgPYxfn6YkuNRz4ZSe6Y9rqRh8xm/HmdzAF9
HXIsnHNtSpkfOY9g5JOvZj81MrH1si75uMy0fO3f4693cqOM8ZrrHaMLc+KU
h310gp1Pyj3YC0zz8z0d8r4653477/F25JPyfjs/c2/jTeW/y7nwnxfFG5l2
hynDlvfH07xs6VJjiZheUjNIT4fMQmUu62ksppMcJ+zrd0iOKZZjYuVzzfea
fDJ8Wf++9lVhkvbMBrCL/HN/KPVcy7cXtNeYCH/GWD3zsbDkMb9ye11Utltm
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
u8S3FRlu53nFoX9u2jjHilgV8T3NfrfhzZzna6+Vx56S5IDbv97xrKtB+z0H
tov836XurAawm6SdP6hz4n65pb3OBILOWz55LVosZ5WL1d5hIWbmhFheEWJ6
Tqy09Iil2FyP51pp6HRFhINjjnNE+d2O1c7+tdcuF9Rs+Dq85pP3k8VKeZNY
HZ0UYmHJcYHLQoxPiZWqFuPatd9/YAvJv6spcwHe2Kk9qwHsxpq5kE/CDjzl
k/tLU0Tf3JTPnC9roFP8I+ORcq6rTa7veHIdyI8KYv1qw4P22rXXNUyObKj9
r2Y/NfboJp8E3PutD3KitWc1gN1kHPlNqes6f7iivdYEgs5DPimJiWkv38Be
HivN3WLx6gvlXEuP0pTnLGeW+9WGpegc04sc9dzN2A1fh6d8cqWk3tFQH98t
l1fEUmKB/s8A2CJDv/6h7vW250ftWQ1gN+fri33WeUAksuaTjzvqjLGS8hhb
nBOlo31GFilzwxVl9xkhsgY7lXP9O+uJmFleXHs8prtp3feXGad8H+fxa23e
hq9BrjP5Q1WWuNtWpbRP5p7nGooUuzcwNhMIdweLkrVnNYDd5J9T67r6r3/T
XmsCQWfJJ1fKGl+OlZTH7LxY7RowssjVgVFh+fr4MqO0nG+1Z8gVE45M+NWG
1bY+1zlr2wO6Dms+udra4/r3yRmx2tH/8jrkOErlIlaMXFX75wBsgY4frir9
WO7PF7VnNYDdPGyrVeo68knYgaf50TJjPFNfKP5fxkPluXI8ZMvUqPLcn6pz
lOc866xfe2x2ecltXVerE7X5a88fXph1e8+NsK4/uaskSfv9BbaTtd86WZal
PasB7KbsznOlrivb84v2WhMIOks+aRwLS0bet3hFHR8p50qvDo0rT11KKlSe
sxSXrz4eleP7/e8kGHmi81h8kBLQdSj5pPMYnxJLMe5z0WWbzeMqV9v79H8O
wBZo+Pqs2o9de6A9qwHsJqO3w2edB0Qiaz4pxzL6mpf93+xnynjHholh5fH3
8qLFsun74tWmMp/vX+94vfO43Vq5qWshnwTUfd1uVRVrz2oAu6mNS1fqurzP
j2ivNYGgs+aTs/NGDun1+TdjjeesZXsDo27Pkbng2uNtvrM/Y7ym87ndgwFf
hzWflOMlfa1/uVLdanqyEIs3YvR/FkCQle/5RZ0H8DxJe1YD2E3d6KBS15FP
wg6s+aScJ73ea35vqVBeIzNJ8+Ny3rfz6J2d8nqeL4td320XVpaN7HMz10I+
Cahi6qu0ZzWA3bTklanrdr1/UHutCQSddf3J+Px1X7OcX6O8ZvGOus/Mcpbp
+6VcC9LbPjRXXwgxt+B677i8gK/Dbf1J69hPC+tamXINTO2fBRBk8u9qyjrK
OSXasxrAboZnZrTXksB287Z/ty8fF8Qpr/m5Jld5XO6/bT6OVHrOPJP6XH+D
Tuxt3fS1kE/C7qx/VytobtSe1QB2093QqtR10W/u0l5rAkHnbf9uX+6nqK+x
zPGWe3+LeVfuuFLR5PE8y6klrpOMT23qOrzu3+3NdfV783JKsf7PAgiy1A8O
Kv3YUEOb9qwGsKP/y3xsqfXub1tdCegQSD75ioN5z+xbLRVuz6kzzdsuG+13
e/y17KfGmEnn8XlR/KavhXwSUDV1dGrPagA7inp7j1LbTZ99pL3eBIIqkHzS
wbx+43JBjdvjK6WuedtiftHILK3PMfbccZ4ju3JT17HhfFJew7LpGjLK9H8W
QJDJv6spfdjIuPacBrCjzwrVjIQ53oh0geST0viiaw0huee39XE5pnLt657D
J4VxyuM3msvXHq8YGwjKtZBPws6s/dU/0h9qz2gAu0rafVQde/Lrbe31JhBU
geaTpjUo5RqSbs+5neB4wLWO+XJWufL40pN015suLBnjGTdzHeSTgGr63EN1
DsDbu7VnNIBdfV+Z6bPeAyJNoPnkyMKsz3zy7zIbmZtee05sT5PyeN+caw30
I36seekP8knYmbW/+jg3WntGA9hV1tFz6tpdR69orzmBoAo0n5xx7bHoMZ90
WGl0rWO+OjqpPlbf4Xp9RfOmr4N8ElANn7it9F+p+37SntEAdnWxocRS7zG/
G5Et0Hxydnlp7TWe5ndL15vL1p4z53j+f7KeGD+XfwdwHnL/nFeCdC3kk7Az
a3/1dVGy9owGsKuCC38o9V3doTPaa04gqALNJxdd3x89ze+Wlh6nq+d27kEj
9wBfXnZlid72z9kA8klA1fHDFaX/yv/1ivaMBrCrFx0N2mtMYDsFkk++nvNM
ec2vtXkenyfzyJnlxbXnXWsuM35ePNK79rMrTaVBuxbySdiZdfzkufJc7RkN
YFcVD2OV+q7wyx+115xAUAWST95U91f0tbfMaq9rHfPV9j7jZ+b9v1dbe4Ny
HeSTgKr6wCml/6q6/Ux7RgPYVflwn896D4g0geSTcj62+fggP8brc190Naw9
r2d2UuzIixYr4uW6QjK7/PdfYyqDgXwSdmbtr57VlWvPaAC7asoqUufHfXBQ
e80JBFUA+eRSfL7ymsV7Sd6fm1Bgyg0dz72TIMSEa92gpRfZQbkO8klAlf/F
D0r/1Zaerz2jAexqan5Be40JbKdA8snsQde6QN2zk+ue35lHyiOtv33tn2V2
GcxrIZ8EXIpamrVnNIBd9bZ2KvWdtHDpmfa6EwiaAPLJlZYe1wvGp9Z9vhh3
5ZHKmpTD40G7DvJJQJX03gGl7xpu7tCe0QB29m5elFLjMYYSkcyaT/7RWunz
+QfL00xpozDWmFzvPXIGu4T1kJmlr3GXgSCfBF6Sa7r2dvVqz2gAO4v/5Bul
xhs5eUd73QkEjSWfXC6s9fn8pahs9fl5Veu+x3J2pdv3R+O1aaVBuw7yScBl
7sIT9W9rb+wUC3OL2vMZwM6+rcjQXlsC28WaT8rs8X57jfhHxiO35/5UnaOs
Jynna/8z0/15VvtKU9y+WxYM9wT9WsgnYVfWv6N9yN7dgHaZR84qdV77kcva
a08gaCz5pPG355J6sXj1hdtzl5IKlX1xjLGT16LWf4/rju+o84vqm8zOO97D
j9f6iXwScBn85Za6NsneY9qzGSDYFhYWxejohBgYGDbIf5Y/090ub+27VFNk
qfvYwxuRy5pPNkyOGP9/amnBGPcY3d0kUvvbjH22zYfMKXcW+5//Oc/rPOQ4
zGBfC/kk7MqaTx4pTtWezQB2V3TlT6XOqz5wUnvtCQSNJZ9cHRh9+Q/zi2K1
tUesVLeKlYZOZc1I41hYEktP0v1+n5XyRvcMNIjXQT4JuLR8d0Hd2+3M7+RD
tC/i2ifb098/pJA/090ub+170VitvdYEtos5n5SZ42vZT0X1+KDwdXTNTIqd
xYkbep9LjSVrr2+bHtuSayGfhF1Z88kblYXasxnA7mqiUpQ6L+/zI9prTyBo
zPnkwpJY/D1W2XPb4zE2JZYe+59NGh6Y5uCsrIjFP+KDeh3kk4BL+d5flH6r
9nE8+RDti7j2WdsmyRxVd7u8ta+4o81n3QdEEnM+mT/UbfxMrl33W32hqBwb
EOOL82JpdUWMLMyK0tE+cba+yOPc7/WUjfavvY8891ZcC/kk8FJiQ432bAaw
u7biSqXOS3p3v/baEwgaUz652ta39nOZ9632DBnzsGWeKGbmxGrXwMscz8Pc
7/XIdS3X4snGzqBfB/kk4JL9ybdKv9VVWEk+RPsirn2yLeHUvj6HV0KgvgQi
xZfFru+wMu8MJN8E4L/qtnbt2Qxgd/2dfeLFG+oe3rMXnmivP4GwcS3qZc75
17HhsZcANiT2rd1KnzXeM0g+RPsirn2hPr7TU/s+yY9Vaj3WoAQClz3Yufbd
Uu69o7s9QCSx9k//zHikPZcB8FLS7qNKrTfwyy3t9ScQLpazKlxDG/uGtbcH
iGSTvz1U+quYd/eSD9G+iGyf5/Uxl7S3y1f7TtUWWOo//TUoEI4+yI8RK8au
4MKYJ/527gvtbQIiibV/2luQqD2TAfBS3qnrSr3XePic9hoUCAtXngsxOeMa
O5lUqL9NQATrOqb2V9lHzpIP0b6IbF84iutq0l5zApEgobdl7btlen+79vYA
kcaaT16qyNOeyQB4qeppglLvFfzvR+01KBAOllOKXetCTs0aeaXuNgGRrGr/
SaW/qv4zWnsmA+CllolR7TUnEO7eyn0hFldda4izXw0QfNZ8MqmhVnsmA+Cl
tpJqpd5LeHef9hoUCAerw+OuPWjyq7W3B4h0mR8fVvqr7qIq7ZkMAJf/ZD3R
XncC4exxZ93LNYMcMgY6tLcHsIOOzm7tmQwAl5j39ik138SZ+9rrUCCULcXm
ucZOjk2JxRsx2tsERLL5S89E1Ovqfm5zkzPa8xgALofL05WajzUoAQChxLo3
zgc50dqzGACqjO9/U2q+jiOXtdeiAAA4yb3bzP1Uyp4ftWcxAFR3W6osdaD+
WhQAACdrv/RzaYb2LAaAqvTmY6XuK997XHstCgCAU/3X6t/RSi7e1Z7FAFAV
D/b6rAMBANDJ2i89ri3TnsUAUDWm5yt1X9qHh7TXogAAOOV/8YPST7Uk52jP
YgCopucXxCshUH8CAOCP0tZW7VkMAFVfW5d48Ya6rtfs+cfa61EAAKS4t/co
fdRoe7f2LAaAuy8KE7TXmwAAWFnHTv4r47H2HAaAZ8l7jim1X+9Pv2uvRwEA
GD11T+mfYnbs157BAPDsfH2Rz3oQAAAdrHvjHCxK1p7BAPAs/6y690DtwdPa
a1IAAFq/v6T0T7k/X9SewQDwLLmn1Wc9CABAKLheWaA9gwHgWU1UslL/ZX3y
rfaaFACAop3q+P7ax/HaMxgAnvVNT2mvOQEAWE9OU4P2DAaAZ501TUr9Z6xB
eeGJ9roUAGBfC5eeidi3dit904Cjv9KdwQDw7rPCeO11JwAATta1Rv6Z8Uj0
dfVpz2AAeJe0+6hSA3Yevaq9NgUA2NfQr7fVtSff3SsWF5a05y8AvLveVGap
DZnjDQDQx5pPfl+cpj17AeBb0ZU/lTqwdPdx7bUpAMC+ag+eUfqlwjM3tGcv
AHwrHerTXosCAOBkXQv5cW259uwFgG+NGQVKHZjw7j7ttSkAwL4yPzms9Eut
KbnasxcAvs0vLol/ZT621Ib661MAAKSWji7t2QsA3/o7e0X0O3uVWnD01F3t
9SkAwH5mzj92Wxd5enRCe/YCYH1HKjMt9SBzvAEA28/697GPc2O05y4A/JN5
9JxSCzZ8fVZ7jQoAsJ/Oo1eU/ih1/8/aMxcA/onubPRZHwIAsB2s/c/5ilzt
mQsA/1Q+ilPqwZxPv9deowIA7Kd0989Kf1R197n2zAWAf/qmp7TXpAAAWGU0
1WvPXAD4p7OmyW0+3eyFJ9rrVACAvcS9vUfpi/oq6rVnLgD893FBnFITWvcn
AABga6n9zj8zHom+rj7tmQsA/yV+eUSpCbt/vKa9TgUA2MfoybtKPxTz7l6x
uLCkPW8B4L/LDaVKXcgcbwCATt8UpWjPWgBsTMHFO0pdKOfY6a5VAQD2UXfo
jNIP5Z+4qj1rAbAxhQM92mtRAIB9Wf8u9rCmVHvWAmBjGlJylbpQzrFbuPRM
e70KALCHtA8PKf1QS2KW9qwFwMbMLiyKf2c90V6fAgAgNbV3as9aAGxMX3uP
iH53r1Ib9hy7ob1eBQBEvrHTf7qtgzw1PK49awGwcSdr8rXXowAA+7Gueby7
IEF7zgIgMLknryu1Ycmun7TXrACAyFd7UJ3bnfX9b9ozFgCByR/o1l6jAgDs
SM0n7zO3Gwhb9ck56t4Eb+1mjjcAYMulfqDO7W6Oz9SesQAIzPziktscb/bJ
AQBsN+Z2A+Grv7PXfY73T9e1160AgMjF3G4g8pyuLVBqRPJJAMB22sfcbiDs
5Z25YZnjzT7eAICtU3vwtNLvZB89pz1bAbA5RYO92mtTAIB9uO3bXVumPVsB
sDmNaXluc7znLz7VXr8CACJT6gcH1X27k7K1ZysANkfO8f5v9jPt9SoAwH5e
cWjt6NKerQDYHDnHO+b9A0qt2P0jc7wBAMHnNrf7jZ1iZnxKe7YCYPPO1hVp
r1EBAJHPOnbyQGGS9lwFQHDk/3ZTqReL2ccbALAFrHO7c3+6oD1TARAcpUN9
2mtWAID9PKkt156pAAiOxowC5ngDALZc8g51vH5rap72TAVA8FjneLNPDgAg
mKz9ipzb3dHZrT1TARAc/V19bnO8O49e0V7HAgAix/CJ225zu+cmZ7TnKQCC
52pjqfbaFQAQuaz55OHiFO15CoDgKrx0V51z99n32mtZAEDkKNt9XOlnCk5e
056lAAiutokx7bUrAMA+khtrtWcpAIKrvaxGHdfiMHHmvvZ6FgAQ/uYuPBHR
b+5S92IrqtKepQAIvj0lyUrt+Lf0+9rrVwBAJFD7kzeynom+rj7tWQqA4Ev9
6heldqw5cEp7TQsACH8t311U+peET78RiwtL2nMUQJeFhUUxOjohBgaGDfKf
5c90tysY7Yvrag6BGhYAEHnUfPJyRb72DAXA1qh6mqDUj3Fv7xELl55pr2sB
AOEt46Nv1L9/3Y8J6/yF9tG+zZLt6e8fUsif6W5XMNo3Nb8g/pX5WKkh2ScH
ABBstW3t2jMUAFujt7VTRL+zV6khu368qr2uBQCEr5GTd93XD+kbCuv8hfbR
vs2ytk2SOarudgWrfadrC7TXrQCAyGH9O9e+gkTt+QmArZV35gb75AAAgqZs
j7p2SM7Rc9qzFzvkQ7QvtNsn2xLJ7aseGdBeywIAIldUXaX27ATA1mrJLXEb
5zJ59oH2+hYAEH7mLz512xenI6tIe/Zih3yI9oV2+0J9fGcw2vdJYZxSS7JP
DgAgGP6d+Vh0d/Vqz04AbL3EL48otWTtV6e117gAgPDTZtkX5/+zd9/fUVzZ
/vf/Ra/xzL135t7vGEwywWCTMyaanKMD2GAbg8hCoCy1cs45q5URCCEU8bPW
fthlS9PVVS214unw/uG1xiO1WlstqUr7wz7nxK3eLeOjE8azl2jJh6gvdOtz
3x8zdM6MWoj6HrXV2vpJ8kkAwFz4r+2+UJplPDMBsDTKfn9u6yfjV+403uMC
AMJPxnr7uThltx4Yz12iKR+ivtCtLxq8HhmRv3tijPe1AIDIUtLcbDwzAbA0
OutbJNZvPV7bke+M97kAgPDRf+aOY7+QgdZO45kJgKVzsjLH1lNyjjcAYDb8
Z+835b4wnpcAWFpZp76z9ZRpa/cZ73UBAOGjYPMx230kfd9Z41kJgKVVM/DK
eG8LAIgcnIsDRJ/m3BLH3EvPyZ+M97sAgNA3ePF3xz2kLaPAeFYCYOntKkm1
9ZbsQwkACIb/zP3yzCfS3dFjPCsBsPTS9p219Za5m44Y73kBAKGvfMcZ2/0j
cdM3MjH+wXhOAmDpZfV4jfe4AIDw90tVkfGMBIAZdQmZzr3Dzv9mvO8FAISu
kasP5LnfHsb1sSnGMxIA5nyRF2frMdmHEgAwHf9Z+//xPJR2b6fxjASAGb0d
PZKw6aCtxyzZdtJ47wsACF21+y7a7htxq3fJ2NCI8XwEgDnPvQ3Ge10AQPi6
UpZjPB8BYFbFg5e2PjP2sy3y/nKM8f4XABB6xq8/lvgVO2z3jcpfnhjPRgCY
NTw+If8v64mt12SGEgAQjE8/qmtrN56NADCru6VD4tbstvWa1XvOG++BAQCh
p/XQdfu/aS3bKkN9A8azEQDm3WmuMN7jAgDCz7HidOO5CIDQUHQrxtZvvvx8
u4xde2S8DwYAhJbkNXts94vCy7eNZyIAQkP/yIj8w/PAr+/kLG8AwH/47zup
ipubjGciAEJDZ22zxC7fZus5Gw5cNt4HAwBCR8exHx1nqr1p6TCeiQAIHRdr
Coz3vgCA8LEzP9F4HgIgtORdvMUMJQAgoBS/2cnsY1eMZyEAQot3aFD+5td7
sg8lAEC53Q88jXXGsxAAoaW9vFaefWafi6nfzwwlAOCpeI9975id7CmvM56F
AAg952vyjffAAIDQty0vwXgOAiA05Z6/6ZihHGWGEgCinv/sZOaRy8YzEACh
qfv9kHzqibH1oG77jQEAoofbfSCvqcF4BgIgNHmrGuTZsi22HrR230XjfTEA
wJz2o87Zyf76VuMZCIDQdbm2wHgvDAAIXbsK2HcSwPRyL/5s60FfLN/GDCUA
RKmJG08kadVu+76Tx68azz4AhDadoXSe5Q0AiEZu+04yOwlgJjpDGbt8q60X
rdl7wXiPDABYem1HbjA7CWBOrtUVGe+JAQChZ29BsvHcA0B4yL962zFDOXL1
ofE+GQCwdNxmJ3NP3TCeeQAID33Dw44ZSvahBAAUNzcZzzwwf3HP4mTZsmWW
5cuXG68HwfM2t09971RWeqbxmgLpqGlyzlDuuWC8VwYALJ3WQ9cds5NvWrzG
Mw8A4eO7+hLjfTAAIHQcKEwxnndgYZBPhq9wyidV/vVfbT1p3LKtzFACQJTQ
2cnElbts94G8sz8YzzoAhJc3o6Py3xkPbb2p2z5kAIDI43a9Z3YycpBPhq9w
yyc761sk9vPttt60YsdZ4z0zAGDxNX5zhdlJAAviZmOp8R4ZAGDeocJU4zkH
Fg75ZPgKt3xSFX7/u6M/fXvhd+N9MwBg8YxcfSAvltv/fargwi3jGQeA8PR2
dEz+L+uxrUdlH0oAiHT26/zfPqpsaTWecWDhkE+Gr3DMJ7sa2yRutX19X+6m
I8Z7ZwDA4inbftr+b1OfbZHBzj7jGQeA8PW0vS4EemUAgCmXyrKN5xtYWOST
4Ssc80lVfj/OMUPZfeKW8f4ZALDwBs7/5rjmV9x+bDzbABDexj/8IWvzXxjv
jwEAS+9/Mx5Ju7fTeLaBhUU+Gb7CNZ/s9XZLwleHbL1q8urd1tkJpvtoAMDC
ytxw0Ha9f/nFHhkbGjGebQAIf0Wvuh09K2flAEBkcdu/4351ifFcAwuPfDJ8
hWs+qerTch3zNA3fXDHeRwMAFk7ntz86rvVNCZnGMw0AkeNQucd47wwAWDpr
s59Lb0fPgmcUL5+/mMpWNm/eLM31wZ8L/uP3P1p5mn7s5YuXXB9TkJNvPW7P
7j2yYcMGWbFihaxfv16OHjkqL2LjZvyavv7qa+v5t27ZOvVYzYR+vvmTbNm8
xXq+1atXy7kzZx0f21TbKL/e/kX279sv69aum/rcB/YfkN/u/CqNNQ0L+lqW
FZXKrR9uyu5du2XDx8+jn0+/Zv38WkdDdb3rxwXKJ6vKKuXWjzdlx/bt8sUX
X8jqVatk29Zt8v3176Suqjaomnq83ZKSkGx9f7Zv2y5r166VlStXylebvpLz
585LbmbOtB9fW1k7VdsP3/0w9fbWhhZ5GPPQei2//PJL6zk3bdwk586ek/zs
vKBfM83zJmvT76O+Zvp8J46fsOrubu+a1fdAv6e///a7HPzmoGzcuNF6Pv3e
792zV3768ZbUVtTM6vnSU9Ll/Mev6euvv5ZVH19/ff327d0rd3+9a/0chnM+
qTKOXLb1rHHLt1lnKJjupwEA8zd+/bE1G+97nU/ZccJ4lgEgsniHBuXT9Bhb
78oMJQBECufsZFZj3aLkE52tHVZ+M5mv3Lt7L6iPa65rsrKfyY8rzC2wvb+i
pNzKIH2zGzf79u6znivQ55nMJ5VmT5qL7dyx0/E8mmf5fpzmrpp3Tfe5NW/S
3HC+ua9mVBfPX5zxa121cpWVi/p/Pv98Ut9/5+c7ttfXrXbN72bK1jTPnKmu
K5euBMwBffNJzRD1bYkvE638dbrn1Cxwuto0Oz588FBQr5lms758c9JJ+prp
a6sZ7nTPp6+vZsgz5Z76s3bk8JFpn0tz1My0jLDOJ9vLa60zEnx717Idp4z3
1ACA+avff9kxO9lX1WA8ywAQeb5vKAmBHhoAsNi+KUxZ1IxC5xsn8xWdSQwm
r9Mcc/Jjdu3cZXuf5mb+2aA+77dHv5UT3x63ZtHsGeXegHmRbz5ZVlRmzcW5
ZUVXL1+d+pi05DTb+3SO7vrV61bNP9/62Zr5882rdO5xrq9dS0OzNS/p+/k0
Q9O8VGvS3NI/I3z84LHtOfzzyTOnzvxnpvXja6Wvmc6H6hyl7/NofulWu37/
9Ov0z+W0Tq1Lc2PfTNp/NtKXbz6pmeh9n++7zhJqhqczk/qaTs7STnr2+Knr
c3pbvLbXRL8OfZ107lFfG50Z1Vlet++zPtb/efXrPXv6jO1x+nNy+6fb8ijm
kTXrqF+3b33nz54P+D3V7FTndX2fT1+vUydPWd/T0ydPW3Oxk/WEcz6pCq47
z03QsxRM99UAgLkbvhJjzcT7Xtvzz/5gPMMAEJnejY3L/2U9Nt43AwAWjv++
kzorX9vatqj5hK4j9s1YsjOmPyNc8yDNGycf//TRE9v7f7n9y9T7NFcrzi9y
PIfON/rmRbFPns2YT165dHnqv3XNtK5z1kxLlReVTX2Mb22aW+mMqP/zlheX
W88X8/v9eb12mnv5ZoCahXW1Oc8w0nXU+/bstdYZd7R4be/zzScnaT6ms3n+
WXFyQpItE/OfG500OZuomaKuhfdfW641fnf9hu1z6s+B//P45pO++at+z/1f
V31Ndd345OPWr1vv+lr86vPzoTlkjcuaa82rfXNzfT20Fl2v7v9Y3583nWnM
y8p1fU20Pt/c8/nT5+7f02+P276nmmv75+f6fdHXYJXfvGY45pNdTe0St3qX
rYf1rDtgvLcGAMxd0ZYTtut67PKt8q73tfEMA0DkivU2uPS3znWBAIDwdLV8
+v0BF4rvWludh5vusdmerKnH6pykrm/2z240fyzMK5z2eXRd8eTz6Pyd22N8
80ml+xymJgaeJ/XNWjVb0vXgi/Wa+c9pBpoXnIl/Pnn82LeODNPXjWvXbV9j
e5Mzv9a5Tq1nun0qNXPTNduTz6Uzl/6P8c8nA+WJk5LiE22P19fI/zG+86b6
+EDPpVmkb96ptfg/Rr++zz//fGqWsaSgeNrXWvcdmHy8/mz557+aL/rWr/OX
s/kZCMd80npdHrxwzFA2H7xmvL8GAMxez8mfHNf0yl+fGs8uAES28Q9/yObC
JOP9MwBg4S3PfCLt3tmdDzJXuqegbwao+Vagx/qupfVdVz1bvnv3abbkNhvn
n08GmnmbpOfxTK1HXrlq1uerzMbhQ4dnzFeD4b++e6aadU33bOZdp6OzlZPP
o1+P//v988lgZmt9147rPpr+j5lcG61qyqunfT7fWUbNxf3fr+vSJ98f6Iwm
fydPnJz6GP/ZXt/3aY46014H4X4+ztT37ePvXvJO+6xN3LKt8v5yjPE+GwAQ
vLFrjyRh5U7b9Txx0zcy9n7UeHYBIPI1vxtwnJUDAAgvbmecpTcEd0bzQtBM
bL3PmScP7z9wfZye7+27vnimebXpVJdV2bIdt7PDffPJHTt2zJgX6bkmvs+p
+ZVb7jlfmkv5rk/XjHGuzxXo/O6An7vFa/sa4+Pi5/y5nz1+9p/Xd/t2x/v9
88lAa6d96Vnt0+XXul9psHmn7k06+dgil3lc330i3WY13fiuL/ededXfAc20
Z/od8P85iIR8UrUWVTrOysnddMR4rw0ACF75zjOO2cnuslrjmQWA6PFzU7lL
r8s6bwAIV0eLgstaFpLvLJ1bVqV8z0fR/RTn8/nqq+ts2Y7bWmTffFJzpWCe
V8/h8X1ezbC0bv18C/Va+a5xV5q1zvW5ZptPKp1xnfyY2Cexc/7cug5/au32
11873j+XfPLY0WNTj79w7sK0P2c6ixvoeXTPzsnH6Xnh/nOlbY2tttrmQs/8
nnw+zT9931eYO/3+BCqS8knrNfjhnqOv9R793ni/DQCY2euzvzqu4QWXfjae
VQCILqMTH2RNXpzxfhoAMH//zHgoze3OM10Wm+4r6Ju16Fpp/8f4nrs801rr
SaWFJda5MXrusc7O6fpePVfE/7xnt/0FffNJ3yxpOjpDqbOWbnmUnk+jc3FN
dc5ZzdnwzfXUfGY055tP6gzkdI/VXE/zVM0FNbvVPSd1Dbb/2dP6Wvt/7Hzz
SbdzsnVO1ndfSd37NCPVY33fdDZU16/rXpirfc6ecfsa/c91mgvfs510X1Pf
9zUH8TMSaflkT1unJGw6aOttX36+XUauPjTedwMAAhu/8URS1uy1Xb9frNkt
IwNDxrMKIFJMTHyQgYF30tf32qL/rW8zXVco1lf2usfR47qtFwQAhLbHNeXG
8gnfbMl/P78cn3m2tWvXSkdr4DNc9H0PYx5aM3nBZkULlU8qzeTu/XbPOs/Z
7XNpPnr7p9vTnkMznccPHtueaz6v+WLlk5r36RnYet52MK//UuWTSrPFnTt2
zliTdSb6L7+5PkdZUZntsXr2jeaFwfL/+X0Raz+nyBvEz0ak5ZPWz01GgWP+
pnjrSeO9NwAgsJq9FxzX7ta0vLDON6iP+kKtPq2nt7ffRt9muq5Qre9SbYHx
vhoAMHfb8hKMZhMpCclTWYvOr/meDa3nek++7/vr3wV8Ds2NfOcs1TcHvrFm
4vQcHl1HW11e5VhPu5D55CSda9TZPN0HcePGjY786+A3B+d0ho7//OR8zuFZ
jHwyOSHJlkvqvoonjp+wMtu0pFRrRlHPptHzqU3kk7qPqH4/J/PdyTO1J+le
qJqPa50BczS/vUbd9qecDd8zolQwZ79HYj6pci86z37tPfWz8f4bAOD09sLv
Eut3zc48cjki8g3qo75Qqs+/NqU5qum6QrW+wbExWZ7zzHh/DQCYvf/yPJCa
1jajuYTmbL453uT6Vz3P2zcT01k1t4/XtbubNm6aepyev6zrxt0e67//5GLk
k740E9Oscv++/bbPG+w6dV++Z4+rmc6hns5C55OaIfrmfbqu2zdn9uWbsy5l
Pjl57vbGLzdaPwddbZ3Wz4nOVbqdkxToZ9W+D+f069xn+z3VWmb6mEjNJ7sa
2+Tlun32819X7pJR1nkDQEjRdd1pa/fbrtfPV2yXd939EZFvUB/1hVJ9Wgv1
zU5GT7vxHhsAMHu/VM5v/muh3Pn5zlTeomcx69se3IuxzRwG+tjJmTilOeB0
+zIudT45SXMt/Romn9ftDJeZ6Gydb+26Nniu9Sx0Pnn40OGp99368ea0z2Mi
n/TdN/LWD9PXN5NDBw9NPdeZU4HP2gmGns/k+7XqLPFMHxOp+aT1vY/3OGYo
878+ZrwXBwD8R/Xu845rdf2zlIjKN6iP+kzXNSnU5ztDtb5jFZnG+2wAQPA2
5sRJT0eP8UxCaW7oe3aNZlT79u6b+v8JcfEBP/bokaNTj9Mzs2f6PCbySRXz
+/2p553uDOnp6Pnlk8+h69fnWstC5pM6I7rK51yZmdY8m8gn9edn8v27d+0O
el5ypu+jnvfjdgb8bOi68snnu3Th0oyP9z9TKpLySZXx7VVH39t25Dvj/TgA
4Km8OnPHcY1O23tGPkz8EXH5BvVRXyhw3x9z7r9v0VLf65ER+Sz7qfF+GwAw
s7+nx0hFy8x73S0l3atwMnP5/bff/7Mv4Lr11lrcQB/nO7v304+3pv0ck2t8
TeSTuh/l1PrnWz/P6Tl8czalOeN0j9eZy+yMbMfbF3p+0vdcbl3PHug5dPbP
d450qfJJ/31HNU/VOcjz585b+5p+f+N762dD53h1f0xPSrpVq9vn0nXrvvts
6s/fdD+f1tfd4rVeM7fzuW9cu27LO6db4625qv858ZGWT3bWt8iLL/bYet+4
5dvk3aV7xvtyAIhmut+G7rvhe32O/Xh9fuvtich8g/qoD+Gt6FW38Z4bADCz
u1UlxnMIf+kp6VOZywafmbKbM6zH1XxpKu/6+mvXfQ811zl98rQt11mofFI/
n87k6TxjaaH765qfnWfL8KY7g2U6unbddy9L3fNRzyx3W9Oelpw2ta+nf564
0Pmk77nY+jq7fby+Nv7nZ5vYfzJYmmHqPppu5xDp1+/7WM0oq8uqHI/T87qf
PX46tT+qZrO9fjPLuq+q78+G/gwX5tpnUPVj9Iyhyefx3esz0vJJVZ+W65jP
8aw/IBM3nhjvzwEgWhVuOe64Nje+TDeeQQBAINfqioz33QCAwHblJxrPH9xo
BuObDU5yy318adbnuzZ8y+Yt1t6Vep60ZkNXLl2W1atXW+/T/QK3b9u+oPmk
Zli+9R45fMQ6s1ozQP1f/Zy+9V2/en1er5OuJ/Y9D0hpDmnNAt743jqDeuuW
rbb33/31ru05Fjqf9D2T28rrDh6yzo5Jik+03nf82LfW51E6O2oin0xNTLHO
xtHHrFu7TtasWRNUTqlzr27P55uLT76Ouv7+4vmL1sfo1+z/OfRnQzNL/+fy
3X910o7t2+XUyVPWx/ieH6Wvq2/OG4n5pMq/etvRB9fuu2i8PweAaOQ99oPj
mpx9/Krx7AEApjMy8UHW57803n8DAJz+L+ORNLd3GM8eAvE962Yyzwnm4zQH
nGkWTvem1AxU86OFzCfbGlutTCyYrEszrenO7wlWQ3W9Na850+f78ssvrf0e
/T9+ofNJnTH0XZ/v5qtNX1nrpvXx+t9LlU/q6z35PQ80b6r/X9fClxWVWZm2
ZoO+r4/bumz15OFjWbt27YzfB80pNZd1m8WcpHPC0z2HzhTrTKw+1ve1jtR8
sqe1UxI3H7avI/yo/+wvxvt0AIgmur+G7rPhez2OX7dPhkNojz4ACKR58I38
w/PAeB8OALBLb5jfWR6Lram20bZ2VWcgg/1Y3WdRcxs9b0SfQ/9X59k0Y9Q8
b/Jxuk52cp5yIfefLC8ut86G3rd3r5UlaQ26T6HOumkuWV5UtuCvl+ZVOjep
a4JXrVxl5bCbP/63zt1phug2q6cWOp9Umv3GPom1clPN43TNss556vlFmvn5
1qIzp/r6LEU++fD+g6n36VxtMF+rrtn3zR11fX6gx2o+rZ9Da9D5TH2d9Ovf
vHmztdZdM0zNPoP5vAU5+VaWqq+LPs+Gv36GNVv3fQ59zsmZ3EjNJ1VrUaXE
Lt9q64mTVu2W0WuPjPfrABANdF8Nz7oDjtnJnrI645kDAATrUVutoy/+JAR6
cwCIBp+k33O87UJZlvG8AVhqvnOmen57sB/new6N7hFp+uuIVmW/xzr64pJt
J4337AAQDXRfDf9rcNlPD4xnDQAwW3tK0oz36ACA+7ImO1a6Oua/rhgIN3t2
75nKGd3OMnej67wn5xN1DtL/TBssrbT95xz9se6FZrpvB4BI9ur0Hce1N2X7
tzIxNmE8ZwCA2eobHpb/y3psvC8HgGj29/QYKWluNp4xACb89OMt23k8hXmF
0z4+25M1tT+mSniRYPxriHYdNU0St3qXrUd+vmyrvDn3q/H+HQAi0dCl+xK/
Yod9D+Dl22SgrdN4xgAAc1Xc32O8NweAaPagptR4vgCYontJ+p7Zrvbu2Wud
dR7z+31rL0fd3/HGteu2c3GUnmljun78qSE9zzHHk7hql4xcfWi8jweASDJ+
/bGkr93vuOY2J2UZzxYAYL5+a6403p8DQORz7jl5rCjNeK4AmNbS0CxnT58J
6oz1ybPGZ3M2E5ZGye1Hjn45+8tD1vkNpvt5AIgUpdtPOa61hZdvG88UAGCh
7C9jL0oAWErrc55LJ3tOAlMqSyvk19u/WGeK69niet657jO5bu06a3byyqXL
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
zw+oj/pCvb5Qn++kvum1vxuUZdlPjecPAODmvz0PJLepwXj/jdAXKJ/saPXK
s8dP5dDBQ/Lll1/KypUrZdPGTXL29BnJTMtwfa5LFy5NPc/ePXulo8UbdB3H
j3079bH37t6b9dcRKJ+sKquUWz/elB3bt8sXX3whq1etkm1bt8n317+Tuiry
e5jVXlYjL9budeQBaWv3yfvLMcbzCgDRYfTaI8n68qDjWhS3cqe8qmsOi/6c
+qiP+ubOfX/MP4zXRX3B63o/JOvzXxrPIQDA178zH0txc5PxvhvhwS2fzM/O
k82bN9ve7u/82XPS1dZpe66yolLbY2KfPAuqhmxP1tTHrFq5SlobWmb9dfjn
k70dPXLn5zuyYsWKgF/DqlWrJCUh2fj3ANHNW1kviZsPO3KBhJU75c2534zn
FgAi29Cl+5KyxvnvJAkb9sublo6w6s+pj/qoD9FscGxM9pSkGc8jAECtzX4u
dW3txvtthA//fPLnmz9Zs5L63xs2bJBjR49ZWeS+vfus3M/3sefOnHU83+FD
h6fev3PHzqBqOHXy1NTHXL18dU5fh38+eebUman/v/nrr+XEt8etenWO0vdr
0PxSc1XT3wdEt66mdknbf845u7R8m3Sf/Ml4fgEgMg2c/03iXc7rStlxQob6
Boz32gCA2Rmb+EPOVOUazyUARLcd+QnS7u0y3mcjvPjnk0rXQWve191u/3nS
tdJ7du+xPTY5Icn2mPSUdNv7szOyp/389dV1ttyzoqR8Tl+Hbz45aeuWrdZa
dJ2l9H2s1uw7V3ni+Anj3weg5+PvW/aZ7x05gdKzdE3nGAAiS8/JnyVu2VbH
9Sbr2BUZez9qvMcGAMzd3eYq4/kEgOh0vDhdevwyGCAY/vmkzkxqDhno8br2
Wh8z+fj9+/bb3q9ZoO7vOPl+nY2c7vPrvObkY48eOTrnr8M/n9T9LKfb//LG
teu2ecv2pjbj3wtAldx57JpRVu85bzzPABAZWg/fcL3OFF37VT6w5hQAIkJq
d6v83RNjPKsAEHk+CfD225WFxvtphC//fDItOW3Gj7l/957tY/zPmXn66Ikt
+wt0Do3uX7lh/fqpx3pS0+f8dfiv7/af/fTnv1fmTHOewFKqfp4qsS5zTflf
H7POsTCdbQAIT3pGd+mO067ZZN2TROO9NABgYZW97pH/zXxsPMsAENn+nh4j
8XVVxvtohLdA53dPR+crfT8mKT7R9n49+3vd2nVT77/5w03X53n5/IVtLbb/
OuzZCHR+dyDeFq/ta4iPizf+vQB8NWYWSNyqnY4MIXnNHnl7/q7xnANAeHl/
OUY86w44rimxy7dJR16Z8R4aALA42t69ldW5z43nFwAi0/9mPJK8pgbj/TPC
31zySc0RffdvvHf3nuMxP9/6eer9a9eutTJL/8fomTuTj3n84PG8vo7Z5pNq
8hygP88ajzX+vQD8tZXWSPzGb5zn5izbKt5jPxjPOwCEh77Tt+Xl585zcF5+
sUf661uM984AgMU1MDoq+0oDnO2ddk8+8ZjPOACEshjXNd3rc55LbSt75WFh
zCWfVOt91mXrHpL+72+sabBlmM8eP7W9vzi/yHYej7d5fufOzzeffPb4mfHv
BeCms6FV0r8577oes3L3OeO5B4DQ1vjNVYn99xbH9SN110l51/vaeM8MAFga
4x/+kJ+bykMg5wAQCQ4VpkpnR7fxfhmRY6755MaNG6fNJ9XF8xenHrNj+3bb
+y5fvDT1vh+//3HeXwf5JCJaR48U/nDPNaPM+vKQDF95YDwDARBaxq49svas
dbtuFFy8JeOjE8Z7ZQDA0svr65T/yXhoPNsAEJ50r8l71SXme2REnLnmk2vW
rJl2fbcqKSh2PYNGzwBftXLVVJaoNcz36yCfRDSoS86S5yucazQTVu6U/rO/
GM9DAISGwYu/S8qavS57TW6VxniP8d4YAGCW7km5Pv+le/7AWm8A6XpG9z3H
2z7LfMxek1g0c8knm+ubgj5b5tDBQ1OPO3nipPU23/O/T588vSBfB/kkooXu
SZm4+bAzd/hsizQcuCIfbjwxno0AMKft6HfyYtk2579jfHlA+utbjffEAIDQ
8H58Qo5XZhnPQACEhy158dLU7jxXBFgoc8kn05LTbB9TW1ET+LFJqbbcsL66
TjZv3jz1ttzMnAX5OsgnEU26W7ySefxagPXeB2Xo8n3jGQmApTV69WHA9dwZ
By/K8Jt3xnthAEDoedhaI5+mxxjPPgCEroul2dLT2WO8D0Zkm0s+efb0manH
b9u6bdrH6lnfW7dsnXq8756Uu3ftXrCvg3wS0ajsbqw8+8x57sWL5dul49sf
jeclAJaGns+t+zy4ZZPltx/JxPgH4/0vACB0VQ+8kpW5sQGyiXus+QYinLWW
O8359n9lPJSk+mrjfS+ig38+effXu9M+Piczx/b4B/diZvwcjx88tn3MpBex
cQv2dZBPIlo15ZRI/JcHXHOJkm2nZOz6I+PZCYDFMXHjiVTtOe/6+//ii93S
WVhpvOcFAISHwbExOVGZbTwnARAatuUlSEMb67mxdPzzSXXn5zvS1dbpeGxy
QpLtXBydi+xs7Zjxc3hbvLJ27Vrb51i/fr3r55gr8klEs66mdsk6dcM1o0ha
vZuzc4AIpGfgpK3d7/p7n3nksrzvf2u81wUAhJ/krhb5Z+Yjl7zinnziuW8x
nZsAWAju+zro+dx3qoqkNwT6XEQX/3xy39591v+uW7tOzpw6I99f/04uXbgk
WzZvsT3uiy++kOL8oqA/z08/3rJ9/C+3f1nQr4N8EuiV6tgUeb7KucYz9rPN
Ur//svE8BcDCaD18Q+KWbXU5n3ub1D1Nkg8TfxjvbwEA4avr/ZBsL04OgfwE
wFJalfVMSpqbjfe1iE6++aRmjq0NLXLwm4Ou67Enbd+2XUoKimf1eSpKyqc+
fsWKFdJc17SgXwf5JPAnb2W9vNx21HWmKn3dfnl74a7xbAXA3OjZV9kbD7v+
fidvOSIDrZ3Ge1oAQGQY//CH/NJcEfjsHJ2lDIE8BUDwPvHEBPy9PV2SIR0d
3cb7WUQv33zy1MlT1tv0TJvnT5/L4YOHrHXYmidu3LhRjh09JrFPYue0Llv3
tfQ9I2ehvw7ySeA/sj2ZEnfisjx1yTBiP9sitXsvWvvWmc5aAATp4+9r08Fr
Erd8m/tes9//LmPDo8Z7WQBA5Kl40zvN2TkAwh1n4CCa6B6VGzZsmMoCZzt7
CWB2kuOTJOFFvLz8+a48W7PLNc9IWbNX+s+wLyUQ6nTm2bPe/QwszsABACyF
6c/OuSef6Lm/7EsJhB7r9zLmz99Rl/dzBg6izZOH/zm/W9eOm64HiGT67wGa
TU5Kin0hBRd/cs02VNnOMzJ2jTO+gVCjM8466/z8sy2cgQMACAme7nb5POeZ
+cwFwLz80/NQ7teUcgYOokqPt1s2b948lU/qGeCmawIiWWNNvS2fzM/Nt/6e
9OaUSMKX7jNYCSt3Ss/Jn43nMQD+9Prsr5L6xT73mcnVu6QpIYMzcAAARugs
5ZXawmmyj3vGsxcg2ll7TAaYmTxYmCIN7cxMIvrEx8VPZZNff/W1lVeargmI
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
9eX1dcqe0tRpcx/rvO+0e3/mRGSVWCKajQez58DXhYmS2t0q4x/+WJDfj/cf
/x71X0/X7e0y3qcCAKKL/34jukdyqP592llYKVlHL0+b+8T+e4vkfXVUuo7f
lAnO/cYS6T19W4q2nJDn0+yfqtL2npG2jAKZGF/6dZmmf3+pj/qoL3LrC/X5
TuqjPjf1b1/LicrsmXMja+33PXJKLIpPJv83iD0GDpZ7pKS/Z1F+PzI9Gbae
sKGmwXifCgCIHm2N9ln+pPjEsPj79HVTuxRc/GnaHEglrNxp7fs3dOme8fwK
kWf4Sow0HLgsyav3zPizmHvqhvSU14Vl/0Z91Ed95oV6fe77Y84810N91BcK
9ekelbpGdkPByyByJD37O/DZ4EBQbFn39POSK3Ji5U5zhXS/H1rU34/qqhpb
X6hr7Ez3qgCA6FFRUm67D+neyOH09+nIwJC1RjZ1x/EZ86HMDQel6eA11n9j
XkavPZTWw99J9sbDEvvZDPn4xgNSde+5vOsNjRmnUPv9pT7qo77IqQ+IFBVv
eq3zj/97hnO/dabyk7R78kk6WSWCZO0VENzPy6cff66OVmRKbm9nUGu4F0JP
d5+tL9Q1dr0dPcb7VQBAdPCkptvuQ7o3sum/C+eqr6ZRiq7/Ks9XBD4jeVLW
l4ek5fB1Gbn60HjehdA3du2RtB35TnK/OiqxM6zffvbx/Xlnf7D2IjCxhhsA
AMzfu7Fxee5tkK8KE4PIk+79uWegZk+sAYcPa+bW82eWHczj1+TFWefN948s
3f7kk/TfvPz3/WpkjTcAYAl4m9sd+yAPD48a/3twvkaHRqQpIVPS9pyeMafU
+becTYel7fB31lyc6RwMoWP8+mPxHv1B8r8+NuOekip58xHrvPn3rweN/w4A
AICFU/+2X67WFcq/Mh/NnEfpHoKTWRRZZXSa+r7fCyqX/IfngbUPatGrbpkw
/LNeXmpfW1fIGm8AwBKoKC6z3X/ycvKN//230F43tknpj/flxepdM+ZLmkHp
uTrtR7+35uVM52MwkUk+kc5vb0rB5m8lbtm2mfPt5dusfVC7S2vlA+ssAQCI
aMPjE5LR025lSTOu/06fPO8kuLk5hDkrk4yx5miDyST/7omxzrpJ6GySwbEx
4z/bk7q7ex1nE7DGGwCw2Bxru5tbjd8TF8v4yLh4c0qtLClu5Y6gssqsjYek
Yf8VeXPuN+O5GRbP4IXfpembq9ba7eAyya2Sc/K6tKTmyujgsPGfbQAAsPQ0
q/R0t8uJquCyykmfMFsZOXQ9f9pfa/uDePynHx//TVm6xIdYJumPNd4AgKUU
qWu7g6FZZXt2iRRcvBXUXpUqfsUOKdp6wpqtHLnCOvBwprOxHd/+IKXbT0ni
qpnnaq1MctlWyTlxXVpScsgkAQCAzfvxCUnvaZPjlVlBZ5W6L+HkfOUnZJUh
z/oeef7aT9LKJIP7OM0kD/yVSeo58aZ/VoNRUVZhX+OdyxpvAMDiKfdb212Q
G3lru4MxNjwq3uxiyT9/M+isUqWv2y9Vu89J7+nbMnHjifHMDdN7deaO1O67
JBnrv5HYf8+8l+R/MslrViY58va98Z9VAAAQ+jSrzOvrlGt1RdZZJ0HnX+l/
ZZXpzFeGjhiZWp+fFvzHLc95Judr8sXT0xbSc5KB9Pa8cqzx7vF2G+9fAQCR
yX9td1sYn9u9UDSr1DOXy27FWGedBJtVxi3bKpkbDkrFrnPW3oXDVx4Yz+Oi
mZ7J3n3illTvOS/ZGw/Li+Uzr9melPDlASm+/puVWTMnCQAA5qv13Vt53FZn
zdDpOSizycf+zCrv/ZlVTs7uYcFNzUZ6Yqz19zrXOpvX+tP0GNlRnCJ3m6us
s5RMn3GzEFKSUmy9YkMta7wBAAvPbW336Oi48ftgqBlo75aGuDRrhu7558Fn
XErXDesZK7qvYf/ZX5ixXES6P2jzoevW+vvk1Xtm9X169tkWyTh4UWoexltn
KXHGDQAAWCxzna20m5yxjDGe64Ub33X01n8HcY5NIJ9lP5Wz1XmS1t0aNuu2
Z6OyvJI13gCARee/trswv8D4PTDUzXW2cmqt8GdbJH3tfinedtLKLPtO35FR
zgiflcELd6351Lr9l6Rwy3FJ+/h66jlGs/1exK/fJ0VXf5H2rCLWbQMAAGM6
ht5JanerXK4tkI0F8fPL3tL+yiw999nP0vd1sf43+P0iA1md+1zOVOVKnLdB
GgffGP/ZWWx9vf2s8QYALLq05FTb/aa9zWv8HhhuBjv7pD2zUEq+vyepO0/O
OiOblLRqt+R/fUxq916UruM35f3l+8ZzQNMGzv+ZQ+p+kTqDmrZ235xfX+s1
/vqwFF65I82JmfKmhZ91AAAQmnQOL6e3Q241lsn24pRZrwd35HJpf60RT/M5
gydSssu/1rtP5o7WWUNpvpnk3Ol67a8LE+VGfbG1h2TfcHTu+eO/xru+us54
HwsAiBytDS2Otd1jYxPG73/hTufwOgsqpPK3Z5Jx8ILEzmLPQ8d+lh8/NvWL
vZKz6bB1xrTOC7Yd+U56T/0s7y7eC/u14np+9utzv0rHsR+k/uPXVrLthGRt
OCgJK3fOK4ecXK+dtveMlP/00NpD8n3/W+M/GwAAAHNV9rrH2tfwYLlH/pX5
aFHmCz/5a77Qyvis/FLnMGNkch5zSTJNj8t/T9ai9f21Fnsx9uDUM9f3lqbK
r82VUviqW4bG2PdK1VTV2HrGnIxs470sACByFOUV2u4zJUXFxu99kaq3st7a
1zDn5HV5sXrX/LM33zXKK3ZIxvoDkvvVUSnaclzKdp6xZjB17bhmmXo+jJ5Z
PXjh90U/r2fkykPr8/Sf+UV6Tvwk7Ue/l+aD16x6yj/WpftCap16drbWvZCv
Q9zKHZJ17IrUxLyQ7tIaGRsaMf59BwAAWCzt7wYlu7fDytK+rcySL+a8j+X8
Ms2p86z/OkvmP2fK/HWmj9/bP0lzPoeJ835W5sbK4fIMudNUIendbVGxVnuu
3r5955hr6WjxGu9nAQDhT/cMSXyZYLvHdHf3Gr/3RYu3Hb3SkV9uZWn553+U
5C2z38dy3nnesq3WedaaE+q8oq4v1zNldF5T98fUDFFnGTX7TF+333q7vl8f
p49/+fkOefH5Nut5lrr2xK8OSe7p76T6Xpy1dyRrtQEAAP48d6fqTZ+86Gi0
zt7ZU5oqq/OeL3n2F0o0h9xVkmrt7fmsvd6aQ33HXOSs5Wbn2nrH0qJS4z0t
ACD81VRU2+4vaSlpxu950U7P3XlV2yTNSVnW2TtZRy9L0ubDS579hZLETQcl
89Ala2/PxniP9FY1yChzkQAAALMy8ZHunVgz8EoyetrlcVut/NBQIieqsmVr
UbJ8nvNM/hYCWeJs6dnZmwsT5VhlprVH5IPWGknvaZPKN33S/X5Ixj/8Yfy1
jxRtre22/jE5IUl6O3qM97UAgPCWme6x73FcW2/8nocAJv6Q968GpL++Rbw5
pdLwPFUq7jyWgou3xHPgnCR8ecDaa9F0ljhbenZ2+t4zkn/uR2uPyPpnydY+
ka9qmuRd72vr6zb+2gMAAESR1yMj0vburVQPvJKCV13WmeKx3nr5rbnSyjPP
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
lKfKMV+ei6W5xVhZWon12nreO767tZvvh0l3VrcP2tFrnTzpvLF3fJL3Xrf2
DmN/dy8aW/XYue9Ic9XaUjWfC5k60x1CP/t9SLPc9PMb9+9z//RN3odf9O8d
AAAAAEbR+/dXcdI9zbO0WnXl0edY/oi0rjPdZ53mhBNj43l/ebpTJu2BTj3l
qZm8ljHNPtO+6vR6+nr6e2l9Y+n+e9L3/8j60B/Zp11dqkaj3ohup2uvNgAA
AAD8oLTe7/z8IlpHx/nuncX5xZguYG45SqYmJmNhbiGf7Xl4cJTXod5+si4S
AIDn7+7ut7i8/BBnZxdZ+nN6reguffpGgT59+vTp+/v7Pn68iYuLt9Ht9OJg
/yB2tnZidaUWc7PzMVmaLHyO+BhpDWY6HzKtH01nRO439/M5kedvLuLq6vpF
/X716dOnT58+ffr06fte6un3z7+RXiu6S5++UaBPnz59+kaz783Z2zhudePw
oBV7zf2o7zRi91469zLNM9dXN2JluZrXZVbKc3n/9lRpMu/Tfsx8Me0LT9+f
fk5lphIL+ezLaqylsy/v/3tp73pa89hpd6LX60e73Y1WqxPdbm8k379R//3q
06dPnz59+vTpe1l937claY5adJc+faNAnz59+vQ9376bm9u8dvHd/b/L3l5c
5v3Uad3mu8v3cfXhOn/98+fH/T/ll/D+6dOnT58+ffr06dP3s6QWffr06dOn
T58+ffqK7tKnbxTo06dPnz59+v5+o76+U58+ffr06dOnT58+ffr06dNXPH36
9Ol7Kn98PuaXwrv06RsF+vTp06dPnz59+vTp06dPn77i6XvefQAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwPNzd/dbXF5+iLOziyz9
Ob1WdJc+faNAnz59+vTp06dPnz59+vTp01c8fc+7L/X0++ffSK8V3aVP3yjQ
p0+fPn369OnTp0+fPn369BVP3/Pu+74tSXPUorv06RsF+vTp06dPnz59+vTp
06dPn77i6XvefalFnz59+vTp06dPn76iu/TpGwX69OnTp0+fvr/fqK/v1KdP
nz59+vTp06dPnz59+vQVT58+ffqeyh+fj/ml8C59+kaBPn369OnTp0+fPn36
9OnTp694+p53HwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD8mX8DTjdbug==
    "], {{0, 1198.}, {1320., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
    Association[
     "Comments" -> 
      Association[
       "Software" -> "gnome-screenshot", "Creation Time" -> 
        DateObject[{2021, 2, 4, 20, 27, 45.415607`8.409780099990208}, 
          "Instant", "Gregorian", -8.]]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{437.17500000000007`, Automatic},
  ImageSizeRaw->{1320., 1198.},
  PlotRange->{{0, 1320.}, {0, 1198.}}]], "DisplayFormulaNumbered",
 CellChangeTimes->{
  3.821488065503365*^9, {3.821490660324872*^9, 
   3.821490660325673*^9}},ExpressionUUID->"092546e6-2f11-41ff-b903-\
a80c69d104e0"],

Cell["\<\
Operationally, this means that the programmer must think hard when writing \
more than two commands to run in parallel.\
\>", "Text",
 CellChangeTimes->{{3.8214881095920477`*^9, 3.82148814532447*^9}, {
  3.821488528914535*^9, 3.8214885448504353`*^9}, {3.82148989696523*^9, 
  3.821489901812224*^9}},ExpressionUUID->"007d9415-fc00-4e1a-81f2-\
5b905f0fd9d0"],

Cell["\<\
Because compatibility is not an equivalence relation, compatibility does not \
partition the set of commands, let alone the much larger set of functions. \
Programmers must check mutual compatibility of all commands they want to run \
in parallel.\
\>", "Text",
 CellChangeTimes->{{3.821143332139772*^9, 3.821143349069481*^9}, {
  3.821143405163046*^9, 3.821143408785267*^9}, {3.821143462164404*^9, 
  3.821143480493897*^9}, {3.821179093538536*^9, 3.821179117948921*^9}, {
  3.821198519815672*^9, 3.821198529237074*^9}, {3.8212714540269737`*^9, 
  3.8212714582812853`*^9}, {3.821271918096505*^9, 3.821271966443021*^9}, {
  3.821481255865136*^9, 3.821481278662903*^9}, {3.821488550623313*^9, 
  3.821488599086783*^9}, {3.8214886609090567`*^9, 3.82148868820158*^9}, {
  3.821542363171221*^9, 3.821542375725502*^9}, {3.821542417819784*^9, 
  3.8215424319008427`*^9}},ExpressionUUID->"4ea539c5-77a2-47b4-93aa-\
ef80def244db"]
}, Open  ]],

Cell[CellGroupData[{

Cell["5.2 Non-Compatibility not an Equivalence Relation", "Subsection",
 CellChangeTimes->{{3.821489920416374*^9, 3.821489941471409*^9}},
 CellTags->"c:17",ExpressionUUID->"9ff139df-067c-4661-8eec-ff7de34ef08e"],

Cell[TextData[{
 "Functions that are not compatible are ",
 StyleBox["interfering",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ". Interference is also not an equivalence relation. Though it is reflexive \
and symmetric, it is not transitive. If ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "6dc1704a-f1e8-4def-bfaf-e7eea9871aa6"],
 " interferes with ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]],ExpressionUUID->
  "f882048f-92fe-4640-8a5b-baffe29536b9"],
 ", and ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]],ExpressionUUID->
  "258b57ed-e88a-4120-ac9c-4cda592c5e6b"],
 " interferes with ",
 Cell[BoxData[
  FormBox["h", TraditionalForm]],ExpressionUUID->
  "ec5fe52a-68a7-4bbe-ac4c-2fc4c11aae97"],
 ", ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "db4dd4ae-c775-461b-8e31-7be420aa61c1"],
 " may not interfere with ",
 Cell[BoxData[
  FormBox["h", TraditionalForm]],ExpressionUUID->
  "7dac2833-5b43-4ac3-9c9d-9018b4a94750"],
 ". Here\[CloseCurlyQuote]s an example:"
}], "Text",
 CellChangeTimes->{{3.821179253612083*^9, 3.821179268219637*^9}, {
  3.821270163424781*^9, 3.82127022672112*^9}, {3.821270257862308*^9, 
  3.8212703084580193`*^9}, {3.821270344885747*^9, 3.821270345859208*^9}, {
  3.82127044907695*^9, 
  3.821270512041463*^9}},ExpressionUUID->"5b0aad1b-c019-405b-a8d8-\
a44ff964e0c1"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"f", " ", "\[TildeFullEqual]", " ", 
     RowBox[{"SM_", "0", 
      RowBox[{"X1111", ":", " ", 
       RowBox[{"SB", "[", "x", "]"}]}]}]}], " ", "=", " ", "RL"}], ";"}], 
  "Code"]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.821144100248398*^9, 3.821144153327766*^9}, {
  3.821144409202445*^9, 3.821144409203167*^9}, {3.821271652021153*^9, 
  3.821271659680106*^9}, {3.821271758722116*^9, 3.82127181253261*^9}, {
  3.821489958557919*^9, 
  3.821489960674897*^9}},ExpressionUUID->"c12ab61c-4c3d-485f-9d99-\
9eaeef2d26fb"],

Cell["interferes with ", "Text",
 CellChangeTimes->{{3.8212705722237673`*^9, 
  3.821270575529208*^9}},ExpressionUUID->"225b0e57-7f4c-48b7-8023-\
fd6570ebc925"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"g", " ", "\[TildeFullEqual]", " ", 
     RowBox[{"SM_", "0", 
      RowBox[{"X3333", ":", " ", 
       RowBox[{"SB", "[", "x", "]"}]}]}]}], " ", "=", " ", "RL"}], ";"}], 
  "Code"]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.821144100248398*^9, 3.821144153327766*^9}, {
   3.821144409202445*^9, 3.821144409203167*^9}, 3.8212706050811377`*^9, {
   3.821271670022427*^9, 3.8212717175175123`*^9}, {3.821271818539604*^9, 
   3.821271826391253*^9}, {3.821489965054637*^9, 
   3.8214899678522243`*^9}},ExpressionUUID->"2121243c-6ff7-425a-8099-\
867729b16fb9"],

Cell[TextData[{
 "because sections ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", ",", "4", ",", "8", ",", "12"}], TraditionalForm]],
  ExpressionUUID->"e7e298fd-b99e-4f3d-93b5-c40b2aaecb6b"],
 " of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"SB", "[", "x", "]"}], TraditionalForm]],ExpressionUUID->
  "da4db6ab-b4e8-4a59-8933-5473d12e99f3"],
 " are in the ",
 StyleBox["VarsChangedBy",
  FontSlant->"Italic"],
 " subsets of both ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "753457ee-89aa-45df-b300-7665df258e0f"],
 " and ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]],ExpressionUUID->
  "da12139c-7f79-4cd4-b7eb-ffd34bb8b0ff"],
 ". ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]],ExpressionUUID->
  "d97ef629-84ed-4f9f-8e99-604441f36584"],
 " interferes with ",
 Cell[BoxData[
  FormBox["h", TraditionalForm]],ExpressionUUID->
  "8f78d6c0-8b05-494a-8cd1-d5b9f463606f"],
 ", where "
}], "Text",
 CellChangeTimes->{{3.8212706667660513`*^9, 3.821270706716557*^9}, {
  3.821271597626491*^9, 3.821271601923236*^9}, {3.8212717226408377`*^9, 
  3.821271729048889*^9}, {3.821271997360879*^9, 3.82127200873356*^9}, {
  3.8212720485864887`*^9, 3.821272053314274*^9}, {3.8212720892705593`*^9, 
  3.821272093279745*^9}, {3.821272128781122*^9, 3.8212721287814283`*^9}, {
  3.821489974166607*^9, 
  3.821489976080007*^9}},ExpressionUUID->"c27f217e-c97a-41d5-a28a-\
3d6632d4fb9e"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"h", " ", "\[TildeFullEqual]", " ", 
     RowBox[{"SM_", "0", 
      RowBox[{"X6666", ":", " ", 
       RowBox[{"SB", "[", "x", "]"}]}]}]}], " ", "=", " ", "RL"}], ";"}], 
  "Code"]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.821144100248398*^9, 3.821144153327766*^9}, {
   3.821144409202445*^9, 3.821144409203167*^9}, 3.8212706050811377`*^9, {
   3.821271670022427*^9, 3.8212717175175123`*^9}, {3.821271818539604*^9, 
   3.821271826391253*^9}, {3.821272020317766*^9, 3.821272026118249*^9}, {
   3.821490024519143*^9, 
   3.821490026148138*^9}},ExpressionUUID->"e3dda194-e563-4381-a43a-\
5bf81a10b0c6"],

Cell[TextData[{
 "because sections ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", ",", "5", ",", "9", ",", "13"}], TraditionalForm]],
  ExpressionUUID->"9398a8c3-a962-4884-8b9b-f91f36b0a432"],
 " of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"SB", "[", "x", "]"}], TraditionalForm]],ExpressionUUID->
  "5fb36e36-07aa-40c0-97a1-5110530e48d7"],
 " are in the ",
 StyleBox["VarsChangedBy",
  FontSlant->"Italic"],
 " subsets of both g and h. But ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "14476718-48d0-4098-a09e-88443a286523"],
 " and ",
 Cell[BoxData[
  FormBox["h", TraditionalForm]],ExpressionUUID->
  "6eae88e0-6c94-4f19-8c45-f8dbe42c0d66"],
 " are compatible \[LongDash] non-interfering \[LongDash] because their \
section masks and their ",
 StyleBox["VarsChangedBy",
  FontSlant->"Italic"],
 " subsets are disjoint. "
}], "Text",
 CellChangeTimes->{{3.8212720685905533`*^9, 3.82127221529134*^9}, {
  3.82127239283053*^9, 3.821272400422048*^9}, {3.8212725136433897`*^9, 
  3.821272518247582*^9}, {3.821489987739832*^9, 3.82149001030613*^9}, {
  3.8214900996524982`*^9, 
  3.821490100032653*^9}},ExpressionUUID->"d2bb000b-a795-47c5-94bf-\
9f07a219a6f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["5.3 Instructions", "Subsection",
 CellChangeTimes->{{3.8211801653236113`*^9, 3.8211801835976477`*^9}, {
  3.8214845535515957`*^9, 3.821484553625882*^9}, {3.8214858849999933`*^9, 
  3.821485886956258*^9}, {3.821490103619258*^9, 3.821490103796772*^9}},
 CellTags->"c:18",ExpressionUUID->"dcc9c7f1-0da3-421b-ae1d-f595aa40d65d"],

Cell[TextData[{
 "Compatibility extends to any set of state functions or commands, beyond \
just pairs. A set of state functions ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["f", "i"], TraditionalForm]],ExpressionUUID->
  "b7f96947-a959-4d35-9fbe-b8c5a1c1713e"],
 " is compatible if they are mutually compatible in pairs. Operationally, the \
machine supports up to four mutually compatible commands in up to four ",
 StyleBox["lanes",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " of an ",
 StyleBox["instruction",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " (\[OpenCurlyDoubleQuote]instruction\[CloseCurlyDoubleQuote] for the bank \
means an unordered set of up to four commands in the four lanes, and it is an \
unusual usage of that term)."
}], "Text",
 CellChangeTimes->{{3.821143409807221*^9, 3.8211434569388933`*^9}, {
  3.821143493515477*^9, 3.821143556938119*^9}, {3.821143592961741*^9, 
  3.821143596520117*^9}, {3.821143679258507*^9, 3.821143755775292*^9}, {
  3.82117913989389*^9, 3.821179160197715*^9}, {3.821198553720944*^9, 
  3.821198563817544*^9}, {3.8212167692558823`*^9, 3.821216779704988*^9}, {
  3.8212172612814713`*^9, 3.821217262365456*^9}, {3.8212184783361683`*^9, 
  3.821218509770213*^9}, {3.821490109947825*^9, 3.821490146264557*^9}, {
  3.8215424953221607`*^9, 
  3.821542540481903*^9}},ExpressionUUID->"137d5958-bc86-4133-b47a-\
953a3498258d"],

Cell["\<\
Compatibility of APL commands is guaranteed if the section masks or the VRs \
are all disjoint. \
\>", "Text",
 CellChangeTimes->{{3.821144495741583*^9, 3.821144577683956*^9}, {
   3.821198591767885*^9, 3.8211986252593946`*^9}, 3.8212166186448593`*^9, 
   3.821217282456233*^9, {3.821542555050461*^9, 
   3.821542562463645*^9}},ExpressionUUID->"1eed2819-1334-44bb-b547-\
a023ac82b46f"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"SM_", "0", 
     RowBox[{"X1111", ":", " ", "RL"}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{"SB", "[", "x", "]"}], " ", "^", " ", "NRL"}]}], ";"}], 
  "Code"], "\[LineSeparator]", 
 StyleBox[
  RowBox[{
   RowBox[{"SM_", "0", 
    RowBox[{"X2222", ":", " ", "RL"}]}], " ", "^=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"SB", "[", 
      RowBox[{"x", ",", "y", ",", "z"}], "]"}], " ", "&"}], " ", "RSP16"}]}], 
  "Code"], "\[LineSeparator]", 
 StyleBox[
  RowBox[{
   RowBox[{"SM_", "0", 
    RowBox[{"X8888", ":", " ", "RL"}]}], " ", "=", " ", 
   RowBox[{"SB", "[", "y", "]"}]}], "Code"], "\[LineSeparator]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"SM_", "0", 
     RowBox[{"X4444", ":", " ", "RL"}]}], " ", "&"}], "=", " ", 
   RowBox[{"SB", "[", 
    RowBox[{"x", ",", "z"}], "]"}]}], "Code"]}], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.821144100248398*^9, 3.821144153327766*^9}, {
  3.821144409202445*^9, 3.821144409203167*^9}, {3.821180229119878*^9, 
  3.821180353182025*^9}},ExpressionUUID->"ed0a6a98-755b-4635-a107-\
3d406883b6ba"],

Cell[TextData[{
 "is a compatible set because all the section masks are disjoint, including \
the implied section masks from NRL, namely ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", "1"}], ",", "3", ",", "5", ",", "7"}], TraditionalForm]],
  ExpressionUUID->"cac67857-5f52-4af6-9d74-cb3d31ab92fe"],
 ". Likewise, "
}], "Text",
 CellChangeTimes->{{3.8211803643523693`*^9, 3.8211803829652576`*^9}, {
   3.8212178812203074`*^9, 3.8212178816047153`*^9}, 3.821218186948948*^9, {
   3.821218313924485*^9, 3.821218341833322*^9}, {3.82121896236412*^9, 
   3.821218963458412*^9}, {3.821490729027567*^9, 
   3.821490747690114*^9}},ExpressionUUID->"055ba495-af7c-41bb-ba95-\
57194f895ecd"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"SM_", "0", 
     RowBox[{"X1111", ":", " ", 
      RowBox[{"SB", "[", "x", "]"}]}]}], " ", "=", " ", "RL"}], ";"}], 
  "Code"], "\[LineSeparator]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"SM_", "0", 
     RowBox[{"X1111", ":", " ", 
      RowBox[{"SB", "[", 
       RowBox[{"y", ",", "z"}], "]"}]}]}], " ", "=", " ", "RL"}], ";"}], 
  "Code"]}], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.821144100248398*^9, 3.821144153327766*^9}, {
  3.821144409202445*^9, 3.821144409203167*^9}, {3.821180229119878*^9, 
  3.821180353182025*^9}, {3.8212182703824472`*^9, 
  3.821218302923377*^9}},ExpressionUUID->"7f76610b-aaf8-40e3-9357-\
8694c7c02a15"],

Cell[TextData[{
 "is a compatible set iff ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "b67ede68-26f8-48a2-8509-7ca0bc53f50b"],
 ", ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]],ExpressionUUID->
  "2133e975-028e-4ec8-ae20-7241b9e88565"],
 ", and ",
 Cell[BoxData[
  FormBox["z", TraditionalForm]],ExpressionUUID->
  "fa099ca5-3a74-4c47-8725-7c76f64985ca"],
 " are distinct VR numbers."
}], "Text",
 CellChangeTimes->{{3.821218346302947*^9, 3.8212183486580553`*^9}, {
  3.8212185767656183`*^9, 3.821218618035954*^9}, {3.8212189682515907`*^9, 
  3.821218974440281*^9}, {3.8214901817237787`*^9, 
  3.8214901929225616`*^9}},ExpressionUUID->"95dabae5-c903-4d68-8b0e-\
fdf6a1a8d838"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["6 Safe but Non-Compatible Cases", "Section",
 CellChangeTimes->{{3.821144020205037*^9, 3.8211440275874*^9}, {
   3.821175156923587*^9, 3.8211751570094757`*^9}, {3.821180102374796*^9, 
   3.821180120856535*^9}, {3.821221259126624*^9, 3.821221260887171*^9}, 
   3.821263405060914*^9, {3.821485891029785*^9, 3.821485892433279*^9}, {
   3.8214904867546873`*^9, 3.8214904931440353`*^9}},
 CellTags->"c:19",ExpressionUUID->"04e46252-2160-48df-8b79-0ccdf3b8a243"],

Cell[CellGroupData[{

Cell["6.1 Write SB Before Reading RL", "Subsection",
 CellChangeTimes->{{3.821493002713716*^9, 3.821493026386985*^9}},
 CellTags->"c:20",ExpressionUUID->"7f598674-2057-43ae-818d-1ab794affe7e"],

Cell["\<\
Sometimes, commands are safe to run in parallel even if \
they\[CloseCurlyQuote]re not compatible. Consider the following instruction \
of two commands:\
\>", "Text",
 CellChangeTimes->{{3.8212136908841267`*^9, 3.821213720071658*^9}, {
  3.8212140963934526`*^9, 3.821214098070922*^9}, {3.821216676952931*^9, 
  3.8212166843472757`*^9}, {3.821229026979472*^9, 3.8212290301812563`*^9}, {
  3.821230590161414*^9, 3.82123059287883*^9}, {3.821490462169416*^9, 
  3.821490479175832*^9}, {3.821492219990491*^9, 3.821492223779595*^9}, {
  3.821542587031701*^9, 
  3.82154258896402*^9}},ExpressionUUID->"786abf4a-3c26-4bdd-aec4-\
a8e023ec042c"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"f", " ", "\[TildeFullEqual]", " ", 
     RowBox[{"SM_", "0", 
      RowBox[{"X3333", ":", " ", 
       RowBox[{"SB", "[", "x", "]"}]}]}]}], " ", "=", " ", "RL"}], ";"}], 
  "Code"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"g", " ", "\[TildeFullEqual]", " ", 
     RowBox[{"SM_", "0", 
      RowBox[{"X3333", ":", " ", "RL"}]}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{"SB", "[", "y", "]"}], " ", "^", " ", "GL"}]}], ";"}], 
  "Code"]}], "DisplayFormulaNumbered",
 CellChangeTimes->{
  3.8212135950315104`*^9, {3.821213678518544*^9, 3.8212136785202017`*^9}, {
   3.821216697149028*^9, 3.8212167056714163`*^9}, {3.82149022519036*^9, 
   3.821490250249428*^9}},
 CellTags->
  "up and down",ExpressionUUID->"6630ab68-931d-441f-b77a-f614f7b0d767"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["VarsUsedBy",
     FontSlant->"Italic"], "(", "f", ")"}], TraditionalForm]],ExpressionUUID->
  "e97b8898-507a-4eb7-b227-4fcc0e928209"],
 " includes certain sections of RL, whereas ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["VarsChangedBy",
     FontSlant->"Italic"], "(", "g", ")"}], TraditionalForm]],ExpressionUUID->
  "2fa5b952-08f8-495d-91ca-5c40835c1129"],
 " includes the same sections of RL, violating compatibility. It\
\[CloseCurlyQuote]s easiest to see that violation from Venn diagram ",
 
 CounterBox["DisplayFormulaNumbered", "venn compatibility"],
 ". "
}], "Text",
 CellChangeTimes->{{3.8212168038356447`*^9, 3.821216810301903*^9}, {
  3.8212168639582033`*^9, 3.821216972549222*^9}, {3.8212174317655153`*^9, 
  3.8212174359380217`*^9}, {3.821218988264372*^9, 3.821219009801475*^9}, {
  3.821219044535383*^9, 3.8212190858860703`*^9}, {3.821225859605645*^9, 
  3.821225863369272*^9}, {3.821229042833723*^9, 3.821229048751833*^9}, {
  3.821490212571022*^9, 3.821490219833582*^9}, {3.821490265822433*^9, 
  3.821490333708673*^9}, {3.8214905321779537`*^9, 3.821490591277629*^9}, {
  3.821490772534346*^9, 3.8214908645242653`*^9}, {3.821492049224313*^9, 
  3.8214920766931057`*^9}, {3.821492113937818*^9, 3.821492171146557*^9}, {
  3.821542625503522*^9, 
  3.821542631499949*^9}},ExpressionUUID->"240e433b-a1f8-449a-aa03-\
7b0dcbcb2e7d"],

Cell["\<\
The reason they\[CloseCurlyQuote]re safe to run in parallel is that machine \
reads RL in a rising half-clock cycle and then updates it in the falling \
half-clock cycle. \
\>", "Text",
 CellChangeTimes->{{3.821179518759715*^9, 3.82117955422192*^9}, {
  3.821179839510323*^9, 3.821179919345249*^9}, {3.8211799630050583`*^9, 
  3.8211800069661617`*^9}, {3.821180405665448*^9, 3.821180509272174*^9}, {
  3.821180900481996*^9, 3.821180909832553*^9}, {3.8211986988251*^9, 
  3.8211988209479094`*^9}, {3.8211989033971863`*^9, 3.8211989078134947`*^9}, {
  3.8212194959583473`*^9, 3.8212195154093513`*^9}, {3.8212207723942842`*^9, 
  3.821220774779622*^9}, {3.82122085625819*^9, 3.8212209688008947`*^9}, {
  3.821230825746269*^9, 3.821230825846733*^9}, {3.821230869507799*^9, 
  3.821230870722268*^9}, {3.821230957209908*^9, 3.8212310862292356`*^9}, {
  3.82149121237224*^9, 3.821491303962816*^9}, {3.821491353451437*^9, 
  3.821491354257195*^9}, {3.8214922404645977`*^9, 
  3.8214923583826227`*^9}},ExpressionUUID->"749c1f78-bff0-4150-beaf-\
a1e7d3c4a0de"],

Cell[TextData[{
 "Mathematically, the RL on the left-hand sides of Instruction ",
 
 CounterBox["DisplayFormulaNumbered", "up and down"],
 " is a different state of RL to the one on the right-hand side. Lamport \
would write them with primes, like this"
}], "Text",
 CellChangeTimes->{{3.821179518759715*^9, 3.82117955422192*^9}, {
   3.821179839510323*^9, 3.821179919345249*^9}, {3.8211799630050583`*^9, 
   3.8211800069661617`*^9}, {3.821180405665448*^9, 3.821180509272174*^9}, {
   3.821180900481996*^9, 3.821180909832553*^9}, {3.8211986988251*^9, 
   3.8211988209479094`*^9}, {3.8211989033971863`*^9, 
   3.8211989078134947`*^9}, {3.8212194959583473`*^9, 
   3.8212195154093513`*^9}, {3.8212207723942842`*^9, 3.821220774779622*^9}, {
   3.82122085625819*^9, 3.8212209688008947`*^9}, {3.821230825746269*^9, 
   3.821230825846733*^9}, {3.821230869507799*^9, 3.821230870722268*^9}, {
   3.821230957209908*^9, 3.8212310862292356`*^9}, {3.82149121237224*^9, 
   3.821491303962816*^9}, {3.821491353451437*^9, 3.821491354257195*^9}, {
   3.8214922404645977`*^9, 3.821492467870593*^9}, 3.8215426987468977`*^9, {
   3.821542766481894*^9, 
   3.821542768478499*^9}},ExpressionUUID->"30d464c7-c542-43ac-a396-\
71a2caaea9ae"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"SM_", "0", 
      RowBox[{"X3333", ":", " ", 
       RowBox[{
        RowBox[{"SB", "[", "x", "]"}], "'"}]}]}], " ", "=", " ", "RL"}], 
    ";"}], "       ", "//", " ", 
   RowBox[{"writes", " ", 
    RowBox[{"SB", "[", "x", "]"}], " ", "from", " ", "old", " ", "value", " ",
     "of", " ", "RL"}]}], "Code"], "\[LineSeparator]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"SM_", "0", 
      RowBox[{"X3333", ":", " ", 
       RowBox[{"RL", "'"}]}]}], " ", "=", " ", 
     RowBox[{
      RowBox[{"SB", "[", "y", "]"}], " ", "^", " ", "GL"}]}], ";"}], "  ", "//",
    " ", 
   RowBox[{"reads", " ", "from", " ", "old", " ", "value", " ", "of", " ", 
    RowBox[{"SB", "[", "y", "]"}]}]}], "Code"]}], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.821144100248398*^9, 3.821144153327766*^9}, {
  3.821144409202445*^9, 3.821144409203167*^9}, {3.8211792050632277`*^9, 
  3.8211792187012863`*^9}, {3.821179308417444*^9, 3.821179324005762*^9}, {
  3.821179637953885*^9, 3.821179665361861*^9}, {3.8211797994135857`*^9, 
  3.8211798026878633`*^9}, {3.8211798657164507`*^9, 3.821179869332223*^9}, {
  3.821198927937008*^9, 3.821198968046418*^9}, {3.8212308329143543`*^9, 
  3.8212309197751417`*^9}, {3.821492476886752*^9, 3.821492506058139*^9}},
 CellTags->
  "alices restaurant",ExpressionUUID->"aeeb2aca-82fe-438b-8220-3bf17df8c86e"],

Cell[TextData[{
 "The programmer may present the commands in (",
 
 CounterBox["DisplayFormulaNumbered", "up and down"],
 ") in the other order in an instruction:"
}], "Text",
 CellChangeTimes->{{3.821492514459268*^9, 3.82149254684488*^9}, {
  3.821542732875242*^9, 
  3.8215427450084457`*^9}},ExpressionUUID->"71c935f3-3fa6-4f55-9381-\
33e026f37de1"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"SM_", "0", 
     RowBox[{"X3333", ":", " ", "RL"}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{"SB", "[", "y", "]"}], " ", "^", " ", "GL"}]}], ";"}], 
  "Code"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"SM_", "0", 
     RowBox[{"X3333", ":", " ", 
      RowBox[{"SB", "[", "x", "]"}]}]}], " ", "=", " ", "RL"}], ";"}], 
  "Code"]}], "DisplayFormulaNumbered",
 CellChangeTimes->{
  3.8212135950315104`*^9, {3.821213678518544*^9, 3.8212136785202017`*^9}, {
   3.8212147794747047`*^9, 3.8212148007023*^9}},
 CellTags->
  "alices wonder",ExpressionUUID->"315a8326-a603-4d37-9cb4-efe83b1083a2"],

Cell[TextData[{
 "and the results would be the same: the second command in (",
 
 CounterBox["DisplayFormulaNumbered", "alices wonder"],
 ") would read bits from the ",
 StyleBox["old value of RL.",
  FontSlant->"Italic"],
 " "
}], "Text",
 CellChangeTimes->{{3.8212148111152067`*^9, 3.8212148610924263`*^9}, {
   3.8212148915713673`*^9, 3.821214907332844*^9}, {3.82121701092343*^9, 
   3.8212170834903383`*^9}, {3.821217146832139*^9, 3.821217171309945*^9}, {
   3.82121745600791*^9, 3.8212174963260727`*^9}, 3.821217591741335*^9, {
   3.8212188012619267`*^9, 3.821218801909803*^9}, {3.82149038501902*^9, 
   3.821490391809701*^9}},ExpressionUUID->"091045ad-9b75-4974-9ae8-\
c835d7a5fd17"],

Cell[TextData[{
 "The potential for human confusion is high. In a careless imperative reading \
of Instruction ",
 
 CounterBox["DisplayFormulaNumbered", "alices wonder"],
 ", it appears that RL is updated before it's used. Worse, RL ",
 StyleBox["would be",
  FontSlant->"Italic"],
 " updated before used if the two commands were written in separate \
instructions in the same order. In such a case, the instructions would run \
sequentially and not in parallel. This happenstance is a known hazard of our \
programming model."
}], "Text",
 CellChangeTimes->{{3.8212148111152067`*^9, 3.8212148610924263`*^9}, {
   3.8212148915713673`*^9, 3.821214907332844*^9}, {3.82121701092343*^9, 
   3.8212170834903383`*^9}, {3.821217146832139*^9, 3.821217171309945*^9}, {
   3.82121745600791*^9, 3.8212174963260727`*^9}, {3.821217599315769*^9, 
   3.821217615702877*^9}, {3.821217943236747*^9, 3.821218009159279*^9}, {
   3.8212186708005133`*^9, 3.82121877063284*^9}, {3.8212190198894453`*^9, 
   3.821219035699319*^9}, {3.821219107391848*^9, 3.821219158651134*^9}, {
   3.821221212534195*^9, 3.821221219823922*^9}, {3.8212259415627213`*^9, 
   3.821225948146182*^9}, {3.821229087462648*^9, 3.821229088982896*^9}, {
   3.8212306201254396`*^9, 3.8212306212654257`*^9}, {3.821490891174181*^9, 
   3.821490892610456*^9}, 
   3.8215427602395144`*^9},ExpressionUUID->"cb7130ae-601d-43f7-b690-\
1522b3bca973"],

Cell[TextData[{
 "A very important restriction on these considerations, ",
 StyleBox["is that ",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox["x", TraditionalForm]],
  FormatType->TraditionalForm,
  FontWeight->"Bold",
  FontSlant->"Italic",ExpressionUUID->"dca6aa62-61c8-404e-a0ce-7df23fba1c10"],
 StyleBox[" and ",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox["y", TraditionalForm]],
  FormatType->TraditionalForm,
  FontWeight->"Bold",
  FontSlant->"Italic",ExpressionUUID->"bb844ffb-ccb4-4f23-a402-7d8e829c84b6"],
 StyleBox[" must be different. It is not allowed to read and write the same \
SB sections in the same instruction",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ". Such introduces another kind of race condition, one in the sub-clocks of \
the machine. "
}], "Text",
 CellChangeTimes->{{3.8215427977391453`*^9, 
  3.821542869326667*^9}},ExpressionUUID->"d8aa7f5c-370b-472d-b7ba-\
08c4cbb3652d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["6.2 Read into RL before Broadcast", "Subsection",
 CellChangeTimes->{{3.8211796778675127`*^9, 3.821179686421529*^9}, {
   3.821180933722204*^9, 3.821180942500279*^9}, 3.821485901870981*^9, {
   3.821491872533744*^9, 3.821491872572487*^9}, {3.821492987076209*^9, 
   3.821492988697994*^9}},
 CellTags->"c:21",ExpressionUUID->"f67cbc28-dbdf-4dd6-8067-bd13b4893f57"],

Cell["\<\
Similarly, the machine allows a read that updates RL to execute in with an \
interfering broadcast that updates GL, GGL, or RSP16. For example,\
\>", "Text",
 CellChangeTimes->{{3.8211797313901873`*^9, 3.821179754246564*^9}, {
   3.821179813470482*^9, 3.8211798321031017`*^9}, {3.8211800187674217`*^9, 
   3.8211800795484657`*^9}, {3.8211805664870243`*^9, 3.821180568115035*^9}, 
   3.821180954876214*^9, {3.821231224543392*^9, 
   3.8212312249600573`*^9}},ExpressionUUID->"5f033d69-b869-4785-bd66-\
cc954997ef6e"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"f", " ", "\[TildeFullEqual]", " ", 
     RowBox[{"SM_", "0", 
      RowBox[{"X3333", ":", " ", "RL"}]}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{"SB", "[", "x", "]"}], " ", "^", " ", "RL"}]}], ";"}], 
  "Code"], "\[LineSeparator]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"g", " ", "\[TildeFullEqual]", " ", 
     RowBox[{"M_", "0", 
      RowBox[{"X2222", ":", " ", "GL"}]}]}], " ", "=", " ", "RL"}], ";"}], 
  "Code"]}], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.821144100248398*^9, 3.821144153327766*^9}, {
  3.821144409202445*^9, 3.821144409203167*^9}, {3.8211792050632277`*^9, 
  3.8211792187012863`*^9}, {3.821179308417444*^9, 3.821179324005762*^9}, {
  3.821179637953885*^9, 3.821179665361861*^9}, {3.8211797994135857`*^9, 
  3.8211798026878633`*^9}, {3.8211798657164507`*^9, 3.821179869332223*^9}, {
  3.821180065097165*^9, 3.821180072605064*^9}, {3.821180525340681*^9, 
  3.8211805572669773`*^9}, {3.821492649215312*^9, 
  3.8214926694452953`*^9}},ExpressionUUID->"b6783ad5-3e47-49a4-941b-\
e73c61582ed4"],

Cell[TextData[{
 "are allowed in one instruction. These two lines interfere because ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["VarsChangedBy",
     FontSlant->"Italic"], "(", "f", ")"}], TraditionalForm]],ExpressionUUID->
  "c9201466-ec16-4196-b04c-66f592c8c4f1"],
 " overlaps ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["VarsUsedBy",
     FontSlant->"Italic"], "(", "g", ")"}], TraditionalForm]],ExpressionUUID->
  "ca734a13-951b-4932-a208-c9e994ac002f"],
 ", and a glance at Venn diagram ",
 
 CounterBox["DisplayFormulaNumbered", "venn compatibility"],
 " shows that\[CloseCurlyQuote]s interfering."
}], "Text",
 CellChangeTimes->{{3.821492625318871*^9, 3.8214927665554647`*^9}, {
  3.821542898662698*^9, 
  3.821542903635139*^9}},ExpressionUUID->"077042ee-9edd-4d70-87e2-\
2ea29a43bab0"],

Cell["Lamport would write", "Text",
 CellChangeTimes->{{3.821198852249743*^9, 
  3.821198855505501*^9}},ExpressionUUID->"24a0b6e9-1788-4275-892f-\
6e0b3df41d77"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"SM_", "0", 
     RowBox[{"X3333", ":", " ", 
      RowBox[{"RL", "'"}]}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{"SB", "[", "x", "]"}], " ", "^", " ", "RL"}]}], ";"}], 
  "Code"], "\[LineSeparator]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"SM_", "0", 
     RowBox[{"X2222", ":", " ", "GL"}]}], " ", "=", " ", 
    RowBox[{"RL", "'"}]}], ";"}], "Code"]}], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.821144100248398*^9, 3.821144153327766*^9}, {
  3.821144409202445*^9, 3.821144409203167*^9}, {3.8211792050632277`*^9, 
  3.8211792187012863`*^9}, {3.821179308417444*^9, 3.821179324005762*^9}, {
  3.821179637953885*^9, 3.821179665361861*^9}, {3.8211797994135857`*^9, 
  3.8211798026878633`*^9}, {3.8211798657164507`*^9, 3.821179869332223*^9}, {
  3.821180065097165*^9, 3.821180072605064*^9}, {3.821180525340681*^9, 
  3.8211805572669773`*^9}, {3.821198859150199*^9, 3.821198861845642*^9}},
 CellTags->
  "read then \
broadcast",ExpressionUUID->"7c9a1c9c-4bf3-4dcb-abba-e64f59b95bf0"],

Cell[TextData[{
 "The update of RL happens ",
 StyleBox["before",
  FontSlant->"Italic"],
 " the update of GL. Notice that the order of updating in Instruction ",
 
 CounterBox["DisplayFormulaNumbered", "read then broadcast"],
 " \[LongDash] reading ",
 StyleBox["into",
  FontSlant->"Italic"],
 " RL before reading ",
 StyleBox["from",
  FontSlant->"Italic"],
 " RL \[LongDash] is the opposite to the order of the Instructions ",
 
 CounterBox["DisplayFormulaNumbered", "alices restaurant"],
 " and ",
 
 CounterBox["DisplayFormulaNumbered", "alices wonder"],
 " \[LongDash] read ",
 StyleBox["from",
  FontSlant->"Italic"],
 " RL before reading ",
 StyleBox["into",
  FontSlant->"Italic"],
 " RL. Careful programmers will always write commands in an order that is \
amenable to a careless-but-intuitive, imperative reading. But we cannot count \
on all programmers being so careful and we need to remember the rules."
}], "Text",
 CellChangeTimes->{{3.821180593533346*^9, 3.821180726743595*^9}, {
   3.821180964193542*^9, 3.8211810185136423`*^9}, {3.821181074807089*^9, 
   3.821181111290675*^9}, {3.821199050447959*^9, 3.821199063716938*^9}, {
   3.8212312495381403`*^9, 3.821231303118403*^9}, {3.821542923302712*^9, 
   3.821542977182979*^9}, 3.8215431878648787`*^9, {3.8215432271242867`*^9, 
   3.8215432437197723`*^9}, {3.821543290621347*^9, 3.821543349680691*^9}, {
   3.821543387985471*^9, 3.8215433918571978`*^9}, {3.82154355791745*^9, 
   3.821543565543644*^9}},ExpressionUUID->"7757bea3-5c80-410d-adc5-\
d584d5bad781"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["7 All Safe Cases Covered?", "Section",
 CellChangeTimes->{{3.8215433968130217`*^9, 
  3.8215434262226*^9}},ExpressionUUID->"734d6623-967f-43a9-bb34-d63972eca98c"],

Cell["\<\
Compatibility covers a large portion of the cases of commands that are safe \
to run in parallel. The special cases in the section above cover a few more \
common ones. We do not yet know whether this document covers all safe cases \
allowed by the machine. We will update the document when we learn more.\
\>", "Text",
 CellChangeTimes->{{3.821543434919229*^9, 
  3.82154352525618*^9}},ExpressionUUID->"4b503b71-320d-4e91-bfa4-\
fa20761b49c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["8 Appendix", "Section",
 CellChangeTimes->{{3.821263414195138*^9, 3.821263419649453*^9}, {
   3.82135753930335*^9, 3.8213575433059387`*^9}, {3.8214859067083387`*^9, 
   3.821485910896224*^9}, 3.821543430002266*^9},
 CellTags->"c:22",ExpressionUUID->"660e2861-7880-47bd-b16e-8c65141167bc"],

Cell[TextData[{
 "Spot-check the definition of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Var",
     FontSlant->"Italic"], "(", "k", ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b467cfa3-09b6-43eb-b2c4-3859ee76925e"],
 " at the edges of the piecewise formula."
}], "Text",
 CellChangeTimes->{{3.821357550205295*^9, 3.8213575911759453`*^9}, 
   3.821357707640461*^9, {3.8213577899657793`*^9, 3.821357825325635*^9}, {
   3.8213599253218393`*^9, 
   3.8213599500192823`*^9}},ExpressionUUID->"f2d167c2-9166-444f-a2d0-\
ca43b9fd75e1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "var", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"V", "=", "24"}], ",", 
     RowBox[{"P", "=", "2048"}], ",", 
     RowBox[{"S", "=", "16"}], ",", 
     RowBox[{"G", "=", "4"}], ",", 
     RowBox[{"R", "=", "128"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"var", "[", "k1_", "]"}], ":=", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"k", "=", 
        RowBox[{"k1", "-", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {
             RowBox[{"MMB", "[", 
              RowBox[{
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{"Quotient", "[", 
                  RowBox[{"k", ",", 
                   RowBox[{"P", " ", "S"}]}], "]"}], ",", "V"}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{"Quotient", "[", 
                  RowBox[{"k", ",", "S"}], "]"}], ",", "P"}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Mod", "[", 
                RowBox[{"k", ",", "S"}], "]"}]}], "]"}], 
             RowBox[{"0", "\[LessEqual]", "k", "<", 
              RowBox[{"V", " ", "P", " ", "S"}]}]},
            {
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"kp", "=", 
                 RowBox[{"k", "-", 
                  RowBox[{"V", " ", "P", " ", "S"}]}]}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"RL", "[", 
                RowBox[{
                 RowBox[{"Mod", "[", 
                  RowBox[{
                   RowBox[{"Quotient", "[", 
                    RowBox[{"kp", ",", "S"}], "]"}], ",", "P"}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Mod", "[", 
                  RowBox[{"kp", ",", "S"}], "]"}]}], "]"}]}], "]"}], 
             RowBox[{
              RowBox[{"V", " ", "P", " ", "S"}], "\[LessEqual]", "k", "<", 
              RowBox[{
               RowBox[{"V", " ", "P", " ", "S"}], "+", 
               RowBox[{"P", " ", "S"}]}]}]},
            {
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"kpp", "=", 
                 RowBox[{"k", "-", 
                  RowBox[{"V", " ", "P", " ", "S"}], "-", 
                  RowBox[{"P", " ", "S"}]}]}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"GL", "[", 
                RowBox[{"Mod", "[", 
                 RowBox[{"kpp", ",", "P"}], "]"}], "]"}]}], "]"}], 
             RowBox[{
              RowBox[{
               RowBox[{"V", " ", "P", " ", "S"}], "+", 
               RowBox[{"P", " ", "S"}]}], "\[LessEqual]", "k", "<", 
              RowBox[{
               RowBox[{"V", " ", "P", " ", "S"}], "+", 
               RowBox[{"P", " ", "S"}], "+", "P"}]}]},
            {
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"kppp", "=", 
                 RowBox[{"k", "-", 
                  RowBox[{"V", " ", "P", " ", "S"}], "-", 
                  RowBox[{"P", " ", "S"}], "-", "P"}]}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"GGL", "[", 
                RowBox[{
                 RowBox[{"Mod", "[", 
                  RowBox[{
                   RowBox[{"Quotient", "[", 
                    RowBox[{"kppp", ",", "G"}], "]"}], ",", "P"}], "]"}], ",",
                  "\[IndentingNewLine]", 
                 RowBox[{"Mod", "[", 
                  RowBox[{"kppp", ",", "G"}], "]"}]}], "]"}]}], "]"}], 
             RowBox[{
              RowBox[{
               RowBox[{"V", " ", "P", " ", "S"}], "+", 
               RowBox[{"P", " ", "S"}], "+", "P"}], "\[LessEqual]", "k", "<", 
              RowBox[{
               RowBox[{"V", " ", "P", " ", "S"}], "+", 
               RowBox[{"P", " ", "S"}], "+", "P", "+", 
               RowBox[{"P", " ", "G"}]}]}]},
            {
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"kpppp", "=", 
                 RowBox[{"k", "-", 
                  RowBox[{"V", " ", "P", " ", "S"}], "-", 
                  RowBox[{"P", " ", "S"}], "-", "P", "-", 
                  RowBox[{"P", " ", "G"}]}]}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"RSP16", "[", 
                RowBox[{
                 RowBox[{"Mod", "[", 
                  RowBox[{
                   RowBox[{"Quotient", "[", 
                    RowBox[{"kpppp", ",", "S"}], "]"}], ",", "R"}], "]"}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{"Mod", "[", 
                  RowBox[{"kpppp", ",", "S"}], "]"}]}], "]"}]}], "]"}], 
             RowBox[{
              RowBox[{
               RowBox[{"V", " ", "P", " ", "S"}], "+", 
               RowBox[{"P", " ", "S"}], "+", "P", "+", 
               RowBox[{"P", " ", "G"}]}], "\[LessEqual]", "k", "<", 
              RowBox[{
               RowBox[{"V", " ", "P", " ", "S"}], "+", 
               RowBox[{"P", " ", "S"}], "+", "P", "+", 
               RowBox[{"P", " ", "G"}], "+", 
               RowBox[{"R", " ", "S"}]}]}]},
            {
             RowBox[{"Throw", "[", "\"\<Index out of range\>\"", "]"}], "True"}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False,
       StripWrapperBoxes->True]}], "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.821357842179946*^9, 3.821358234739513*^9}, {
   3.821358265032305*^9, 3.8213583301583223`*^9}, {3.8213583776196737`*^9, 
   3.821358393017577*^9}, {3.821358423850678*^9, 3.821358540079599*^9}, {
   3.821358582266377*^9, 3.821359147490896*^9}, {3.821359195500832*^9, 
   3.821359275909233*^9}, {3.821359328052442*^9, 3.821359375973673*^9}, 
   3.821533206108807*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"4753753e-df1d-401b-9327-76306322b108"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"var", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.821359784409121*^9, 3.82135978641285*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"dec33108-1101-428e-8d91-c75d4a59b503"],

Cell[BoxData[
 TemplateBox[{
  "Throw", "nocatch", 
   "\"Uncaught \\!\\(\\*RowBox[{\\\"Throw\\\", \\\"[\\\", \\\"\\\\\\\"Index \
out of range\\\\\\\"\\\", \\\"]\\\"}]\\) returned to top level.\"", 2, 9, 1, 
   17815091287376799554, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8213597872844687`*^9, {3.8213818303515587`*^9, 3.8213818468804493`*^9}, 
   3.821452979351495*^9, 3.821453093166603*^9, 3.821492882522229*^9, 
   3.821533239760777*^9, 3.821533775689447*^9},
 CellLabel->
  "During evaluation of \
In[9]:=",ExpressionUUID->"166ad348-83cb-4d57-9063-9d7aaf9807a9"],

Cell[BoxData[
 RowBox[{"Hold", "[", 
  RowBox[{"Throw", "[", "\<\"Index out of range\"\>", "]"}], "]"}]], "Output",
 CellChangeTimes->{
  3.821359787293043*^9, {3.821381830372794*^9, 3.821381846893828*^9}, 
   3.8214529793631163`*^9, 3.821453093172431*^9, 3.821492882534528*^9, 
   3.8215332397638807`*^9, 3.8215337757093554`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"cea7736a-bf8d-4494-9793-5c64002be11d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"var", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.821359308623829*^9, 3.821359312252323*^9}, {
  3.821359388523437*^9, 3.821359388598037*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"7f3c3d94-b1f0-44db-bd6b-7711a5ae0415"],

Cell[BoxData[
 RowBox[{"MMB", "[", 
  RowBox[{"0", ",", "0", ",", "0"}], "]"}]], "Output",
 CellChangeTimes->{3.821533239787366*^9, 3.821533775731587*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"499e5c59-7896-4f56-9bc2-4dcbeb5333ca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"var", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.821359976427932*^9, 3.821359977607958*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"213a752c-d0de-4a98-bd11-a8b999b46e2d"],

Cell[BoxData[
 RowBox[{"MMB", "[", 
  RowBox[{"0", ",", "0", ",", "1"}], "]"}]], "Output",
 CellChangeTimes->{3.821533239857648*^9, 3.8215337757652187`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"ede5bf1d-8847-4e3f-a2c4-75e5d01fbaf9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"var", "[", "17", "]"}]], "Input",
 CellChangeTimes->{{3.821359989413816*^9, 3.8213599922837133`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"a4872866-469a-4e6e-a997-29e0938f324f"],

Cell[BoxData[
 RowBox[{"MMB", "[", 
  RowBox[{"0", ",", "1", ",", "0"}], "]"}]], "Output",
 CellChangeTimes->{3.821533239929714*^9, 3.8215337758021507`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"0428256c-eb88-4058-a04a-ea9b6c1f0eee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"var", "[", "786432", "]"}]], "Input",
 CellChangeTimes->{{3.8213594751806793`*^9, 3.821359499772307*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"f685adfb-141b-488e-b18d-a095a3290e72"],

Cell[BoxData[
 RowBox[{"MMB", "[", 
  RowBox[{"23", ",", "2047", ",", "15"}], "]"}]], "Output",
 CellChangeTimes->{3.821533240000599*^9, 3.8215337758354063`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"58462498-2d64-4679-a494-0f490c58f69e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"var", "[", 
  RowBox[{"786432", "+", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.82135950333674*^9, 3.821359509199188*^9}, {
  3.821359597285632*^9, 3.8213596001615953`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"9f08320c-ae9b-4f08-b9ea-f8a1cc695fe5"],

Cell[BoxData[
 RowBox[{"RL", "[", 
  RowBox[{"0", ",", "0"}], "]"}]], "Output",
 CellChangeTimes->{
  3.821359510164098*^9, 3.821359601576186*^9, {3.821381830518149*^9, 
   3.8213818470615797`*^9}, 3.821452979472024*^9, 3.82145309330009*^9, 
   3.8214928826480923`*^9, 3.821533240066701*^9, 3.821533775868856*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"ebb658f7-87fc-48c9-aaa3-7cd3d7010078"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"var", "[", 
  RowBox[{"786432", "+", "32768"}], "]"}]], "Input",
 CellChangeTimes->{{3.821359513699367*^9, 3.8213595319159822`*^9}, {
  3.821359586357183*^9, 3.821359587775764*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"80f2ec40-3190-43b7-be7a-9e71d369e375"],

Cell[BoxData[
 RowBox[{"RL", "[", 
  RowBox[{"2047", ",", "15"}], "]"}]], "Output",
 CellChangeTimes->{
  3.821359533003937*^9, 3.821359589122085*^9, {3.821381830548423*^9, 
   3.821381847097062*^9}, 3.8214529794968576`*^9, 3.821453093327083*^9, 
   3.821492882670082*^9, 3.821533240102231*^9, 3.821533775901696*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"bea2f73b-4973-4a94-8f3f-18ece81e3cdc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"var", "[", 
  RowBox[{"786432", "+", "32768", "+", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.821359513699367*^9, 3.8213595319159822`*^9}, {
  3.821359586357183*^9, 3.821359618160203*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"60699055-fa35-4fc2-9866-865c9d85461d"],

Cell[BoxData[
 RowBox[{"GL", "[", "0", "]"}]], "Output",
 CellChangeTimes->{
  3.8213596188307858`*^9, {3.821381830577633*^9, 3.821381847133113*^9}, 
   3.821452979519463*^9, 3.821453093354948*^9, 3.821492882694478*^9, 
   3.821533240135396*^9, 3.821533775934741*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"c64a0bdc-c915-4447-8eaa-87e3dbc9936c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"var", "[", 
  RowBox[{"786432", "+", "32768", "+", "2048"}], "]"}]], "Input",
 CellChangeTimes->{{3.821359544175177*^9, 3.821359580868022*^9}, {
  3.821359627027515*^9, 3.821359630418*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"a65a2554-373f-4570-8883-bdab15f7573e"],

Cell[BoxData[
 RowBox[{"GL", "[", "2047", "]"}]], "Output",
 CellChangeTimes->{
  3.821359566044433*^9, 3.821359634037888*^9, {3.8213818306058693`*^9, 
   3.821381847165522*^9}, 3.8214529795322227`*^9, 3.8214530933824368`*^9, 
   3.821492882719433*^9, 3.821533240169654*^9, 3.8215337759679403`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"daa1b9f0-21f5-42ed-a1b4-c328eb7b06d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"var", "[", 
  RowBox[{"786432", "+", "32768", "+", "2048", "+", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.821359544175177*^9, 3.821359580868022*^9}, {
  3.821359627027515*^9, 3.821359649183777*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"e4b1e441-5399-4426-bba2-feb80b3fd735"],

Cell[BoxData[
 RowBox[{"GGL", "[", 
  RowBox[{"0", ",", "0"}], "]"}]], "Output",
 CellChangeTimes->{
  3.821359649906646*^9, {3.821381830635501*^9, 3.821381847194847*^9}, 
   3.821452979554326*^9, 3.821453093408498*^9, 3.821492882742775*^9, 
   3.821533240204434*^9, 3.821533776000959*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"d533dc2a-b370-4a8f-9b2b-ad40beef190d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"var", "[", 
  RowBox[{"786432", "+", "32768", "+", "2048", "+", "8192"}], "]"}]], "Input",
 CellChangeTimes->{{3.8213593921064997`*^9, 3.821359398392235*^9}, {
  3.821359459691649*^9, 3.8213594598510933`*^9}, {3.8213596750053453`*^9, 
  3.821359679082459*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"39bf84dd-ddb8-47ce-ad18-34c99a110df6"],

Cell[BoxData[
 RowBox[{"GGL", "[", 
  RowBox[{"2047", ",", "3"}], "]"}]], "Output",
 CellChangeTimes->{
  3.82135939937289*^9, 3.821359460879706*^9, 3.821359680124518*^9, {
   3.821381830667948*^9, 3.821381847225501*^9}, 3.821452979570465*^9, 
   3.821453093434882*^9, 3.8214928827666903`*^9, 3.821533240240797*^9, 
   3.8215337760345993`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"3805e65e-c9bd-4094-9614-97b0713ec578"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"var", "[", 
  RowBox[{"786432", "+", "32768", "+", "2048", "+", "8192", "+", "1"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8213593921064997`*^9, 3.821359398392235*^9}, {
  3.821359459691649*^9, 3.8213594598510933`*^9}, {3.8213596750053453`*^9, 
  3.821359708058464*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"5755cb8a-6b81-493e-8752-2d64a2b086a6"],

Cell[BoxData[
 RowBox[{"RSP16", "[", 
  RowBox[{"0", ",", "0"}], "]"}]], "Output",
 CellChangeTimes->{
  3.821359708602334*^9, {3.821381830699787*^9, 3.8213818472566643`*^9}, 
   3.821452979594215*^9, 3.8214530934611797`*^9, 3.821492882789572*^9, 
   3.821533240277814*^9, 3.821533776069038*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"753fc6b4-f3e3-4e02-a448-ae63b0ae8995"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"var", "[", 
  RowBox[{"786432", "+", "32768", "+", "2048", "+", "8192", "+", "2048"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8213593921064997`*^9, 3.821359398392235*^9}, {
  3.821359459691649*^9, 3.8213594598510933`*^9}, {3.8213596750053453`*^9, 
  3.8213597273935223`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"cbd6f706-9288-4e98-97e1-98ce5429933e"],

Cell[BoxData[
 RowBox[{"RSP16", "[", 
  RowBox[{"127", ",", "15"}], "]"}]], "Output",
 CellChangeTimes->{
  3.821359728513187*^9, {3.821381830731451*^9, 3.821381847286907*^9}, 
   3.821452979616308*^9, 3.8214530934861727`*^9, 3.821492882813559*^9, 
   3.821533240316362*^9, 3.821533776857625*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"5e139df3-f1e0-4e59-ae30-7eb25736aa2a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"var", "[", "831489", "]"}]], "Input",
 CellChangeTimes->{{3.8213594056468477`*^9, 3.821359416402733*^9}, {
  3.821359465916132*^9, 3.8213594676430197`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"51453fc6-151d-41df-8c91-a6eb3843e1b3"],

Cell[BoxData[
 TemplateBox[{
  "Throw", "nocatch", 
   "\"Uncaught \\!\\(\\*RowBox[{\\\"Throw\\\", \\\"[\\\", \\\"\\\\\\\"Index \
out of range\\\\\\\"\\\", \\\"]\\\"}]\\) returned to top level.\"", 2, 22, 2, 
   17815091287376799554, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8213594686775713`*^9, {3.82138183074461*^9, 3.821381847317033*^9}, 
   3.8214529796387453`*^9, 3.821453093511353*^9, 3.8214928828378563`*^9, 
   3.821533240351673*^9, 3.821533776960622*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"eab294f4-8c02-4553-bcbf-e5857004808c"],

Cell[BoxData[
 RowBox[{"Hold", "[", 
  RowBox[{"Throw", "[", "\<\"Index out of range\"\>", "]"}], "]"}]], "Output",
 CellChangeTimes->{
  3.821359417328888*^9, 3.8213594686862907`*^9, {3.8213818307497587`*^9, 
   3.821381847331917*^9}, 3.821452979648553*^9, 3.821453093522427*^9, 
   3.8214928828470583`*^9, 3.8215332403669577`*^9, 3.8215337769638853`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"ca83482f-1634-46e9-b202-1765c29ebe89"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{715.5, 783.75},
WindowMargins->{{3, Automatic}, {Automatic, 3}},
PrintingStartingPageNumber->1,
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False, 
  "PaginationCache" -> {{2021, 2, 4, 21, 50, 48.326172`8.436757371349067}, {1,
     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
     4, 4, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 
    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8,
     8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10,
     10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 
    12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 
    13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 
    14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16}, Automatic}},
FrontEndVersion->"12.2 for Linux x86 (64-bit) (December 12, 2020)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"a94a1d1b-fa29-4608-93e2-f43bcdc2ee73"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "alices restaurant"->{
  Cell[632624, 12217, 1421, 33, 49, "DisplayFormulaNumbered",ExpressionUUID->"aeeb2aca-82fe-438b-8220-3bf17df8c86e",
   CellTags->"alices restaurant"]},
 "alices wonder"->{
  Cell[634402, 12263, 665, 20, 49, "DisplayFormulaNumbered",ExpressionUUID->"315a8326-a603-4d37-9cb4-efe83b1083a2",
   CellTags->"alices wonder"]},
 "changed unchanged"->{
  Cell[296292, 5890, 850, 22, 70, "DisplayFormulaNumbered",ExpressionUUID->"07cc4c66-7b36-4f3b-9d8f-30aaa0c11bd0",
   CellTags->"changed unchanged"]},
 "changed unused"->{
  Cell[322894, 6590, 554, 15, 54, "DisplayFormulaNumbered",ExpressionUUID->"ef577549-3985-4d7e-aa7e-04b17d14b1e6",
   CellTags->"changed unused"]},
 "changed used"->{
  Cell[342712, 7122, 799, 17, 54, "DisplayFormulaNumbered",ExpressionUUID->"b172f3ef-ad2c-4417-881c-edd588fdce5e",
   CellTags->"changed used"]},
 "command 1"->{
  Cell[5268, 126, 547, 13, 38, "DisplayFormulaNumbered",ExpressionUUID->"f673e158-d6b2-4e05-b192-e9d0888d623e",
   CellTags->"command 1"]},
 "command 2"->{
  Cell[12308, 283, 706, 15, 38, "DisplayFormulaNumbered",ExpressionUUID->"956cd92a-8102-4fcc-b1ae-199cb5297100",
   CellTags->"command 2"]},
 "compatibility"->{
  Cell[346893, 7235, 1146, 29, 73, "DisplayFormulaNumbered",ExpressionUUID->"f396e5ed-5394-4a99-a33c-bac49ad035e0",
   CellTags->"compatibility"]},
 "c:1"->{
  Cell[422, 15, 198, 2, 171, "Title",ExpressionUUID->"c6e381fd-f762-429a-958f-cb219874ee22",
   CellTags->"c:1"]},
 "c:10"->{
  Cell[248562, 4678, 757, 19, 46, "Subsection",ExpressionUUID->"11a7eb5b-656f-4d58-ae7a-989da7ae3d25",
   CellTags->"c:10"]},
 "c:11"->{
  Cell[262342, 5035, 181, 2, 45, "Subsubsection",ExpressionUUID->"e0441781-2a34-44f2-b25f-edd9f2931432",
   CellTags->"c:11"]},
 "c:12"->{
  Cell[288837, 5710, 194, 2, 45, "Subsubsection",ExpressionUUID->"76609778-9f9f-436e-8bfe-1843167c32db",
   CellTags->"c:12"]},
 "c:13"->{
  Cell[297582, 5930, 607, 17, 46, "Subsection",ExpressionUUID->"0ce205b3-f812-4401-be40-5248af7433e9",
   CellTags->"c:13"]},
 "c:14"->{
  Cell[340072, 7055, 214, 3, 46, "Subsection",ExpressionUUID->"764d03aa-d1ff-456f-87fd-b1a671fa4aa3",
   CellTags->"c:14"]},
 "c:15"->{
  Cell[345269, 7192, 405, 5, 81, "Section",ExpressionUUID->"54a76e33-2666-497d-93be-d90ea8342824",
   CellTags->"c:15"]},
 "c:16"->{
  Cell[459528, 9171, 212, 2, 46, "Subsection",ExpressionUUID->"8f586212-a80b-4ae6-acdf-4c65bc3faf6a",
   CellTags->"c:16"]},
 "c:17"->{
  Cell[615115, 11767, 211, 2, 46, "Subsection",ExpressionUUID->"9ff139df-067c-4661-8eec-ff7de34ef08e",
   CellTags->"c:17"]},
 "c:18"->{
  Cell[621354, 11943, 330, 4, 46, "Subsection",ExpressionUUID->"dcc9c7f1-0da3-421b-ae1d-f595aa40d65d",
   CellTags->"c:18"]},
 "c:19"->{
  Cell[626760, 12089, 462, 6, 81, "Section",ExpressionUUID->"04e46252-2160-48df-8b79-0ccdf3b8a243",
   CellTags->"c:19"]},
 "c:2"->{
  Cell[1287, 41, 175, 2, 81, "Section",ExpressionUUID->"1cdcca01-f302-4db6-98e4-66151deb07b3",
   CellTags->"c:2"]},
 "c:20"->{
  Cell[627247, 12099, 192, 2, 46, "Subsection",ExpressionUUID->"7f598674-2057-43ae-818d-1ab794affe7e",
   CellTags->"c:20"]},
 "c:21"->{
  Cell[638159, 12361, 369, 5, 34, "Subsection",ExpressionUUID->"f67cbc28-dbdf-4dd6-8067-bd13b4893f57",
   CellTags->"c:21"]},
 "c:22"->{
  Cell[644436, 12523, 294, 4, 69, "Section",ExpressionUUID->"660e2861-7880-47bd-b16e-8c65141167bc",
   CellTags->"c:22"]},
 "c:3"->{
  Cell[3964, 102, 240, 3, 81, "Section",ExpressionUUID->"a5e872c3-10cd-49de-8b9d-2bb3ebdbd290",
   CellTags->"c:3"]},
 "c:4"->{
  Cell[19034, 433, 184, 2, 46, "Subsection",ExpressionUUID->"bed546ed-4365-49a2-84fd-84e57838c878",
   CellTags->"c:4"]},
 "c:5"->{
  Cell[24813, 601, 286, 4, 81, "Section",ExpressionUUID->"db843c3d-2a2e-4c7d-bb7b-50ab5ab7b041",
   CellTags->"c:5"]},
 "c:6"->{
  Cell[202870, 3602, 336, 4, 46, "Subsection",ExpressionUUID->"943fba04-ccb0-4223-b9fa-05f5a35c6c3d",
   CellTags->"c:6"]},
 "c:7"->{
  Cell[203982, 3630, 299, 4, 81, "Section",ExpressionUUID->"b6290b39-2283-4ae4-8d84-b1f6800b8740",
   CellTags->"c:7"]},
 "c:8"->{
  Cell[235866, 4355, 415, 11, 46, "Subsection",ExpressionUUID->"481f16be-c72a-479e-8e9a-c63aa38bc6ee",
   CellTags->"c:8"]},
 "c:9"->{
  Cell[243358, 4550, 297, 4, 81, "Section",ExpressionUUID->"0d58ae6e-6667-4992-b2c7-e35d8756ab69",
   CellTags->"c:9"]},
 "def of var k"->{
  Cell[239253, 4434, 3132, 89, 110, "DisplayFormulaNumbered",ExpressionUUID->"0146e041-2b0f-462f-ab7b-07c12ac9be6a",
   CellTags->"def of var k"]},
 "del of f"->{
  Cell[252988, 4797, 1132, 33, 42, "DisplayFormulaNumbered",ExpressionUUID->"265c435f-4fa3-45de-8b1e-effab07fd86c",
   CellTags->"del of f"]},
 "del of i f"->{
  Cell[249925, 4716, 627, 16, 42, "DisplayFormulaNumbered",ExpressionUUID->"46a43257-97bc-4f1c-a6ec-a5b805dbcea4",
   CellTags->"del of i f"]},
 "function 1"->{
  Cell[264130, 5067, 630, 15, 38, "DisplayFormulaNumbered",ExpressionUUID->"01cf4f13-ac96-4c42-8571-61cc24bfa972",
   CellTags->"function 1"]},
 "function 2"->{
  Cell[344038, 7154, 627, 15, 38, "DisplayFormulaNumbered",ExpressionUUID->"c65167ab-33a6-4667-bafa-dc28528892f0",
   CellTags->"function 2"],
  Cell[454465, 9044, 1092, 28, 62, "DisplayFormulaNumbered",ExpressionUUID->"1ceee126-c88e-4089-8f07-1f01b65864af",
   CellTags->"function 2"]},
 "read then broadcast"->{
  Cell[641134, 12436, 1059, 25, 49, "DisplayFormulaNumbered",ExpressionUUID->"7c9a1c9c-4bf3-4dcb-abba-e64f59b95bf0",
   CellTags->"read then broadcast"]},
 "state tuple"->{
  Cell[218963, 3972, 1188, 30, 38, "DisplayFormulaNumbered",ExpressionUUID->"bb8f1e4a-56eb-4907-a9ea-86a14476ff95",
   CellTags->"state tuple"]},
 "union of cartesians"->{
  Cell[223423, 4083, 2405, 64, 110, "DisplayFormulaNumbered",ExpressionUUID->"3255982c-98f4-418a-bda5-408e3d3f2626",
   CellTags->"union of cartesians"]},
 "up and down"->{
  Cell[628090, 12117, 821, 23, 62, "DisplayFormulaNumbered",ExpressionUUID->"6630ab68-931d-441f-b77a-f614f7b0d767",
   CellTags->"up and down"]},
 "used unchanged"->{
  Cell[334444, 6892, 654, 17, 54, "DisplayFormulaNumbered",ExpressionUUID->"3e6760e7-d3fc-4fa9-b6fc-0480300427af",
   CellTags->"used unchanged"]},
 "used unused"->{
  Cell[339361, 7032, 674, 18, 54, "DisplayFormulaNumbered",ExpressionUUID->"b46d505f-d553-4604-b8cc-8198095212d0",
   CellTags->"used unused"]},
 "vars changed by"->{
  Cell[257272, 4902, 976, 26, 42, "DisplayFormulaNumbered",ExpressionUUID->"79c90c6a-2a37-4e57-a445-7be4982bba39",
   CellTags->"vars changed by"]},
 "vars unchanged by"->{
  Cell[260822, 4990, 1023, 27, 42, "DisplayFormulaNumbered",ExpressionUUID->"1aa530d3-aa56-4bf5-a64c-3813c5449a14",
   CellTags->"vars unchanged by"]},
 "venn compatibility"->{
  Cell[349217, 7301, 104298, 1717, 349, "DisplayFormulaNumbered",ExpressionUUID->"387c1289-2533-4444-96f6-0164cd740ded",
   CellTags->"venn compatibility"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"alices restaurant", 664812, 13037},
 {"alices wonder", 664985, 13040},
 {"changed unchanged", 665157, 13043},
 {"changed unused", 665329, 13046},
 {"changed used", 665496, 13049},
 {"command 1", 665658, 13052},
 {"command 2", 665814, 13055},
 {"compatibility", 665975, 13058},
 {"c:1", 666133, 13061},
 {"c:10", 666259, 13064},
 {"c:11", 666396, 13067},
 {"c:12", 666535, 13070},
 {"c:13", 666674, 13073},
 {"c:14", 666811, 13076},
 {"c:15", 666947, 13079},
 {"c:16", 667080, 13082},
 {"c:17", 667216, 13085},
 {"c:18", 667353, 13088},
 {"c:19", 667490, 13091},
 {"c:2", 667623, 13094},
 {"c:20", 667751, 13097},
 {"c:21", 667888, 13100},
 {"c:22", 668025, 13103},
 {"c:3", 668158, 13106},
 {"c:4", 668286, 13109},
 {"c:5", 668418, 13112},
 {"c:6", 668547, 13115},
 {"c:7", 668681, 13118},
 {"c:8", 668812, 13121},
 {"c:9", 668947, 13124},
 {"def of var k", 669087, 13127},
 {"del of f", 669250, 13130},
 {"del of i f", 669410, 13133},
 {"function 1", 669571, 13136},
 {"function 2", 669732, 13139},
 {"read then broadcast", 670046, 13144},
 {"state tuple", 670219, 13147},
 {"union of cartesians", 670391, 13150},
 {"up and down", 670564, 13153},
 {"used unchanged", 670731, 13156},
 {"used unused", 670897, 13159},
 {"vars changed by", 671064, 13162},
 {"vars unchanged by", 671237, 13165},
 {"venn compatibility", 671414, 13168}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 198, 2, 171, "Title",ExpressionUUID->"c6e381fd-f762-429a-958f-cb219874ee22",
 CellTags->"c:1"],
Cell[623, 19, 124, 3, 33, "Subtitle",ExpressionUUID->"98ac031c-408f-4a7d-9f1f-aa96fa5ebcef"],
Cell[750, 24, 157, 3, 43, "Author",ExpressionUUID->"ea6c384c-2b54-4ceb-a855-c2983aa31b34"],
Cell[910, 29, 352, 8, 59, "Date",ExpressionUUID->"83ad6d36-6499-470a-a63b-dbd9f886e3c7"],
Cell[CellGroupData[{
Cell[1287, 41, 175, 2, 81, "Section",ExpressionUUID->"1cdcca01-f302-4db6-98e4-66151deb07b3",
 CellTags->"c:2"],
Cell[1465, 45, 618, 11, 80, "Text",ExpressionUUID->"4352c74d-1cf7-46e2-af7c-2b24cb00537f"],
Cell[2086, 58, 168, 2, 34, "Text",ExpressionUUID->"d7b0d572-06ba-4715-9caf-ff76db5746b0"],
Cell[2257, 62, 460, 9, 57, "Text",ExpressionUUID->"fe6b947f-0275-43b4-83da-b4e560cf13d5"],
Cell[2720, 73, 686, 12, 103, "Text",ExpressionUUID->"98cb9e89-112e-4cfc-b32c-ce760b976024"],
Cell[3409, 87, 170, 3, 34, "Text",ExpressionUUID->"0bfa2687-72a7-4e2f-a424-f5240fd3f400"],
Cell[3582, 92, 345, 5, 34, "Text",ExpressionUUID->"7b59081b-7133-4110-953b-4bfb82b2eacc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3964, 102, 240, 3, 81, "Section",ExpressionUUID->"a5e872c3-10cd-49de-8b9d-2bb3ebdbd290",
 CellTags->"c:3"],
Cell[4207, 107, 1058, 17, 80, "Text",ExpressionUUID->"13865de0-699a-4b47-a238-03c2c08eafa1"],
Cell[5268, 126, 547, 13, 38, "DisplayFormulaNumbered",ExpressionUUID->"f673e158-d6b2-4e05-b192-e9d0888d623e",
 CellTags->"command 1"],
Cell[5818, 141, 751, 11, 34, "Text",ExpressionUUID->"6826bd6c-0fa9-46ad-8ee0-75e67083ce30"],
Cell[6572, 154, 1389, 32, 28, "ItemNumbered",ExpressionUUID->"53bf8b0c-0b10-4520-a3fb-eae0d4236cc2"],
Cell[7964, 188, 1090, 22, 28, "ItemNumbered",ExpressionUUID->"3138da59-52e8-408c-9a36-50c146878b8d"],
Cell[9057, 212, 1185, 24, 49, "ItemNumbered",ExpressionUUID->"0677db2b-aeeb-4b19-951c-37d6e7c8c3f2"],
Cell[10245, 238, 962, 18, 28, "ItemNumbered",ExpressionUUID->"6e528035-6b22-4c70-9613-98ab76ec5d71"],
Cell[11210, 258, 936, 18, 34, "Text",ExpressionUUID->"3a2cc645-81e6-4a4e-88e1-91a3c3b61dde"],
Cell[12149, 278, 156, 3, 34, "Text",ExpressionUUID->"477711e3-9ea0-4878-b3af-a6935342e79a"],
Cell[12308, 283, 706, 15, 38, "DisplayFormulaNumbered",ExpressionUUID->"956cd92a-8102-4fcc-b1ae-199cb5297100",
 CellTags->"command 2"],
Cell[13017, 300, 2206, 48, 103, "Text",ExpressionUUID->"953405b9-aadd-4632-bb5a-c029bede1a36"],
Cell[15226, 350, 1371, 32, 103, "Text",ExpressionUUID->"7a392039-5135-4b24-b583-d2c5ff62da63"],
Cell[16600, 384, 1209, 24, 103, "Text",ExpressionUUID->"c952a072-005c-4c7e-91a2-3f1604505c0e"],
Cell[17812, 410, 1197, 19, 149, "Text",ExpressionUUID->"68c24fb1-cdfd-4cae-9203-ae0ea5f0e629"],
Cell[CellGroupData[{
Cell[19034, 433, 184, 2, 46, "Subsection",ExpressionUUID->"bed546ed-4365-49a2-84fd-84e57838c878",
 CellTags->"c:4"],
Cell[19221, 437, 891, 17, 80, "Text",ExpressionUUID->"4a4cf28f-4fe8-4081-a459-91401963d6ee"],
Cell[20115, 456, 3040, 91, 183, "DisplayFormulaNumbered",ExpressionUUID->"423f2468-d67a-4169-b1f8-64dffda0b841"],
Cell[23158, 549, 806, 23, 34, "Text",ExpressionUUID->"960b9f56-2ee1-472b-9a5c-bcc9c9c5b4ec"],
Cell[23967, 574, 580, 15, 26, "DisplayFormulaNumbered",ExpressionUUID->"241e8e31-bfc0-4444-9a32-ef0175f0f11e"],
Cell[24550, 591, 214, 4, 34, "Text",ExpressionUUID->"675e3f67-0b6f-4c2d-baa5-a1420d03a63b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[24813, 601, 286, 4, 81, "Section",ExpressionUUID->"db843c3d-2a2e-4c7d-bb7b-50ab5ab7b041",
 CellTags->"c:5"],
Cell[25102, 607, 1729, 50, 80, "Text",ExpressionUUID->"9623b1ce-3907-4299-9667-5317abefe76d"],
Cell[CellGroupData[{
Cell[26856, 661, 2525, 61, 144, "Input",ExpressionUUID->"9bb01439-ef8f-46d3-a737-127624d7dbea"],
Cell[29384, 724, 172290, 2836, 296, 2079, 45, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"0196d8f3-4dd4-48e4-980e-93ffefecc0d8"]
}, {2}]],
Cell[201686, 3563, 1159, 35, 80, "Text",ExpressionUUID->"fc7a3e9d-bafd-4836-8574-8e236e0c229a"],
Cell[CellGroupData[{
Cell[202870, 3602, 336, 4, 46, "Subsection",ExpressionUUID->"943fba04-ccb0-4223-b9fa-05f5a35c6c3d",
 CellTags->"c:6"],
Cell[203209, 3608, 724, 16, 103, "Text",ExpressionUUID->"fa04fa96-cbfb-40cc-917b-8483ef0fa465"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[203982, 3630, 299, 4, 81, "Section",ExpressionUUID->"b6290b39-2283-4ae4-8d84-b1f6800b8740",
 CellTags->"c:7"],
Cell[204284, 3636, 896, 14, 34, "Text",ExpressionUUID->"99e7313a-f6d0-46bc-9533-5017a195cc0a"],
Cell[205183, 3652, 825, 12, 34, "Text",ExpressionUUID->"679625cb-8414-4ddd-a604-152733d3995f"],
Cell[206011, 3666, 1278, 19, 103, "Text",ExpressionUUID->"77676f03-3ed2-4968-a209-b0d33844c5ff"],
Cell[207292, 3687, 1008, 16, 57, "Text",ExpressionUUID->"80af6483-a3b1-477a-b0fb-89d2023ac1d4"],
Cell[208303, 3705, 1130, 19, 80, "Text",ExpressionUUID->"00e85d01-c12a-45d4-af76-32b1bebd6b76"],
Cell[209436, 3726, 397, 11, 50, "Text",ExpressionUUID->"1703f780-1c1b-4e35-b241-1a10c7ddad5b"],
Cell[209836, 3739, 1262, 23, 80, "Text",ExpressionUUID->"93fc3bf3-cd02-49ec-89cf-937beefd14ff"],
Cell[211101, 3764, 1128, 35, 57, "Text",ExpressionUUID->"e70576e6-606e-49c9-89b7-aca84713b796"],
Cell[212232, 3801, 857, 22, 60, "DisplayFormulaNumbered",ExpressionUUID->"837d3e80-c010-4ac6-b937-dc3668f26bfd"],
Cell[213092, 3825, 1667, 39, 103, "Text",ExpressionUUID->"0aeb862c-f00b-4991-81bf-3b57709a01b6"],
Cell[214762, 3866, 3540, 85, 149, "Text",ExpressionUUID->"c0183398-62e0-4b6a-ae2e-ae9154a252d2"],
Cell[218305, 3953, 655, 17, 57, "Text",ExpressionUUID->"491a10c6-0b58-4c30-be33-4d2cc4e6f1e6"],
Cell[218963, 3972, 1188, 30, 38, "DisplayFormulaNumbered",ExpressionUUID->"bb8f1e4a-56eb-4907-a9ea-86a14476ff95",
 CellTags->"state tuple"],
Cell[220154, 4004, 1104, 21, 57, "Text",ExpressionUUID->"ade60b78-d939-4db8-8389-d022dcbea6ac"],
Cell[221261, 4027, 1610, 42, 190, "DisplayFormulaNumbered",ExpressionUUID->"9b6d23d4-bed9-414a-8b50-e888ba32537e"],
Cell[222874, 4071, 546, 10, 57, "Text",ExpressionUUID->"a89ba421-0df2-46ce-a0a9-db28beacd35d"],
Cell[223423, 4083, 2405, 64, 110, "DisplayFormulaNumbered",ExpressionUUID->"3255982c-98f4-418a-bda5-408e3d3f2626",
 CellTags->"union of cartesians"],
Cell[225831, 4149, 1163, 23, 80, "Text",ExpressionUUID->"3b877db3-3adf-4efb-b7d8-2841168daff2"],
Cell[226997, 4174, 3382, 55, 103, "Text",ExpressionUUID->"1e3d70ac-3201-4e9f-849f-0ea6ddaf7575"],
Cell[230382, 4231, 5459, 120, 195, "Text",ExpressionUUID->"d37d2db3-32f8-4d9d-bb96-3c1addb9841f"],
Cell[CellGroupData[{
Cell[235866, 4355, 415, 11, 46, "Subsection",ExpressionUUID->"481f16be-c72a-479e-8e9a-c63aa38bc6ee",
 CellTags->"c:8"],
Cell[236284, 4368, 2966, 64, 172, "Text",ExpressionUUID->"71c39ff2-169d-4889-a2f9-066b09f2f075"],
Cell[239253, 4434, 3132, 89, 110, "DisplayFormulaNumbered",ExpressionUUID->"0146e041-2b0f-462f-ab7b-07c12ac9be6a",
 CellTags->"def of var k"],
Cell[242388, 4525, 921, 19, 80, "Text",ExpressionUUID->"2e6e03e6-099c-4216-a7b7-dcf2ae89200a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[243358, 4550, 297, 4, 81, "Section",ExpressionUUID->"0d58ae6e-6667-4992-b2c7-e35d8756ab69",
 CellTags->"c:9"],
Cell[243658, 4556, 3285, 77, 103, "Text",ExpressionUUID->"26d64340-ce67-4ade-a9f4-a5898d3c4857"],
Cell[246946, 4635, 1591, 39, 57, "Text",ExpressionUUID->"f32f1040-ecc2-4f9e-956a-c831b7c7320c"],
Cell[CellGroupData[{
Cell[248562, 4678, 757, 19, 46, "Subsection",ExpressionUUID->"11a7eb5b-656f-4d58-ae7a-989da7ae3d25",
 CellTags->"c:10"],
Cell[249322, 4699, 600, 15, 34, "Text",ExpressionUUID->"ddd5d0e1-942c-4c62-bbea-d1c6add2ea1f"],
Cell[249925, 4716, 627, 16, 42, "DisplayFormulaNumbered",ExpressionUUID->"46a43257-97bc-4f1c-a6ec-a5b805dbcea4",
 CellTags->"del of i f"],
Cell[250555, 4734, 1618, 41, 57, "Text",ExpressionUUID->"387343e6-a741-4676-88b5-a2f94afa8f92"],
Cell[252176, 4777, 809, 18, 34, "Text",ExpressionUUID->"8a7ef943-64fb-4d1f-be2e-b94adcc61b25"],
Cell[252988, 4797, 1132, 33, 42, "DisplayFormulaNumbered",ExpressionUUID->"265c435f-4fa3-45de-8b1e-effab07fd86c",
 CellTags->"del of f"],
Cell[254123, 4832, 3146, 68, 103, "Text",ExpressionUUID->"60bef436-d09e-4023-b015-1611285e9872"],
Cell[257272, 4902, 976, 26, 42, "DisplayFormulaNumbered",ExpressionUUID->"79c90c6a-2a37-4e57-a445-7be4982bba39",
 CellTags->"vars changed by"],
Cell[258251, 4930, 462, 15, 34, "Text",ExpressionUUID->"95fe5b27-bbf9-4b11-a76f-2325c35f3798"],
Cell[258716, 4947, 2103, 41, 57, "Text",ExpressionUUID->"a59e7da6-1757-40b7-abec-92d996e72c71"],
Cell[260822, 4990, 1023, 27, 42, "DisplayFormulaNumbered",ExpressionUUID->"1aa530d3-aa56-4bf5-a64c-3813c5449a14",
 CellTags->"vars unchanged by"],
Cell[261848, 5019, 469, 12, 34, "Text",ExpressionUUID->"f1feca4c-7a06-48a8-863a-85e3a11feccc"],
Cell[CellGroupData[{
Cell[262342, 5035, 181, 2, 45, "Subsubsection",ExpressionUUID->"e0441781-2a34-44f2-b25f-edd9f2931432",
 CellTags->"c:11"],
Cell[262526, 5039, 1601, 26, 34, "Text",ExpressionUUID->"29a4d306-2a4a-4240-b85f-1e637b79735e"],
Cell[264130, 5067, 630, 15, 38, "DisplayFormulaNumbered",ExpressionUUID->"01cf4f13-ac96-4c42-8571-61cc24bfa972",
 CellTags->"function 1"],
Cell[264763, 5084, 1776, 40, 80, "Text",ExpressionUUID->"e614c6f3-d230-4de7-b9cf-0af9f9f3fc90"],
Cell[266542, 5126, 614, 15, 57, "Text",ExpressionUUID->"481ba1d6-dabf-43e6-8d5f-70b0976c5690"],
Cell[CellGroupData[{
Cell[267181, 5145, 2542, 64, 298, "Input",ExpressionUUID->"223fd26a-0710-479f-ba04-f8bea178e3be"],
Cell[269726, 5211, 1751, 42, 184, "Output",ExpressionUUID->"2e71808f-cff9-4c68-9e30-cc684e45461f"]
}, {2}]],
Cell[271489, 5256, 662, 16, 57, "Text",ExpressionUUID->"894dfcf5-be77-49ac-aa6e-e40818dc8ce4"],
Cell[272154, 5274, 1151, 27, 57, "Text",ExpressionUUID->"e4e7bc8e-c52c-46a7-8b82-3e809a425d9a"],
Cell[273308, 5303, 1001, 27, 26, "DisplayFormulaNumbered",ExpressionUUID->"a7adaa0a-148d-4ed8-b0db-5a10298261b3"],
Cell[274312, 5332, 239, 4, 34, "Text",ExpressionUUID->"64f15936-a69c-41c9-8ac6-bcf70e510a38"],
Cell[274554, 5338, 289, 5, 26, "DisplayFormulaNumbered",ExpressionUUID->"fa5cb32b-9ccf-4008-aa15-9171076e67ee"],
Cell[274846, 5345, 3601, 103, 149, "Text",ExpressionUUID->"540721a4-c2ad-4993-822a-f91eb29bcc8b"],
Cell[CellGroupData[{
Cell[278472, 5452, 6611, 170, 510, "Input",ExpressionUUID->"a392166e-42ba-42fb-b83d-119b9ef1a00f"],
Cell[285086, 5624, 3705, 80, 211, "Output",ExpressionUUID->"3bcd7035-6ac1-4680-ba68-edacb34d095c"]
}, {2}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[288837, 5710, 194, 2, 45, "Subsubsection",ExpressionUUID->"76609778-9f9f-436e-8bfe-1843167c32db",
 CellTags->"c:12"],
Cell[289034, 5714, 2754, 70, 106, "Text",ExpressionUUID->"9719fb0d-86ad-4321-9b2f-73bc0c373b25"],
Cell[291791, 5786, 1532, 33, 31, "DisplayFormulaNumbered",ExpressionUUID->"e178bad5-086d-4a68-87cf-f45a11babc1d"],
Cell[293326, 5821, 2963, 67, 135, "Text",ExpressionUUID->"2f2de24c-68ca-45d7-8278-45ac91c52242"],
Cell[296292, 5890, 850, 22, 70, "DisplayFormulaNumbered",ExpressionUUID->"07cc4c66-7b36-4f3b-9d8f-30aaa0c11bd0",
 CellTags->"changed unchanged"],
Cell[297145, 5914, 388, 10, 57, "Text",ExpressionUUID->"7b12c4b6-3434-410e-8270-bd01a2f30023"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[297582, 5930, 607, 17, 46, "Subsection",ExpressionUUID->"0ce205b3-f812-4401-be40-5248af7433e9",
 CellTags->"c:13"],
Cell[298192, 5949, 3020, 83, 126, "Text",ExpressionUUID->"b8b47e38-8036-444f-9592-60b3df9c63f3"],
Cell[CellGroupData[{
Cell[301237, 6036, 6037, 150, 513, "Input",ExpressionUUID->"844a75ba-6941-4312-86d2-7dc4ba2e26f6"],
Cell[307277, 6188, 2565, 63, 192, "Output",ExpressionUUID->"32d51a1e-e34e-4d36-b0b2-eb35aba89d1f"]
}, {2}]],
Cell[309854, 6254, 1841, 44, 80, "Text",ExpressionUUID->"4ab64029-516c-4041-b96b-ae24f7b2d822"],
Cell[CellGroupData[{
Cell[311720, 6302, 6641, 167, 554, "Input",ExpressionUUID->"703460b4-3edf-4a1d-b70a-454c1df678f2"],
Cell[318364, 6471, 2767, 67, 192, "Output",ExpressionUUID->"b2f52387-7ce5-4c8e-bae5-f227a422e438"]
}, {2}]],
Cell[321143, 6541, 1748, 47, 80, "Text",ExpressionUUID->"abe3cc6f-7d31-49ba-af84-99c6bbdcd9b5"],
Cell[322894, 6590, 554, 15, 54, "DisplayFormulaNumbered",ExpressionUUID->"ef577549-3985-4d7e-aa7e-04b17d14b1e6",
 CellTags->"changed unused"],
Cell[323451, 6607, 570, 13, 34, "Text",ExpressionUUID->"c64fcd02-c9d0-45f0-997b-5513848e9a2d"],
Cell[CellGroupData[{
Cell[324046, 6624, 6135, 151, 513, "Input",ExpressionUUID->"da6b44e6-973d-4a6e-97e4-7805f796eec1"],
Cell[330184, 6777, 2612, 64, 192, "Output",ExpressionUUID->"1d6514b3-0018-45f8-936d-0d918d67e6af"]
}, {2}]],
Cell[332808, 6844, 1633, 46, 80, "Text",ExpressionUUID->"39a6c105-e29d-4eaf-b782-5c6051d05494"],
Cell[334444, 6892, 654, 17, 54, "DisplayFormulaNumbered",ExpressionUUID->"3e6760e7-d3fc-4fa9-b6fc-0480300427af",
 CellTags->"used unchanged"],
Cell[335101, 6911, 2073, 56, 126, "Text",ExpressionUUID->"b79f452e-2088-4778-ae06-bcd877cadc11"],
Cell[337177, 6969, 2181, 61, 129, "Text",ExpressionUUID->"5c3a7c9a-67fa-4acd-a481-1bf114a30b0c"],
Cell[339361, 7032, 674, 18, 54, "DisplayFormulaNumbered",ExpressionUUID->"b46d505f-d553-4604-b8cc-8198095212d0",
 CellTags->"used unused"]
}, Open  ]],
Cell[CellGroupData[{
Cell[340072, 7055, 214, 3, 46, "Subsection",ExpressionUUID->"764d03aa-d1ff-456f-87fd-b1a671fa4aa3",
 CellTags->"c:14"],
Cell[340289, 7060, 177, 3, 34, "Text",ExpressionUUID->"55955480-48e8-4900-ac32-97795406fcb2"],
Cell[340469, 7065, 1729, 43, 78, "DisplayFormula",ExpressionUUID->"14a3a8de-9f0d-49ea-88aa-3cf5c01de72c"],
Cell[342201, 7110, 508, 10, 57, "Text",ExpressionUUID->"ab87ea26-e85c-4d20-8212-ec8f7527aefe"],
Cell[342712, 7122, 799, 17, 54, "DisplayFormulaNumbered",ExpressionUUID->"b172f3ef-ad2c-4417-881c-edd588fdce5e",
 CellTags->"changed used"],
Cell[343514, 7141, 521, 11, 57, "Text",ExpressionUUID->"8e21ee72-d52c-4c69-9033-5c89365a12db"],
Cell[344038, 7154, 627, 15, 38, "DisplayFormulaNumbered",ExpressionUUID->"c65167ab-33a6-4667-bafa-dc28528892f0",
 CellTags->"function 2"],
Cell[344668, 7171, 552, 15, 57, "Text",ExpressionUUID->"e1d756c3-2b45-43a5-ba92-b8536bf9538e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[345269, 7192, 405, 5, 81, "Section",ExpressionUUID->"54a76e33-2666-497d-93be-d90ea8342824",
 CellTags->"c:15"],
Cell[345677, 7199, 1213, 34, 57, "Text",ExpressionUUID->"64f25f3a-e19a-4f21-a5de-7381f436509f"],
Cell[346893, 7235, 1146, 29, 73, "DisplayFormulaNumbered",ExpressionUUID->"f396e5ed-5394-4a99-a33c-bac49ad035e0",
 CellTags->"compatibility"],
Cell[348042, 7266, 1172, 33, 80, "Text",ExpressionUUID->"87e34ae1-5230-4d5c-89b2-75fa9a146995"],
Cell[349217, 7301, 104298, 1717, 349, "DisplayFormulaNumbered",ExpressionUUID->"387c1289-2533-4444-96f6-0164cd740ded",
 CellTags->"venn compatibility"],
Cell[453518, 9020, 588, 12, 57, "Text",ExpressionUUID->"77bbf858-ceb5-44f2-bbda-b3caf3bf6892"],
Cell[454109, 9034, 353, 8, 57, "Text",ExpressionUUID->"8065283f-46f0-4b34-817d-9bd11d89e06b"],
Cell[454465, 9044, 1092, 28, 62, "DisplayFormulaNumbered",ExpressionUUID->"1ceee126-c88e-4089-8f07-1f01b65864af",
 CellTags->"function 2"],
Cell[455560, 9074, 1547, 46, 57, "Text",ExpressionUUID->"b5014d69-a720-4ed9-a585-bcd7f5ca92ce"],
Cell[457110, 9122, 1595, 30, 126, "Text",ExpressionUUID->"b5f92f6d-74b4-4a87-994b-8c65d66a5e27"],
Cell[458708, 9154, 795, 13, 57, "Text",ExpressionUUID->"472fbbd3-9113-4ef5-ae4e-c143a8a15f5c"],
Cell[CellGroupData[{
Cell[459528, 9171, 212, 2, 46, "Subsection",ExpressionUUID->"8f586212-a80b-4ae6-acdf-4c65bc3faf6a",
 CellTags->"c:16"],
Cell[459743, 9175, 803, 14, 80, "Text",ExpressionUUID->"753b23aa-49f5-432c-ac82-0b3df562f8e7"],
Cell[460549, 9191, 678, 17, 57, "Text",ExpressionUUID->"4d23a0c3-95bf-4933-b671-5211c606a846"],
Cell[461230, 9210, 1358, 38, 57, "Text",ExpressionUUID->"5a1a8a58-5edf-43bf-a38e-4a3049c2ee81"],
Cell[462591, 9250, 151184, 2486, 404, "DisplayFormulaNumbered",ExpressionUUID->"092546e6-2f11-41ff-b903-a80c69d104e0"],
Cell[613778, 11738, 366, 7, 57, "Text",ExpressionUUID->"007d9415-fc00-4e1a-81f2-5b905f0fd9d0"],
Cell[614147, 11747, 931, 15, 80, "Text",ExpressionUUID->"4ea539c5-77a2-47b4-93aa-ef80def244db"]
}, Open  ]],
Cell[CellGroupData[{
Cell[615115, 11767, 211, 2, 46, "Subsection",ExpressionUUID->"9ff139df-067c-4661-8eec-ff7de34ef08e",
 CellTags->"c:17"],
Cell[615329, 11771, 1362, 37, 80, "Text",ExpressionUUID->"5b0aad1b-c019-405b-a8d8-a44ff964e0c1"],
Cell[616694, 11810, 587, 14, 26, "DisplayFormulaNumbered",ExpressionUUID->"c12ab61c-4c3d-485f-9d99-9eaeef2d26fb"],
Cell[617284, 11826, 160, 3, 34, "Text",ExpressionUUID->"225b0e57-7f4c-48b7-8023-fd6570ebc925"],
Cell[617447, 11831, 620, 14, 26, "DisplayFormulaNumbered",ExpressionUUID->"2121243c-6ff7-425a-8099-867729b16fb9"],
Cell[618070, 11847, 1394, 39, 57, "Text",ExpressionUUID->"c27f217e-c97a-41d5-a28a-3d6632d4fb9e"],
Cell[619467, 11888, 668, 15, 26, "DisplayFormulaNumbered",ExpressionUUID->"e3dda194-e563-4381-a43a-5bf81a10b0c6"],
Cell[620138, 11905, 1179, 33, 80, "Text",ExpressionUUID->"d2bb000b-a795-47c5-94bf-9f07a219a6f5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[621354, 11943, 330, 4, 46, "Subsection",ExpressionUUID->"dcc9c7f1-0da3-421b-ae1d-f595aa40d65d",
 CellTags->"c:18"],
Cell[621687, 11949, 1380, 29, 126, "Text",ExpressionUUID->"137d5958-bc86-4133-b47a-953a3498258d"],
Cell[623070, 11980, 395, 8, 34, "Text",ExpressionUUID->"1eed2819-1334-44bb-b547-a023ac82b46f"],
Cell[623468, 11990, 1123, 33, 94, "DisplayFormulaNumbered",ExpressionUUID->"ed0a6a98-755b-4635-a107-3d406883b6ba"],
Cell[624594, 12025, 691, 15, 57, "Text",ExpressionUUID->"055ba495-af7c-41bb-ba95-57194f895ecd"],
Cell[625288, 12042, 713, 20, 49, "DisplayFormulaNumbered",ExpressionUUID->"7f76610b-aaf8-40e3-9357-8694c7c02a15"],
Cell[626004, 12064, 707, 19, 34, "Text",ExpressionUUID->"95dabae5-c903-4d68-8b0e-fdf6a1a8d838"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[626760, 12089, 462, 6, 81, "Section",ExpressionUUID->"04e46252-2160-48df-8b79-0ccdf3b8a243",
 CellTags->"c:19"],
Cell[CellGroupData[{
Cell[627247, 12099, 192, 2, 46, "Subsection",ExpressionUUID->"7f598674-2057-43ae-818d-1ab794affe7e",
 CellTags->"c:20"],
Cell[627442, 12103, 645, 12, 57, "Text",ExpressionUUID->"786abf4a-3c26-4bdd-aec4-a8e023ec042c"],
Cell[628090, 12117, 821, 23, 62, "DisplayFormulaNumbered",ExpressionUUID->"6630ab68-931d-441f-b77a-f614f7b0d767",
 CellTags->"up and down"],
Cell[628914, 12142, 1424, 31, 57, "Text",ExpressionUUID->"240e433b-a1f8-449a-aa03-7b0dcbcb2e7d"],
Cell[630341, 12175, 1060, 17, 57, "Text",ExpressionUUID->"749c1f78-bff0-4150-beaf-a1e7d3c4a0de"],
Cell[631404, 12194, 1217, 21, 57, "Text",ExpressionUUID->"30d464c7-c542-43ac-a396-71a2caaea9ae"],
Cell[632624, 12217, 1421, 33, 49, "DisplayFormulaNumbered",ExpressionUUID->"aeeb2aca-82fe-438b-8220-3bf17df8c86e",
 CellTags->"alices restaurant"],
Cell[634048, 12252, 351, 9, 34, "Text",ExpressionUUID->"71c935f3-3fa6-4f55-9381-33e026f37de1"],
Cell[634402, 12263, 665, 20, 49, "DisplayFormulaNumbered",ExpressionUUID->"315a8326-a603-4d37-9cb4-efe83b1083a2",
 CellTags->"alices wonder"],
Cell[635070, 12285, 689, 15, 57, "Text",ExpressionUUID->"091045ad-9b75-4974-9ae8-c835d7a5fd17"],
Cell[635762, 12302, 1392, 25, 126, "Text",ExpressionUUID->"cb7130ae-601d-43f7-b690-1522b3bca973"],
Cell[637157, 12329, 965, 27, 80, "Text",ExpressionUUID->"d8aa7f5c-370b-472d-b7ba-08c4cbb3652d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[638159, 12361, 369, 5, 34, "Subsection",ExpressionUUID->"f67cbc28-dbdf-4dd6-8067-bd13b4893f57",
 CellTags->"c:21"],
Cell[638531, 12368, 524, 9, 57, "Text",ExpressionUUID->"5f033d69-b869-4785-bd66-cc954997ef6e"],
Cell[639058, 12379, 1093, 25, 49, "DisplayFormulaNumbered",ExpressionUUID->"b6783ad5-3e47-49a4-941b-e73c61582ed4"],
Cell[640154, 12406, 813, 23, 57, "Text",ExpressionUUID->"077042ee-9edd-4d70-87e2-2ea29a43bab0"],
Cell[640970, 12431, 161, 3, 34, "Text",ExpressionUUID->"24a0b6e9-1788-4275-892f-6e0b3df41d77"],
Cell[641134, 12436, 1059, 25, 49, "DisplayFormulaNumbered",ExpressionUUID->"7c9a1c9c-4bf3-4dcb-abba-e64f59b95bf0",
 CellTags->"read then broadcast"],
Cell[642196, 12463, 1529, 37, 126, "Text",ExpressionUUID->"7757bea3-5c80-410d-adc5-d584d5bad781"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[643774, 12506, 168, 2, 69, "Section",ExpressionUUID->"734d6623-967f-43a9-bb34-d63972eca98c"],
Cell[643945, 12510, 454, 8, 103, "Text",ExpressionUUID->"4b503b71-320d-4e91-bfa4-fa20761b49c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[644436, 12523, 294, 4, 69, "Section",ExpressionUUID->"660e2861-7880-47bd-b16e-8c65141167bc",
 CellTags->"c:22"],
Cell[644733, 12529, 572, 15, 34, "Text",ExpressionUUID->"f2d167c2-9166-444f-a2d0-ca43b9fd75e1"],
Cell[645308, 12546, 7564, 183, 443, "Input",ExpressionUUID->"4753753e-df1d-401b-9327-76306322b108"],
Cell[CellGroupData[{
Cell[652897, 12733, 199, 3, 40, "Input",ExpressionUUID->"dec33108-1101-428e-8d91-c75d4a59b503"],
Cell[653099, 12738, 602, 13, 23, "Message",ExpressionUUID->"166ad348-83cb-4d57-9063-9d7aaf9807a9"],
Cell[653704, 12753, 408, 7, 40, "Output",ExpressionUUID->"cea7736a-bf8d-4494-9793-5c64002be11d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[654149, 12765, 250, 4, 40, "Input",ExpressionUUID->"7f3c3d94-b1f0-44db-bd6b-7711a5ae0415"],
Cell[654402, 12771, 233, 4, 40, "Output",ExpressionUUID->"499e5c59-7896-4f56-9bc2-4dcbeb5333ca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[654672, 12780, 201, 3, 40, "Input",ExpressionUUID->"213a752c-d0de-4a98-bd11-a8b999b46e2d"],
Cell[654876, 12785, 235, 4, 40, "Output",ExpressionUUID->"ede5bf1d-8847-4e3f-a2c4-75e5d01fbaf9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[655148, 12794, 204, 3, 40, "Input",ExpressionUUID->"a4872866-469a-4e6e-a997-29e0938f324f"],
Cell[655355, 12799, 235, 4, 40, "Output",ExpressionUUID->"0428256c-eb88-4058-a04a-ea9b6c1f0eee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[655627, 12808, 208, 3, 40, "Input",ExpressionUUID->"f685adfb-141b-488e-b18d-a095a3290e72"],
Cell[655838, 12813, 240, 4, 40, "Output",ExpressionUUID->"58462498-2d64-4679-a494-0f490c58f69e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[656115, 12822, 279, 5, 40, "Input",ExpressionUUID->"9f08320c-ae9b-4f08-b9ea-f8a1cc695fe5"],
Cell[656397, 12829, 392, 7, 40, "Output",ExpressionUUID->"ebb658f7-87fc-48c9-aaa3-7cd3d7010078"]
}, Open  ]],
Cell[CellGroupData[{
Cell[656826, 12841, 284, 5, 40, "Input",ExpressionUUID->"80f2ec40-3190-43b7-be7a-9e71d369e375"],
Cell[657113, 12848, 395, 7, 40, "Output",ExpressionUUID->"bea2f73b-4973-4a94-8f3f-18ece81e3cdc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[657545, 12860, 294, 5, 40, "Input",ExpressionUUID->"60699055-fa35-4fc2-9866-865c9d85461d"],
Cell[657842, 12867, 346, 6, 40, "Output",ExpressionUUID->"c64a0bdc-c915-4447-8eaa-87e3dbc9936c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[658225, 12878, 292, 5, 40, "Input",ExpressionUUID->"a65a2554-373f-4570-8883-bdab15f7573e"],
Cell[658520, 12885, 377, 6, 40, "Output",ExpressionUUID->"daa1b9f0-21f5-42ed-a1b4-c328eb7b06d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[658934, 12896, 305, 5, 40, "Input",ExpressionUUID->"e4b1e441-5399-4426-bba2-feb80b3fd735"],
Cell[659242, 12903, 368, 7, 40, "Output",ExpressionUUID->"d533dc2a-b370-4a8f-9b2b-ad40beef190d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[659647, 12915, 363, 6, 40, "Input",ExpressionUUID->"39bf84dd-ddb8-47ce-ad18-34c99a110df6"],
Cell[660013, 12923, 422, 8, 40, "Output",ExpressionUUID->"3805e65e-c9bd-4094-9614-97b0713ec578"]
}, Open  ]],
Cell[CellGroupData[{
Cell[660472, 12936, 376, 7, 40, "Input",ExpressionUUID->"5755cb8a-6b81-493e-8752-2d64a2b086a6"],
Cell[660851, 12945, 374, 7, 40, "Output",ExpressionUUID->"753fc6b4-f3e3-4e02-a448-ae63b0ae8995"]
}, Open  ]],
Cell[CellGroupData[{
Cell[661262, 12957, 381, 7, 40, "Input",ExpressionUUID->"cbd6f706-9288-4e98-97e1-98ce5429933e"],
Cell[661646, 12966, 375, 7, 40, "Output",ExpressionUUID->"5e139df3-f1e0-4e59-ae30-7eb25736aa2a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[662058, 12978, 259, 4, 40, "Input",ExpressionUUID->"51453fc6-151d-41df-8c91-a6eb3843e1b3"],
Cell[662320, 12984, 603, 13, 23, "Message",ExpressionUUID->"eab294f4-8c02-4553-bcbf-e5857004808c"],
Cell[662926, 12999, 435, 7, 40, "Output",ExpressionUUID->"ca83482f-1634-46e9-b202-1765c29ebe89"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

