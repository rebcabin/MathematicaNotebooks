(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    376852,       9779]
NotebookOptionsPosition[    294991,       8346]
NotebookOutlinePosition[    341415,       9202]
CellTagsIndexPosition[    341372,       9199]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Gemini II", "Title",
 CellChangeTimes->{{3.9134059554869957`*^9, 3.9134059620488033`*^9}},
 FontWeight->"Bold",ExpressionUUID->"16778456-057a-439b-ac55-77ff6b95996b"],

Cell["\<\
This is an executable, simplified version of the G2 APL2 software \
specifications. Its purpose is to machine-check the prose in \
https://gsitech.atlassian.net/wiki/spaces/AR/pages/2091352073/APL+2.0+\
Language+V1.3. Clarity and accuracy are goals. Efficiency is not a goal.\
\>", "Text",
 CellChangeTimes->{{3.913454463637103*^9, 3.9134545134570007`*^9}, {
  3.913459930684636*^9, 3.913459931600078*^9}, {3.9134601035801973`*^9, 
  3.913460127205694*^9}, {3.913640796126814*^9, 3.913640810735035*^9}, {
  3.9137477208901043`*^9, 3.913747747387837*^9}, {3.913750380009451*^9, 
  3.9137503964040318`*^9}},ExpressionUUID->"bb44a52a-3340-48bd-8613-\
f25291fbd940"],

Cell[CellGroupData[{

Cell["Preliminaries", "Section",
 CellChangeTimes->{{3.913466177509832*^9, 3.9134662007216883`*^9}},
 FontWeight->"Bold",ExpressionUUID->"46aa0c78-f109-4a03-9859-cba679dbb122"],

Cell[TextData[{
 "Almost all the analysis below pertains per G2C, aka ",
 StyleBox["core",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.913747710908846*^9, 3.9137477140754347`*^9}, {
  3.9137477530219727`*^9, 
  3.913747785380069*^9}},ExpressionUUID->"fcaa720b-2379-4cda-b331-\
877ab0e15be3"],

Cell[TextData[{
 "We follow 0-based indexing in function calls with single square brackets, \
and 1-based indexing in ",
 StyleBox["Part", "Input"],
 " expressions with double square brackets. For example, ",
 StyleBox["RN[0]", "Input"],
 " is the same as ",
 StyleBox["RN[[1]]", "Input"],
 ". Function-call notation is preferred to reduce the risk of off-by-one \
errors."
}], "Text",
 CellChangeTimes->{{3.913750244005362*^9, 
  3.913750359297455*^9}},ExpressionUUID->"9f6944e9-2232-4b51-a117-\
4fcd0de51546"],

Cell[BoxData[
 RowBox[{"<<", "Utilities`CleanSlate`"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.549536915366044*^9, 3.5495369233915033`*^9}},
 CellLabel->
  "In[208]:=",ExpressionUUID->"596e0ac3-24aa-4a16-9243-f7df7cc9153d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Jacquard.m (closed up)",
 FontWeight->"Bold"]], "Section",
 CellChangeTimes->{{3.9112519323520527`*^9, 3.911251934588236*^9}, {
  3.9137520912113857`*^9, 
  3.913752094333016*^9}},ExpressionUUID->"275fc064-9f7b-4419-94fc-\
12b45d800c9d"],

Cell[TextData[{
 "If you like, move the following package onto your ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " ",
 StyleBox["$Path",
  FontSlant->"Italic"],
 ". The following unevaluatable cell shows where I put it on my system. I \
include a copy of this package here so anyone can just evaluate this notebook \
without installing packages. We don\[CloseCurlyQuote]t explain this code, \
here, we just use it. Close up this chapter so you don\[CloseCurlyQuote]t \
have to look at all this stuff."
}], "Text",
 CellChangeTimes->{{3.841245538638632*^9, 3.841245647324567*^9}, {
  3.84139870846646*^9, 3.8413987116890793`*^9}, {3.841749441285334*^9, 
  3.841749475793593*^9}, {3.911251785926512*^9, 3.911251809937158*^9}, {
  3.911254213855645*^9, 3.9112543003752117`*^9}, {3.911254456176429*^9, 
  3.9112544866868763`*^9}, {3.912369537601478*^9, 
  3.912369557306286*^9}},ExpressionUUID->"33053ebb-4258-47ab-8886-\
21fee119d1a9"],

Cell[BoxData[
 RowBox[{"<<", "\"\<~/Dropbox/MMA/Packages/Jacquard.m\>\""}]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.629505394618649*^9, 3.6295054078237057`*^9}, {
   3.645653564684004*^9, 3.645653570450636*^9}, {3.841153579311688*^9, 
   3.841153624246653*^9}, 
   3.911297436702623*^9},ExpressionUUID->"35a3dfce-032c-48b6-9c2f-\
24649b1f54d2"],

Cell[CellGroupData[{

Cell["Jacquard and JaqSON", "Subsection",
 FontWeight->"Bold",ExpressionUUID->"00da3566-785a-4257-a2ce-f6167477458f"],

Cell["Serialized expressions for remote evaluation.", "Text",ExpressionUUID->"603ef7d2-68da-433f-be48-b1eb2dbb602e"],

Cell["\<\
Brian Beckman
Februrary 2012
with ideas from Avi Bar-Zeev, Erik Meijer, and Savas Parastiditis\
\>", "Text",ExpressionUUID->"b906b5b9-ca12-4bc6-b841-7ab7a37a5a5f"],

Cell["\<\
Copyright (c) 2012, Microsoft Corporation

   Licensed under the Apache License, Version 2.0 (the \"License\");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an \"AS IS\" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.\
\>", "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"a8734c96-c275-46db-a49c-f02d5fb57c5a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Public Interface", "Subsection",
 FontWeight->"Bold",ExpressionUUID->"0c2def3a-16a3-47d2-aacc-e474def23be1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Mathematica", " ", "Package"}], " ", "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Created", " ", "by", " ", "the", " ", "Wolfram", " ", "Workbench", " ", 
     "Mar", " ", "8"}], ",", " ", "2012"}], " ", "*)"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"BeginPackage", "[", 
    RowBox[{"\"\<Jacquard`\>\"", ",", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<JLink`\>\"", ",", " ", "\"\<MiniData`\>\""}], "}"}]}], 
    "]"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"BeginPackage", "[", 
    RowBox[{"\"\<Jacquard`\>\"", ",", " ", 
     RowBox[{"{", "\"\<JLink`\>\"", "}"}]}], "]"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Exported", " ", "symbols", " ", "added", " ", "here", " ", "with", " ", 
     RowBox[{"SymbolName", "::", "usage"}]}], " ", "*)"}], " ", "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"gridExpression", "::", "usage"}], " ", "=", " ", 
     "\"\<Displays expressions in a hierarchical grid.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"gridCaptive", "::", "usage"}], " ", "=", " ", 
     "\"\<Displays captive expressions in a hierarchical grid.\>\""}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"gridCaptive2", "::", "usage"}], " ", "=", " ", 
     "\"\<Displays captive expressions in a hierarchical grid.\>\""}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"gridRules", "::", "usage"}], " ", "=", " ", 
     "\"\<Displays Lists of Rules and Lists of Lists of Rules in a \
hierarchical grid.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"traceView2", "::", "usage"}], " ", "=", " ", 
     "\"\<Presents Cascading OpenerViews of an expression trace.\>\""}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"traceView4", "::", "usage"}], " ", "=", " ", 
     "\"\<Presents interactive, button-driven view of an \
expression-evaluation trace.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"traceView5", "::", "usage"}], " ", "=", " ", 
     "\"\<Presents an abbreviated button-driven view of an \
expression-evaluation trace.\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SymbolQ", "::", "usage"}], " ", "=", " ", 
     "\"\<Tests whether its argument is a Symbol\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"KvpQ", "::", "usage"}], " ", "=", " ", 
     "\"\<Tests whether its argument is a KVPair or KVP, that is, a list of \
two values, the first of which is a string or symbol Key.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"KvpsQ", "::", "usage"}], " ", "=", " ", 
     "\"\<Tests whether its argument is an association list: that is, a list \
of key-value pairs where no key appears more than once.\>\""}], ";"}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"RulesQ", "::", "usage"}], " ", "=", " ", 
     "\"\<Tests whether its argument is a list of Rules, which is the \
Import/Export preferred representation for key-value pairs (the analog to \
'lookup' for rules is just 'Replace.')\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"RulessQ", "::", "usage"}], " ", "=", " ", 
     "\"\<Tests whether its argument is a list of list of Rules, which is the \
preferred representation for argument lists.\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Args", "::", "usage"}], " ", "=", " ", 
     "\"\<Produces all the arguments of a composite expression; counterpoint \
to built-in Head.\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"rulesFromExpression", "::", "usage"}], " ", "=", " ", 
     "\"\<Documentation TODO\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"rulesFromHeldExpression", "::", "usage"}], " ", "=", " ", 
     "\"\<Documentation TODO\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"rulesFromEvaluatableHeldExpression", "::", "usage"}], " ", "=", 
     " ", "\"\<Documentation TODO\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"expressionFromRules", "::", "usage"}], " ", "=", " ", 
     "\"\<Documentation TODO\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"stringifiedExpressionFromRules", "::", "usage"}], " ", "=", 
     " ", "\"\<Documentation TODO\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"jsonStringFromExpression", "::", "usage"}], " ", "=", " ", 
     "\"\<jsonStringFromExpression[expr]\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"jsonStringFromHeldExpression", "::", "usage"}], " ", "=", " ", 
     "\"\<jsonStringFromHeldExpression[expr]\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"expressionFromJsonString", "::", "usage"}], " ", "=", " ", 
     "\"\<expressionFromJsonString[str]\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"stringifiedExpressionFromJsonString", "::", "usage"}], " ", "=",
      " ", "\"\<stringifiedExpressionFromJsonString[str]\>\""}], ";"}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"jacquardPostRules", "::", "usage"}], " ", "=", " ", 
     "\"\<jacquardPostRules[rules, importer, url]\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"jacquardPostExpression", "::", "usage"}], " ", "=", " ", 
     "\"\<jacquardPostRules[rules, importer, url]\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"jacquardEvalExpression", "::", "usage"}], " ", "=", " ", 
     "\"\<jacquardPostExpression[expr, importer, url]\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"jacquardEvalHeldExpression", "::", "usage"}], " ", "=", " ", 
     "\"\<jacquardEvalHeldExpression[expr, importer, url]\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"jacquardEvalEvaluatableHeldExpression", "::", "usage"}], " ", 
     "=", " ", "\"\<jacquardEvalHeldExpression[expr, importer, url]\>\""}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"jacquardStringifiedEvalHeldExpression", "::", "usage"}], " ", 
     "=", " ", 
     "\"\<jacquardStringifiedEvalHeldExpression[expr, importer, url]\>\""}], 
    ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"During", " ", "Development"}], ",", " ", 
     RowBox[{"keep", " ", "these", " ", "symbols", " ", 
      RowBox[{"public", ".", "  ", "Pick"}], " ", "which", " ", "ones", "\n", 
      "   ", "to", " ", "make", " ", "permanently", " ", "public", " ", 
      RowBox[{"later", "."}]}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"insertCommaSeparators", "::", "usage"}], " ", "=", " ", 
     "\"\<Temporary.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"number2", "::", "usage"}], " ", "=", " ", 
     "\"\<Temporary.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"string2", "::", "usage"}], " ", "=", " ", 
     "\"\<Temporary.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"symbol2", "::", "usage"}], " ", "=", " ", 
     "\"\<Temporary.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"dpyCaptive2", "::", "usage"}], " ", "=", " ", 
     "\"\<Temporary.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"prefixes", "::", "usage"}], " ", "=", " ", 
     "\"\<Temporary.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"postfixes", "::", "usage"}], " ", "=", " ", 
     "\"\<Temporary.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"splits", "::", "usage"}], " ", "=", " ", "\"\<Temporary.\>\""}],
     ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"flat1", "::", "usage"}], " ", "=", " ", "\"\<Temporary.\>\""}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Pluck", "::", "usage"}], " ", "=", " ", 
     "\"\<Pluck[n] is a Function that produces the n-th Part of its \
input.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SelectMany", "::", "usage"}], " ", "=", " ", 
     "\"\<SelectMany[list, listFromElement]\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Zip", "::", "usage"}], " ", "=", " ", 
     "\"\<Zip[list1, list2, itemFromPair]\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ZipMany", "::", "usage"}], " ", "=", " ", 
     "\"\<ZipMany[list1, list2, listFromPair]\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"captive", "::", "usage"}], " ", "=", " ", 
     "\"\<Temporary.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"captive2", "::", "usage"}], " ", "=", " ", 
     "\"\<Temporary.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"RealQ", "::", "usage"}], " ", "=", " ", "\"\<Temporary.\>\""}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ComplexQ", "::", "usage"}], " ", "=", " ", 
     "\"\<Temporary.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"RationalQ", "::", "usage"}], " ", "=", " ", 
     "\"\<Temporary.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"numericSubtype", "::", "usage"}], " ", "=", " ", 
     "\"\<Temporary.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"pairsQ", "::", "usage"}], " ", "=", " ", "\"\<Temporary.\>\""}],
     ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"keys", "::", "usage"}], " ", "=", " ", "\"\<Temporary.\>\""}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"values", "::", "usage"}], " ", "=", " ", "\"\<Temporary.\>\""}],
     ";"}]}]}]], "Code",
 CellLabel->
  "In[209]:=",ExpressionUUID->"f209d8cf-1294-47ce-be5e-0c5c5ab9bf40"],

Cell[BoxData["\<\"Jacquard`\"\>"], "Output",
 CellChangeTimes->{{3.911252420463434*^9, 3.9112524215062847`*^9}, {
   3.91125438105021*^9, 3.911254381392432*^9}, {3.911254645608398*^9, 
   3.911254645916486*^9}, {3.911297451317709*^9, 3.911297451557879*^9}, {
   3.912368778474472*^9, 3.9123687786643753`*^9}, {3.9123699328282747`*^9, 
   3.912369955036199*^9}, 3.912543581317498*^9, 3.912545374350491*^9, {
   3.913148213086172*^9, 3.913148213292471*^9}, 3.9137514316001577`*^9, {
   3.9137521125958757`*^9, 3.913752112798903*^9}, {3.913753546482997*^9, 
   3.913753546672599*^9}},
 CellLabel->
  "Out[209]=",ExpressionUUID->"749d90bf-1a16-41a4-8a85-15d858f7af77"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Implementation", " ", "of", " ", "the", " ", "package"}], " ", 
   "*)"}]}]}], "Code",
 CellLabel->
  "In[260]:=",ExpressionUUID->"1a9d9167-e341-436b-b203-3b691ecfd203"],

Cell[BoxData["\<\"Jacquard`Private`\"\>"], "Output",
 CellChangeTimes->{{3.9112524204723883`*^9, 3.9112524215094852`*^9}, {
   3.911254381065897*^9, 3.9112543813949327`*^9}, {3.911254645615882*^9, 
   3.911254645923902*^9}, {3.9112974513282413`*^9, 3.911297451568139*^9}, {
   3.912368778476959*^9, 3.912368778669245*^9}, {3.9123699328305683`*^9, 
   3.912369955042194*^9}, 3.91254358131993*^9, 3.912545374352553*^9, {
   3.91314821309627*^9, 3.9131482132986193`*^9}, 3.913751431606331*^9, {
   3.913752112607782*^9, 3.913752112805262*^9}, {3.9137535464925833`*^9, 
   3.913753546679677*^9}},
 CellLabel->
  "Out[260]=",ExpressionUUID->"d6e70a92-e5ec-4d9e-8664-49e7f8cd2232"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualization and Debugging Definitions", "Subsection",
 FontWeight->"Bold",ExpressionUUID->"8dc42121-ae75-4d2a-ba62-a4f41b979400"],

Cell[CellGroupData[{

Cell["gridRules[ rules ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"565a04b9-d653-467e-82c5-2f795435f8d6"],

Cell["\<\
Display rules generated from expressions and round-tripped through JSON. \
Update to handle Rule-Delayed.\
\>", "Text",ExpressionUUID->"6fe83b28-0392-48ff-a40d-e5b36626d66d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"gridRules", ",", "fopts"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{
    "allAreRulesQ", ",", "noneAreAtomsQ", ",", "noneAreAtomsOrListsQ"}], 
    "]"}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "A", " ", "\"\<HoldAll\>\"", " ", "version", " ", "of", " ", "the", " ", 
     "following"}], ",", " ", 
    RowBox[{"with", " ", "\"\<Unevaluated\>\"", " ", "everywhere"}], ",", " ", 
    RowBox[{"may", " ", "be", " ", 
     RowBox[{"required", "."}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"noneAreAtomsQ", "[", "candidates_List", "]"}], ":=", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{"AtomQ", "@", "#"}], "]"}], "&"}], "/@", "candidates"}], 
     ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"noneAreAtomsOrListsQ", "[", "candidates_List", "]"}], ":=", 
  RowBox[{"And", "@@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Not", "[", 
        RowBox[{
         RowBox[{"AtomQ", "@", "#"}], "||", 
         RowBox[{"ListQ", "@", "#"}]}], "]"}], ")"}], "&"}], "/@", 
     "candidates"}], ")"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"allAreRulesQ", "[", "candidates_List", "]"}], ":=", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"h", "=", 
           RowBox[{"Head", "@", "#"}]}], "}"}], ",", 
         RowBox[{
          RowBox[{"h", "===", "Rule"}], "||", 
          RowBox[{"h", "===", "RuleDelayed"}]}]}], "]"}], "&"}], "/@", 
      "candidates"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"fopts", "[", 
    RowBox[{"fcolor_", ",", "bcolor_"}], "]"}], ":=", 
   RowBox[{"Sequence", "[", 
    RowBox[{
     RowBox[{"Frame", " ", "->", " ", "All"}], ",", 
     RowBox[{"Alignment", " ", "->", " ", "Left"}], ",", 
     RowBox[{"FrameStyle", " ", "->", " ", "fcolor"}], ",", "\n", 
     RowBox[{"Background", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"LightOrange", ",", " ", 
         RowBox[{"{", "bcolor", "}"}]}], "}"}], "}"}]}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gridRules", "[", 
     RowBox[{"Rule", "[", 
      RowBox[{"key_", ",", " ", "val_"}], "]"}], "]"}], ":=", "\n", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"gridRules", "@", "key"}], ",", "Bold", ",", "Black"}], 
          "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"gridRules", " ", "@", " ", "val"}], ",", "Bold", ",", " ",
            "Blue"}], "]"}]}], "}"}], "}"}], ",", "\n", 
      RowBox[{"fopts", "[", 
       RowBox[{"Blue", ",", "LightYellow"}], "]"}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gridRules", "[", 
     RowBox[{"RuleDelayed", "[", 
      RowBox[{"key_", ",", " ", "val_"}], "]"}], "]"}], ":=", "\n", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"gridRules", "@", "key"}], ",", "Bold", ",", "Black"}], 
          "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"gridRules", " ", "@", " ", "val"}], ",", "Bold", ",", " ",
            "Red"}], "]"}]}], "}"}], "}"}], ",", "\n", 
      RowBox[{"fopts", "[", 
       RowBox[{"Red", ",", "LightYellow"}], "]"}]}], "]"}]}], ";"}], "\n", 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Put", " ", "lists", " ", "of", " ", "non"}], "-", 
     RowBox[{
     "atoms", " ", "vertically", " ", "and", " ", "joinGrids", " ", "them", 
      " ", "up"}]}], ",", " ", 
    RowBox[{"removing", " ", "one", " ", "level", " ", "of", " ", 
     RowBox[{"nesting", "."}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gridRules", "[", 
     RowBox[{"exprs_List", "?", "noneAreAtomsOrListsQ"}], "]"}], ":=", "\n", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"joinGrids", "@", 
        RowBox[{"Transpose", "@", 
         RowBox[{"{", 
          RowBox[{"gridRules", " ", "/@", " ", "exprs"}], "}"}]}]}], ")"}], 
      ",", "\n", 
      RowBox[{"Frame", "->", "All"}], ",", 
      RowBox[{"FrameStyle", "->", 
       RowBox[{"Darker", "[", "Green", "]"}]}], ",", 
      RowBox[{"Alignment", "->", "Left"}], ",", 
      RowBox[{"Background", "->", "LightGreen"}]}], "]"}]}], ";"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Put", " ", "other", " ", "lists", " ", "vertically", " ", "but", " ", 
    RowBox[{"DON", "'"}], "T", " ", "joinGrids", " ", "them", " ", 
    RowBox[{"up", "."}]}], " ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gridRules", "[", "exprs_List", "]"}], ":=", "\n", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Transpose", "@", 
        RowBox[{"{", 
         RowBox[{"gridRules", " ", "/@", " ", "exprs"}], "}"}]}], ")"}], ",", 
      "\n", 
      RowBox[{"Frame", "->", "All"}], ",", 
      RowBox[{"FrameStyle", "->", 
       RowBox[{"Darker", "[", "Green", "]"}]}], ",", 
      RowBox[{"Alignment", "->", "Left"}], ",", 
      RowBox[{"Background", "->", "LightGreen"}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gridRules", "[", 
     RowBox[{"h_", "[", "parts___", "]"}], "]"}], ":=", "\n", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"gridRules", "@", "h"}], ",", "Bold", ",", " ", 
           RowBox[{"Darker", "[", "Purple", "]"}]}], "]"}], "}"}], "~", 
        "Join", "~", 
        RowBox[{"(", 
         RowBox[{"gridRules", " ", "/@", " ", 
          RowBox[{"{", "parts", "}"}]}], ")"}]}], "}"}], ",", "\n", 
      RowBox[{"fopts", "[", 
       RowBox[{"Black", ",", "LightGreen"}], "]"}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gridRules", "[", 
     RowBox[{"any_", "?", "StringQ"}], "]"}], ":=", 
    RowBox[{"Style", "[", 
     RowBox[{
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", "any", "}"}], "}"}], ",", 
        RowBox[{"Alignment", "->", "Left"}]}], "]"}], ",", "Bold", ",", 
      RowBox[{"Darker", "[", "Red", "]"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gridRules", "[", 
     RowBox[{"any_", "?", "AtomQ"}], "]"}], ":=", 
    RowBox[{"Style", "[", 
     RowBox[{
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", "any", "}"}], "}"}], ",", 
        RowBox[{"Alignment", "->", "Left"}]}], "]"}], ",", "Bold"}], "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gridRules", "[", "any_", "]"}], ":=", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", "any", "}"}], "}"}], ",", 
      RowBox[{"Alignment", "->", "Left"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "joinGrids", "]"}], ";"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Arbitrarily", " ", "choose", " ", "the", " ", "first", " ", "of", " ", 
     "multiple", " ", "option", " ", "tails", " ", "z1"}], ",", " ", "z2", 
    ",", " ", 
    RowBox[{"...", " ", "."}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"joinGrids", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", "xs__", "}"}], ",", "z1___"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", "ys__", "}"}], ",", "z2___"}], "]"}], "}"}]}], "}"}], 
    "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "ys"}], "}"}], ",", "z1"}], "]"}], "}"}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"joinGrids", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", "xs__", "}"}], ",", "z1___"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", "ys__", "}"}], ",", "z2___"}], "]"}], "}"}], ",", " ", 
      "k__"}], "}"}], "]"}], ":=", 
   RowBox[{"joinGrids", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xs", ",", "ys"}], "}"}], ",", "z1"}], "]"}], "}"}], ",", 
      "k"}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"joinGrids", "[", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Grid", "[", "xs___", "]"}], "}"}], "}"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"Grid", "[", "xs", "]"}], "}"}], "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"joinGrids", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Grid", "[", 
          RowBox[{
           RowBox[{"{", "xs__", "}"}], ",", "z1___"}], "]"}], ",", 
         "sty1___"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Grid", "[", 
          RowBox[{
           RowBox[{"{", "ys__", "}"}], ",", "z2___"}], "]"}], ",", 
         "sty2___"}], "]"}], "}"}]}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xs", ",", "ys"}], "}"}], ",", "z1"}], "]"}], ",", "sty1"}],
       "]"}], "}"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"joinGrids", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", "xs__", "}"}], ",", "z1___"}], "]"}], ",", 
          "sty1___"}], "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", "ys__", "}"}], ",", "z2___"}], "]"}], ",", 
          "sty2___"}], "]"}], "}"}], ",", " ", "k__"}], "}"}], "]"}], ":=", 
    RowBox[{"joinGrids", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"xs", ",", "ys"}], "}"}], ",", "z1"}], "]"}], ",", 
          "sty1"}], "]"}], "}"}], ",", "k"}], "}"}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"joinGrids", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Grid", "[", 
          RowBox[{
           RowBox[{"{", "xs__", "}"}], ",", "z1___"}], "]"}], ",", 
         "sty1___"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", "ys__", "}"}], ",", "z2___"}], "]"}], "}"}]}], "}"}], 
    "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xs", ",", "ys"}], "}"}], ",", "z1"}], "]"}], ",", "sty1"}],
       "]"}], "}"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"joinGrids", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", "xs__", "}"}], ",", "z1___"}], "]"}], ",", 
          "sty1___"}], "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Grid", "[", 
         RowBox[{
          RowBox[{"{", "ys__", "}"}], ",", "z2___"}], "]"}], "}"}], ",", " ", 
       "k__"}], "}"}], "]"}], ":=", 
    RowBox[{"joinGrids", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"xs", ",", "ys"}], "}"}], ",", "z1"}], "]"}], ",", 
          "sty1"}], "]"}], "}"}], ",", "k"}], "}"}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"joinGrids", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", "xs__", "}"}], ",", "z1___"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Grid", "[", 
          RowBox[{
           RowBox[{"{", "ys__", "}"}], ",", "z2___"}], "]"}], ",", 
         "sty2___"}], "]"}], "}"}]}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xs", ",", "ys"}], "}"}], ",", "z1"}], "]"}], ",", "sty2"}],
       "]"}], "}"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"joinGrids", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Grid", "[", 
         RowBox[{
          RowBox[{"{", "xs__", "}"}], ",", "z1___"}], "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", "ys__", "}"}], ",", "z2___"}], "]"}], ",", 
          "sty2___"}], "]"}], "}"}], ",", " ", "k__"}], "}"}], "]"}], ":=", 
    RowBox[{"joinGrids", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"xs", ",", "ys"}], "}"}], ",", "z1"}], "]"}], ",", 
          "sty2"}], "]"}], "}"}], ",", "k"}], "}"}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"joinGrids", "[", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Grid", "[", "xs___", "]"}], ",", "sty___"}], "]"}], "}"}], 
      "}"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Grid", "[", "xs", "]"}], ",", "sty"}], "]"}], "}"}], "}"}]}],
    ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"joinGrids", "[", 
    RowBox[{"{", "}"}], "]"}], ":=", 
   RowBox[{"{", "}"}]}], ";"}]}], "Code",
 CellLabel->
  "In[261]:=",ExpressionUUID->"92ea27d1-23fd-4cfc-a4f6-88a9c13a37c7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Private Display (dpy) Definitions", "Subsection",
 FontWeight->"Bold",ExpressionUUID->"6c904ca5-ebdf-4c97-b74d-88daeb2d5bf2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dpyNullary", "[", "ex_", "]"}], " ", ":=", "\n", "  ", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"ex", ",", " ", "\"\<\>\""}], "}"}], "}"}], ",", "\n", "   ", 
     RowBox[{"Frame", "      ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"All", ",", "False"}], "}"}]}], ",", "\n", "   ", 
     RowBox[{"Alignment", "  ", "->", " ", "Left"}], ",", "\n", "   ", 
     RowBox[{"Background", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"LightOrange", ",", 
         RowBox[{"{", "LightYellow", "}"}]}], "}"}], "}"}]}]}], "]"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[287]:=",ExpressionUUID->"1d62defa-6659-41c5-8e12-508f744a34d8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dpyMultiary", "[", 
    RowBox[{"key_", ",", " ", "vals_"}], "]"}], " ", ":=", "\n", "   ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c", " ", "=", " ", 
       RowBox[{"Length", " ", "@", " ", "vals"}]}], "}"}], ",", "\n", "    ", 
     
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "\n", "      ", 
        RowBox[{
         RowBox[{"spans", " ", "=", " ", 
          RowBox[{"Table", "[", 
           RowBox[{"\"\<\>\"", ",", " ", 
            RowBox[{"{", "c", "}"}]}], "]"}]}], ",", "\n", "      ", 
         RowBox[{"slot", "  ", "=", " ", 
          RowBox[{"Floor", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", "c"}], ")"}], "/", "2"}], "]"}]}]}], "}"}], 
       ",", "\n", "     ", 
       RowBox[{
        RowBox[{
         RowBox[{"spans", "[", 
          RowBox[{"[", "slot", "]"}], "]"}], " ", "=", " ", "key"}], ";", 
        "\n", "     ", 
        RowBox[{"Grid", "[", 
         RowBox[{
          RowBox[{"MapThread", "[", 
           RowBox[{"List", ",", 
            RowBox[{"{", 
             RowBox[{"spans", ",", " ", "vals"}], "}"}]}], "]"}], ",", "\n", 
          "       ", 
          RowBox[{"Frame", "      ", "->", " ", 
           RowBox[{"{", 
            RowBox[{"All", ",", "False"}], "}"}]}], ",", "\n", "       ", 
          RowBox[{"Alignment", "  ", "->", " ", "Left"}], ",", "\n", 
          "       ", 
          RowBox[{"Background", " ", "->", " ", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"LightOrange", ",", 
              RowBox[{"{", "LightGreen", "}"}]}], "}"}], "}"}]}]}], "]"}]}]}],
       "\n", "      ", "]"}]}], "]"}]}], ";"}]], "Code",
 CellLabel->
  "In[288]:=",ExpressionUUID->"6269d9eb-66fa-462c-84bf-8e3bd330de22"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dpyAtom", "[", "ex_", "]"}], " ", ":=", " ", "\n", "  ", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Style", "[", 
        RowBox[{"ex", ",", "Bold"}], "]"}], "}"}], "}"}], ",", "\n", "   ", 
     RowBox[{"Frame", "      ", "->", " ", "All"}], ",", "\n", "   ", 
     RowBox[{"Alignment", "  ", "->", " ", "Left"}], ",", "\n", "   ", 
     RowBox[{"Background", " ", "->", "\n", "     ", 
      RowBox[{"Switch", "[", 
       RowBox[{
        RowBox[{"Head", " ", "@", " ", "ex"}], ",", "\n", "       ", "String",
         ",", "   ", "LightYellow", ",", "\n", "       ", "Symbol", ",", 
        "   ", "LightPurple", ",", "\n", "       ", "Integer", ",", "  ", 
        "LightBlue", ",", "\n", "       ", "Real", ",", "     ", "LightBlue", 
        ",", "\n", "       ", "Rational", ",", " ", "LightBlue", ",", "\n", 
        "       ", "Complex", ",", "  ", "LightBlue", ",", "\n", "       ", 
        "_", ",", "        ", "Red"}], "]"}]}]}], "]"}]}], ";"}]], "Code",
 CellLabel->
  "In[289]:=",ExpressionUUID->"5162c3fd-4512-4384-95ed-e3ee07610e72"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dpyQuotedAtom", "[", 
    RowBox[{"number2", "[", "ex_", "]"}], "]"}], " ", ":=", " ", "\n", "  ", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Style", "[", 
        RowBox[{"ex", ",", "Bold", ",", "Blue"}], "]"}], "}"}], "}"}], ",", 
     "\n", "   ", 
     RowBox[{"Frame", "      ", "->", " ", "All"}], ",", "\n", "   ", 
     RowBox[{"Alignment", "  ", "->", " ", "Left"}], ",", "\n", "   ", 
     RowBox[{"Background", " ", "->", " ", "LightBlue"}]}], "]"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[290]:=",ExpressionUUID->"cb8b6e5d-1264-4e6a-bca6-a1794465ea9a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dpyQuotedAtom", "[", 
    RowBox[{"string2", "[", "ex_", "]"}], "]"}], " ", ":=", " ", "\n", "  ", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Style", "[", 
        RowBox[{"ex", ",", "Bold", ",", "Green"}], "]"}], "}"}], "}"}], ",", 
     "\n", "   ", 
     RowBox[{"Frame", "      ", "->", " ", "All"}], ",", "\n", "   ", 
     RowBox[{"Alignment", "  ", "->", " ", "Left"}], ",", "\n", "   ", 
     RowBox[{"Background", " ", "->", " ", "LightYellow"}]}], "]"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[291]:=",ExpressionUUID->"58a34af5-e785-48e2-b1f5-de24ce45d191"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dpyQuotedAtom", "[", 
    RowBox[{"symbol2", "[", "ex_", "]"}], "]"}], " ", ":=", " ", "\n", "  ", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Style", "[", 
        RowBox[{"ex", ",", "Bold", ",", "Purple"}], "]"}], "}"}], "}"}], ",", 
     "\n", "   ", 
     RowBox[{"Frame", "      ", "->", " ", "All"}], ",", "\n", "   ", 
     RowBox[{"Alignment", "  ", "->", " ", "Left"}], ",", "\n", "   ", 
     RowBox[{"Background", " ", "->", " ", "LightPurple"}]}], "]"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[292]:=",ExpressionUUID->"c440acd6-10fc-4417-a0ba-51466233e4ba"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dpyEmpty", "[", "]"}], " ", ":=", "\n", "  ", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", "}"}], "}"}], ",", "\n", "   ", 
     RowBox[{"Frame", "      ", "->", " ", "All"}], ",", "\n", "   ", 
     RowBox[{"Alignment", "  ", "->", " ", "Left"}], ",", "\n", "   ", 
     RowBox[{"Background", " ", "->", " ", "White"}]}], "]"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[293]:=",ExpressionUUID->"bd85321d-dc77-4067-a615-ffa67c901d91"],

Cell[CellGroupData[{

Cell["gridExpression[ expr ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"109049a2-b6ed-4160-8c49-6b638bf68dcd"],

Cell["Display a gridded representation of an expression.", "Text",ExpressionUUID->"f650e8df-a47c-43e9-af80-be167fb02c2d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"gridExpression", "[", 
    RowBox[{"ex_", "[", "]"}], "]"}], "        ", ":=", " ", 
   RowBox[{"dpyNullary", "[", 
    RowBox[{"gridExpression", " ", "@", " ", "ex"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"gridExpression", "[", 
    RowBox[{"ex_", "[", "parts__", "]"}], "]"}], " ", ":=", " ", 
   RowBox[{"dpyMultiary", "[", 
    RowBox[{
     RowBox[{"gridExpression", " ", "@", " ", "ex"}], ",", " ", 
     RowBox[{"gridExpression", " ", "/@", " ", 
      RowBox[{"{", "parts", "}"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"gridExpression", "[", 
    RowBox[{"ex_", "?", "AtomQ"}], "]"}], "    ", ":=", " ", 
   RowBox[{"dpyAtom", "[", "ex", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"gridExpression", "[", "x___", "]"}], "         ", ":=", " ", 
   RowBox[{"Throw", "[", 
    RowBox[{"{", "x", "}"}], "]"}]}], ";"}]}], "Code",
 CellLabel->
  "In[294]:=",ExpressionUUID->"86481609-d4e1-41c9-aae7-630a01a10633"]
}, Open  ]],

Cell[CellGroupData[{

Cell["gridCaptive[ expr ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"ea5ead3c-1661-4f1a-9330-06377153588a"],

Cell["\<\
Display a gridded representation of a captive (quoted) expression.\
\>", "Text",ExpressionUUID->"42d804f0-1bb1-48f4-9043-42d97f7b437a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SetAttributes", "[", 
    RowBox[{"gridCaptive", ",", " ", "HoldAllComplete"}], "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dpyCaptive", "[", 
    RowBox[{"{", "ex_", "}"}], "]"}], "      ", ":=", " ", 
   RowBox[{"dpyNullary", "[", 
    RowBox[{"dpyCaptive", " ", "@", " ", "ex"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dpyCaptive", "[", 
    RowBox[{"{", 
     RowBox[{"a_", ",", " ", "as__"}], "}"}], "]"}], " ", ":=", " ", 
   RowBox[{"dpyMultiary", "[", 
    RowBox[{
     RowBox[{"dpyCaptive", " ", "@", " ", "a"}], ",", " ", 
     RowBox[{"dpyCaptive", " ", "/@", " ", 
      RowBox[{"{", "as", "}"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dpyCaptive", "[", 
    RowBox[{"ex_", "?", "AtomQ"}], "]"}], "  ", ":=", " ", 
   RowBox[{"dpyAtom", "[", "ex", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"dpyCaptive", "[", "x___", "]"}], "       ", ":=", " ", 
    RowBox[{"Throw", "[", 
     RowBox[{"Unevaluated", " ", "@", " ", 
      RowBox[{"{", "x", "}"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"gridCaptive", "[", "expr_", "]"}], ":=", " ", 
   RowBox[{"dpyCaptive", " ", "@", " ", 
    RowBox[{"captive", " ", "@", " ", "expr"}]}]}], ";"}]}], "Code",
 CellLabel->
  "In[298]:=",ExpressionUUID->"cc822aa0-3944-40e0-ae24-c1ecc5f68d89"]
}, Open  ]],

Cell[CellGroupData[{

Cell["captive2", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"feae17b0-b265-481e-bbfb-a7de52c05825"],

Cell["TODO: deprecate the old captive", "Text",ExpressionUUID->"144277bb-a32c-4e9f-bdef-2c5ef0a8e5ce"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"captive2", ",", " ", "HoldAllComplete"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"captive2", "[", 
   RowBox[{"expr_", " ", "/;", " ", 
    RowBox[{"NumberQ", " ", "@", " ", 
     RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}]}], "]"}], "           ",
   ":=", " ", 
  RowBox[{"number2", "[", 
   RowBox[{"ToString", "[", "expr", "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"captive2", "[", 
   RowBox[{"expr_", " ", "/;", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Head", " ", "@", " ", 
       RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}], " ", "===", " ", 
      "Symbol"}], ")"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"symbol2", "[", 
   RowBox[{"ToString", " ", "@", " ", 
    RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"captive2", "[", 
   RowBox[{"expr_", " ", "/;", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Head", " ", "@", " ", 
       RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}], " ", "===", " ", 
      "String"}], ")"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"string2", "[", 
   RowBox[{
   "\"\<\\\"\>\"", " ", "<>", " ", "expr", " ", "<>", " ", "\"\<\\\"\>\""}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"captive2", "[", 
   RowBox[{"head_", "[", "parts___", "]"}], "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"captive2", " ", "@", " ", "head"}], ",", " ", 
    RowBox[{"captive2", " ", "/@", " ", 
     RowBox[{"Unevaluated", " ", "@", " ", 
      RowBox[{"{", "parts", "}"}]}]}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"captive2", "[", "x___", "]"}], "           ", ":=", " ", 
   RowBox[{"Throw", " ", "@", " ", 
    RowBox[{"{", "x", "}"}]}]}], ";"}]}], "Code",
 CellLabel->
  "In[304]:=",ExpressionUUID->"f7b4a485-eed7-445b-99e2-3d7c29eb78be"]
}, Open  ]],

Cell[CellGroupData[{

Cell["gridCaptive2[ expr ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"209db018-6df9-4045-8adf-1ed8954b090f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SetAttributes", "[", 
    RowBox[{"gridCaptive2", ",", " ", "HoldAllComplete"}], "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dpyCaptive2", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"symbol2", "[", "\"\<List\>\"", "]"}], ",", " ", 
      RowBox[{"{", "}"}]}], "}"}], "]"}], " ", ":=", " ", 
   RowBox[{"dpyEmpty", "[", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dpyCaptive2", "[", 
    RowBox[{"{", 
     RowBox[{"ex_", ",", " ", 
      RowBox[{"{", "}"}]}], "}"}], "]"}], "             ", ":=", " ", 
   RowBox[{"dpyNullary", "[", 
    RowBox[{"dpyCaptive2", " ", "@", " ", "ex"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dpyCaptive2", "[", 
    RowBox[{"{", 
     RowBox[{"a_", ",", " ", 
      RowBox[{"{", "as__", "}"}]}], "}"}], "]"}], "          ", ":=", " ", 
   RowBox[{"dpyMultiary", "[", 
    RowBox[{
     RowBox[{"dpyCaptive2", " ", "@", " ", "a"}], ",", " ", 
     RowBox[{"dpyCaptive2", " ", "/@", " ", 
      RowBox[{"{", "as", "}"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dpyCaptive2", "[", 
    RowBox[{"number2", "[", "ex_", "]"}], "]"}], "          ", ":=", " ", 
   RowBox[{"dpyQuotedAtom", "[", 
    RowBox[{"number2", "[", "ex", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dpyCaptive2", "[", 
    RowBox[{"string2", "[", "ex_", "]"}], "]"}], "          ", ":=", " ", 
   RowBox[{"dpyQuotedAtom", "[", 
    RowBox[{"string2", "[", "ex", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dpyCaptive2", "[", 
    RowBox[{"symbol2", "[", "ex_", "]"}], "]"}], "          ", ":=", " ", 
   RowBox[{"dpyQuotedAtom", "[", 
    RowBox[{"symbol2", "[", "ex", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"dpyCaptive2", "[", "x___", "]"}], "                  ", ":=", 
    " ", 
    RowBox[{"Throw", "[", 
     RowBox[{"Unevaluated", " ", "@", " ", 
      RowBox[{"{", "x", "}"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"gridCaptive2", "[", "expr_", "]"}], " ", ":=", " ", 
   RowBox[{"dpyCaptive2", " ", "@", " ", 
    RowBox[{"captive2", " ", "@", " ", "expr"}]}]}], ";"}]}], "Code",
 CellLabel->
  "In[310]:=",ExpressionUUID->"1cf66d2f-ff54-46ce-9637-68d395088166"]
}, Open  ]],

Cell[CellGroupData[{

Cell["traceView2[ expr ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"5245bd02-98f3-4b51-863b-a360e656bd01"],

Cell["\<\
Display an interactive visualization of the trace of the evaluation of an \
expression. \
\>", "Text",ExpressionUUID->"bf1df186-530c-459b-a7ea-435de8d350a0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"traceView2", "[", "expr_", "]"}], ":=", 
  RowBox[{"Module", "[", "\n", "  ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"steps", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"stack", "=", 
       RowBox[{"{", "}"}]}], ",", "pre", ",", "post", ",", "show", ",", 
      "dynamic"}], "}"}], ",", "\n", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{"pre", "[", "e_", "]"}], ":=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"stack", "=", 
         RowBox[{"{", 
          RowBox[{"steps", ",", "stack"}], "}"}]}], ";", 
        RowBox[{"steps", "=", 
         RowBox[{"{", "}"}]}]}], ")"}]}], ";", "\n", "  ", 
     RowBox[{
      RowBox[{"post", "[", 
       RowBox[{"e_", ",", "r_"}], "]"}], ":=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"steps", "=", 
         RowBox[{
          RowBox[{"First", "@", "stack"}], "~", "Join", "~", 
          RowBox[{"{", 
           RowBox[{"show", "[", 
            RowBox[{"e", ",", 
             RowBox[{"HoldForm", "[", "r", "]"}], ",", "steps"}], "]"}], 
           "}"}]}]}], ";", 
        RowBox[{"stack", "=", 
         RowBox[{"stack", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}]}], ";", "\n", "  ", 
     RowBox[{"SetAttributes", "[", 
      RowBox[{"post", ",", "HoldAllComplete"}], "]"}], ";", "\n", "  ", 
     RowBox[{
      RowBox[{"show", "[", 
       RowBox[{"e_", ",", "r_", ",", "steps_"}], "]"}], ":=", 
      RowBox[{"Grid", "[", "\n", "    ", 
       RowBox[{
        RowBox[{"steps", "/.", 
         RowBox[{"{", "\n", "      ", 
          RowBox[{
           RowBox[{
            RowBox[{"{", "}"}], "->", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\"\<Expr  \>\"", ",", 
               RowBox[{"Row", "[", 
                RowBox[{"{", 
                 RowBox[{"e", ",", "\"\< \>\"", ",", 
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<inert\>\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"Italic", ",", "Small"}], "}"}]}], "]"}]}], "}"}],
                 "]"}]}], "}"}], "}"}]}], ",", "\n", "      ", 
           RowBox[{"_", "->", 
            RowBox[{"{", "\n", "        ", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"\"\<Expr  \>\"", ",", "e"}], "}"}], ",", "\n", 
              "        ", 
              RowBox[{"{", 
               RowBox[{"\"\<Steps\>\"", ",", 
                RowBox[{"steps", "/.", 
                 RowBox[{"{", "\n", "          ", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", "}"}], "->", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<no definitions apply\>\"", ",", "Italic"}], 
                    "]"}]}], ",", "\n", "          ", 
                   RowBox[{"_", ":>", 
                    RowBox[{"OpenerView", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Length", "@", "steps"}], ",", 
                    RowBox[{"dynamic", "@", 
                    RowBox[{"Column", "[", "steps", "]"}]}]}], "}"}], 
                    "]"}]}]}], "}"}]}]}], "}"}], ",", "\n", "        ", 
              RowBox[{"{", 
               RowBox[{"\"\<Result\>\"", ",", "r"}], "}"}]}], "}"}]}]}], 
          "}"}]}], ",", "\n", "      ", 
        RowBox[{"Alignment", "->", "Left"}], ",", "\n", "      ", 
        RowBox[{"Frame", "->", "All"}], ",", "\n", "      ", 
        RowBox[{"Background", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "LightCyan", "}"}], ",", "None"}], "}"}]}]}], "]"}]}],
      ";", "\n", "    ", 
     RowBox[{"TraceScan", "[", 
      RowBox[{"pre", ",", "expr", ",", "___", ",", "post"}], "]"}], ";", "\n",
      "    ", 
     RowBox[{"Deploy", "@", 
      RowBox[{"Pane", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"steps", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "/.", 
         RowBox[{"dynamic", "->", "Dynamic"}]}], ",", 
        RowBox[{"ImageSize", "->", "10000"}]}], "]"}]}]}]}], "]"}]}], "\n", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"traceView2", ",", 
   RowBox[{"{", "HoldAllComplete", "}"}]}], "]"}]}], "Code",
 CellLabel->
  "In[319]:=",ExpressionUUID->"5e627712-3b23-453e-b3fb-7feedd764f0c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["traceView4[ expr ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"da4db3de-9a4e-4e7a-9533-fc8ed2b958e3"],

Cell["\<\
Display a compact interactive visualization of the trace of the evaluation of \
an expression.\
\>", "Text",ExpressionUUID->"1d2bab46-c77a-40ec-906d-d45a3f4ea2de"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"traceView4", "[", "expr_", "]"}], ":=", 
  RowBox[{"Module", "[", "\n", "  ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"steps", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"stack", "=", 
       RowBox[{"{", "}"}]}], ",", "pre", ",", "post"}], "}"}], ",", "\n", 
    "  ", 
    RowBox[{
     RowBox[{
      RowBox[{"pre", "[", "e_", "]"}], ":=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"stack", "=", 
         RowBox[{"{", 
          RowBox[{"steps", ",", "stack"}], "}"}]}], ";", 
        RowBox[{"steps", "=", 
         RowBox[{"{", "}"}]}]}], ")"}]}], ";", "\n", "  ", 
     RowBox[{
      RowBox[{"post", "[", 
       RowBox[{"e_", ",", "r_"}], "]"}], ":=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"steps", "=", 
         RowBox[{
          RowBox[{"First", "@", "stack"}], "~", "Join", "~", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"e", ",", "steps", ",", 
             RowBox[{"HoldForm", "[", "r", "]"}]}], "}"}], "}"}]}]}], ";", 
        RowBox[{"stack", "=", 
         RowBox[{"stack", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}]}], ";", "\n", "  ", 
     RowBox[{"SetAttributes", "[", 
      RowBox[{"post", ",", "HoldAllComplete"}], "]"}], ";", "\n", "  ", 
     RowBox[{"TraceScan", "[", 
      RowBox[{"pre", ",", "expr", ",", "___", ",", "post"}], "]"}], ";", "\n",
      "  ", 
     RowBox[{"DynamicModule", "[", "\n", "    ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "focus", ",", "show", ",", "substep", ",", "enter", ",", "exit"}], 
        "}"}], ",", "\n", "    ", 
       RowBox[{
        RowBox[{"focus", "=", "steps"}], ";", "\n", "    ", 
        RowBox[{
         RowBox[{"substep", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e_", ",", 
             RowBox[{"{", "}"}], ",", "_"}], "}"}], ",", "_"}], "]"}], ":=", 
         RowBox[{"{", 
          RowBox[{"Null", ",", "e", ",", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<inert\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"Italic", ",", "Small"}], "}"}]}], "]"}]}], "}"}]}], 
        ";", "\n", "    ", 
        RowBox[{
         RowBox[{"substep", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e_", ",", "_", ",", "r_"}], "}"}], ",", "p_"}], "]"}], ":=", 
         RowBox[{"{", "\n", "      ", 
          RowBox[{
           RowBox[{"Button", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<show\>\"", ",", "Small"}], "]"}], ",", 
             RowBox[{"enter", "[", "p", "]"}]}], "]"}], ",", "\n", "      ", 
           "e", ",", "\n", "      ", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Row", "[", 
              RowBox[{"{", 
               RowBox[{"\"\<-> \>\"", ",", "r"}], "}"}], "]"}], ",", 
             "Small"}], "]"}]}], "}"}]}], ";", "\n", "    ", 
        RowBox[{
         RowBox[{"enter", "[", 
          RowBox[{"{", "p_", "}"}], "]"}], ":=", 
         RowBox[{"PrependTo", "[", 
          RowBox[{"focus", ",", 
           RowBox[{"focus", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2", ",", "p"}], "]"}], "]"}]}], "]"}]}], ";", 
        "\n", "    ", 
        RowBox[{
         RowBox[{"exit", "[", "]"}], ":=", 
         RowBox[{"focus", "=", 
          RowBox[{"Drop", "[", 
           RowBox[{"focus", ",", "1"}], "]"}]}]}], ";", "\n", "    ", 
        RowBox[{
         RowBox[{"show", "[", 
          RowBox[{"{", 
           RowBox[{"e_", ",", "s_", ",", "r_"}], "}"}], "]"}], ":=", 
         RowBox[{"Column", "[", 
          RowBox[{"{", "\n", "      ", 
           RowBox[{"Grid", "[", 
            RowBox[{
             RowBox[{"{", "\n", "        ", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\"\<Expression\>\"", ",", 
                 RowBox[{"Column", "@", 
                  RowBox[{"Reverse", "@", 
                   RowBox[{"focus", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}]}], "}"}], ",",
                "\n", "        ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Column", "[", 
                  RowBox[{"{", "\n", "          ", 
                   RowBox[{"\"\<Steps\>\"", ",", "\n", "          ", 
                    RowBox[{"focus", "/.", 
                    RowBox[{"{", "\n", "            ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", "_", "}"}], ":>", 
                    RowBox[{"Sequence", "[", "]"}]}], ",", "\n", 
                    "            ", 
                    RowBox[{"_", ":>", 
                    RowBox[{"Button", "[", 
                    RowBox[{"\"\<Back\>\"", ",", 
                    RowBox[{"exit", "[", "]"}], ",", 
                    RowBox[{"ImageSize", "->", "Automatic"}]}], "]"}]}]}], 
                    "}"}]}]}], "}"}], "]"}], ",", "\n", "         ", 
                 RowBox[{"Grid", "[", 
                  RowBox[{
                   RowBox[{"MapIndexed", "[", 
                    RowBox[{"substep", ",", "s"}], "]"}], ",", 
                   RowBox[{"Alignment", "->", "Left"}]}], "]"}]}], "}"}], ",",
                "\n", "\t\t", 
               RowBox[{"{", 
                RowBox[{"\"\<Result\>\"", ",", 
                 RowBox[{"Column", "@", 
                  RowBox[{"focus", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "3"}], "]"}], "]"}]}]}], "}"}]}], 
              "}"}], ",", "\n", "       ", 
             RowBox[{"Alignment", "->", "Left"}], ",", "\n", "       ", 
             RowBox[{"Frame", "->", "All"}], ",", "\n", "       ", 
             RowBox[{"Background", "->", 
              RowBox[{"{", 
               RowBox[{"{", "LightCyan", "}"}], "}"}]}]}], "]"}], "\n", 
           "     ", "}"}], "]"}]}], ";", "\n", "   ", 
        RowBox[{"Dynamic", "@", 
         RowBox[{"show", "@", 
          RowBox[{"focus", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}]}]}], "\n", "  ", "]"}]}]}], 
   "]"}]}], "\n", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"traceView4", ",", 
   RowBox[{"{", "HoldAllComplete", "}"}]}], "]"}]}], "Code",
 CellLabel->
  "In[321]:=",ExpressionUUID->"e646eb3e-a30f-4022-96a4-5de40612e6e9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["traceView5[ expr ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"eba03a26-0ea9-494f-ab07-0ae491adc196"],

Cell["\<\
Display an alternative compact interactive visualization of the trace of the \
evaluation of an expression.\
\>", "Text",ExpressionUUID->"49fb295a-595e-464f-871a-9c1ecff9c840"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"traceView5", ",", "HoldFirst"}], "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"traceView5", "[", 
   RowBox[{"e_", ",", "s___", ",", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "Trace", "]"}]}]}], "]"}], ":=", "\n", 
  "  ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "show2", "}"}], ",", "\n", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{"show2", "[", 
       RowBox[{"{", 
        RowBox[{"expr_", ",", "steps__"}], "}"}], "]"}], ":=", 
      RowBox[{"OpenerView", "[", 
       RowBox[{"{", 
        RowBox[{"expr", ",", 
         RowBox[{"Column", "[", 
          RowBox[{"show2", "/@", 
           RowBox[{"{", "steps", "}"}]}], "]"}]}], "}"}], "]"}]}], ";", "\n", 
     "  ", 
     RowBox[{
      RowBox[{"show2", "[", 
       RowBox[{"{", 
        RowBox[{"HoldForm", "[", "x_", "]"}], "}"}], "]"}], ":=", 
      RowBox[{"Row", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Opener", "[", 
          RowBox[{"True", ",", 
           RowBox[{"Enabled", "->", "False"}]}], "]"}], ",", 
         RowBox[{"HoldForm", "[", "x", "]"}]}], "}"}], "]"}]}], ";", "\n", 
     "  ", 
     RowBox[{
      RowBox[{"show2", "[", 
       RowBox[{"HoldForm", "[", "x_", "]"}], "]"}], ":=", 
      RowBox[{"HoldForm", "[", "x", "]"}]}], ";", "\n", "  ", 
     RowBox[{"show2", "[", 
      RowBox[{"Trace", "[", 
       RowBox[{
        RowBox[{"Unevaluated", "[", "e", "]"}], ",", "s", ",", "opts", ",", 
        RowBox[{"TraceOriginal", "->", "True"}]}], "]"}], "]"}]}]}], 
   "]"}]}]}], "Code",
 CellLabel->
  "In[323]:=",ExpressionUUID->"c71771b1-8632-495d-91d2-d044ef9e385d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Predicates and Helpers", "Subsection",
 FontWeight->"Bold",ExpressionUUID->"9c936527-4761-4c87-a523-014a06803d1b"],

Cell[CellGroupData[{

Cell["KvpQ[ list ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"9ae2c10b-2ef4-4684-8013-1c05d0dd0861"],

Cell["\<\
Something is a Kvp (key-value pair) if it matches the pattern of a list of \
two items, the first of which is either a string or a symbol.\
\>", "Text",ExpressionUUID->"8e5db420-409f-4ae5-a65a-37a69d109f93"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"KvpQ", "[", "kvp_List", "]"}], " ", ":=", " ", 
   RowBox[{"MatchQ", "[", 
    RowBox[{"kvp", ",", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"_Symbol", ",", " ", "_"}], "}"}], " ", "|", " ", 
      RowBox[{"{", 
       RowBox[{"_String", ",", " ", "_"}], "}"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"KvpQ", "[", "___", "]"}], " ", "=", " ", "False"}], 
  ";"}]}], "Code",
 CellLabel->
  "In[325]:=",ExpressionUUID->"1630b32c-bbee-426a-b4a7-2d2d62f96ba7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["pairsQ[ list ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"e2986885-94da-450e-9b95-1508c3ff7b03"],

Cell["\<\
Something is a list of pairs if it is a list and every element is a pair.\
\>", "Text",ExpressionUUID->"385a54aa-cf0a-4e28-b836-116d12a6382a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"pairsQ", "[", "list_List", "]"}], " ", ":=", " ", 
   RowBox[{"And", " ", "@@", " ", 
    RowBox[{"(", 
     RowBox[{"KvpQ", " ", "/@", " ", "list"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pairsQ", "[", "___", "]"}], " ", "=", " ", "False"}], 
  ";"}]}], "Code",
 CellLabel->
  "In[327]:=",ExpressionUUID->"ea6ba9d9-23c9-42d6-acd4-3c10f2815731"],

Cell["\<\
To fetch the keys from a list, map a function that takes the first part of \
every element over the list. Here, we don't need the presumably expensive \
check of ?pairsQ on the argument, just the cheap check of List, since this is \
an internal function.\
\>", "Text",ExpressionUUID->"f2180c3c-10aa-43f5-abad-6471ecaa47f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["keys[ list ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"5f006df1-1bcf-4b0c-bcbd-2f695b3cfe12"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"keys", "[", "list_List", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", "&"}], " ", "/@", " ", "list"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[329]:=",ExpressionUUID->"f10217d0-3ba5-4ab6-8064-26fd2a1e24b7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"keysUniqueQ", "[", "list_List", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"Length", "@", 
     RowBox[{"Union", "@", 
      RowBox[{"keys", "@", "list"}]}]}], " ", "===", " ", 
    RowBox[{"Length", "@", 
     RowBox[{"keys", "@", "list"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"keysUniqueQ", "[", "___", "]"}], " ", "=", " ", "False"}], 
  ";"}]}], "Code",
 CellLabel->
  "In[330]:=",ExpressionUUID->"834b77d6-e664-409f-a1cc-d42929ebab9a"],

Cell["\<\
To fetch the values, map a function that picks the second element from each \
internal kvp.\
\>", "Text",ExpressionUUID->"cceeec7e-87b5-4ce0-871b-694f28bbfd64"]
}, Open  ]],

Cell[CellGroupData[{

Cell["values[ list ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"928ff4d6-1f58-4287-bf21-25d0484cc738"],

Cell[BoxData[
 RowBox[{
  RowBox[{"values", "[", "list_List", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "[", 
     RowBox[{"[", "2", "]"}], "]"}], " ", "&"}], " ", "/@", " ", 
   "list"}]}]], "Code",
 CellLabel->
  "In[332]:=",ExpressionUUID->"228b43b7-3236-4c18-b75f-6cb28075ec15"]
}, Open  ]],

Cell[CellGroupData[{

Cell["KvpsQ[ list ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"5c8ebedc-fabb-41fd-8154-5a28af7c23f5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"KvpsQ", "[", 
    RowBox[{"list_", "?", "pairsQ"}], "]"}], " ", ":=", " ", 
   RowBox[{"keysUniqueQ", "@", "list"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"KvpsQ", "[", "___", "]"}], " ", "=", " ", "False"}], 
  ";"}]}], "Code",
 CellLabel->
  "In[333]:=",ExpressionUUID->"5081ce6e-e5b2-4378-9366-a404c818bfe1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["SymbolQ[ symbol ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"7b10b057-92ee-4c9e-9cd7-70e287fc7899"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SymbolQ", "[", "x_Symbol", "]"}], " ", "=", " ", "True"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SymbolQ", "[", "___", "]"}], " ", "=", " ", "False"}], 
  ";"}]}], "Code",
 CellLabel->
  "In[335]:=",ExpressionUUID->"d1cded5f-5f11-41ee-992d-4d322e854c52"]
}, Open  ]],

Cell[CellGroupData[{

Cell["RulesQ[ list ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"5e68b14b-354b-4a9f-857d-6d99b7045c8b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RulesQ", "[", "vs_List", "]"}], " ", ":=", " ", 
   RowBox[{"And", " ", "@@", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"MatchQ", "[", 
        RowBox[{"#", ",", " ", 
         RowBox[{"Rule", "[", 
          RowBox[{"_", ",", " ", "_"}], "]"}]}], "]"}], " ", "&"}], " ", "/@",
       " ", "vs"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RulesQ", "[", "___", "]"}], " ", "=", " ", "False"}], 
  ";"}]}], "Code",
 CellLabel->
  "In[337]:=",ExpressionUUID->"1abf3285-17d9-4ad4-9131-0431366e29e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["RulessQ[ lists ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"f12a704c-4b0a-4fe9-be46-a456de3e10b4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RulessQ", "[", "vss_List", "]"}], " ", ":=", " ", 
   RowBox[{"And", " ", "@@", " ", 
    RowBox[{"(", 
     RowBox[{"RulesQ", " ", "/@", " ", "vss"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RulessQ", "[", "___", "]"}], " ", "=", " ", "False"}], 
  ";"}]}], "Code",
 CellLabel->
  "In[339]:=",ExpressionUUID->"a54c7165-7ddf-4257-90e1-3c633ef265c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Args[ list ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"50c4a083-ba6f-4684-9047-a4e950af419f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Args", "[", "e_", "]"}], " ", ":=", " ", 
   RowBox[{"Level", "[", 
    RowBox[{"e", ",", " ", "1"}], "]"}]}], ";"}]], "Code",
 CellLabel->
  "In[341]:=",ExpressionUUID->"275feff0-2b2d-445e-92f0-5c3d7f3bf4b6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["LinqSim", "Subsection",
 FontWeight->"Bold",ExpressionUUID->"7503814c-2574-48b1-8ded-96899394b3e6"],

Cell["TODO: generalize these to arbitrary heads, not just to lists", "Text",ExpressionUUID->"75bc1d17-74cf-4fcc-a18f-82b00de6a952"],

Cell[CellGroupData[{

Cell["Pluck[ n ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"b5d110d1-03b1-4eff-95ae-17e8230c175a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Pluck", "[", "n_", "]"}], " ", ":=", " ", 
   RowBox[{"Function", "[", 
    RowBox[{"item", ",", " ", 
     RowBox[{"item", "[", 
      RowBox[{"[", "n", "]"}], "]"}]}], "]"}]}], ";"}]], "Code",
 CellLabel->
  "In[342]:=",ExpressionUUID->"cb2b5b0f-3a05-4d70-ba30-b74851d9e0c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["flat1[ list ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"19ce5ce6-9b0b-424b-91ad-9173b6c1cc47"],

Cell[BoxData[
 RowBox[{
  RowBox[{"flat1", " ", "=", " ", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"#", ",", " ", "1"}], "]"}], " ", "&"}]}], ";"}]], "Code",
 CellLabel->
  "In[343]:=",ExpressionUUID->"6b2e88a3-0386-41d9-8e2c-7b37623f9418"]
}, Open  ]],

Cell[CellGroupData[{

Cell["SelectMany[ lists, func ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"93796c7d-cb3b-4acf-888a-64bcc6d73f3d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SelectMany", "[", 
    RowBox[{"list_", ",", " ", "func_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{"func", ",", " ", "list"}], "]"}], " ", "//", " ", "flat1"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[344]:=",ExpressionUUID->"575b0423-8eeb-45ef-9812-641d07fbda65"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Zip[ list1, list2, itemFromPair ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"980d7348-63f4-454c-bd00-bff991a7ef9c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Zip", "[", 
   RowBox[{"list1_List", ",", " ", "list2_List", ",", " ", 
    RowBox[{"func_", ":", "List"}]}], "]"}], ":=", "\n", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"len", " ", "=", " ", 
      RowBox[{"Min", "[", 
       RowBox[{
        RowBox[{"Length", " ", "@", " ", "list1"}], ",", " ", 
        RowBox[{"Length", " ", "@", " ", "list2"}]}], "]"}]}], "}"}], ",", 
    "\n", "  ", 
    RowBox[{"MapThread", "[", 
     RowBox[{"func", ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Take", "[", 
         RowBox[{"#", ",", "len"}], "]"}], "&"}], " ", "/@", " ", 
       RowBox[{"{", 
        RowBox[{"list1", ",", " ", "list2"}], "}"}]}]}], "]"}]}], 
   "]"}]}]], "Code",
 CellLabel->
  "In[345]:=",ExpressionUUID->"67edac52-9df2-4f91-84a6-56f8d7e43a30"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ZipMany[list1, list2, listFromPair]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"6b24564e-a8c9-49ef-bebc-19f6a3a6c313"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ZipMany", " ", "=", " ", 
  RowBox[{"Composition", "[", 
   RowBox[{"flat1", ",", " ", "Zip"}], "]"}]}]], "Code",
 CellLabel->
  "In[346]:=",ExpressionUUID->"6d9e779b-e88a-41a9-b493-bb57752424a5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"#1", ",", "1"}], "]"}], "&"}], "@*", "Zip"}]], "Output",
 CellChangeTimes->{{3.9112524205500517`*^9, 3.911252421588769*^9}, {
   3.911254381141556*^9, 3.9112543814912167`*^9}, {3.911254645691099*^9, 
   3.9112546460024157`*^9}, {3.911297451410886*^9, 3.911297451650631*^9}, {
   3.912368778560707*^9, 3.9123687787321777`*^9}, {3.912369932893731*^9, 
   3.91236995510571*^9}, 3.9125435814109898`*^9, 3.91254537441967*^9, {
   3.913148213173477*^9, 3.913148213358224*^9}, 3.913751431672386*^9, {
   3.9137521126823606`*^9, 3.913752112884721*^9}, {3.9137535465638723`*^9, 
   3.9137535467602243`*^9}},
 CellLabel->
  "Out[346]=",ExpressionUUID->"f75209ce-3600-479e-9451-691f1528563c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["prefixes[ hd [ list___ ] ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"988aa313-c8bc-48b2-8ccf-8d7edf3940cc"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"prefixes", "[", 
     RowBox[{"acc_", ",", " ", 
      RowBox[{"{", "}"}]}], "]"}], " ", ":=", " ", "acc"}], ";", "\n", 
   RowBox[{
    RowBox[{"prefixes", "[", 
     RowBox[{"acc_", ",", " ", 
      RowBox[{"{", 
       RowBox[{"f_", ",", " ", "r___"}], "}"}]}], "]"}], " ", ":=", "\n", 
    "  ", 
    RowBox[{"Join", "[", 
     RowBox[{"acc", ",", "\n", "    ", 
      RowBox[{"prefixes", "[", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Append", "[", 
            RowBox[{"#", ",", " ", "f"}], "]"}], "&"}], ",", " ", "acc"}], 
         "]"}], ",", " ", 
        RowBox[{"{", "r", "}"}]}], "]"}]}], "]"}]}], ";", "\n", 
   RowBox[{
    RowBox[{"prefixes", "[", "list_List", "]"}], " ", ":=", " ", 
    RowBox[{"prefixes", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", "}"}], "}"}], ",", " ", "list"}], "]"}]}], ";"}], 
  "*)"}]], "Code",
 CellLabel->
  "In[347]:=",ExpressionUUID->"2c16259a-5286-467f-9a0f-acd1461dba9c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"prefixes", "[", 
    RowBox[{"hd_", "[", "list___", "]"}], "]"}], " ", ":=", " ", "\n", "  ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{"Function", "[", 
      RowBox[{"sub", ",", " ", 
       RowBox[{"hd", " ", "@@", " ", 
        RowBox[{"Take", "[", 
         RowBox[{
          RowBox[{"{", "list", "}"}], ",", " ", "sub"}], "]"}]}]}], "]"}], 
     ",", "\n", "  ", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", " ", 
       RowBox[{"Length", "[", 
        RowBox[{"{", "list", "}"}], "]"}]}], "]"}]}], "]"}]}], ";"}]], "Code",\

 CellLabel->
  "In[348]:=",ExpressionUUID->"bda6fa45-ad4e-4392-921d-1f6a5157ed59"]
}, Open  ]],

Cell[CellGroupData[{

Cell["postfixes[ hd [ list___ ] ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"96467067-1ba7-4925-b4ff-bac52876e9d9"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"postfixes", "[", 
     RowBox[{"acc_", ",", " ", 
      RowBox[{"{", "}"}]}], "]"}], " ", ":=", " ", "acc"}], ";", "\n", 
   RowBox[{
    RowBox[{"postfixes", "[", 
     RowBox[{"acc_", ",", " ", 
      RowBox[{"{", 
       RowBox[{"h___", ",", " ", "l_"}], "}"}]}], "]"}], " ", ":=", "\n", 
    "  ", 
    RowBox[{"Join", "[", 
     RowBox[{"acc", ",", "\n", "    ", 
      RowBox[{"postfixes", "[", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Prepend", "[", 
            RowBox[{"#", ",", "l"}], "]"}], "&"}], ",", " ", "acc"}], "]"}], 
        ",", " ", 
        RowBox[{"{", "h", "}"}]}], "]"}]}], "]"}]}], ";", "\n", 
   RowBox[{
    RowBox[{"postfixes", "[", "list_List", "]"}], " ", ":=", " ", 
    RowBox[{"Reverse", " ", "@", " ", 
     RowBox[{"postfixes", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", "}"}], "}"}], ",", " ", "list"}], "]"}]}]}], ";"}], 
  "*)"}]], "Code",
 CellLabel->
  "In[349]:=",ExpressionUUID->"fcb648ee-c7f9-462a-9cbf-f85128e382e5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"postfixes", "[", 
    RowBox[{"hd_", "[", "list___", "]"}], "]"}], " ", ":=", "\n", "  ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"len", " ", "=", " ", 
       RowBox[{"Length", "[", 
        RowBox[{"{", "list", "}"}], "]"}]}], "}"}], ",", "\n", "    ", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{"Function", "[", 
        RowBox[{"sub", ",", " ", 
         RowBox[{"hd", " ", "@@", " ", 
          RowBox[{"Take", "[", 
           RowBox[{
            RowBox[{"{", "list", "}"}], ",", " ", 
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{"len", "-", "sub"}], ")"}]}]}], "]"}]}]}], "]"}], ",", 
       "\n", "    ", 
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", " ", "len"}], "]"}]}], "]"}]}], "]"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[350]:=",ExpressionUUID->"c1c618f1-49bc-4e21-a7f3-b7a150a028f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["splits[ list ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"c00bca25-b1a1-48c0-96b7-a12e4b820ca9"],

Cell["\<\
TODO: a \"cute\" implementation is ReplaceList[list_List, \
{xs___,ys___}->{{xs},{ys}}]. Assess it for perf\
\>", "Text",ExpressionUUID->"850a9b30-97f0-47cd-b942-8498cc872403"],

Cell[BoxData[
 RowBox[{
  RowBox[{"splits", "[", "list_List", "]"}], " ", ":=", " ", 
  RowBox[{"Zip", "[", 
   RowBox[{
    RowBox[{"prefixes", " ", "@", " ", "list"}], ",", " ", 
    RowBox[{"postfixes", " ", "@", " ", "list"}]}], "]"}]}]], "Code",
 CellLabel->
  "In[351]:=",ExpressionUUID->"a779046f-72e3-4642-8e9e-91a648e70002"]
}, Open  ]],

Cell[CellGroupData[{

Cell["permutations[ list ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"f7bd4955-d7c8-4917-9de5-0f51edc6d868"],

Cell["TODO: make this work for arbitrary heads.", "Text",ExpressionUUID->"02087736-8065-4215-a645-2a1285e3177b"],

Cell["\<\
TODO: Consider this variation from the Haskell prelude:

-- | The 'permutations' function returns the list of all permutations of the \
argument.
--
-- > permutations \"abc\" == \
[\"abc\",\"bac\",\"cba\",\"bca\",\"cab\",\"acb\"]
permutations            :: [a] -> [[a]]
permutations xs0        =  xs0 : perms xs0 []
  where
    perms []     _  = []
    perms (t:ts) is = foldr interleave (perms ts (t:is)) (permutations is)
      where interleave    xs     r = let (_,zs) = interleave' id xs r in zs
            interleave' _ []     r = (ts, r)
            interleave' f (y:ys) r = let (us,zs) = interleave' (f . (y:)) ys \
r
                                     in  (y:us, f (t:y:us) : zs)\
\>", "Text",ExpressionUUID->"a6d8013d-bd1a-4361-be5a-07b7d86926b7"],

Cell["\<\
NOTE: this is for ILLUSTRATION only; the built-in Mathematica Permutations is \
MUCH more efficient.\
\>", "Text",ExpressionUUID->"a27b1319-66db-4fc9-b739-cb70d8df63f6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"permutations", "[", 
    RowBox[{"{", "}"}], "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"{", "}"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"permutations", "[", 
   RowBox[{"{", "args__", "}"}], "]"}], ":=", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Flatten", "-", 
    RowBox[{"1", " ", "of", " ", "Map", " ", "is", " ", "SelectMany"}]}], " ",
    "*)"}], "\n", " ", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"pos", ",", "\n", " ", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", "\n", "   ", 
           RowBox[{
            RowBox[{"elt", "=", 
             RowBox[{
              RowBox[{"{", "args", "}"}], "[", 
              RowBox[{"[", "pos", "]"}], "]"}]}], ",", "\n", "   ", 
            RowBox[{"rest", "=", 
             RowBox[{"Delete", "[", 
              RowBox[{
               RowBox[{"{", "args", "}"}], ",", " ", "pos"}], "]"}]}]}], 
           "}"}], ",", "\n", "  ", 
          RowBox[{"Map", "[", "\n", "   ", 
           RowBox[{
            RowBox[{"Function", "[", 
             RowBox[{"perm", ",", " ", 
              RowBox[{"Prepend", "[", 
               RowBox[{"perm", ",", " ", "elt"}], "]"}]}], "]"}], ",", "\n", 
            "   ", 
            RowBox[{"permutations", "[", "rest", "]"}]}], "]"}]}], "]"}]}], 
       "]"}], ",", "\n", "  ", 
      RowBox[{"Range", "[", 
       RowBox[{"Length", "[", 
        RowBox[{"{", "args", "}"}], "]"}], "]"}]}], "]"}], ",", "\n", " ", 
    "1"}], "]"}]}]}], "Code",
 CellLabel->
  "In[352]:=",ExpressionUUID->"61409ae6-0c93-43c8-83e0-aa9a406bb01e"]
}, Open  ]]
}, Open  ]],

Cell["Quotes and Unquotes", "Subsection",
 FontWeight->"Bold",ExpressionUUID->"11e5c0ed-b2e1-45b3-9215-3360a79b659c"],

Cell[CellGroupData[{

Cell["Numerical Subtypes", "Subsection",
 FontWeight->"Bold",ExpressionUUID->"19266de1-5d22-4c11-8020-1a4f0a72848d"],

Cell[CellGroupData[{

Cell["RealQ[ x ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"3d9b0787-1ad1-4684-9722-a23584183a8e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RealQ", "[", "x_Real", "]"}], " ", ":=", " ", "True"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RealQ", "[", "___", "]"}], " ", ":=", " ", "False"}], 
  ";"}]}], "Code",
 CellLabel->
  "In[354]:=",ExpressionUUID->"fd5ec8dd-725e-4ddc-b187-93909d0f0468"]
}, Open  ]],

Cell[CellGroupData[{

Cell["RationalQ[ x ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"a9b0cfb2-79af-486f-bc56-07224b376ff9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RationalQ", "[", "x_Rational", "]"}], " ", ":=", " ", "True"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RationalQ", "[", "___", "]"}], " ", ":=", " ", "False"}], 
  ";"}]}], "Code",
 CellLabel->
  "In[356]:=",ExpressionUUID->"ed7bc27e-e897-40dd-8c3a-e6d86341fe2a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ComplexQ[ x ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"43d6c894-b3bb-4a5a-9cf3-dd16d284411e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ComplexQ", "[", "x_Complex", "]"}], " ", ":=", " ", "True"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ComplexQ", "[", "___", "]"}], " ", ":=", " ", "False"}], 
  ";"}]}], "Code",
 CellLabel->
  "In[358]:=",ExpressionUUID->"0c11a1bb-4f81-4fd1-b2c0-237978f42cdd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["numericSubtype[ x ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"a9c19549-6460-4567-abab-0ee2b2b569c2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"numericSubtype", "[", 
   RowBox[{"x_", "?", "NumberQ"}], "]"}], " ", ":=", "\n", "\t", 
  RowBox[{"Switch", "[", 
   RowBox[{
   "x", ",", "\n", "\t\t", "_Integer", ",", "  ", "\"\<Integer\>\"", ",", 
    "\n", "\t\t", "_Real", ",", "     ", "\"\<Real\>\"", ",", "\n", "\t\t", 
    "_Rational", ",", " ", "\"\<Rational\>\"", ",", "\n", "\t\t", "_Complex", 
    ",", "  ", "\"\<Complex\>\""}], "]"}]}]], "Code",
 CellLabel->
  "In[360]:=",ExpressionUUID->"790ce1c6-dbe3-4c3c-921e-f5a6c12c08b3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["rulesFromExpression[ expr ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"5149ca28-cad2-4b38-ad4c-77e4fc1aa044"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rulesFromExpression", "[", 
   RowBox[{"expr_", "?", "NumberQ"}], "]"}], " ", ":=", " ", 
  RowBox[{"{", "\n", "\t", 
   RowBox[{"\"\<number\>\"", " ", "->", " ", 
    RowBox[{"{", "  ", 
     RowBox[{
      RowBox[{"\"\<subtype\>\"", " ", "->", " ", 
       RowBox[{"numericSubtype", " ", "@", " ", "expr"}]}], ",", "\n", 
      "                   ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "InputForm", " ", "reliable", " ", "for", " ", "roundtripping", " ", 
        "Rational"}], " ", "*)"}], "\n", "                   ", 
      RowBox[{"\"\<value\>\"", " ", "->", " ", 
       RowBox[{"ToString", " ", "@", " ", 
        RowBox[{"InputForm", " ", "@", " ", "expr"}]}]}]}], " ", "}"}]}], " ",
    "}"}]}], "\n", 
 RowBox[{
  RowBox[{"rulesFromExpression", "[", "expr_Symbol", "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{"\"\<symbol\>\"", " ", "->", " ", 
    RowBox[{"ToString", " ", "@", " ", "expr"}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{"rulesFromExpression", "[", "expr_String", "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{"\"\<string\>\"", " ", "->", " ", 
    RowBox[{"ToString", " ", "@", " ", "expr"}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rulesFromExpression", "[", 
    RowBox[{"head_", "[", "parts___", "]"}], "]"}], " ", ":=", " ", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"\"\<head\>\"", "   ", "->", " ", 
      RowBox[{"rulesFromExpression", "  ", "@", " ", "head"}]}], ",", " ", 
     "\n", "\t", 
     RowBox[{"\"\<parts\>\"", "  ", "->", " ", 
      RowBox[{"rulesFromExpression", " ", "/@", " ", 
       RowBox[{"{", "parts", "}"}]}]}]}], "}"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rulesFromExpression", "[", "x___", "]"}], " ", ":=", " ", 
   RowBox[{"Throw", "[", 
    RowBox[{"{", "x", "}"}], "]"}]}], ";"}]}], "Code",
 CellLabel->
  "In[361]:=",ExpressionUUID->"c9516960-da82-4871-9450-97e3726fb7ac"]
}, Open  ]],

Cell[CellGroupData[{

Cell["jsonStringFromExpression[ expr ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"673644a5-91c0-4312-9a32-aa9beb2d4b81"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"jsonStringFromExpression", "[", "expr_", "]"}], " ", ":=", "\n", 
   "  ", 
   RowBox[{
    RowBox[{"ExportString", "[", 
     RowBox[{
      RowBox[{"rulesFromExpression", "[", "expr", "]"}], ",", " ", 
      "\"\<JSON\>\""}], "]"}], " ", "//", " ", "\n", "    ", 
    RowBox[{
     RowBox[{"StringReplace", "[", 
      RowBox[{"#", ",", 
       RowBox[{"Whitespace", "->", "\"\<\>\""}]}], "]"}], "&"}]}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[366]:=",ExpressionUUID->"6ea1a966-a82c-4f0a-922a-dc91cadc234e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["expressionFromRules[ expr ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"75cd284c-2d82-4917-a33e-be5a8f6735ff"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"expressionFromRules", "[", 
    RowBox[{"{", 
     RowBox[{"___", ",", " ", 
      RowBox[{"\"\<symbol\>\"", " ", "->", " ", "sym_"}], ",", " ", "___"}], 
     "}"}], "]"}], " ", ":=", " ", 
   RowBox[{"ToExpression", " ", "@", " ", "sym"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"expressionFromRules", "[", 
    RowBox[{"{", 
     RowBox[{"___", ",", " ", 
      RowBox[{"\"\<string\>\"", " ", "->", " ", "str_"}], ",", " ", "___"}], 
     "}"}], "]"}], " ", ":=", " ", 
   RowBox[{"ToExpression", " ", "@", " ", "str"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"expressionFromRules", "[", 
    RowBox[{"{", 
     RowBox[{"___", ",", " ", 
      RowBox[{"\"\<number\>\"", " ", "->", " ", "val_"}], ",", " ", "___"}], 
     "}"}], "]"}], " ", ":=", " ", 
   RowBox[{"ToExpression", " ", "@", " ", 
    RowBox[{"(", 
     RowBox[{"\"\<value\>\"", " ", "/.", " ", "val"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"expressionFromRules", "[", "rules_", "]"}], " ", ":=", " ", "\n",
     "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MatchQ", "[", 
       RowBox[{"rules", ",", 
        RowBox[{"{", 
         RowBox[{"___", ",", 
          RowBox[{"\"\<parts\>\"", "->", "_"}], ",", "___"}], "}"}]}], "]"}], 
      ",", "\n", "      ", 
      RowBox[{"Apply", "[", "\n", "        ", 
       RowBox[{
        RowBox[{"expressionFromRules", "  ", "@", " ", 
         RowBox[{"(", 
          RowBox[{"\"\<head\>\"", " ", "/.", " ", "rules"}], ")"}]}], ",", 
        "\n", "        ", 
        RowBox[{"expressionFromRules", " ", "/@", " ", 
         RowBox[{"(", 
          RowBox[{"\"\<parts\>\"", " ", "/.", " ", "rules"}], ")"}]}]}], 
       "]"}], ",", "\n", "      ", 
      RowBox[{"Throw", "[", "rules", "]"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"expressionFromRules", "[", "x___", "]"}], " ", ":=", " ", 
   RowBox[{"Throw", "[", 
    RowBox[{"{", "x", "}"}], "]"}]}], ";"}]}], "Code",
 CellLabel->
  "In[367]:=",ExpressionUUID->"7620bb13-a354-494d-991f-864c454cd3b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["stringifiedExpressionFromRules[ expr ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"9b76e979-0ec8-4b33-825d-8eb7d786e15f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"insertCommaSeparators", "[", "ss_List", "]"}], " ", ":=", " ", 
    RowBox[{"StringJoin", " ", "@@", " ", 
     RowBox[{"Riffle", "[", 
      RowBox[{"ss", ",", " ", "\"\<, \>\""}], "]"}]}]}], ";"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"result", " ", "=", " ", "\"\<\>\""}], "}"}], ",", "\n", 
      "\t\t", 
      RowBox[{
       RowBox[{"MapIndexed", "[", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"string", ",", " ", "part"}], "}"}], ",", "\n", 
           "\t\t\t\t", 
           RowBox[{"result", " ", "=", " ", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"part", "[", 
                RowBox[{"[", "1", "]"}], "]"}], " ", ">", " ", "1"}], ",", 
              "\n", "\t\t\t\t\t", 
              RowBox[{
              "result", " ", "<>", " ", "\"\<, \>\"", " ", "<>", " ", 
               "string"}], ",", "\n", "\t\t\t\t\t", 
              RowBox[{"result", " ", "<>", " ", "string"}]}], "]"}]}]}], 
          "]"}], ",", "\n", "\t\t\t", "ss"}], "]"}], ";", "\n", "\t\t", 
       "result"}]}], "]"}], ";"}], " ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"insertCommaSeparators", "[", "x___", "]"}], " ", ":=", " ", 
   RowBox[{"Throw", "[", 
    RowBox[{"{", "x", "}"}], "]"}]}], ";"}]}], "Code",
 CellLabel->
  "In[372]:=",ExpressionUUID->"a77f4c6b-d043-4860-a853-a92da54fd921"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"stringifiedExpressionFromRules", "[", 
    RowBox[{"{", 
     RowBox[{"___", ",", " ", 
      RowBox[{"\"\<symbol\>\"", " ", "->", " ", "sym_"}], ",", " ", "___"}], 
     "}"}], "]"}], " ", ":=", " ", "sym"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stringifiedExpressionFromRules", "[", 
    RowBox[{"{", 
     RowBox[{"___", ",", " ", 
      RowBox[{"\"\<string\>\"", " ", "->", " ", "str_"}], ",", " ", "___"}], 
     "}"}], "]"}], " ", ":=", " ", 
   RowBox[{
   "\"\<\\\"\>\"", " ", "<>", " ", "str", " ", "<>", " ", "\"\<\\\"\>\""}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"stringifiedExpressionFromRules", "[", 
   RowBox[{"{", 
    RowBox[{"___", ",", " ", 
     RowBox[{"\"\<number\>\"", " ", "->", " ", "val_"}], ",", " ", "___"}], 
    "}"}], "]"}], " ", ":=", " ", "\n", "\t", 
  RowBox[{"Switch", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\"\<subtype\>\"", " ", "/.", " ", "val"}], ")"}], ",", "\n", 
    "\t\t", "\"\<Integer\>\"", ",", " ", 
    RowBox[{"(", 
     RowBox[{"\"\<value\>\"", " ", "/.", " ", "val"}], ")"}], ",", "\n", 
    "\t\t", "\"\<Real\>\"", ",", "    ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\"\<value\>\"", " ", "/.", " ", "val"}], ")"}], " ", "<>", 
     " ", "\"\<`\>\""}], ",", "\n", "\t\t", "\"\<Complex\>\"", ",", " ", "\n",
     "\t\t\t", 
    RowBox[{
     RowBox[{"Quiet", " ", "@", " ", 
      RowBox[{"StringReplace", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\"\<value\>\"", " ", "/.", " ", "val"}], ")"}], ",", "\n", 
        "\t\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"p", ":", "NumberString"}], ")"}], " ", "~~", " ", 
          "\"\< + \>\"", " ", "~~", " ", 
          RowBox[{"(", 
           RowBox[{"q", ":", "NumberString"}], ")"}], " ", "~~", " ", 
          "\"\<*I\>\""}], " ", "->", "\n", "\t\t\t\t", 
         RowBox[{
         "\"\<Complex[\>\"", " ", "<>", " ", "p", " ", "<>", " ", 
          "\"\<, \>\"", " ", "<>", " ", "q", " ", "<>", " ", 
          "\"\<]\>\""}]}]}], " ", "]"}]}], " ", "//", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"Quiet", " ", "@", " ", 
       RowBox[{"StringReplace", "[", 
        RowBox[{"#", ",", "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"p", ":", 
             RowBox[{"DigitCharacter", "..."}]}], ")"}], " ", "~~", " ", 
           "\"\<.\>\"", " ", "~~", " ", 
           RowBox[{"(", 
            RowBox[{"q", ":", 
             RowBox[{"DigitCharacter", ".."}]}], ")"}]}], " ", "->", " ", 
          "\n", "\t\t\t\t", 
          RowBox[{
          "p", " ", "<>", " ", "\"\<.\>\"", " ", "<>", " ", "q", " ", "<>", 
           " ", "\"\<`\>\""}]}]}], "]"}]}], " ", "&"}]}], ",", "\n", "\t\t", 
    "_", ",", "         ", 
    RowBox[{"Throw", "[", 
     RowBox[{"{", "val", "}"}], "]"}]}], "\n", "\t\t", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stringifiedExpressionFromRules", "[", "rules_", "]"}], " ", ":=",
     " ", "\n", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MatchQ", "[", 
       RowBox[{"rules", ",", 
        RowBox[{"{", 
         RowBox[{"___", ",", " ", 
          RowBox[{"\"\<parts\>\"", " ", "->", " ", "_"}], ",", " ", "___"}], 
         "}"}]}], "]"}], ",", "\n", "      ", 
      RowBox[{
       RowBox[{"stringifiedExpressionFromRules", "  ", "@", " ", 
        RowBox[{"(", 
         RowBox[{"\"\<head\>\"", " ", "/.", " ", "rules"}], ")"}]}], " ", "<>",
        " ", "\"\<[\>\"", " ", "<>", "\n", "      ", 
       RowBox[{"insertCommaSeparators", " ", "[", "\n", "\t\t", 
        RowBox[{"stringifiedExpressionFromRules", " ", "/@", " ", 
         RowBox[{"(", 
          RowBox[{"\"\<parts\>\"", " ", "/.", " ", "rules"}], ")"}]}], " ", 
        "]"}], " ", "<>", " ", "\"\<]\>\""}], ",", "\n", "      ", 
      RowBox[{"Throw", "[", "rules", "]"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stringifiedExpressionFromRules", "[", "x___", "]"}], " ", ":=", 
   " ", 
   RowBox[{"Throw", "[", 
    RowBox[{"{", "x", "}"}], "]"}]}], ";"}]}], "Code",
 CellLabel->
  "In[374]:=",ExpressionUUID->"270778b8-2827-4a5c-905b-7e55434dfaba"]
}, Open  ]],

Cell[CellGroupData[{

Cell["rulesFromEvaluatableHeldExpression[ expr ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"d8289050-af99-4596-a38c-da0b14212eb2"],

Cell["\<\
Allows call of Evaluate inside the expression. Differs from \
\"rulesFromHeldExpression\" only in the Attributes -- \
rulesFromEvaluatableHeldExpression is HoldAll; rulesFromHeldExpression is \
HoldAllComplete. \
\>", "Text",ExpressionUUID->"2e8b0375-1677-45b8-b081-93a46dfcb951"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SetAttributes", "[", 
    RowBox[{"rulesFromEvaluatableHeldExpression", ",", " ", "HoldAll"}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"rulesFromEvaluatableHeldExpression", "[", 
   RowBox[{"expr_", " ", "/;", " ", 
    RowBox[{"NumberQ", " ", "@", " ", 
     RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}]}], "]"}], " ", ":=", 
  " ", "\n", "\t", 
  RowBox[{"rulesFromExpression", "[", "expr", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"rulesFromEvaluatableHeldExpression", "[", 
   RowBox[{"expr_", " ", "/;", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Head", " ", "@", " ", 
        RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}], " ", "===", " ", 
       "Symbol"}], " ", "&&", " ", 
      RowBox[{
       RowBox[{"AtomQ", " ", "@", " ", 
        RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}], " ", "===", " ", 
       "True"}]}], ")"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"{", "\n", "\t", 
   RowBox[{"\"\<symbol\>\"", " ", "->", " ", 
    RowBox[{"ToString", " ", "@", " ", 
     RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{"rulesFromEvaluatableHeldExpression", "[", 
   RowBox[{"expr_", " ", "/;", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Head", " ", "@", " ", 
       RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}], " ", "===", " ", 
      "String"}], ")"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"{", "\n", "\t", 
   RowBox[{"\"\<string\>\"", " ", "->", " ", 
    RowBox[{"ToString", " ", "@", " ", 
     RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{"rulesFromEvaluatableHeldExpression", "[", 
   RowBox[{"head_", "[", "parts___", "]"}], "]"}], " ", ":=", " ", 
  RowBox[{"{", "\n", "\t", 
   RowBox[{
    RowBox[{"\"\<head\>\"", "  ", "->", " ", 
     RowBox[{"rulesFromEvaluatableHeldExpression", "  ", "@", " ", "head"}]}],
     ",", " ", "\n", "\t", 
    RowBox[{"\"\<parts\>\"", " ", "->", " ", 
     RowBox[{"rulesFromEvaluatableHeldExpression", " ", "/@", " ", 
      RowBox[{"Unevaluated", " ", "@", " ", 
       RowBox[{"{", "parts", "}"}]}]}]}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rulesFromEvaluatableHeldExpression", "[", "x___", "]"}], " ", ":=",
    " ", 
   RowBox[{"Throw", " ", "@", " ", 
    RowBox[{"{", "x", "}"}]}]}], ";"}]}], "Code",
 CellLabel->
  "In[379]:=",ExpressionUUID->"8163b191-2503-4f5c-9dc6-58bd0e11efae"]
}, Open  ]],

Cell[CellGroupData[{

Cell["rulesFromHeldExpression[ expr ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"fc94bfba-19c7-4dab-afaf-70fe2d9db925"],

Cell["\<\
Applies maximal quoting to input expressions. Will even quote calls of \
\"Evaluate\". \
\>", "Text",ExpressionUUID->"04da459c-8ea4-49e2-be36-3283e39db558"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SetAttributes", "[", 
    RowBox[{"rulesFromHeldExpression", ",", " ", "HoldAllComplete"}], "]"}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"rulesFromHeldExpression", "[", 
   RowBox[{"expr_", " ", "/;", " ", 
    RowBox[{"NumberQ", " ", "@", " ", 
     RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}]}], "]"}], " ", ":=", 
  " ", "\n", "\t", 
  RowBox[{"rulesFromExpression", "[", "expr", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"rulesFromHeldExpression", "[", 
   RowBox[{"expr_", " ", "/;", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Head", " ", "@", " ", 
        RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}], " ", "===", " ", 
       "Symbol"}], " ", "&&", " ", 
      RowBox[{
       RowBox[{"AtomQ", " ", "@", " ", 
        RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}], " ", "===", " ", 
       "True"}]}], ")"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"{", "\n", "\t", 
   RowBox[{"\"\<symbol\>\"", " ", "->", " ", 
    RowBox[{"ToString", " ", "@", " ", 
     RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{"rulesFromHeldExpression", "[", 
   RowBox[{"expr_", " ", "/;", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Head", " ", "@", " ", 
       RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}], " ", "===", " ", 
      "String"}], ")"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"{", "\n", "\t", 
   RowBox[{"\"\<string\>\"", " ", "->", " ", 
    RowBox[{"ToString", " ", "@", " ", 
     RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{"rulesFromHeldExpression", "[", 
   RowBox[{"head_", "[", "parts___", "]"}], "]"}], " ", ":=", " ", 
  RowBox[{"{", "\n", "\t", 
   RowBox[{
    RowBox[{"\"\<head\>\"", "  ", "->", " ", 
     RowBox[{"rulesFromHeldExpression", "  ", "@", " ", "head"}]}], ",", " ", 
    "\n", "\t", 
    RowBox[{"\"\<parts\>\"", " ", "->", " ", 
     RowBox[{"rulesFromHeldExpression", " ", "/@", " ", 
      RowBox[{"Unevaluated", " ", "@", " ", 
       RowBox[{"{", "parts", "}"}]}]}]}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rulesFromHeldExpression", "[", "x___", "]"}], " ", ":=", " ", 
   RowBox[{"Throw", " ", "@", " ", 
    RowBox[{"{", "x", "}"}]}]}], ";"}]}], "Code",
 CellLabel->
  "In[385]:=",ExpressionUUID->"490605d1-1812-4670-8144-10c51f8a285b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["jsonStringFromHeldExpression[ expr ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"f2cff17d-4d36-4756-bb6a-63f06b29145d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SetAttributes", "[", 
    RowBox[{"jsonStringFromHeldExpression", ",", " ", "HoldAllComplete"}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jsonStringFromHeldExpression", "[", "expr_", "]"}], " ", ":=", 
   "\n", "  ", 
   RowBox[{
    RowBox[{"ExportString", "[", 
     RowBox[{
      RowBox[{"rulesFromHeldExpression", "[", "expr", "]"}], ",", " ", 
      "\"\<JSON\>\""}], "]"}], " ", "//", " ", "\n", "    ", 
    RowBox[{
     RowBox[{"StringReplace", "[", 
      RowBox[{"#", ",", 
       RowBox[{"Whitespace", "->", "\"\<\>\""}]}], "]"}], "&"}]}]}], 
  ";"}]}], "Code",
 CellLabel->
  "In[391]:=",ExpressionUUID->"fd4ee73f-e39f-460c-b861-1f6bdbcf51ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell["expressionFromJsonString[ str ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"dbb42862-8ab9-42f9-8e87-c1fc197b6ddf"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"expressionFromJsonString", "[", "str_String", "]"}], " ", ":=", 
   "\n", "  ", 
   RowBox[{"expressionFromRules", " ", "@", " ", 
    RowBox[{"ImportString", "[", 
     RowBox[{"str", ",", " ", "\"\<JSON\>\""}], "]"}]}]}], ";"}]], "Code",
 CellLabel->
  "In[393]:=",ExpressionUUID->"150e6b6b-df80-443b-913c-6398abd20779"]
}, Open  ]],

Cell[CellGroupData[{

Cell["captive[ expr ] -- a direct mapping to S-expressions", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"21d709c9-ecb8-418b-a260-60d69a3a13da"],

Cell["Less verbose output", "Text",ExpressionUUID->"b55d9cff-9f40-4254-97f8-b096ed5c7a10"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SetAttributes", "[", 
    RowBox[{"captive", ",", " ", "HoldAll"}], "]"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"NOT", " ", "HoldAllComplete"}], " ", "*)"}]}]], "Code",
 CellLabel->
  "In[394]:=",ExpressionUUID->"b5c7b59a-786b-4213-91df-eb75cf85d7f2"],

Cell["Rules for Atoms", "Text",ExpressionUUID->"02484a4b-c72d-4bbf-b1e9-d34478799697"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"captive", "[", 
     RowBox[{"expr_", " ", "/;", " ", 
      RowBox[{"AtomQ", " ", "@", " ", 
       RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}]}], "]"}], " ", ":=", 
    " ", "\n", "  ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"Quiet", "[", 
       RowBox[{"ValueQ", " ", "@", " ", "expr"}], "]"}], ",", " ", 
      RowBox[{"captive", " ", "@", " ", 
       RowBox[{"Evaluate", " ", "@", " ", "expr"}]}], ",", " ", "expr"}], 
     "]"}]}], ";"}], " "}]], "Code",
 CellLabel->
  "In[395]:=",ExpressionUUID->"9ee56195-4d24-493c-889c-e4330c4f66f2"],

Cell["Rules for non-Atoms", "Text",ExpressionUUID->"71f1bc89-0874-44f6-817a-31fa8e0008c4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"captive", "[", 
   RowBox[{"head_", "[", "parts___", "]"}], "]"}], " ", ":=", " ", "\n", "  ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"captive", " ", "@", " ", "head"}], "}"}], " ", "~", "Join", "~", 
   " ", 
   RowBox[{"(", 
    RowBox[{"captive", " ", "/@", " ", 
     RowBox[{"(", 
      RowBox[{"Unevaluated", " ", "@", " ", 
       RowBox[{"{", "parts", "}"}]}], ")"}]}], ")"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"captive", "[", "x___", "]"}], " ", ":=", " ", 
   RowBox[{"Throw", "[", 
    RowBox[{"{", "x", "}"}], "]"}]}], ";"}]}], "Code",
 CellLabel->
  "In[396]:=",ExpressionUUID->"6c080a35-40c8-498e-a077-c51a6f789946"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
jaqCaptive[ expr ] -- TODO: a 
more Jacquard-ish captive\
\>", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"e3780f67-5a3f-4006-89b4-22f2aa79c83d"],

Cell["Less verbose output", "Text",ExpressionUUID->"03491a5e-0e3d-4b3c-8602-51661b2c9096"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SetAttributes", "[", 
    RowBox[{"jaqCaptive", ",", " ", "HoldAll"}], "]"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"NOT", " ", "HoldAllComplete"}], " ", "*)"}]}]], "Code",
 CellLabel->
  "In[398]:=",ExpressionUUID->"0250971a-bcf0-4304-86bd-ebe1ee928bde"],

Cell["Rules for Atoms", "Text",ExpressionUUID->"add2d11d-d825-4fd8-8743-b2e5f6bf4109"],

Cell[BoxData[
 RowBox[{
  RowBox[{"jaqCaptive", "[", 
   RowBox[{"expr_", " ", "/;", " ", 
    RowBox[{"AtomQ", " ", "@", " ", 
     RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}]}], "]"}], " ", ":=", 
  " ", "\n", "  ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"Quiet", "[", 
     RowBox[{"ValueQ", " ", "@", " ", "expr"}], "]"}], ",", " ", 
    RowBox[{"captive", " ", "@", " ", 
     RowBox[{"Evaluate", " ", "@", " ", "expr"}]}], ",", " ", "expr"}], 
   "]"}]}]], "Code",
 CellLabel->
  "In[399]:=",ExpressionUUID->"e51e53f3-f757-4460-83ce-8c47001219f9"],

Cell["Rules for non-Atoms", "Text",ExpressionUUID->"75a67e81-495d-440f-b610-19c2976b4399"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"jaqCaptive", "[", 
   RowBox[{"head_", "[", "parts___", "]"}], "]"}], " ", ":=", " ", "\n", "  ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"jaqCaptive", " ", "@", " ", "head"}], "}"}], " ", "~", "Join", 
   "~", " ", 
   RowBox[{"(", 
    RowBox[{"jaqCaptive", " ", "/@", " ", 
     RowBox[{"(", 
      RowBox[{"Unevaluated", " ", "@", " ", 
       RowBox[{"{", "parts", "}"}]}], ")"}]}], ")"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jaqCaptive", "[", "x___", "]"}], " ", ":=", " ", 
   RowBox[{"Throw", "[", 
    RowBox[{"{", "x", "}"}], "]"}]}], ";"}]}], "Code",
 CellLabel->
  "In[400]:=",ExpressionUUID->"b8c7bf2a-613b-4b8b-a10e-6b7190e5b948"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["HTTP Post Interfaces", "Subsection",
 FontWeight->"Bold",ExpressionUUID->"9f63a398-d374-4970-a237-cd5cde694e93"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"jacquardPostExpression", ",", " ", "HoldFirst"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"jacquardPostExpression", "[", "\n", "    ", 
   RowBox[{"request_", ",", "\n", "    ", 
    RowBox[{"importer_", ":", "expressionFromRules"}], ",", "\n", "    ", 
    RowBox[{"url_", ":", " ", "\"\<http://127.0.0.1:5000/jacquard\>\""}]}], 
   "\n", "]"}], " ", ":=", "\n", "  ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\n", "      ", 
     RowBox[{
     "requestExprString", ",", "\n", "      ", "client", ",", " ", "method", 
      ",", "\n", "      ", "entity", ",", " ", "responseCode", ",", " ", 
      "response", ",", "\n", "      ", "responseRules", ",", " ", 
      "responseExpression"}], "}"}], ",", "\n", "    ", 
    RowBox[{"JavaBlock", "[", "\n", "      ", 
     RowBox[{
      RowBox[{"requestExprString", " ", "=", " ", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"Unevaluated", "[", "request", "]"}], ",", " ", 
         "InputForm"}], "]"}]}], ";", "\n", "      ", 
      RowBox[{"Print", "[", "requestExprString", "]"}], ";", "\n", "      ", 
      RowBox[{"client", "=", 
       RowBox[{
       "JavaNew", "[", "\n", "        ", 
        "\"\<org.apache.commons.httpclient.HttpClient\>\"", "]"}]}], ";", 
      "\n", "      ", 
      RowBox[{"method", "=", 
       RowBox[{"JavaNew", "[", "\n", "        ", 
        RowBox[{
        "\"\<org.apache.commons.httpclient.methods.PostMethod\>\"", ",", 
         "url"}], "]"}]}], ";", "\n", "      ", 
      RowBox[{"entity", "=", 
       RowBox[{"JavaNew", "[", "\n", "        ", 
        RowBox[{
        "\"\<org.apache.commons.httpclient.methods.StringRequestEntity\>\"", 
         ",", "\n", "        ", "requestExprString"}], "]"}]}], ";", "\n", 
      "      ", 
      RowBox[{"method", " ", "@", " ", 
       RowBox[{"setRequestHeader", "[", 
        RowBox[{"\"\<Content-Type\>\"", ",", " ", "\"\<text/plain\>\""}], 
        "]"}]}], ";", "\n", "      ", 
      RowBox[{"method", " ", "@", " ", 
       RowBox[{"setRequestEntity", "[", "entity", "]"}]}], ";", "\n", 
      "      ", 
      RowBox[{"responseCode", "=", 
       RowBox[{"client", " ", "@", " ", 
        RowBox[{"executeMethod", "[", "method", "]"}]}]}], ";", "\n", 
      "      ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"responseCode", " ", "===", " ", "200"}], ",", "\n", 
        "        ", 
        RowBox[{"(*", " ", "then", " ", "*)"}], "\n", "        ", 
        RowBox[{
         RowBox[{"response", " ", "=", " ", 
          RowBox[{"method", " ", "@", " ", 
           RowBox[{"getResponseBodyAsString", "[", "]"}]}]}], ";", "\n", 
         "        ", 
         RowBox[{"responseRules", " ", "=", " ", 
          RowBox[{"ImportString", "[", 
           RowBox[{"response", ",", "\"\<JSON\>\""}], "]"}]}], ";", "\n", 
         "        ", 
         RowBox[{"responseExpression", " ", "=", " ", 
          RowBox[{"importer", " ", "@", " ", "responseRules"}]}]}], ",", "\n",
         "        ", 
        RowBox[{"(*", " ", "else", " ", "*)"}], "\n", "        ", 
        RowBox[{
         RowBox[{"Message", "[", "\n", "          ", 
          RowBox[{
           RowBox[{"jacquardPostRules", "::", "httperr"}], ",", "\n", 
           "          ", "responseCode"}], "]"}], ";", "\n", "          ", 
         "$Failed"}]}], "\n", "        ", "]"}]}], "]"}]}], "]"}]}]}], "Code",\

 CellLabel->
  "In[402]:=",ExpressionUUID->"81a041b3-1a85-4a89-8a62-d73393f31edf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"jacquardPostRules", "[", "\n", "    ", 
   RowBox[{"request_", ",", "\n", "    ", 
    RowBox[{"importer_", ":", "expressionFromRules"}], ",", "\n", "    ", 
    RowBox[{"url_", ":", " ", "\"\<http://127.0.0.1:5000/jacquard\>\""}]}], 
   "\n", "]"}], " ", ":=", "\n", "  ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\n", "      ", 
     RowBox[{
     "requestJsonString", ",", "\n", "      ", "client", ",", " ", "method", 
      ",", "\n", "      ", "entity", ",", " ", "responseCode", ",", " ", 
      "response", ",", "\n", "      ", "responseRules", ",", " ", 
      "responseExpression"}], "}"}], ",", "\n", "    ", 
    RowBox[{"JavaBlock", "[", "\n", "      ", 
     RowBox[{
      RowBox[{"requestJsonString", "=", 
       RowBox[{"ExportString", "[", 
        RowBox[{"request", ",", "\"\<JSON\>\""}], "]"}]}], ";", "\n", 
      "      ", 
      RowBox[{"client", "=", 
       RowBox[{
       "JavaNew", "[", "\n", "        ", 
        "\"\<org.apache.commons.httpclient.HttpClient\>\"", "]"}]}], ";", 
      "\n", "      ", 
      RowBox[{"method", "=", 
       RowBox[{"JavaNew", "[", "\n", "        ", 
        RowBox[{
        "\"\<org.apache.commons.httpclient.methods.PostMethod\>\"", ",", 
         "url"}], "]"}]}], ";", "\n", "      ", 
      RowBox[{"entity", "=", 
       RowBox[{"JavaNew", "[", "\n", "        ", 
        RowBox[{
        "\"\<org.apache.commons.httpclient.methods.StringRequestEntity\>\"", 
         ",", "\n", "        ", "requestJsonString"}], "]"}]}], ";", "\n", 
      "      ", 
      RowBox[{"method", " ", "@", " ", 
       RowBox[{"setRequestHeader", "[", 
        RowBox[{
        "\"\<Content-Type\>\"", ",", " ", "\"\<application/json\>\""}], 
        "]"}]}], ";", "\n", "      ", 
      RowBox[{"method", " ", "@", " ", 
       RowBox[{"setRequestEntity", "[", "entity", "]"}]}], ";", "\n", 
      "      ", 
      RowBox[{"responseCode", "=", 
       RowBox[{"client", " ", "@", " ", 
        RowBox[{"executeMethod", "[", "method", "]"}]}]}], ";", "\n", 
      "      ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"responseCode", " ", "===", " ", "200"}], ",", "\n", 
        "        ", 
        RowBox[{"(*", " ", "then", " ", "*)"}], "\n", "        ", 
        RowBox[{
         RowBox[{"response", " ", "=", " ", 
          RowBox[{"method", " ", "@", " ", 
           RowBox[{"getResponseBodyAsString", "[", "]"}]}]}], ";", "\n", 
         "        ", 
         RowBox[{"responseRules", " ", "=", " ", 
          RowBox[{"ImportString", "[", 
           RowBox[{"response", ",", "\"\<JSON\>\""}], "]"}]}], ";", "\n", 
         "        ", 
         RowBox[{"responseExpression", " ", "=", " ", 
          RowBox[{"importer", " ", "@", " ", "responseRules"}]}]}], ",", "\n",
         "        ", 
        RowBox[{"(*", " ", "else", " ", "*)"}], "\n", "        ", 
        RowBox[{
         RowBox[{"Message", "[", "\n", "          ", 
          RowBox[{
           RowBox[{"jacquardPostRules", "::", "httperr"}], ",", "\n", 
           "          ", "responseCode"}], "]"}], ";", "\n", "          ", 
         "$Failed"}]}], "\n", "        ", "]"}]}], "]"}]}], "]"}]}]], "Code",
 CellLabel->
  "In[404]:=",ExpressionUUID->"e8e1a2cb-7f07-454b-8689-0fe7fb6079cc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"jacquardEvalExpression", "[", "\n", "    ", 
    RowBox[{"requestExpr_", ",", "\n", "    ", 
     RowBox[{"importer_", ":", "expressionFromRules"}], ",", "\n", "    ", 
     RowBox[{"url_", ":", " ", "\"\<http://127.0.0.1:5000/jacquard\>\""}]}], 
    "]"}], " ", ":=", "\n", "  ", 
   RowBox[{"jacquardPostRules", "[", 
    RowBox[{
     RowBox[{"rulesFromExpression", " ", "@", " ", "requestExpr"}], ",", " ", 
     "importer", ",", " ", "url"}], "]"}]}], ";"}]], "Code",
 CellLabel->
  "In[405]:=",ExpressionUUID->"6eb0fbb7-85e1-49ab-b632-01eac5a469b2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"jacquardEvalHeldExpression", ",", "HoldAllComplete"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jacquardEvalHeldExpression", "[", "\n", "    ", 
    RowBox[{"requestExpr_", ",", "\n", "    ", 
     RowBox[{"importer_", ":", "expressionFromRules"}], ",", "\n", "    ", 
     RowBox[{"url_", ":", " ", "\"\<http://127.0.0.1:5000/jacquard\>\""}]}], 
    "]"}], " ", ":=", "\n", "  ", 
   RowBox[{"jacquardPostRules", "[", 
    RowBox[{
     RowBox[{"rulesFromHeldExpression", "[", "requestExpr", "]"}], ",", " ", 
     "importer", ",", " ", "url"}], "]"}]}], ";"}]}], "Code",
 CellLabel->
  "In[406]:=",ExpressionUUID->"4b7b4a58-3b0c-4de9-a813-efdede4ad051"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "jacquardEvalEvaluatableHeldExpression", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"jacquardEvalEvaluatableHeldExpression", ",", "HoldAllComplete"}], 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jacquardEvalEvaluatableHeldExpression", "[", "\n", "    ", 
    RowBox[{"requestExpr_", ",", "\n", "    ", 
     RowBox[{"importer_", ":", "expressionFromRules"}], ",", "\n", "    ", 
     RowBox[{"url_", ":", " ", "\"\<http://127.0.0.1:5000/jacquard\>\""}]}], 
    "]"}], " ", ":=", "\n", "  ", 
   RowBox[{"jacquardPostRules", "[", 
    RowBox[{
     RowBox[{"rulesFromEvaluatableHeldExpression", "[", "requestExpr", "]"}], 
     ",", " ", "importer", ",", " ", "url"}], "]"}]}], ";"}]}], "Code",
 CellLabel->
  "In[408]:=",ExpressionUUID->"60d46b24-1a4b-489d-bd01-e6c760592a14"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"jacquardStringifiedEvalHeldExpression", ",", "HoldAllComplete"}], 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jacquardStringifiedEvalHeldExpression", "[", "\n", "    ", 
    RowBox[{"requestExpr_", ",", "\n", "    ", 
     RowBox[{"url_", ":", "\"\<http://127.0.0.1:5000/jacquard\>\""}]}], "]"}],
    " ", ":=", "\n", "  ", 
   RowBox[{"jacquardPostRules", "[", 
    RowBox[{
     RowBox[{"rulesFromHeldExpression", "[", "requestExpr", "]"}], ",", " ", 
     "stringifiedExpressionFromRules", ",", " ", "url"}], "]"}]}], 
  ";"}]}], "Code",
 CellLabel->
  "In[411]:=",ExpressionUUID->"4c5b263d-7092-4123-b209-e77c955f261a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Ends", "Subsection",
 FontWeight->"Bold",ExpressionUUID->"7537c387-7323-4ff0-9a0d-0b5588483013"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"End", "[", "]"}], ";"}], 
  RowBox[{"(*", " ", "Private", " ", "*)"}]}]], "Code",
 CellLabel->
  "In[413]:=",ExpressionUUID->"377f5257-1ece-4e4d-ba13-ff834e5f99bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]], "Code",
 CellLabel->
  "In[414]:=",ExpressionUUID->"918ae5e9-ed89-472f-8b8a-42240344be15"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Units", "Subsection",
 CellChangeTimes->{{3.91346620745632*^9, 3.913466207992731*^9}},
 FontWeight->"Bold",ExpressionUUID->"894b628a-bb6d-446b-8011-dd1c8ba04cff"],

Cell[TextData[{
 "All quantities are in bits unless otherwise stated. E.g., 576 means \
\[OpenCurlyDoubleQuote]576 bits\[CloseCurlyDoubleQuote] One Kib is 1024 bits. \
One Mib is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"1024", "*", "1024"}], "=", "1048576"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "8d83fe17-7e4f-4e54-be09-52e2688dd97b"],
 " bits."
}], "Text",
 CellChangeTimes->{{3.9134599372687902`*^9, 3.91346004698563*^9}, {
  3.913464978511443*^9, 3.9134649818795757`*^9}, {3.913473335917804*^9, 
  3.913473363294248*^9}},ExpressionUUID->"8a4d7e42-023c-40a8-ab10-\
8f81ae606672"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantityMagnitude", "[", 
  RowBox[{"1024", 
   TemplateBox[{
     InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
    "Quantity"]}], "]"}]], "Input",
 CellChangeTimes->{{3.913464986789818*^9, 3.913464997825039*^9}},
 CellLabel->
  "In[415]:=",ExpressionUUID->"17e11793-12a4-41d3-a00b-76212d548a51"],

Cell[BoxData["1024"], "Output",
 CellChangeTimes->{3.9134650042505074`*^9, 3.9134662908975163`*^9, 
  3.9134726325020847`*^9, 3.9134726919594927`*^9, 3.913640842829493*^9, 
  3.91364199695116*^9, 3.9136443855751963`*^9, 3.913646597548736*^9, 
  3.913646831003454*^9, 3.913646891786708*^9, 3.9136475091826353`*^9, 
  3.913741375091742*^9, 3.913748860539134*^9, 3.913749123260173*^9, 
  3.913751431748497*^9, 3.9137521130984383`*^9, 3.913753546976122*^9},
 CellLabel->
  "Out[415]=",ExpressionUUID->"ba5fd9e6-689a-4dd8-a71c-623d6dd75c56"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantityMagnitude", "[", 
  RowBox[{
   RowBox[{"1", 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"Kib\"", "kibibits", 
      "\"Kibibits\""},
     "Quantity"]}], ",", 
   TemplateBox[{
     InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
    "Quantity"]}], "]"}]], "Input",
 CellChangeTimes->{{3.913465013376729*^9, 3.91346507200178*^9}},
 CellLabel->
  "In[416]:=",ExpressionUUID->"403c9da7-de3b-4b5d-8ce2-93f2af135512"],

Cell[BoxData["1024"], "Output",
 CellChangeTimes->{{3.913465051707905*^9, 3.913465059068859*^9}, 
   3.913465094139686*^9, 3.91346629101661*^9, 3.9134726325773478`*^9, 
   3.9134726920141983`*^9, 3.913640843003228*^9, 3.91364199951018*^9, 
   3.913644385740367*^9, 3.913646597716599*^9, 3.9136468311708*^9, 
   3.913646891975788*^9, 3.913647509346789*^9, 3.913741375269058*^9, 
   3.913748860708372*^9, 3.913749123437142*^9, 3.9137514317572813`*^9, 
   3.9137521131027737`*^9, 3.9137535469808693`*^9},
 CellLabel->
  "Out[416]=",ExpressionUUID->"dce44f2b-1b50-498d-abfc-9a305e636378"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantityMagnitude", "[", 
  RowBox[{
   RowBox[{"1", 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"Mib\"", "mebibits", 
      "\"Mebibits\""},
     "Quantity"]}], ",", 
   TemplateBox[{
     InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
    "Quantity"]}], "]"}]], "Input",
 CellChangeTimes->{{3.913465096280878*^9, 3.913465135576432*^9}},
 CellLabel->
  "In[417]:=",ExpressionUUID->"207884bd-3e3c-4bb4-a8a4-3ed5c082a5ba"],

Cell[BoxData["1048576"], "Output",
 CellChangeTimes->{3.9134651090830593`*^9, 3.913465147399488*^9, 
  3.9134662910237226`*^9, 3.913472632589038*^9, 3.913472692019792*^9, 
  3.913640843011631*^9, 3.9136420059774303`*^9, 3.91364438575097*^9, 
  3.913646597729985*^9, 3.91364683118146*^9, 3.9136468919879723`*^9, 
  3.913647509357738*^9, 3.913741375279866*^9, 3.913748860719811*^9, 
  3.913749123447175*^9, 3.91375143176274*^9, 3.913752113109824*^9, 
  3.913753546989582*^9},
 CellLabel->
  "Out[417]=",ExpressionUUID->"373b703b-80fb-4413-a1a0-89bf4fc93948"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Error Messages", "Subsection",
 CellChangeTimes->{{3.913405398649191*^9, 3.913405405812077*^9}},
 FontWeight->"Bold",ExpressionUUID->"d2b22d21-9128-4b2c-bb34-3840452aab68"],

Cell["\<\
Defined with open argument lists, future-proofing later improvements.\
\>", "Text",
 CellChangeTimes->{{3.913454541625052*^9, 3.9134545633592577`*^9}, 
   3.913747818533589*^9},ExpressionUUID->"fecf91e9-0d85-4a8c-94d0-\
870a8ffcd3ed"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"argMsg", ",", "undefined", ",", "illegal", ",", "nyi"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"argMsg", "[", "___", "]"}], ":=", 
   "\"\<One or more arguments are out of range.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"undefined", "[", "___", "]"}], ":=", 
  "\"\<Operation undefined.\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"illegal", "[", "___", "]"}], ":=", 
  "\"\<Illegal operation.\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nyi", "[", "___", "]"}], ":=", 
  "\"\<Not yet implemented.\>\""}]}], "Input",
 CellChangeTimes->{{3.913405414730081*^9, 3.9134054291014147`*^9}, {
  3.913412242374647*^9, 3.913412250347446*^9}, {3.9134536094319143`*^9, 
  3.913453649122951*^9}, {3.913453684983429*^9, 3.913453689617097*^9}, {
  3.913643122091002*^9, 3.913643132675167*^9}, {3.9136433867483797`*^9, 
  3.913643388673891*^9}},
 CellLabel->
  "In[418]:=",ExpressionUUID->"3e6d4f79-d9e6-43d1-914b-406a163edca0"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Global Parameters", "Section",
 CellChangeTimes->{{3.913406635656062*^9, 3.9134066377840137`*^9}, {
  3.91374197114415*^9, 3.913741974916288*^9}},
 FontWeight->"Bold",ExpressionUUID->"38ce5bba-abeb-447f-9921-e0711f467ee7"],

Cell[CellGroupData[{

Cell["Global Modes", "Subsection",
 CellChangeTimes->{{3.913741962855627*^9, 3.913741967230596*^9}},
 FontWeight->"Bold",ExpressionUUID->"8c1da47a-ee85-47d6-b344-990faf75b1d8"],

Cell["In GVML, more registers are reserved (open question).", "Text",
 CellChangeTimes->{{3.913406643675159*^9, 3.9134066591291027`*^9}, {
  3.913409812657983*^9, 
  3.913409816041049*^9}},ExpressionUUID->"7e7e40bb-bcef-4e48-bce9-\
66818b27ea34"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "GVMLmode", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GVMLmode", "=", "True"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9134098222763443`*^9, 3.913409845578425*^9}, {
  3.913411354759479*^9, 3.913411356066916*^9}},
 CellLabel->
  "In[423]:=",ExpressionUUID->"c7117b70-b1f2-4725-9f43-a71f3384694d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["MMB Parameters", "Subsection",
 CellChangeTimes->{{3.913741838742887*^9, 3.913741845331361*^9}, {
  3.9137419798004837`*^9, 3.913741981134694*^9}},
 FontWeight->"Bold",ExpressionUUID->"96445b4c-0980-4255-8806-435dec960025"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "sectionsPerBank", ",", "groupsPerBank", ",", "banksPerCore", ",", 
    "coresPerChip", ",", "bitLinesPerWordLine"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sectionsPerBank", "=", "8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"groupsPerBank", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"banksPerCore", "=", "8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coresPerChip", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitLinesPerWordLine", "=", "4096"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9137418640722237`*^9, 3.913741896808861*^9}, {
   3.913746254097533*^9, 3.913746298878591*^9}, {3.913746383448924*^9, 
   3.913746385014186*^9}, {3.9137465365332937`*^9, 3.913746548978928*^9}, {
   3.913746746452059*^9, 3.913746783816826*^9}, 3.913747519654841*^9, {
   3.913749783306571*^9, 3.91374979551821*^9}},
 CellLabel->
  "In[425]:=",ExpressionUUID->"22b6a661-0d5c-4c50-a94a-02a97e53d2dc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["SEU Registers", "Section"]], "Section",
 CellChangeTimes->{{3.913369030747135*^9, 3.913369036648312*^9}},
 FontWeight->"Bold",ExpressionUUID->"3ec8a088-47c6-4c17-b678-206d76763c30"],

Cell["Per core.", "Text",
 CellChangeTimes->{{3.9137476794854918`*^9, 
  3.913747684429793*^9}},ExpressionUUID->"7dadefef-3bd5-4c1f-b282-\
704280f69acd"],

Cell[CellGroupData[{

Cell["How Many?", "Subsection",
 CellChangeTimes->{{3.913465765261924*^9, 3.913465768550272*^9}},
 FontWeight->"Bold",ExpressionUUID->"bc2dd19b-04b3-425d-92f9-c53535d39ae8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "nRN", ",", "nRN$", ",", "nSM", ",", "nL1R", ",", "nL1R$", ",", "nL2R$", 
    ",", "nL2R", ",", "nGP", ",", "nLP"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nRN", "=", "32"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nRN$", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nSM", "=", "16"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nL1R", "=", "8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nL1R$", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nL2R", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nL2R$", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nGP", "=", "16"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nLP", "=", "4"}], ";"}]}], "Input",
 CellChangeTimes->{{3.91336904165549*^9, 3.9133692914474792`*^9}, {
   3.9133693267640753`*^9, 3.91336942110597*^9}, {3.9133777507671757`*^9, 
   3.913377808031684*^9}, 3.913379415050074*^9, {3.913405036781934*^9, 
   3.913405038479692*^9}, {3.9136410152083693`*^9, 3.913641063653507*^9}},
 CellLabel->
  "In[431]:=",ExpressionUUID->"4c0ea9c0-ecc4-4b18-a07d-b1ef34f2fbbe"]
}, Open  ]],

Cell[CellGroupData[{

Cell["How Wide?", "Subsection",
 CellChangeTimes->{{3.913465776423272*^9, 3.913465781944626*^9}},
 FontWeight->"Bold",ExpressionUUID->"8d8f8580-e90f-4ce0-bc97-d19fbbf94478"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "wRN", ",", "wSM", ",", "wL1R", ",", "wL2R", ",", "wGP", ",", "wLP"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wRN", "=", "18"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wSM", "=", "8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wL1R", "=", "16"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wL2R", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wGP", "=", "16"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wLP", "=", "12"}], ";"}]}], "Input",
 CellChangeTimes->{{3.91336904165549*^9, 3.9133692914474792`*^9}, {
   3.9133693267640753`*^9, 3.91336942110597*^9}, {3.9133777507671757`*^9, 
   3.913377808031684*^9}, 3.913379415050074*^9, {3.913405036781934*^9, 
   3.9134050421572657`*^9}},
 CellLabel->
  "In[441]:=",ExpressionUUID->"91770af6-dff2-4383-b864-2686e1fb23ba"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Storage", "Subsection",
 CellChangeTimes->{{3.913465790293207*^9, 3.913465791449828*^9}},
 FontWeight->"Bold",ExpressionUUID->"7b56d7ce-4dff-4046-b6eb-083a6088eee2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "RNstore", ",", "RN$store", ",", "SMstore", ",", "L1Rstore", ",", 
    "L1R$store", ",", "L2Rstore", ",", "L2R$store", ",", "GPstore", ",", 
    "LPstore"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RNstore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"nRN", ",", "wRN"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"576", 
   TemplateBox[{
     InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
    "Quantity"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RN$store", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"nRN$", ",", "wRN"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"36", 
   InterpretationBox["\[InvisibleSpace]",
    1], 
   InterpretationBox["\[InvisibleSpace]",
    1], 
   TemplateBox[{
     RowBox[{
       InterpretationBox["\[InvisibleSpace]", 1], " "}], "\"b\"", "bits", 
     "\"Bits\""},
    "Quantity"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMstore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"nSM", ",", "wSM"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"128", 
   TemplateBox[{
     InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
    "Quantity"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L1Rstore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"nL1R", ",", "wL1R"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"128", 
   TemplateBox[{
     InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
    "Quantity"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L1R$store", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"nL1R$", ",", "wL1R"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"16", 
   TemplateBox[{
     InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
    "Quantity"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L2Rstore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"nL2R", ",", "wL2R"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"16", 
   TemplateBox[{
     InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
    "Quantity"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L2R$store", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"nL2R$", ",", "wL2R"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"4", " ", 
   TemplateBox[{
     InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
    "Quantity"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GPstore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"nGP", ",", "wGP"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"256", 
   TemplateBox[{
     InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
    "Quantity"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LPstore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"nLP", ",", "wLP"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"48", 
   TemplateBox[{
     InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
    "Quantity"]}], ";"}]}], "Input",
 CellChangeTimes->{{3.91336904165549*^9, 3.9133692914474792`*^9}, {
   3.9133693267640753`*^9, 3.91336942110597*^9}, {3.9133777507671757`*^9, 
   3.913377808031684*^9}, 3.913379415050074*^9, {3.913405036781934*^9, 
   3.9134050421572657`*^9}, {3.91345928184797*^9, 3.9134594363504343`*^9}, {
   3.9134656983854837`*^9, 3.913465719288731*^9}, {3.913641093725071*^9, 
   3.9136411342783422`*^9}, {3.913641199407439*^9, 3.913641325726514*^9}, {
   3.9136413600883617`*^9, 3.91364151539191*^9}},
 CellLabel->
  "In[448]:=",ExpressionUUID->"fe7e4204-5253-4934-a536-1d3342189b04"]
}, Open  ]],

Cell[CellGroupData[{

Cell["RN", "Subsection",
 CellChangeTimes->{{3.913405383684835*^9, 3.913405383824853*^9}},
 FontWeight->"Bold",ExpressionUUID->"ade8c261-1c6d-46e1-a4d4-06924d60adca"],

Cell[TextData[{
 StyleBox["RNZero", "Input"],
 " is special, but we don\[CloseCurlyQuote]t know what it is, yet."
}], "Text",
 CellChangeTimes->{{3.913405549729392*^9, 
  3.913405562546917*^9}},ExpressionUUID->"e8d6f8ec-650e-4d54-82a2-\
b2690f1154d8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClearAll", "[", "RNZero", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.91340556741885*^9, 3.913405575070277*^9}},
 CellLabel->
  "In[458]:=",ExpressionUUID->"8243b4e2-fe10-4523-a764-c1d30833c2f1"],

Cell[TextData[{
 "Can\[CloseCurlyQuote]t use ",
 StyleBox["RN[[31+1]]", "Input"],
 ". Values are stored as integers and retrieved as bit-vectors. Getter is ",
 StyleBox["RN[n]", "Input"],
 " or ",
 StyleBox["RN[[n+1]]", "Input"],
 " (avoid, except in implementation of function forms with single square \
brackets), where ",
 StyleBox["n", "Input"],
 " is a 0-based index, returning a cross-section (columnar) value of ",
 StyleBox["wRN", "Input"],
 " bits. Setter is ",
 StyleBox["RN[n,newVal]", "Input"],
 " returning ",
 StyleBox["newVal", "Input"],
 ", which is an integer between 0 (inclusive) and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", "wRN"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b139ef3e-4472-4949-80c5-90a65070619f"],
 " (exclusive)."
}], "Text",
 CellChangeTimes->{{3.9134050999605083`*^9, 3.9134051091414948`*^9}, {
  3.913405270429778*^9, 3.913405295916654*^9}, {3.913405444011445*^9, 
  3.9134054675750647`*^9}, {3.913642913175972*^9, 3.913642991476124*^9}, {
  3.913643025528248*^9, 3.913643051442593*^9}, {3.913750148073802*^9, 
  3.913750189093378*^9}, {3.913750223694858*^9, 3.9137502243297567`*^9}, {
  3.913750420806567*^9, 3.913750425501153*^9}, {3.9137504645083027`*^9, 
  3.913750544632862*^9}, {3.913750713677096*^9, 
  3.913750730447854*^9}},ExpressionUUID->"ac85bdb0-5022-4d3f-add7-\
f64a8b47ea7b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"RN", ",", "RNillegal"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RN", "[", 
    RowBox[{"rn_Integer", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"#", "<", "nRN"}], ")"}], "&"}], ")"}]}], "]"}], ":=", 
   RowBox[{"RNstore", "[", 
    RowBox[{"[", 
     RowBox[{"rn", "+", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RN", "[", 
    RowBox[{
     RowBox[{"rn_Integer", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"#", "<", "nRN"}], ")"}], "&"}], ")"}]}], ",", 
     RowBox[{"newVal_Integer", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0", "<=", "#", "<", 
          SuperscriptBox["2", "wRN"]}], ")"}], "&"}], ")"}]}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RNstore", "[", 
     RowBox[{"[", 
      RowBox[{"rn", "+", "1"}], "]"}], "]"}], "=", 
    RowBox[{"IntegerDigits", "[", 
     RowBox[{"newVal", ",", "2"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RNillegal", "=", "31"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RN", "[", "RNillegal", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"illegal", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RN", "[", "___", "]"}], ":=", " ", 
   RowBox[{"Throw", "[", 
    RowBox[{"argMsg", "[", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.913377235792734*^9, 3.913377384653007*^9}, {
   3.913377467703455*^9, 3.913377561825926*^9}, {3.9133775921165667`*^9, 
   3.91337767544387*^9}, 3.913377757844816*^9, {3.913377812309288*^9, 
   3.913377848064885*^9}, {3.913379437949976*^9, 3.913379498164866*^9}, {
   3.913379643689788*^9, 3.913379718519044*^9}, {3.91337996087108*^9, 
   3.913380015766099*^9}, {3.9133800723836517`*^9, 3.9133801243124847`*^9}, {
   3.913380381783443*^9, 3.913380432078824*^9}, {3.913380488707341*^9, 
   3.913380552671476*^9}, {3.91338061490949*^9, 3.913380651174829*^9}, {
   3.9133834860655327`*^9, 3.913383641421735*^9}, {3.9133836858283*^9, 
   3.913383801846324*^9}, {3.913383847987875*^9, 3.913383973794216*^9}, {
   3.9134047160497847`*^9, 3.9134047541903667`*^9}, {3.913404805032063*^9, 
   3.913404966181066*^9}, {3.913405024233035*^9, 3.913405027909916*^9}, 
   3.913405410390194*^9, {3.913405996314307*^9, 3.9134059987143173`*^9}, {
   3.913453680457136*^9, 3.913453681067068*^9}, {3.913453732475659*^9, 
   3.913453768282888*^9}, {3.913454583123309*^9, 3.913454603371889*^9}, {
   3.913454699999263*^9, 3.913454708386525*^9}, {3.91345474555648*^9, 
   3.913454747162093*^9}, {3.913454779877508*^9, 3.9134547812892237`*^9}, {
   3.9136416260552397`*^9, 3.913641663181611*^9}, {3.9136417748295383`*^9, 
   3.9136417951987143`*^9}, {3.913642057180911*^9, 3.913642057481846*^9}, {
   3.913643061410719*^9, 3.9136430681620417`*^9}, {3.913750448673834*^9, 
   3.913750454838819*^9}},
 CellLabel->
  "In[459]:=",ExpressionUUID->"08862b2e-bd29-469b-85c3-ebf3a7762621"],

Cell[CellGroupData[{

Cell["Unit Tests", "Subsubsection",
 CellChangeTimes->{{3.913405318233304*^9, 3.913405324962141*^9}, {
  3.913405524325865*^9, 3.913405526693739*^9}},
 FontWeight->"Bold",ExpressionUUID->"f6e1b9a9-e80a-4942-b37a-14d5b683dbe5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"On", "[", "Assert", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.913377235792734*^9, 3.913377384653007*^9}, {
   3.913377467703455*^9, 3.913377561825926*^9}, {3.9133775921165667`*^9, 
   3.91337767544387*^9}, 3.913377757844816*^9, {3.913377812309288*^9, 
   3.913377848064885*^9}, {3.913379437949976*^9, 3.913379498164866*^9}, {
   3.913379643689788*^9, 3.913379718519044*^9}, {3.91337996087108*^9, 
   3.913380015766099*^9}, {3.9133800723836517`*^9, 3.9133801243124847`*^9}, {
   3.913380381783443*^9, 3.913380432078824*^9}, {3.913380488707341*^9, 
   3.913380552671476*^9}, {3.91338061490949*^9, 3.913380651174829*^9}, {
   3.9133834860655327`*^9, 3.913383641421735*^9}, {3.9133836858283*^9, 
   3.913383801846324*^9}, {3.913383847987875*^9, 3.913383973794216*^9}, {
   3.9134047160497847`*^9, 3.9134047541903667`*^9}, {3.913404805032063*^9, 
   3.913404966181066*^9}, 3.913405024233035*^9},
 CellLabel->
  "In[465]:=",ExpressionUUID->"f708d845-acfd-4ed1-9a4a-3f6a216f4263"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"IntegerDigits", "[", 
     RowBox[{"42", ",", "2"}], "]"}], "==", 
    RowBox[{"RN", "[", 
     RowBox[{"17", ",", "42"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"42", "==", 
    RowBox[{"FromDigits", "[", 
     RowBox[{
      RowBox[{"RN", "[", "17", "]"}], ",", "2"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"illegal", "[", "]"}], "==", 
    RowBox[{"Catch", "[", 
     RowBox[{"FromDigits", "[", 
      RowBox[{"RN", "[", "31", "]"}], "]"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Assert", "[", 
  RowBox[{
   RowBox[{"argMsg", "[", "]"}], "==", 
   RowBox[{"Catch", "[", 
    RowBox[{"FromDigits", "[", 
     RowBox[{"RN", "[", 
      RowBox[{"17", ",", "300000"}], "]"}], "]"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Assert", "[", 
  RowBox[{
   RowBox[{"argMsg", "[", "]"}], "==", 
   RowBox[{"Catch", "[", 
    RowBox[{"FromDigits", "[", 
     RowBox[{"RN", "[", 
      RowBox[{"300", ",", "42"}], "]"}], "]"}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.913377235792734*^9, 3.913377384653007*^9}, {
   3.913377467703455*^9, 3.913377561825926*^9}, {3.9133775921165667`*^9, 
   3.91337767544387*^9}, 3.913377757844816*^9, {3.913377812309288*^9, 
   3.913377848064885*^9}, {3.913379437949976*^9, 3.913379498164866*^9}, {
   3.913379643689788*^9, 3.913379718519044*^9}, {3.91337996087108*^9, 
   3.913380015766099*^9}, {3.9133800723836517`*^9, 3.9133801243124847`*^9}, {
   3.913380381783443*^9, 3.913380432078824*^9}, {3.913380488707341*^9, 
   3.913380552671476*^9}, {3.91338061490949*^9, 3.913380651174829*^9}, {
   3.9133834860655327`*^9, 3.913383641421735*^9}, {3.9133836858283*^9, 
   3.913383801846324*^9}, {3.913383847987875*^9, 3.913383973794216*^9}, {
   3.9134047160497847`*^9, 3.9134047541903667`*^9}, {3.913404805032063*^9, 
   3.913404966181066*^9}, {3.913405310598888*^9, 3.913405312618538*^9}, {
   3.913453669565752*^9, 3.913453721673718*^9}, {3.913453759327818*^9, 
   3.9134537843478622`*^9}, {3.913454632057108*^9, 3.913454678902617*^9}, {
   3.91345472558751*^9, 3.9134547578239098`*^9}, {3.913454790194524*^9, 
   3.913454792281712*^9}},
 CellLabel->
  "In[466]:=",ExpressionUUID->"d34adc51-70d9-4d60-b3fa-863dbdde39df"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["RN$", "Subsection",
 CellChangeTimes->{{3.913640970146043*^9, 3.913640977609565*^9}},
 FontWeight->"Bold",ExpressionUUID->"c0f8f4bb-78e7-4e33-91d1-6d761efb8cf2"],

Cell["A 2-level cache for RN.", "Text",
 CellChangeTimes->{{3.913640981097344*^9, 3.913640984326784*^9}, {
  3.913643097703992*^9, 
  3.913643103534374*^9}},ExpressionUUID->"7ce5f8b1-9b31-4760-9852-\
e272e96ea97b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "RN$", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RN$", "[", 
    RowBox[{"rn_Integer", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"#", "<", "nRN$"}], ")"}], "&"}], ")"}]}], "]"}], ":=", 
   RowBox[{"RN$store", "[", 
    RowBox[{"[", 
     RowBox[{"rn", "+", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RN$", "[", 
    RowBox[{
     RowBox[{"rn_Integer", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"#", "<", "nRN$"}], ")"}], "&"}], ")"}]}], ",", 
     RowBox[{"newVal_Integer", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0", "<=", "#", "<", 
          SuperscriptBox["2", "wRN"]}], ")"}], "&"}], ")"}]}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RN$store", "[", 
     RowBox[{"[", 
      RowBox[{"rn", "+", "1"}], "]"}], "]"}], "=", 
    RowBox[{"IntegerDigits", "[", 
     RowBox[{"newVal", ",", "2"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RN$", "[", "___", "]"}], ":=", " ", 
   RowBox[{"Throw", "[", 
    RowBox[{"argMsg", "[", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.913377235792734*^9, 3.913377384653007*^9}, {
   3.913377467703455*^9, 3.913377561825926*^9}, {3.9133775921165667`*^9, 
   3.91337767544387*^9}, 3.913377757844816*^9, {3.913377812309288*^9, 
   3.913377848064885*^9}, {3.913379437949976*^9, 3.913379498164866*^9}, {
   3.913379643689788*^9, 3.913379718519044*^9}, {3.91337996087108*^9, 
   3.913380015766099*^9}, {3.9133800723836517`*^9, 3.9133801243124847`*^9}, {
   3.913380381783443*^9, 3.913380432078824*^9}, {3.913380488707341*^9, 
   3.913380552671476*^9}, {3.91338061490949*^9, 3.913380651174829*^9}, {
   3.9133834860655327`*^9, 3.913383641421735*^9}, {3.9133836858283*^9, 
   3.913383801846324*^9}, {3.913383847987875*^9, 3.913383973794216*^9}, {
   3.9134047160497847`*^9, 3.9134047541903667`*^9}, {3.913404805032063*^9, 
   3.913404966181066*^9}, {3.913405024233035*^9, 3.913405027909916*^9}, 
   3.913405410390194*^9, {3.913405996314307*^9, 3.9134059987143173`*^9}, {
   3.913453680457136*^9, 3.913453681067068*^9}, {3.913453732475659*^9, 
   3.913453768282888*^9}, {3.913454583123309*^9, 3.913454603371889*^9}, {
   3.913454699999263*^9, 3.913454708386525*^9}, {3.91345474555648*^9, 
   3.913454747162093*^9}, {3.913454779877508*^9, 3.9134547812892237`*^9}, {
   3.913641079502533*^9, 3.913641082862482*^9}, {3.913641690299734*^9, 
   3.91364175220287*^9}, {3.913641817687901*^9, 3.913641820142301*^9}, {
   3.913643081548212*^9, 3.913643087279584*^9}, {3.913750585329795*^9, 
   3.913750594837448*^9}},
 CellLabel->
  "In[471]:=",ExpressionUUID->"45e94f2b-d6c0-44cf-bb6f-debad13aa471"]
}, Open  ]],

Cell[CellGroupData[{

Cell["SM", "Subsection",
 CellChangeTimes->{{3.913405628032413*^9, 3.913405628185795*^9}},
 FontWeight->"Bold",ExpressionUUID->"5af2f7c2-b1e2-4159-b039-c6e09045abde"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "SM", ",", "SM0XFF", ",", "SM0X01", ",", "SM0X03", ",", "SM0X11", ",", 
    "SM0X55", ",", "SM0XAA"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SMstore", "[", 
    RowBox[{"[", 
     RowBox[{"0", "+", "1"}], "]"}], "]"}], "=", 
   RowBox[{"IntegerDigits", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Interpreter", "[", "\"\<HexInteger\>\"", "]"}], "[", 
      "\"\<0xFF\>\"", "]"}], ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SMstore", "[", 
    RowBox[{"[", 
     RowBox[{"1", "+", "1"}], "]"}], "]"}], "=", 
   RowBox[{"IntegerDigits", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Interpreter", "[", "\"\<HexInteger\>\"", "]"}], "[", 
      "\"\<0x01\>\"", "]"}], ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SMstore", "[", 
    RowBox[{"[", 
     RowBox[{"2", "+", "1"}], "]"}], "]"}], "=", 
   RowBox[{"IntegerDigits", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Interpreter", "[", "\"\<HexInteger\>\"", "]"}], "[", 
      "\"\<0x03\>\"", "]"}], ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SMstore", "[", 
    RowBox[{"[", 
     RowBox[{"3", "+", "1"}], "]"}], "]"}], "=", 
   RowBox[{"IntegerDigits", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Interpreter", "[", "\"\<HexInteger\>\"", "]"}], "[", 
      "\"\<0x11\>\"", "]"}], ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SM0XFF", ":=", 
    RowBox[{"SMstore", "[", 
     RowBox[{"[", 
      RowBox[{"0", "+", "1"}], "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"read", "-", 
    RowBox[{"only", " ", "access"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SM0X01", ":=", 
   RowBox[{"SMstore", "[", 
    RowBox[{"[", 
     RowBox[{"1", "+", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SM0X03", ":=", 
   RowBox[{"SMstore", "[", 
    RowBox[{"[", 
     RowBox[{"2", "+", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SM0X11", ":=", 
   RowBox[{"SMstore", "[", 
    RowBox[{"[", 
     RowBox[{"3", "+", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SM0X55", ":=", 
   RowBox[{"If", "[", 
    RowBox[{"GVMLmode", ",", 
     RowBox[{"SM", "[", "4", "]"}], ",", 
     RowBox[{"Throw", "[", 
      RowBox[{"undefined", "[", "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SM0XAA", ":=", 
   RowBox[{"If", "[", 
    RowBox[{"GVMLmode", ",", 
     RowBox[{"SM", "[", "5", "]"}], ",", 
     RowBox[{"Throw", "[", 
      RowBox[{"undefined", "[", "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SM", "[", 
    RowBox[{"sm_Integer", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0", "<=", "#", "<", "4"}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{"6", "<=", "#", "<", "8"}], ")"}]}], ")"}], "&"}], ")"}]}], 
    "]"}], ":=", 
   RowBox[{"SMstore", "[", 
    RowBox[{"[", 
     RowBox[{"sm", "+", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SM", "[", "4", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{"GVMLmode", ",", 
     RowBox[{"IntegerDigits", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Interpreter", "[", "\"\<HexInteger\>\"", "]"}], "[", 
        "\"\<0x55\>\"", "]"}], ",", "2"}], "]"}], ",", 
     RowBox[{"SMstore", "[", 
      RowBox[{"[", 
       RowBox[{"4", "+", "1"}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SM", "[", "5", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{"GVMLmode", ",", 
     RowBox[{"IntegerDigits", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Interpreter", "[", "\"\<HexInteger\>\"", "]"}], "[", 
        "\"\<0xAA\>\"", "]"}], ",", "2"}], "]"}], ",", 
     RowBox[{"SMstore", "[", 
      RowBox[{"[", 
       RowBox[{"5", "+", "1"}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SM", "[", 
    RowBox[{
     RowBox[{"sm_Integer", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"6", "<=", "#", "<", "8"}], ")"}], "&"}], ")"}]}], ",", 
     RowBox[{"newVal_Integer", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0", "<=", "#", "<", 
          SuperscriptBox["2", "wSM"]}], ")"}], "&"}], ")"}]}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SMstore", "[", 
     RowBox[{"[", 
      RowBox[{"sm", "+", "1"}], "]"}], "]"}], "=", 
    RowBox[{"IntegerDigits", "[", 
     RowBox[{"newVal", ",", "2"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SM", "[", 
    RowBox[{
     RowBox[{"sm", ":", 
      RowBox[{"(", 
       RowBox[{"4", "|", "5"}], ")"}]}], ",", 
     RowBox[{"newVal_Integer", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0", "<=", "#", "<", 
          SuperscriptBox["2", "wSM"]}], ")"}], "&"}], ")"}]}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{"GVMLmode", ",", 
     RowBox[{"Throw", "[", 
      RowBox[{"illegal", "[", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"SMstore", "[", 
       RowBox[{"[", 
        RowBox[{"sm", "+", "1"}], "]"}], "]"}], "=", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"newVal", ",", "2"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SM", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"argMsg", "[", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.913377235792734*^9, 3.913377384653007*^9}, {
   3.913377467703455*^9, 3.913377561825926*^9}, {3.9133775921165667`*^9, 
   3.91337767544387*^9}, 3.913377757844816*^9, {3.913377812309288*^9, 
   3.913377848064885*^9}, {3.913379437949976*^9, 3.913379498164866*^9}, {
   3.913379643689788*^9, 3.913379718519044*^9}, {3.91337996087108*^9, 
   3.913380015766099*^9}, {3.9133800723836517`*^9, 3.9133801243124847`*^9}, {
   3.913380381783443*^9, 3.913380432078824*^9}, {3.913380488707341*^9, 
   3.913380552671476*^9}, {3.91338061490949*^9, 3.913380651174829*^9}, {
   3.9133834860655327`*^9, 3.913383641421735*^9}, {3.9133836858283*^9, 
   3.913383801846324*^9}, {3.913383847987875*^9, 3.913383973794216*^9}, {
   3.9134047160497847`*^9, 3.9134047541903667`*^9}, {3.913404805032063*^9, 
   3.913404966181066*^9}, 3.913405310598888*^9, 3.9134055406750793`*^9, {
   3.913405605923749*^9, 3.9134057788277884`*^9}, 3.9134058258654947`*^9, {
   3.9134105733086643`*^9, 3.913410798813284*^9}, {3.913411064899219*^9, 
   3.9134112741909103`*^9}, {3.913411329234653*^9, 3.913411365095737*^9}, {
   3.913411654758087*^9, 3.913411680192525*^9}, {3.913411723274469*^9, 
   3.9134118371809196`*^9}, {3.913411927341474*^9, 3.9134121387500153`*^9}, {
   3.9134121792523108`*^9, 3.9134122077941837`*^9}, {3.91345380333709*^9, 
   3.913453808930229*^9}, {3.913453840241802*^9, 3.9134540274431267`*^9}, {
   3.913454057863386*^9, 3.913454106641694*^9}, {3.913454153353602*^9, 
   3.913454211823806*^9}, {3.913454249085059*^9, 3.9134542858968277`*^9}, {
   3.913454366435285*^9, 3.913454406486171*^9}, {3.913454842940522*^9, 
   3.913454843009272*^9}, {3.913454957025388*^9, 3.913454986574548*^9}, 
   3.913455142336795*^9, {3.9137416628623857`*^9, 3.9137416818490753`*^9}, {
   3.913750605632085*^9, 3.91375066663482*^9}},
 CellLabel->
  "In[475]:=",ExpressionUUID->"263feafb-68c8-4fdb-8f8c-d01a00ac2591"],

Cell[CellGroupData[{

Cell["Unit Tests", "Subsubsection",
 CellChangeTimes->{{3.91340583320234*^9, 3.913405836221067*^9}},
 FontWeight->"Bold",ExpressionUUID->"04a1224b-8f60-41af-9bea-44422f50bd4e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"GVMLmode", "=", "True"}], "}"}], ",", 
    RowBox[{"Assert", "[", "GVMLmode", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"GVMLmode", "=", "False"}], "}"}], ",", 
    RowBox[{"Assert", "[", 
     RowBox[{"Not", "[", "GVMLmode", "]"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"GVMLmode", "=", "True"}], "}"}], ",", 
    RowBox[{"Assert", "[", 
     RowBox[{"85", "==", 
      RowBox[{"FromDigits", "[", 
       RowBox[{
        RowBox[{"SM", "[", "4", "]"}], ",", "2"}], "]"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"GVMLmode", "=", "False"}], "}"}], ",", 
    RowBox[{"Assert", "[", 
     RowBox[{"0", "==", 
      RowBox[{"FromDigits", "[", 
       RowBox[{
        RowBox[{"SM", "[", "4", "]"}], ",", "2"}], "]"}]}], "]"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.913411410617795*^9, 3.91341158313978*^9}, {
   3.9134543060010567`*^9, 3.913454353717781*^9}, 3.913454458046311*^9},
 CellLabel->
  "In[492]:=",ExpressionUUID->"581c24b1-b797-4e02-95f5-f2b18414d69b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"argMsg", "[", "]"}], "==", 
    RowBox[{"Catch", "[", 
     RowBox[{"SM", "[", 
      RowBox[{"0", ",", "42"}], "]"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"255", "==", 
    RowBox[{"FromDigits", "[", 
     RowBox[{
      RowBox[{"SM", "[", "0", "]"}], ",", "2"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"255", "==", 
    RowBox[{"FromDigits", "[", 
     RowBox[{"SM0XFF", ",", "2"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"GVMLmode", "=", "True"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Assert", "[", 
     RowBox[{"85", "==", 
      RowBox[{"FromDigits", "[", 
       RowBox[{"SM0X55", ",", "2"}], "]"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"GVMLmode", "=", "False"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Assert", "[", 
     RowBox[{
      RowBox[{"undefined", "[", "]"}], "==", 
      RowBox[{"Catch", "@", 
       RowBox[{"FromDigits", "[", 
        RowBox[{
         RowBox[{"Echo", "@", "SM0X55"}], ",", "2"}], "]"}]}]}], "]"}]}], 
   "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.913377235792734*^9, 3.913377384653007*^9}, {
   3.913377467703455*^9, 3.913377561825926*^9}, {3.9133775921165667`*^9, 
   3.91337767544387*^9}, 3.913377757844816*^9, {3.913377812309288*^9, 
   3.913377848064885*^9}, {3.913379437949976*^9, 3.913379498164866*^9}, {
   3.913379643689788*^9, 3.913379718519044*^9}, {3.91337996087108*^9, 
   3.913380015766099*^9}, {3.9133800723836517`*^9, 3.9133801243124847`*^9}, {
   3.913380381783443*^9, 3.913380432078824*^9}, {3.913380488707341*^9, 
   3.913380552671476*^9}, {3.91338061490949*^9, 3.913380651174829*^9}, {
   3.9133834860655327`*^9, 3.913383641421735*^9}, {3.9133836858283*^9, 
   3.913383801846324*^9}, {3.913383847987875*^9, 3.913383973794216*^9}, {
   3.9134047160497847`*^9, 3.9134047541903667`*^9}, {3.913404805032063*^9, 
   3.913404961744899*^9}, {3.9134058679306593`*^9, 3.913405889107308*^9}, {
   3.913410767669981*^9, 3.9134107812321243`*^9}, {3.913410814323598*^9, 
   3.91341102465407*^9}, {3.913454889867787*^9, 3.9134549442250137`*^9}, {
   3.913455020472911*^9, 3.913455027656764*^9}, {3.9134550734362087`*^9, 
   3.913455202625085*^9}},
 CellLabel->
  "In[496]:=",ExpressionUUID->"287af2d0-eebf-4a38-8ba6-b7b846b3f68c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Shadowing \[LongDash] Shadow Mask Enable", "Subsection",
 CellChangeTimes->{{3.9134591765936823`*^9, 3.91345919781993*^9}},
 FontWeight->"Bold",ExpressionUUID->"e92ea7ab-ebd2-4521-bd7c-54294000e3ac"],

Cell["\<\
Shadowing has no power ramifications. Power consumption is the same whether \
shadowing is enabled or not.\
\>", "Text",
 CellChangeTimes->{{3.9137480307082157`*^9, 
  3.913748067474972*^9}},ExpressionUUID->"83dd286a-fd1d-4c9a-a02b-\
e299417ea21a"],

Cell["TODO", "Text",
 CellChangeTimes->{{3.913465179190652*^9, 
  3.9134651800788727`*^9}},ExpressionUUID->"dfcfb9a6-3aac-490b-93cb-\
b4f9b2089047"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Memory Model", "Section",
 CellChangeTimes->{{3.913459219665821*^9, 3.913459222273942*^9}},
 FontWeight->"Bold",ExpressionUUID->"310498a4-5a0f-45d0-bb5c-d2ce528a4060"],

Cell[CellGroupData[{

Cell["Per Core", "Subsection",
 CellChangeTimes->{{3.913465417000654*^9, 3.913465418355474*^9}},
 FontWeight->"Bold",ExpressionUUID->"47d11e8c-b442-41de-aa25-7d42972cf853"],

Cell[CellGroupData[{

Cell["L2", "Subsubsection",
 CellChangeTimes->{{3.9134663120680103`*^9, 3.91346631234371*^9}},
 FontWeight->"Bold",ExpressionUUID->"f7712b0e-7194-4b45-baf4-f2c10a643945"],

Cell[TextData[{
 "Model as flat storage for now. Express DMA transactions via overloads of \
accessor function ",
 StyleBox["L2", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.913642772661375*^9, 3.913642820368548*^9}, {
  3.9137489348279743`*^9, 
  3.9137489359732237`*^9}},ExpressionUUID->"7bc07e70-632e-4c13-9e3d-\
723aea1047c5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "L2", ",", "L2store", ",", "L2rows", ",", "L2leftColGroups", ",", 
    "L2rightColGroups", ",", "L2colsPerGroup", ",", "L2cols", ",", "L2dims"}],
    "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L2rows", "=", "16"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L2leftColGroups", "=", "32"}], ";", 
  RowBox[{"L2rightColGroups", "=", "32"}], ";", 
  RowBox[{"L2colsPerGroup", "=", "64"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L2cols", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"L2leftColGroups", "+", "L2rightColGroups"}], ")"}], "*", 
    "L2colsPerGroup"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L2dims", "=", 
   RowBox[{"{", 
    RowBox[{"L2rows", ",", "L2cols"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L2store", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "L2dims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"L2", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Times", "@@", "L2dims"}], 
  TemplateBox[{
    InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
   "Quantity"]}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "L2dims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
     
     "Quantity"]}], ",", "\"\<Kebibit\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.913459859943615*^9, 3.913459923890294*^9}, 
   3.913460148377887*^9, {3.9134601823532476`*^9, 3.913460185577817*^9}, {
   3.913464939966411*^9, 3.91346496489507*^9}, {3.913465396273439*^9, 
   3.913465402953084*^9}, {3.9134655987340612`*^9, 3.913465601458982*^9}, {
   3.913465633415092*^9, 3.913465661041072*^9}, {3.9134709181673317`*^9, 
   3.913470957735427*^9}, {3.9136423501003847`*^9, 3.91364239696066*^9}, {
   3.913642529384925*^9, 3.9136425709032507`*^9}, {3.91364263639631*^9, 
   3.913642756271289*^9}, {3.913642806858741*^9, 3.913642846875936*^9}, {
   3.913643143050487*^9, 3.913643153774807*^9}},
 CellLabel->
  "In[501]:=",ExpressionUUID->"b243217a-67fc-41af-be92-f024e641ff60"],

Cell[BoxData[
 TemplateBox[{"65536", "\"b\"", "bits", "\"Bits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{
  3.913460187073296*^9, 3.913464954692483*^9, 3.913465186647312*^9, 
   3.913465406666918*^9, 3.913465677392568*^9, 3.913466291083045*^9, 
   3.91347095838933*^9, 3.913472632640368*^9, 3.913472692059536*^9, 
   3.9136408431302757`*^9, 3.913642091792081*^9, 3.913642397704528*^9, {
   3.9136427431352386`*^9, 3.9136427567666883`*^9}, 3.913642828416203*^9, 
   3.9136431579701653`*^9, 3.913644385853881*^9, 3.9136465978377438`*^9, 
   3.913646831297676*^9, 3.913646892100563*^9, 3.9136475094664803`*^9, 
   3.913741375398986*^9, 3.913748861698598*^9, 3.9137491243770857`*^9, 
   3.9137514318006477`*^9, 3.9137521132133827`*^9, 3.913753547095624*^9},
 CellLabel->
  "Out[508]=",ExpressionUUID->"c96636cf-70f9-4336-a112-33a145a5caa8"],

Cell[BoxData[
 TemplateBox[{"64", "\"Kib\"", "kibibits", "\"Kibibits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{
  3.913460187073296*^9, 3.913464954692483*^9, 3.913465186647312*^9, 
   3.913465406666918*^9, 3.913465677392568*^9, 3.913466291083045*^9, 
   3.91347095838933*^9, 3.913472632640368*^9, 3.913472692059536*^9, 
   3.9136408431302757`*^9, 3.913642091792081*^9, 3.913642397704528*^9, {
   3.9136427431352386`*^9, 3.9136427567666883`*^9}, 3.913642828416203*^9, 
   3.9136431579701653`*^9, 3.913644385853881*^9, 3.9136465978377438`*^9, 
   3.913646831297676*^9, 3.913646892100563*^9, 3.9136475094664803`*^9, 
   3.913741375398986*^9, 3.913748861698598*^9, 3.9137491243770857`*^9, 
   3.9137514318006477`*^9, 3.9137521132133827`*^9, 3.913753547972631*^9},
 CellLabel->
  "Out[509]=",ExpressionUUID->"d9841e3d-1e5a-4432-b1b5-61ed35956a0e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["L1", "Subsubsection",
 CellChangeTimes->{{3.91346631761656*^9, 3.913466318169228*^9}},
 FontWeight->"Bold",ExpressionUUID->"701b9949-772f-447b-864c-13f0159270cf"],

Cell[TextData[{
 StyleBox["L1bitsPerBank", "Input"],
 " 4K columns are divided into 2K left (red) and 2K right (green). Implement \
that division in accessor functions."
}], "Text",
 CellChangeTimes->{{3.9136453344372473`*^9, 3.913645386721456*^9}, {
  3.913646034831551*^9, 
  3.913646052843143*^9}},ExpressionUUID->"faa1447d-93db-47ba-946b-\
268a4215ec60"],

Cell["\<\
The doc implies the following 4\[NoBreak]-\[NoBreak]index model for L1 \
memory. This model does not introduce a 16\[NoBreak]-\[NoBreak]bit \
\[OpenCurlyDoubleQuote]row\[CloseCurlyDoubleQuote] concept and it makes \
groups explicit.\
\>", "Text",
 CellChangeTimes->{{3.9136477673009872`*^9, 3.913647877103188*^9}, {
  3.913749007894505*^9, 
  3.9137490467161293`*^9}},ExpressionUUID->"5eb90d68-6334-4dfe-bf69-\
c8dd9aab86f9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "L1", ",", "L1store", ",", "L1wordLinesPerGroup", ",", "L1groupsPerBank", 
    ",", "L1colsPerWordLine", ",", "L1dims"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L1wordLinesPerGroup", "=", 
   RowBox[{"3", "*", "1024"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L1groupsPerBank", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L1colsPerWordLine", "=", "bitLinesPerWordLine"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L1dims", "=", 
   RowBox[{"{", 
    RowBox[{
    "banksPerCore", ",", "L1groupsPerBank", ",", "L1wordLinesPerGroup", ",", 
     "L1colsPerWordLine"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L1store", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "L1dims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"L1", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "L1dims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
     
     "Quantity"]}], ",", "\"\<Mebibits\>\""}], "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQ3SO6xjxU461jiq6EBYj+VGa9NhxIq5je2A+iWfqz
T4Dohjle90B0YLnNIxBtsl/wMYiuZDtYHgWkX36wqgDRFnf+1oHoL+cjG0F0
gv/HpeuAdPaOtytBdNKc5L3rgfTTmTfOgujP/G6XQLTPhW/3QHTYjf3PQHRa
9S8wvWDzxncg+uK6yo8g+pWhyzcQrZM2F0wz+y35D6I3OvqxbgDS140WCIPo
ukJ/BRDt9PqzCog+9uCeOoj2MzM1BdERQt/BdMOJMGsQnXLS0g5ER0X7OoNo
lWo2NxC953pBNIjOD98Ephe9MewE0SYtMstAdO6u6+tA9Crue2C61Mv1/0Mg
fePkHqZHQBoAVemyzQ==
  "],
 CellLabel->
  "In[510]:=",ExpressionUUID->"63fccaa4-7d0e-4b51-9770-2918871d063e"],

Cell[BoxData[
 TemplateBox[{"192", "\"Mib\"", "mebibits", "\"Mebibits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.913647398972289*^9, 3.913647409374524*^9}, {
   3.913647470237835*^9, 3.913647480144869*^9}, 3.913647510535163*^9, 
   3.913741376384939*^9, 3.9137485272234993`*^9, 3.9137488617412148`*^9, 
   3.913749124420918*^9, 3.913751431846036*^9, 3.9137521140874767`*^9, 
   3.913753548088585*^9},
 CellLabel->
  "Out[517]=",ExpressionUUID->"4cfaa7e3-81a9-47bf-b29d-3aadb25a642b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["MMB", "Subsubsection",
 CellChangeTimes->{{3.913466325340633*^9, 3.913466326113264*^9}},
 FontWeight->"Bold",ExpressionUUID->"c0c5aa46-2bf3-4200-bced-550c3809895d"],

Cell["\<\
Leaving \[OpenCurlyDoubleQuote]groups\[CloseCurlyDoubleQuote] to a semantic \
level, i.e., accessor functions, because they are not contiguous, but \
interleaved even and odd.\
\>", "Text",
 CellChangeTimes->{{3.913648650888393*^9, 
  3.913648685928679*^9}},ExpressionUUID->"0218c080-c1f9-4f92-8318-\
d65ab9434752"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "MMB", ",", "MMBstore", ",", "MMBsectionsPerBank", ",", 
    "MMBsegmentsPerSection", ",", "MMBwordLinesPerSegment", ",", 
    "MMBcolsPerWordLine", ",", "MMBbanks", ",", "MMBdims"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MMBsectionsPerBank", "=", "sectionsPerBank"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MMBsegmentsPerSection", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MMBwordLinesPerSegment", "=", "24"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MMBcolsPerWordLine", "=", "bitLinesPerWordLine"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MMBbanks", "=", "banksPerCore"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MMBdims", "=", 
   RowBox[{"{", 
    RowBox[{
    "MMBbanks", ",", "MMBsectionsPerBank", ",", "MMBsegmentsPerSection", ",", 
     "MMBwordLinesPerSegment", ",", "MMBcolsPerWordLine"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MMBstore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "MMBdims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MMB", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "MMBdims"}], " ", 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
     
     "Quantity"]}], ",", "\"\<Mebibits\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.9136479741716957`*^9, 3.913647982868064*^9}, {
  3.913648019257586*^9, 3.913648047737266*^9}, {3.9136483106600513`*^9, 
  3.91364863966917*^9}, {3.913748540317141*^9, 3.91374857312465*^9}, {
  3.913748616284842*^9, 3.9137486179009657`*^9}, {3.913748691058878*^9, 
  3.9137487283987427`*^9}},
 CellLabel->
  "In[518]:=",ExpressionUUID->"36baf6c3-55da-43f0-9af1-f5b803d12771"],

Cell[BoxData[
 TemplateBox[{"12", "\"Mib\"", "mebibits", "\"Mebibits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.9136486059123983`*^9, 3.9136486408622026`*^9, 
  3.913741376398696*^9, 3.9137486187363997`*^9, 3.913748861755398*^9, 
  3.913749124435604*^9, 3.913751431861837*^9, 3.913752114102201*^9, 
  3.9137535481059437`*^9},
 CellLabel->
  "Out[527]=",ExpressionUUID->"8571db31-53e3-4857-aee3-a5b5728d7b50"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["IMEM", "Subsubsection",
 CellChangeTimes->{{3.9134710722523527`*^9, 3.913471073203197*^9}},
 FontWeight->"Bold",ExpressionUUID->"9135dd45-1914-4a20-8359-fb305fce6ea0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "IMEM", ",", "IMEMstore", ",", "IMEMentries", ",", "IMEMbitsPerEntry", ",",
     "IMEMdims"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IMEMentries", "=", 
   RowBox[{"QuantityMagnitude", "[", 
    RowBox[{"\"\<8 Kibibit\>\"", ",", "\"\<bit\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IMEMbitsPerEntry", "=", 
   RowBox[{"QuantityMagnitude", "[", 
    RowBox[{"\"\<160 bit\>\"", ",", "\"\<bit\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IMEMdims", "=", 
   RowBox[{"{", 
    RowBox[{"IMEMentries", ",", "IMEMbitsPerEntry"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IMEMstore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "IMEMdims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IMEM", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", 
  RowBox[{"UnitConvert", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Times", "@@", "IMEMdims"}], " ", 
     TemplateBox[{
       InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
      "Quantity"]}], ",", "\"\<Mebibits\>\""}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.913471077833111*^9, 3.9134712705482273`*^9}, {
  3.913472613498118*^9, 3.913472616121573*^9}, {3.9136434093887997`*^9, 
  3.9136434391227703`*^9}},
 CellLabel->
  "In[528]:=",ExpressionUUID->"8cdc09f3-4219-4f79-90a0-26848aeebc9d"],

Cell[BoxData[
 TemplateBox[{"1.25`", "\"Mib\"", "mebibits", "\"Mebibits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{
  3.913471143356596*^9, {3.913471177773625*^9, 3.913471187240036*^9}, {
   3.913471260227599*^9, 3.913471270965575*^9}, 3.913472633029443*^9, 
   3.913472692158616*^9, 3.913640846162819*^9, 3.913642099214669*^9, 
   3.9136443885909758`*^9, 3.913646600318596*^9, 3.91364683414108*^9, 
   3.913646894958873*^9, 3.9136475124037943`*^9, 3.913741378054549*^9, 
   3.9137488629703903`*^9, 3.9137491257872877`*^9, 3.913751431868256*^9, 
   3.913752115301571*^9, 3.9137535493992434`*^9},
 CellLabel->
  "Out[534]=",ExpressionUUID->"4a819418-363f-4179-9b44-c1d1720e44a8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["RSPCT", "Subsubsection",
 CellChangeTimes->{{3.913471283085474*^9, 3.913471285602816*^9}},
 FontWeight->"Bold",ExpressionUUID->"83b7cc3b-1446-4df4-af8a-bcf1180764b0"],

Cell["Why am I thinking about Aretha Franklin?", "Text",
 CellChangeTimes->{{3.913472405582502*^9, 
  3.91347241500336*^9}},ExpressionUUID->"79fb0cd0-56a2-448a-9148-\
d1ff4b330294"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "RSPCT", ",", "RSPCTstore", ",", "RSPCTbanks", ",", "RSPCTsections", ",", 
    "RSPCTbitsPerSectionBank", ",", "RSPCTdims"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RSPCTbanks", "=", "banksPerCore"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RSPCTsections", "=", "sectionsPerBank"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RSPCTbitsPerSectionBank", "=", 
   RowBox[{"QuantityMagnitude", "[", 
    RowBox[{"\"\<32 bits\>\"", ",", "\"\<bit\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RSPCTdims", "=", 
   RowBox[{"{", 
    RowBox[{
    "RSPCTbanks", ",", "RSPCTsections", ",", "RSPCTbitsPerSectionBank"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RSPCTstore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "RSPCTdims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RSPCT", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "RSPCTdims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
     
     "Quantity"]}], ",", "\"\<Kibibits\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.913471289966653*^9, 3.9134712946467943`*^9}, {
  3.913471330049831*^9, 3.9134715877769003`*^9}, {3.913471648646655*^9, 
  3.913471674003388*^9}, {3.9134726015230637`*^9, 3.9134726059419394`*^9}, {
  3.913643445857399*^9, 3.913643471628869*^9}, {3.913646801436737*^9, 
  3.913646804920133*^9}, {3.913646863642712*^9, 3.9136468676311693`*^9}, {
  3.913748789695757*^9, 3.913748795994255*^9}, {3.91374909953189*^9, 
  3.913749101155946*^9}, {3.913749133983876*^9, 3.9137491362738543`*^9}},
 CellLabel->
  "In[535]:=",ExpressionUUID->"167182c3-5b56-46d4-999f-74969901837f"],

Cell[BoxData[
 TemplateBox[{"2", "\"Kib\"", "kibibits", "\"Kibibits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{
  3.913471414028864*^9, 3.9134714689008102`*^9, 3.913471554785774*^9, 
   3.913471589415944*^9, {3.913471653254526*^9, 3.913471677171729*^9}, 
   3.913472633038765*^9, 3.913472692176902*^9, 3.91364084669783*^9, 
   3.913642104525462*^9, 3.913644389115491*^9, 3.91364660083998*^9, 
   3.913646834716557*^9, {3.913646872477449*^9, 3.913646895491132*^9}, 
   3.9136475129087677`*^9, 3.913741378606927*^9, 3.913748863443036*^9, 
   3.91374912617489*^9, 3.9137514318801394`*^9, 3.9137521156897097`*^9, 
   3.913753549898031*^9},
 CellLabel->
  "Out[542]=",ExpressionUUID->"e1f8b2a0-e191-40e0-9029-cb858bfeea65"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["RSP", "Subsubsection",
 CellChangeTimes->{{3.913472435047572*^9, 3.9134724356079073`*^9}},
 FontWeight->"Bold",ExpressionUUID->"57b53ba3-94aa-46c8-802a-ab0b7c678f45"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "RSP", ",", "RSPstore", ",", "RSPbanks", ",", "RSPsections", ",", 
    "RSPbitsPerSectionBank", ",", "RSPdims"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RSPbanks", "=", "banksPerCore"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RSPsections", "=", "sectionsPerBank"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RSPbitsPerSectionBank", "=", 
   RowBox[{"QuantityMagnitude", "[", 
    RowBox[{"\"\<16 bits\>\"", ",", "\"\<bit\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RSPdims", "=", 
   RowBox[{"{", 
    RowBox[{"RSPbanks", ",", "RSPsections", ",", "RSPbitsPerSectionBank"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RSPstore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "RSPdims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RSP", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "RSPdims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
     
     "Quantity"]}], ",", "\"\<Kibibits\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.9134724203689547`*^9, 3.913472496053787*^9}, {
  3.913472595430521*^9, 3.913472596769524*^9}, {3.913643479864273*^9, 
  3.913643502735965*^9}, {3.913646806427103*^9, 3.913646807957553*^9}, {
  3.9137491023519783`*^9, 3.913749103868314*^9}, {3.9137491414060173`*^9, 
  3.913749149207716*^9}},
 CellLabel->
  "In[543]:=",ExpressionUUID->"9d199b59-448b-48d0-8b6e-89356ed36979"],

Cell[BoxData[
 TemplateBox[{"1", "\"Kib\"", "kibibit", "\"Kibibits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.913472497619735*^9, 3.913472633042345*^9, 
  3.9134726921801*^9, 3.913640847214912*^9, 3.91364210708185*^9, 
  3.91364438966199*^9, 3.9136466013678017`*^9, 3.913646835206642*^9, 
  3.913646896077841*^9, 3.913647513629302*^9, 3.913741379138754*^9, 
  3.913748863835525*^9, 3.913749126645553*^9, 3.913749160910446*^9, 
  3.913751431883691*^9, 3.913752116157034*^9, 3.913753550375092*^9},
 CellLabel->
  "Out[550]=",ExpressionUUID->"82dd2de5-092c-4ddd-af10-77a71aedf45b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["L3S", "Subsubsection",
 CellChangeTimes->{{3.913472536046197*^9, 3.913472537789537*^9}},
 FontWeight->"Bold",ExpressionUUID->"0669b92a-0f52-4151-a1c3-c0c45b2bd32f"],

Cell["Aka DCCM", "Text",
 CellChangeTimes->{{3.91347256928167*^9, 
  3.9134725725161943`*^9}},ExpressionUUID->"4330b4ce-7a29-45cf-9426-\
8a9bd3c427f6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"L3S", ",", "L3Sstore", ",", "L3Sbits", ",", "L3Sdims"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L3Sbits", "=", 
   RowBox[{"QuantityMagnitude", "[", 
    RowBox[{"\"\<32 Kibibit\>\"", ",", "\"\<bit\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L3Sdims", "=", 
   RowBox[{"{", "L3Sbits", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L3Sstore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "L3Sdims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"L3S", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "L3Sdims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
     
     "Quantity"]}], ",", "\"\<bit\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.913472548012991*^9, 3.91347255067642*^9}, {
  3.913472583699513*^9, 3.913472591858973*^9}, {3.913472641091196*^9, 
  3.913472795654522*^9}, {3.913643513200753*^9, 3.9136435345147743`*^9}},
 CellLabel->
  "In[551]:=",ExpressionUUID->"d7d670bf-24f0-401f-a3d4-ad7cf95b0cf8"],

Cell[BoxData[
 TemplateBox[{"32768", "\"b\"", "bits", "\"Bits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.913472804889265*^9, 3.913640847732725*^9, 
  3.9136421102328987`*^9, 3.913644390120376*^9, 3.913646601890162*^9, 
  3.913646835742853*^9, 3.913646896554964*^9, 3.913647514162908*^9, 
  3.913741379673827*^9, 3.913748864273354*^9, 3.913749127031973*^9, 
  3.913751431894315*^9, 3.913752116513072*^9, 3.913753550781898*^9},
 CellLabel->
  "Out[556]=",ExpressionUUID->"8e8f6971-4646-4f31-afd0-6ea60280db22"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["L4G", "Subsubsection",
 CellChangeTimes->{{3.913472824840042*^9, 3.91347282595865*^9}},
 FontWeight->"Bold",ExpressionUUID->"ba42def2-3b56-433a-a787-43ed7ea1261d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "L4G", ",", "L4Gstore", ",", "L4GbitsPerUnit", ",", "L4GnUnits", ",", 
    "L4Gdims"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L4GbitsPerUnit", "=", 
   RowBox[{"QuantityMagnitude", "[", 
    RowBox[{"\"\<128 bit\>\"", ",", "\"\<bit\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L4GnUnits", "=", 
   RowBox[{"128", "*", "1024"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L4Gdims", "=", 
   RowBox[{"{", 
    RowBox[{"L4GnUnits", ",", "L4GbitsPerUnit"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L4Gstore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "L4Gdims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"L4G", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "L4Gdims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
     
     "Quantity"]}], ",", "\"\<Mebibit\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.9134728120082693`*^9, 3.913473057209009*^9}, {
  3.913473087460472*^9, 3.913473087650268*^9}, {3.913643542849517*^9, 
  3.913643567652*^9}},
 CellLabel->
  "In[557]:=",ExpressionUUID->"0382f539-fca7-420b-94d2-f9e819c08c8b"],

Cell[BoxData[
 TemplateBox[{"16", "\"Mib\"", "mebibits", "\"Mebibits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{
  3.913472908529194*^9, 3.913473045560535*^9, {3.913473075809412*^9, 
   3.9134730885988417`*^9}, 3.913640848784275*^9, 3.913642112737529*^9, 
   3.913644391183864*^9, 3.913646602934712*^9, 3.913646836672763*^9, 
   3.913646897579322*^9, 3.913647515111328*^9, 3.913741380752287*^9, 
   3.9137488651351852`*^9, 3.913749127989756*^9, 3.913751431912095*^9, 
   3.9137521173429117`*^9, 3.9137535515608463`*^9},
 CellLabel->
  "Out[563]=",ExpressionUUID->"38a75f6a-bb7d-4feb-bbed-67d908b4aecf"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Per Chip, SCC(ARC)", "Subsection",
 CellChangeTimes->{{3.9134725176753674`*^9, 3.913472519437031*^9}, {
  3.91347397477073*^9, 3.913473978316224*^9}},
 FontWeight->"Bold",ExpressionUUID->"b771c3e3-5dcb-477a-a93c-52ce0ebc6bed"],

Cell["Per-chip quantities are measured in bytes rather than bits.", "Text",
 CellChangeTimes->{{3.913473314190733*^9, 
  3.913473326870172*^9}},ExpressionUUID->"e60b27ab-3b37-4a08-b308-\
53321816fc81"],

Cell[CellGroupData[{

Cell["L4S", "Subsubsection",
 CellChangeTimes->{{3.913473111614354*^9, 3.913473113488413*^9}},
 FontWeight->"Bold",ExpressionUUID->"75444226-7dc4-460b-8ab0-5fcfcd9465b2"],

Cell[TextData[StyleBox["BYTES!",
 FontWeight->"Bold",
 FontSlant->"Plain"]], "Text",
 CellChangeTimes->{{3.913644200407174*^9, 3.9136442052202063`*^9}},
 FontWeight->"Plain",
 FontSlant->"Italic",ExpressionUUID->"2ae51aed-fd90-4d0f-85cd-894e4903a6f1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"L4S", ",", "L4Sstore", ",", "L4Sbytes", ",", "L4Sdims"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L4Sbytes", "=", 
   RowBox[{"QuantityMagnitude", "[", 
    RowBox[{
     RowBox[{"64", 
      TemplateBox[{
        InterpretationBox["\[InvisibleSpace]", 1], "\"KiB\"", "kibibytes", 
        "\"Kibibytes\""},
       "Quantity"]}], ",", "\"\<bytes\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L4Sdims", "=", 
   RowBox[{"{", "L4Sbytes", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L4Sstore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "L4Sdims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"L4S", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "L4Sdims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"B\"", "bytes", 
      "\"Bytes\""},
     "Quantity"]}], ",", "\"\<bytes\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", 
  RowBox[{"UnitConvert", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Times", "@@", "L4Sdims"}], 
     TemplateBox[{
       InterpretationBox["\[InvisibleSpace]", 1], "\"B\"", "bytes", 
       "\"Bytes\""},
      "Quantity"]}], ",", "\"\<Mebibits\>\""}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.91347315623449*^9, 3.9134732914434013`*^9}, {
  3.9134733832947397`*^9, 3.913473524080141*^9}, {3.913473590488282*^9, 
  3.913473598832087*^9}, {3.913643575410132*^9, 3.913643598947961*^9}},
 CellLabel->
  "In[564]:=",ExpressionUUID->"7bd2c41e-6785-4547-b85b-04d043003071"],

Cell[BoxData[
 TemplateBox[{"65536", "\"B\"", "bytes", "\"Bytes\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.913473218837879*^9, 3.9134732400973387`*^9}, 
   3.913473277683382*^9, 3.913473498593977*^9, 3.913473539339156*^9, {
   3.913473593292222*^9, 3.913473599289337*^9}, 3.913640849302265*^9, 
   3.913642117848342*^9, 3.9136443917118483`*^9, 3.913646603457644*^9, 
   3.913646837185759*^9, 3.913646898102977*^9, 3.913647515606739*^9, 
   3.913741381277638*^9, 3.9137488655400953`*^9, 3.913749128471527*^9, 
   3.913751431916687*^9, 3.913752117725885*^9, 3.913753551945148*^9},
 CellLabel->
  "Out[569]=",ExpressionUUID->"911ae63a-b652-4da7-8c6c-2330a3ade343"],

Cell[BoxData[
 TemplateBox[{"0.5`", "\"Mib\"", "mebibits", "\"Mebibits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.913473218837879*^9, 3.9134732400973387`*^9}, 
   3.913473277683382*^9, 3.913473498593977*^9, 3.913473539339156*^9, {
   3.913473593292222*^9, 3.913473599289337*^9}, 3.913640849302265*^9, 
   3.913642117848342*^9, 3.9136443917118483`*^9, 3.913646603457644*^9, 
   3.913646837185759*^9, 3.913646898102977*^9, 3.913647515606739*^9, 
   3.913741381277638*^9, 3.9137488655400953`*^9, 3.913749128471527*^9, 
   3.913751431916687*^9, 3.913752117725885*^9, 3.913753551948286*^9},
 CellLabel->
  "Out[570]=",ExpressionUUID->"03ca8273-221a-4999-afe2-1703edf87838"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["L4i", "Subsubsection",
 CellChangeTimes->{{3.913473124550192*^9, 3.913473127492374*^9}},
 FontWeight->"Bold",ExpressionUUID->"26044a37-6c67-43ea-843e-fe7d8dd8419f"],

Cell[TextData[StyleBox["BYTES!",
 FontWeight->"Bold",
 FontSlant->"Plain"]], "Text",
 CellChangeTimes->{{3.913644200407174*^9, 3.9136442052202063`*^9}},
 FontWeight->"Plain",
 FontSlant->"Italic",ExpressionUUID->"faba8137-ede7-4c85-94d3-5f6c789df3a2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"L4i", ",", "L4iStore", ",", "L4ibytes", ",", "L4idims"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L4ibytes", "=", 
   RowBox[{"QuantityMagnitude", "[", 
    RowBox[{
     RowBox[{"256", 
      TemplateBox[{
        InterpretationBox["\[InvisibleSpace]", 1], "\"KiB\"", "kibibytes", 
        "\"Kibibytes\""},
       "Quantity"]}], ",", "\"\<bytes\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L4idims", "=", 
   RowBox[{"{", "L4ibytes", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L4iStore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "L4idims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"L4i", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "L4idims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"B\"", "bytes", 
      "\"Bytes\""},
     "Quantity"]}], ",", "\"\<bytes\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "L4idims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"B\"", "bytes", 
      "\"Bytes\""},
     "Quantity"]}], ",", "\"\<Mebibits\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.91347315623449*^9, 3.9134732914434013`*^9}, {
  3.9134733832947397`*^9, 3.9134734976296387`*^9}, {3.9134735436801977`*^9, 
  3.913473610110694*^9}, {3.913644173884403*^9, 3.913644190551178*^9}, {
  3.913644239690915*^9, 3.913644253470228*^9}},
 CellLabel->
  "In[571]:=",ExpressionUUID->"eeba1314-4287-4d33-8ae3-79c98aa3f48a"],

Cell[BoxData[
 TemplateBox[{"262144", "\"B\"", "bytes", "\"Bytes\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.913473581151573*^9, 3.913473610821094*^9}, 
   3.9136408493112497`*^9, 3.913642127082665*^9, 3.913644391720748*^9, 
   3.91364660346389*^9, 3.913646837199959*^9, 3.913646898111622*^9, 
   3.9136475156137*^9, 3.913741381289536*^9, 3.9137488655682573`*^9, 
   3.913749128497374*^9, 3.91375143193141*^9, 3.913752117754511*^9, 
   3.913753551997414*^9},
 CellLabel->
  "Out[576]=",ExpressionUUID->"95a09b48-0ddf-42b7-bd2a-d4a0f1b93045"],

Cell[BoxData[
 TemplateBox[{"2", "\"Mib\"", "mebibits", "\"Mebibits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.913473581151573*^9, 3.913473610821094*^9}, 
   3.9136408493112497`*^9, 3.913642127082665*^9, 3.913644391720748*^9, 
   3.91364660346389*^9, 3.913646837199959*^9, 3.913646898111622*^9, 
   3.9136475156137*^9, 3.913741381289536*^9, 3.9137488655682573`*^9, 
   3.913749128497374*^9, 3.91375143193141*^9, 3.913752117754511*^9, 
   3.913753551999609*^9},
 CellLabel->
  "Out[577]=",ExpressionUUID->"fd949dda-245e-45b3-93d2-b63650cb99ed"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Per Chip, HIC(ARC)", "Subsection",
 CellChangeTimes->{{3.913473991874604*^9, 3.9134740022100697`*^9}},
 FontWeight->"Bold",ExpressionUUID->"41884856-39f6-464e-ad99-23de7cbfd974"],

Cell[CellGroupData[{

Cell["L4HS", "Subsubsection",
 CellChangeTimes->{{3.9134731392705317`*^9, 3.913473141062357*^9}, 
   3.9134740201124496`*^9},
 FontWeight->"Bold",ExpressionUUID->"12f19ff0-b9d7-432c-8d95-567ddb7a62ee"],

Cell[TextData[StyleBox["BYTES!",
 FontWeight->"Bold",
 FontSlant->"Plain"]], "Text",
 CellChangeTimes->{{3.913644200407174*^9, 3.9136442052202063`*^9}},
 FontWeight->"Plain",
 FontSlant->"Italic",ExpressionUUID->"6a66c554-ab8f-4e7c-91b6-112588329df4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"L4HS", ",", "L4HSstore", ",", "L4HSbytes", ",", "L4HSdims"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L4HSbytes", "=", 
   RowBox[{"QuantityMagnitude", "[", 
    RowBox[{
     RowBox[{"64", 
      TemplateBox[{
        InterpretationBox["\[InvisibleSpace]", 1], "\"KiB\"", "kibibytes", 
        "\"Kibibytes\""},
       "Quantity"]}], ",", "\"\<bytes\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L4HSdims", "=", 
   RowBox[{"{", "L4HSbytes", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L4HSstore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "L4HSdims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"L4HS", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "L4HSdims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"B\"", "bytes", 
      "\"Bytes\""},
     "Quantity"]}], ",", "\"\<bytes\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", 
  RowBox[{"UnitConvert", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Times", "@@", "L4HSdims"}], 
     TemplateBox[{
       InterpretationBox["\[InvisibleSpace]", 1], "\"B\"", "bytes", 
       "\"Bytes\""},
      "Quantity"]}], ",", "\"\<Mebibits\>\""}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.91347315623449*^9, 3.9134732914434013`*^9}, {
  3.9134733832947397`*^9, 3.913473524080141*^9}, {3.913473590488282*^9, 
  3.913473598832087*^9}, {3.91347402780024*^9, 3.91347406025555*^9}, {
  3.913644261474552*^9, 3.9136443000070066`*^9}},
 CellLabel->
  "In[578]:=",ExpressionUUID->"18ce82ca-6d41-4d46-8b93-cd357c5745b0"],

Cell[BoxData[
 TemplateBox[{"65536", "\"B\"", "bytes", "\"Bytes\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.913473218837879*^9, 3.9134732400973387`*^9}, 
   3.913473277683382*^9, 3.913473498593977*^9, 3.913473539339156*^9, {
   3.913473593292222*^9, 3.913473599289337*^9}, 3.913474062872205*^9, 
   3.913640849330256*^9, 3.913642136940607*^9, 3.913644391735669*^9, 
   3.913646603479723*^9, 3.913646837206052*^9, 3.9136468981218576`*^9, 
   3.91364751562208*^9, 3.9137413813026648`*^9, 3.913748865576845*^9, 
   3.9137491285039883`*^9, 3.91375143193929*^9, 3.913752117761602*^9, 
   3.913753552012775*^9},
 CellLabel->
  "Out[583]=",ExpressionUUID->"5a6796c3-c2ab-4536-87d8-aafc812ccfe0"],

Cell[BoxData[
 TemplateBox[{"0.5`", "\"Mib\"", "mebibits", "\"Mebibits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.913473218837879*^9, 3.9134732400973387`*^9}, 
   3.913473277683382*^9, 3.913473498593977*^9, 3.913473539339156*^9, {
   3.913473593292222*^9, 3.913473599289337*^9}, 3.913474062872205*^9, 
   3.913640849330256*^9, 3.913642136940607*^9, 3.913644391735669*^9, 
   3.913646603479723*^9, 3.913646837206052*^9, 3.9136468981218576`*^9, 
   3.91364751562208*^9, 3.9137413813026648`*^9, 3.913748865576845*^9, 
   3.9137491285039883`*^9, 3.91375143193929*^9, 3.913752117761602*^9, 
   3.9137535520143557`*^9},
 CellLabel->
  "Out[584]=",ExpressionUUID->"47523cd1-ab31-4fc4-8cdc-c446c1f94524"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["L4hi", "Subsubsection",
 CellChangeTimes->{{3.9134731448205*^9, 3.9134731516898813`*^9}},
 FontWeight->"Bold",ExpressionUUID->"a7df9d13-6dda-469c-b9c8-7855070275a6"],

Cell[TextData[StyleBox["BYTES!",
 FontWeight->"Bold",
 FontSlant->"Plain"]], "Text",
 CellChangeTimes->{{3.913644200407174*^9, 3.9136442052202063`*^9}},
 FontWeight->"Plain",
 FontSlant->"Italic",ExpressionUUID->"89db92bd-fd26-4e8c-8ca0-ba51f7771d2e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"L4hi", ",", "L4hiStore", ",", "L4hibytes", ",", "L4hidims"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L4hibytes", "=", 
   RowBox[{"QuantityMagnitude", "[", 
    RowBox[{
     RowBox[{"256", 
      TemplateBox[{
        InterpretationBox["\[InvisibleSpace]", 1], "\"KiB\"", "kibibytes", 
        "\"Kibibytes\""},
       "Quantity"]}], ",", "\"\<bytes\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L4hidims", "=", 
   RowBox[{"{", "L4hibytes", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L4hiStore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "L4hidims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"L4hi", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "L4hidims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"B\"", "bytes", 
      "\"Bytes\""},
     "Quantity"]}], ",", "\"\<bytes\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "L4hidims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"B\"", "bytes", 
      "\"Bytes\""},
     "Quantity"]}], ",", "\"\<Mebibits\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.91347315623449*^9, 3.9134732914434013`*^9}, {
  3.9134733832947397`*^9, 3.9134734976296387`*^9}, {3.9134735436801977`*^9, 
  3.913473610110694*^9}, {3.913474084612932*^9, 3.9134741259403677`*^9}, {
  3.9136443053553877`*^9, 3.9136443339038763`*^9}},
 CellLabel->
  "In[585]:=",ExpressionUUID->"f424ca79-fa66-4326-b147-be423defcbb3"],

Cell[BoxData[
 TemplateBox[{"262144", "\"B\"", "bytes", "\"Bytes\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.913473581151573*^9, 3.913473610821094*^9}, {
   3.913474109751737*^9, 3.913474126464656*^9}, 3.913640849339532*^9, 
   3.913642139263133*^9, 3.9136443917479267`*^9, 3.913646603484593*^9, 
   3.913646837218059*^9, 3.9136468981268473`*^9, 3.913647515627447*^9, 
   3.91374138130799*^9, 3.913748865590102*^9, 3.913749128516259*^9, 
   3.91375143195249*^9, 3.913752117771896*^9, 3.913753552019958*^9},
 CellLabel->
  "Out[590]=",ExpressionUUID->"5ac260da-1979-4684-b7a5-4a2c9ed8bd41"],

Cell[BoxData[
 TemplateBox[{"2", "\"Mib\"", "mebibits", "\"Mebibits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.913473581151573*^9, 3.913473610821094*^9}, {
   3.913474109751737*^9, 3.913474126464656*^9}, 3.913640849339532*^9, 
   3.913642139263133*^9, 3.9136443917479267`*^9, 3.913646603484593*^9, 
   3.913646837218059*^9, 3.9136468981268473`*^9, 3.913647515627447*^9, 
   3.91374138130799*^9, 3.913748865590102*^9, 3.913749128516259*^9, 
   3.91375143195249*^9, 3.913752117771896*^9, 3.913753552021309*^9},
 CellLabel->
  "Out[591]=",ExpressionUUID->"ea10eb7b-d136-49e2-aff5-bfb409b130bd"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["L5 DRAM", "Subsection",
 CellChangeTimes->{{3.913474177353653*^9, 3.913474180832963*^9}},
 FontWeight->"Bold",ExpressionUUID->"2ca05eb3-741f-4f5a-8d18-de6df6dfad62"],

Cell["\<\
Big. The doc doesn\[CloseCurlyQuote]t state how big. Let\[CloseCurlyQuote]s \
do it in units of L2T.\
\>", "Text",
 CellChangeTimes->{{3.91347419286972*^9, 3.913474193468351*^9}, {
  3.91364217147365*^9, 3.913642181253599*^9}, {3.913642214227516*^9, 
  3.913642231072289*^9}, {3.913642276515705*^9, 
  3.91364228420453*^9}},ExpressionUUID->"015f1f65-2b71-4ec1-b699-\
7ddd6cc237fd"],

Cell[CellGroupData[{

Cell["L2T", "Subsubsection",
 CellChangeTimes->{{3.9136424396150093`*^9, 3.913642440972548*^9}},
 FontWeight->"Bold",ExpressionUUID->"9b16f03f-9407-4acc-a6fc-582a1bc7dfde"],

Cell["Paraphrasing the document:", "Text",
 CellChangeTimes->{{3.9136445306169367`*^9, 
  3.913644539010272*^9}},ExpressionUUID->"b7da21af-eb59-43dc-b474-\
b77e20136d06"],

Cell[CellGroupData[{

Cell["\<\
The L2T module comes between L5 and L2. This module has 3 main functions:\
\>", "Subitem",
 CellChangeTimes->{{3.913644520582232*^9, 
  3.913644561971016*^9}},ExpressionUUID->"7992f1e4-1812-4b94-8914-\
843f7223a958"],

Cell["Buffer and transpose the data during SYSMEM \[LeftRightArrow] L2 \
transfers", "SubsubitemNumbered",
 CellChangeTimes->{
  3.913644520582232*^9, {3.9136445507636137`*^9, 3.913644554740034*^9}, {
   3.9136446008640347`*^9, 
   3.913644613457672*^9}},ExpressionUUID->"582af9d1-36e4-49d9-9e36-\
b2ec3d001512"],

Cell["\<\
Generate ECC parity bits for L2 (and ultimately L1) during SYSMEM \[Rule] L2 \
transfers\
\>", "SubsubitemNumbered",
 CellChangeTimes->{
  3.913644520582232*^9, {3.9136445507636137`*^9, 3.913644554740034*^9}, {
   3.9136446008640347`*^9, 
   3.913644630725644*^9}},ExpressionUUID->"34c0a9e8-54a1-493a-95c2-\
c433221ef3d7"],

Cell["Perform ECC correction during SYSMEM \[LeftArrow] L2 transfers", \
"SubsubitemNumbered",
 CellChangeTimes->{
  3.913644520582232*^9, {3.9136445507636137`*^9, 3.913644554740034*^9}, {
   3.9136446008640347`*^9, 3.913644647155037*^9}, {3.913749215284781*^9, 
   3.9137492298941298`*^9}},ExpressionUUID->"3eaab60f-3540-4428-9b42-\
3440bac56ccf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
It takes 16 L2T transfers to load L2 with data from SYSMEM and vice versa.\
\>", "Subitem",
 CellChangeTimes->{
  3.913644520582232*^9, {3.9136445507636137`*^9, 3.913644554740034*^9}, {
   3.9136446008640347`*^9, 3.9136446553906193`*^9}, {3.913749250911392*^9, 
   3.913749253923565*^9}},ExpressionUUID->"ef926592-2340-4b5d-9bb2-\
9152f15240e7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "L2T", ",", "L2Tstore", ",", "L2Trows", ",", "L2Tcols", ",", "L2Tdims"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L2Trows", "=", "16"}], ";", 
  RowBox[{"L2Tcols", "=", "128"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L2Tdims", "=", 
   RowBox[{"{", 
    RowBox[{"L2Trows", ",", "L2Tcols"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L2Tstore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "L2Tdims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"L2T", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Times", "@@", "L2Tdims"}], 
  TemplateBox[{
    InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
   "Quantity"]}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "L2Tdims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
     
     "Quantity"]}], ",", "\"\<Kebibit\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.913459859943615*^9, 3.913459923890294*^9}, 
   3.913460148377887*^9, {3.9134601823532476`*^9, 3.913460185577817*^9}, {
   3.913464939966411*^9, 3.91346496489507*^9}, {3.913465396273439*^9, 
   3.913465402953084*^9}, {3.9134655987340612`*^9, 3.913465601458982*^9}, {
   3.913465633415092*^9, 3.913465661041072*^9}, {3.9134709181673317`*^9, 
   3.913470957735427*^9}, {3.9136423501003847`*^9, 3.91364239696066*^9}, {
   3.913642445081004*^9, 3.91364248367916*^9}, {3.9136443438941593`*^9, 
   3.913644371910788*^9}},
 CellLabel->
  "In[592]:=",ExpressionUUID->"63860c21-8b68-4fe2-bbb1-3db4b6add24c"],

Cell[BoxData[
 TemplateBox[{"2048", "\"b\"", "bits", "\"Bits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.913642487714065*^9, 3.913644391753624*^9, 
  3.913646603495377*^9, 3.913646837223358*^9, 3.9136468981348753`*^9, 
  3.9136475156362047`*^9, 3.9137413813203497`*^9, 3.913748865596038*^9, 
  3.913749128521617*^9, 3.913751431960202*^9, 3.913752117779171*^9, 
  3.913753552032811*^9},
 CellLabel->
  "Out[597]=",ExpressionUUID->"102606f7-9cd8-4c8f-93f1-420b18d65587"],

Cell[BoxData[
 TemplateBox[{"2", "\"Kib\"", "kibibits", "\"Kibibits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.913642487714065*^9, 3.913644391753624*^9, 
  3.913646603495377*^9, 3.913646837223358*^9, 3.9136468981348753`*^9, 
  3.9136475156362047`*^9, 3.9137413813203497`*^9, 3.913748865596038*^9, 
  3.913749128521617*^9, 3.913751431960202*^9, 3.913752117779171*^9, 
  3.913753552034253*^9},
 CellLabel->
  "Out[598]=",ExpressionUUID->"57bb6d3a-1518-48b2-ad17-bfc6c567e4fc"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["MMB Registers", "Section",
 CellChangeTimes->{{3.913741423693698*^9, 3.9137414277991743`*^9}},
 FontWeight->"Bold",ExpressionUUID->"61b83ca1-3038-4d47-859f-8605fed0246a"],

Cell["Per core.", "Text",
 CellChangeTimes->{{3.913748086752996*^9, 
  3.91374808867349*^9}},ExpressionUUID->"e17ad12d-d112-4324-9c19-\
3941233129c3"],

Cell[CellGroupData[{

Cell["RL", "Subsection",
 CellChangeTimes->{{3.913741608456571*^9, 3.913741608857535*^9}},
 FontWeight->"Bold",ExpressionUUID->"3cc9bebf-a96f-464f-8ba1-7ca365473a3f"],

Cell["Unlike Gemini I, there is one RL per section.", "Text",
 CellChangeTimes->{{3.913748298772831*^9, 
  3.913748311596793*^9}},ExpressionUUID->"5ba3534e-2ea0-4494-b269-\
36f1c9284140"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"RL", ",", "RLstore", ",", "wRL", ",", "RLdims"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wRL", "=", "bitLinesPerWordLine"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RLdims", "=", 
   RowBox[{"{", 
    RowBox[{"banksPerCore", ",", "sectionsPerBank", ",", "wRL"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RLstore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "RLdims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RL", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "RLdims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
     
     "Quantity"]}], ",", "\"\<Kebibit\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.913741611436167*^9, 3.913741614936266*^9}, {
  3.913741712083518*^9, 3.9137417755881863`*^9}, {3.913741903237987*^9, 
  3.9137419385692177`*^9}, {3.913742172126878*^9, 3.91374225494276*^9}, {
  3.91374670050987*^9, 3.913746710981305*^9}, {3.913748097464232*^9, 
  3.913748290010791*^9}, {3.913750818190588*^9, 3.913750850352983*^9}},
 CellLabel->
  "In[599]:=",ExpressionUUID->"cf07ba35-3b02-490a-99c7-51203c69c738"],

Cell[BoxData[
 TemplateBox[{"256", "\"Kib\"", "kibibits", "\"Kibibits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.913748270627619*^9, 3.913748281100815*^9}, 
   3.91374886164048*^9, 3.913749124314918*^9, 3.9137508577733183`*^9, 
   3.913751431973649*^9, 3.9137521177882013`*^9, 3.913753552038232*^9},
 CellLabel->
  "Out[604]=",ExpressionUUID->"4e691ec5-3c90-4f77-92ab-01c52ad4de3a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["L0", "Subsection",
 CellChangeTimes->{{3.913741608456571*^9, 3.913741608857535*^9}, {
  3.913746680104952*^9, 3.9137466810558863`*^9}},
 FontWeight->"Bold",ExpressionUUID->"66dd2c5a-f9a7-478a-a7f5-192183812bc9"],

Cell["One L0 per section", "Text",
 CellChangeTimes->{{3.913748318712799*^9, 3.913748324011509*^9}, 
   3.913749475367016*^9},ExpressionUUID->"c655a178-3084-4de7-9319-\
dae931c6ae2f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"L0", ",", "L0store", ",", "wL0", ",", "L0dims"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wL0", "=", "bitLinesPerWordLine"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L0dims", "=", 
   RowBox[{"{", 
    RowBox[{"banksPerCore", ",", "sectionsPerBank", ",", "wL0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L0store", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "L0dims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"L0", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "L0dims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
     
     "Quantity"]}], ",", "\"\<Kebibit\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.913741611436167*^9, 3.913741614936266*^9}, {
  3.913741712083518*^9, 3.9137417755881863`*^9}, {3.913741903237987*^9, 
  3.9137419385692177`*^9}, {3.913742172126878*^9, 3.91374225494276*^9}, {
  3.91374228974286*^9, 3.913742335218454*^9}, {3.913748102209127*^9, 
  3.913748103274579*^9}, {3.91374833987988*^9, 3.913748421878875*^9}, {
  3.9137508617801847`*^9, 3.9137508709122543`*^9}},
 CellLabel->
  "In[605]:=",ExpressionUUID->"3862b3f7-7f1a-4454-bd0b-644987f7d11d"],

Cell[BoxData[
 TemplateBox[{"256", "\"Kib\"", "kibibits", "\"Kibibits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.913748422355302*^9, 3.9137488616928883`*^9, 
  3.913749124372211*^9, 3.9137508734207478`*^9, 3.913751431978277*^9, 
  3.9137521177945766`*^9, 3.913753552053062*^9},
 CellLabel->
  "Out[610]=",ExpressionUUID->"b35503b9-b233-4b99-b403-e6b122dd0f00"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["CARRY", "Subsection",
 CellChangeTimes->{{3.913741608456571*^9, 3.913741608857535*^9}, {
   3.913746680104952*^9, 3.9137466810558863`*^9}, 3.91374940742586*^9},
 FontWeight->"Bold",ExpressionUUID->"c3a541d8-9a0c-43f7-a168-c0da351b386d"],

Cell["One CARRY per section", "Text",
 CellChangeTimes->{{3.913748318712799*^9, 3.913748324011509*^9}, 
   3.913749407958374*^9, 
   3.9137494774597054`*^9},ExpressionUUID->"3c905753-efa7-4cf4-ba8e-\
e58cfd0b4b62"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"CARRY", ",", "CARRYstore", ",", "wCARRY", ",", "CARRYdims"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wCARRY", "=", "bitLinesPerWordLine"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CARRYdims", "=", 
   RowBox[{"{", 
    RowBox[{"banksPerCore", ",", "sectionsPerBank", ",", "wCARRY"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CARRYstore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "CARRYdims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CARRY", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "CARRYdims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
     
     "Quantity"]}], ",", "\"\<Kebibit\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.913741611436167*^9, 3.913741614936266*^9}, {
  3.913741712083518*^9, 3.9137417755881863`*^9}, {3.913741903237987*^9, 
  3.9137419385692177`*^9}, {3.913742172126878*^9, 3.91374225494276*^9}, {
  3.91374228974286*^9, 3.913742335218454*^9}, {3.913748102209127*^9, 
  3.913748103274579*^9}, {3.91374833987988*^9, 3.913748421878875*^9}, {
  3.913749408684325*^9, 3.91374941611482*^9}, {3.913750879924096*^9, 
  3.913750901000847*^9}},
 CellLabel->
  "In[611]:=",ExpressionUUID->"891a44ee-7745-433b-b06a-1856c233ead7"],

Cell[BoxData[
 TemplateBox[{"256", "\"Kib\"", "kibibits", "\"Kibibits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.913748422355302*^9, 3.9137488616928883`*^9, 
  3.913749124372211*^9, 3.9137509017310333`*^9, 3.913751431993504*^9, 
  3.9137521178022547`*^9, 3.9137535520642633`*^9},
 CellLabel->
  "Out[616]=",ExpressionUUID->"5c7af769-f801-45d4-9fae-f011160e25f1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["GL",
 FontWeight->"Bold"]], "Subsection",
 CellChangeTimes->{{3.913749458130918*^9, 
  3.913749458366426*^9}},ExpressionUUID->"4a5680b8-5493-41f1-8e84-\
d14b63643c19"],

Cell[TextData[{
 "One GL ",
 StyleBox["per bank",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.913749463372284*^9, 
  3.913749480703843*^9}},ExpressionUUID->"87768409-27f5-4b4f-87ff-\
634a89145fb4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"GL", ",", "GLstore", ",", "wGL", ",", "GLdims"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wGL", "=", "bitLinesPerWordLine"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GLdims", "=", 
   RowBox[{"{", 
    RowBox[{"banksPerCore", ",", "wGL"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GLstore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "GLdims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GL", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "GLdims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
     
     "Quantity"]}], ",", "\"\<Kebibit\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.913741611436167*^9, 3.913741614936266*^9}, {
  3.913741712083518*^9, 3.9137417755881863`*^9}, {3.913741903237987*^9, 
  3.9137419385692177`*^9}, {3.913742172126878*^9, 3.91374225494276*^9}, {
  3.91374228974286*^9, 3.913742335218454*^9}, {3.913748102209127*^9, 
  3.913748103274579*^9}, {3.91374833987988*^9, 3.913748421878875*^9}, {
  3.913749408684325*^9, 3.91374941611482*^9}, {3.9137495085650587`*^9, 
  3.913749512402038*^9}, {3.913749578373741*^9, 3.9137495788054113`*^9}, {
  3.913750908982748*^9, 3.9137509193476048`*^9}},
 CellLabel->
  "In[617]:=",ExpressionUUID->"4ff2412a-3080-491c-b873-7281ca40b9e0"],

Cell[BoxData[
 TemplateBox[{"32", "\"Kib\"", "kibibits", "\"Kibibits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.913748422355302*^9, 3.9137488616928883`*^9, 
  3.913749124372211*^9, 3.913749585625926*^9, 3.913749897583374*^9, 
  3.913750921021254*^9, 3.9137514320002737`*^9, 3.9137521178060217`*^9, 
  3.913753552069284*^9},
 CellLabel->
  "Out[622]=",ExpressionUUID->"372be3d5-041b-4905-8c93-d8e598691e21"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["GGL",
 FontWeight->"Bold"]], "Subsection",
 CellChangeTimes->{{3.9137497055056133`*^9, 
  3.913749706351193*^9}},ExpressionUUID->"cc528d63-49ab-4e1e-ac5f-\
bc8622f64ece"],

Cell[TextData[{
 "One GGL ",
 StyleBox["per group",
  FontWeight->"Bold"],
 ", two groups per bank"
}], "Text",
 CellChangeTimes->{{3.913749712246636*^9, 
  3.913749726882257*^9}},ExpressionUUID->"b942bc81-819d-4dac-ba78-\
637e26c0a52b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"GGL", ",", "GGLstore", ",", "wGGL", ",", "GGLdims"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wGGL", "=", "bitLinesPerWordLine"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GGLdims", "=", 
   RowBox[{"{", 
    RowBox[{"banksPerCore", ",", "groupsPerBank", ",", "wGGL"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GGLstore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "GGLdims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GGL", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "GGLdims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
     
     "Quantity"]}], ",", "\"\<Kebibit\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.9137497385833807`*^9, 3.913749763126101*^9}, {
  3.913749817654933*^9, 3.913749890239004*^9}, {3.913750926235257*^9, 
  3.913750940063836*^9}},
 CellLabel->
  "In[623]:=",ExpressionUUID->"2b93b3dc-4942-4692-84a6-fc1fcb65dfdf"],

Cell[BoxData[
 TemplateBox[{"64", "\"Kib\"", "kibibits", "\"Kibibits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.9137498825283413`*^9, 3.913749897619835*^9}, 
   3.913750941652934*^9, 3.913751432012957*^9, 3.913752117815586*^9, 
   3.9137535520823593`*^9},
 CellLabel->
  "Out[628]=",ExpressionUUID->"ce982cc6-a8d0-4ac4-905f-aaafcee56fb2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["RSP16", "Subsection",
 CellChangeTimes->{{3.913749917970212*^9, 3.9137499254250097`*^9}},
 FontWeight->"Bold",ExpressionUUID->"68c829cf-02fc-4546-9d4a-b1d9d56d17f4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"RSP16", ",", "RSP16store", ",", "wRSP16", ",", "RSP16dims"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wRSP16", "=", "256"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RSP16dims", "=", 
   RowBox[{"{", 
    RowBox[{"banksPerCore", ",", "wRSP16"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RSP16store", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "RSP16dims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RSP16", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "RSP16dims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
     
     "Quantity"]}], ",", "\"\<Kebibit\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.9137499294542017`*^9, 3.913750031799321*^9}, {
  3.9137509454048*^9, 3.9137509593377447`*^9}},
 CellLabel->
  "In[629]:=",ExpressionUUID->"872aa6e9-67eb-4caf-ae12-64246ef2fbaa"],

Cell[BoxData[
 TemplateBox[{"2", "\"Kib\"", "kibibits", "\"Kibibits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.913750032380187*^9, 3.913750962905147*^9, 
  3.9137514320183163`*^9, 3.913752117819728*^9, 3.913753552086658*^9},
 CellLabel->
  "Out[634]=",ExpressionUUID->"c58d859c-f9a9-4fef-962f-c7ed4ee7525f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["RSP128", "Subsection",
 CellChangeTimes->{{3.913749917970212*^9, 3.9137499254250097`*^9}, 
   3.9137507899389877`*^9},
 FontWeight->"Bold",ExpressionUUID->"1558772a-880e-4a91-bd85-4bbf03eb3290"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"RSP128", ",", "RSP128store", ",", "wRSP128", ",", "RSP128dims"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wRSP128", "=", "32"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RSP128dims", "=", 
   RowBox[{"{", 
    RowBox[{"banksPerCore", ",", "wRSP128"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RSP128store", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "RSP128dims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RSP128", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "RSP128dims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
     
     "Quantity"]}], ",", "\"\<bit\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.9137499294542017`*^9, 3.913750031799321*^9}, {
  3.913750790380478*^9, 3.9137508002495127`*^9}, {3.913750969164741*^9, 
  3.913750998783189*^9}},
 CellLabel->
  "In[635]:=",ExpressionUUID->"4c76ae8c-4599-44ba-a4b2-2a0f6b205eb4"],

Cell[BoxData[
 TemplateBox[{"256", "\"b\"", "bits", "\"Bits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{
  3.913750032380187*^9, {3.913750985264888*^9, 3.9137509998646727`*^9}, 
   3.913751432030929*^9, 3.913752117826981*^9, 3.9137535520971746`*^9},
 CellLabel->
  "Out[640]=",ExpressionUUID->"06b26d64-4a76-4419-ac00-d86bddf59bd5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["RSP4K", "Subsection",
 CellChangeTimes->{{3.913749917970212*^9, 3.9137499254250097`*^9}, 
   3.9137507899389877`*^9, 3.913751048938525*^9},
 FontWeight->"Bold",ExpressionUUID->"b59b5e3a-76dc-43fc-86af-76e2672a59ef"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"RSP4K", ",", "RSP4Kstore", ",", "wRSP4K", ",", "RSP4Kdims"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wRSP4K", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RSP4Kdims", "=", 
   RowBox[{"{", 
    RowBox[{"banksPerCore", ",", "wRSP4K"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RSP4Kstore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "RSP4Kdims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RSP4K", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "RSP4Kdims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
     
     "Quantity"]}], ",", "\"\<bit\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.9137499294542017`*^9, 3.913750031799321*^9}, {
  3.913750790380478*^9, 3.9137508002495127`*^9}, {3.913750969164741*^9, 
  3.913750998783189*^9}, {3.913751049251175*^9, 3.913751063840146*^9}},
 CellLabel->
  "In[641]:=",ExpressionUUID->"1bc2a73c-b858-4613-9805-7609ea489de8"],

Cell[BoxData[
 TemplateBox[{"8", "\"b\"", "bits", "\"Bits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{
  3.913750032380187*^9, {3.913750985264888*^9, 3.9137509998646727`*^9}, 
   3.9137510652777147`*^9, 3.91375143203444*^9, 3.913752117831006*^9, 
   3.913753552102631*^9},
 CellLabel->
  "Out[646]=",ExpressionUUID->"85bd6ff2-c427-4c32-a3bf-d4ed53c25a9a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["RSPWEN", "Subsection",
 CellChangeTimes->{{3.913749917970212*^9, 3.9137499254250097`*^9}, 
   3.9137507899389877`*^9, 3.913751048938525*^9, 3.9137511099927607`*^9},
 FontWeight->"Bold",ExpressionUUID->"8803cd2d-9b7f-4a0b-8da9-6ad880d3b893"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"RSPWEN", ",", "RSPWENstore", ",", "wRSPWEN", ",", "RSPWENdims"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wRSPWEN", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RSPWENdims", "=", 
   RowBox[{"{", 
    RowBox[{"banksPerCore", ",", "wRSPWEN"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RSPWENstore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "RSPWENdims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RSPWEN", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "RSPWENdims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
     
     "Quantity"]}], ",", "\"\<bit\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.9137499294542017`*^9, 3.913750031799321*^9}, {
  3.913750790380478*^9, 3.9137508002495127`*^9}, {3.913750969164741*^9, 
  3.913750998783189*^9}, {3.913751049251175*^9, 3.913751063840146*^9}, {
  3.9137511104514236`*^9, 3.913751117650738*^9}},
 CellLabel->
  "In[647]:=",ExpressionUUID->"98108a39-d792-4b6a-b06e-6b8997650178"],

Cell[BoxData[
 TemplateBox[{"8", "\"b\"", "bits", "\"Bits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{
  3.913750032380187*^9, {3.913750985264888*^9, 3.9137509998646727`*^9}, 
   3.9137510652777147`*^9, 3.913751122974991*^9, 3.913751432037567*^9, 
   3.913752117839757*^9, 3.913753552114545*^9},
 CellLabel->
  "Out[652]=",ExpressionUUID->"142938a5-b1f7-49ec-8315-68580b8db0bc"]
}, Open  ]]
}, Open  ]],

Cell[TextData[StyleBox["L3S Memory (UNDONE)",
 FontWeight->"Bold"]], "Subsection",
 CellChangeTimes->{{3.9137533250201387`*^9, 
  3.9137533348796463`*^9}},ExpressionUUID->"0d2e775e-063d-4203-91cf-\
6ae85dd1e809"],

Cell[TextData[StyleBox["L4G Memory (UNONE)",
 FontWeight->"Bold"]], "Subsection",
 CellChangeTimes->{{3.9137533411018877`*^9, 
  3.913753351428997*^9}},ExpressionUUID->"1f71663e-d906-4589-a2ea-\
248ff0d484fe"],

Cell[TextData[StyleBox["L4s Memory (UNDONE)",
 FontWeight->"Bold"]], "Subsection",
 CellChangeTimes->{{3.9137533580666018`*^9, 
  3.913753366979466*^9}},ExpressionUUID->"c551c901-22b9-4110-9838-\
77823bf3b1a9"],

Cell[TextData[StyleBox["L4i Memory (UNDONE)",
 FontWeight->"Bold"]], "Subsection",
 CellChangeTimes->{{3.913753377493897*^9, 
  3.913753383021564*^9}},ExpressionUUID->"46145d69-055e-4801-bcbd-\
73c64d3c8612"],

Cell[TextData[StyleBox["L4hs Memory (UNDONE)",
 FontWeight->"Bold"]], "Subsection",
 CellChangeTimes->{{3.913753392180306*^9, 
  3.913753400128251*^9}},ExpressionUUID->"6d5bf3cf-73a9-4e78-acd8-\
ba5257ae9df1"],

Cell[TextData[StyleBox["L4hi Memory (UNDONE)",
 FontWeight->"Bold"]], "Subsection",
 CellChangeTimes->{{3.9137534145094357`*^9, 
  3.913753421162567*^9}},ExpressionUUID->"1d3c390e-89f2-4189-b422-\
f28f0f2b39c2"],

Cell[TextData[StyleBox["IMEM Memory (UNDONE)",
 FontWeight->"Bold"]], "Subsection",
 CellChangeTimes->{{3.913753431372534*^9, 
  3.913753437175022*^9}},ExpressionUUID->"3ffd6846-d8ab-4a8f-ac57-\
4a6f0cc9f8e8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["APL 2.0 Commands",
 FontWeight->"Bold"]], "Section",
 CellChangeTimes->{{3.913753962498131*^9, 
  3.9137539682286243`*^9}},ExpressionUUID->"72939af5-2d34-4186-9b83-\
df30f0fe8065"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "NOP", ",", "LOOP", ",", "LOOPOUT", ",", "LOOPIN", ",", "SETIMMEDIATE", 
    ",", "ADDIMMEDIATE", ",", "SUBIMMEDIATE", ",", "SHIFTLEFTIMMEDIATE", ",", 
    "SHIFTRIGHTIMMEDIATE", ",", "INC", ",", "SET", ",", "ADD", ",", "SUB", 
    ",", "SHIFTLEFT", ",", "SHIFTRIGHT", ",", "CR"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.91375397177641*^9, 3.91375397759064*^9}, {
  3.913754010476428*^9, 3.91375401911506*^9}, {3.9137556814058*^9, 
  3.913755684694816*^9}, {3.9137559979254103`*^9, 3.913756024858014*^9}, {
  3.913756127092317*^9, 3.9137561449421453`*^9}, {3.913756576790414*^9, 
  3.913756592367284*^9}, {3.9137566337793837`*^9, 3.9137566652387466`*^9}, {
  3.913756698593313*^9, 
  3.913756699320323*^9}},ExpressionUUID->"ef32843a-b31f-4ae0-bbc4-\
7c7cfab38ed1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FromDigits", "[", 
  RowBox[{"\"\<FBFF\>\"", ",", "16"}], "]"}]], "Input",
 CellChangeTimes->{{3.913756224710503*^9, 3.913756239300078*^9}},
 CellLabel->
  "In[658]:=",ExpressionUUID->"c930ff66-6713-479f-9e60-bd264087325e"],

Cell[BoxData["64511"], "Output",
 CellChangeTimes->{3.913756240103465*^9},
 CellLabel->
  "Out[658]=",ExpressionUUID->"38343452-97f5-425b-aab7-90d18554e9c3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Symbol List", "Section",
 CellChangeTimes->{{3.913751513005026*^9, 3.9137515150295763`*^9}, {
  3.9137515714366693`*^9, 3.9137515759260674`*^9}},
 FontWeight->"Bold",ExpressionUUID->"a416204a-1e85-4f5e-85cb-c051134b631c"],

Cell["We have defined this many symbols.", "Text",
 CellChangeTimes->{{3.9137515184970837`*^9, 
  3.9137515334540167`*^9}},ExpressionUUID->"7d9d8008-289d-443d-b29c-\
f36876c98183"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Names", "[", "\"\<Global`*\>\"", "]"}], "//", "Length"}]], "Input",\

 CellChangeTimes->{{3.913751490376041*^9, 3.9137515031155653`*^9}},
 CellLabel->
  "In[656]:=",ExpressionUUID->"c7768425-603c-4af8-a0bb-80a41e34700b"],

Cell[BoxData["158"], "Output",
 CellChangeTimes->{3.913751503824142*^9, 3.91375211790823*^9, 
  3.9137535521261673`*^9, 3.913756004652401*^9},
 CellLabel->
  "Out[656]=",ExpressionUUID->"3e6fa4ae-0a06-430d-84e7-be1e9126723e"]
}, Open  ]],

Cell["Open up this cell to see symbols defined so far.", "Text",
 CellChangeTimes->{{3.9137514700975313`*^9, 
  3.91375148497486*^9}},ExpressionUUID->"f8a41a81-9213-4a2d-b578-\
3dba88640e2b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Names", "[", "\"\<Global`*\>\"", "]"}], "//", 
  "gridExpression"}]], "Input",
 CellChangeTimes->{{3.913751130649131*^9, 3.913751144089697*^9}, {
  3.913751190214736*^9, 3.913751195361328*^9}, {3.913751259794888*^9, 
  3.9137512668255*^9}, {3.913751421941784*^9, 3.9137514266748667`*^9}},
 CellLabel->
  "In[654]:=",ExpressionUUID->"bcdf14ae-dc08-4ea1-ab22-c8c3e0972042"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"argMsg\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"banksPerCore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"bitLinesPerWordLine\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"CARRY\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"CARRYdims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"CARRYstore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"coresPerChip\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"GGL\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"GGLdims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"GGLstore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"GL\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"GLdims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"GLstore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"GPstore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"groupsPerBank\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"GVMLmode\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"illegal\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"IMEM\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"IMEMbitsPerEntry\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"IMEMdims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"IMEMentries\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"IMEMstore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L0\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L0dims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L0store\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L1\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L1colsPerWordLine\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L1dims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L1groupsPerBank\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L1Rstore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L1R$store\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L1store\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L1wordLinesPerGroup\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L2\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L2cols\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L2colsPerGroup\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L2dims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L2leftColGroups\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L2rightColGroups\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L2rows\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L2Rstore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L2R$store\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L2store\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L2T\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L2Tcols\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L2Tdims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L2Trows\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L2Tstore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L3S\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L3Sbits\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L3Sdims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L3Sstore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L4G\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L4GbitsPerUnit\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L4Gdims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L4GnUnits\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L4Gstore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L4hi\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L4hibytes\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L4hidims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L4hiStore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L4HS\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L4HSbytes\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L4HSdims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L4HSstore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L4i\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L4ibytes\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L4idims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L4iStore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L4S\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L4Sbytes\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L4Sdims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L4Sstore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"LPstore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"MMB\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"MMBbanks\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         StyleBox["List",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.94, 0.88, 0.94]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {
         StyleBox["\<\"MMBcolsPerWordLine\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"MMBdims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"MMBsectionsPerBank\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"MMBsegmentsPerSection\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"MMBstore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"MMBwordLinesPerSegment\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"newVal\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"nGP\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"nL1R\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"nL1R$\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"nL2R\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"nL2R$\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"nLP\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"nRN\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"nRN$\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"nSM\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"nyi\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RL\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RLdims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RLstore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"rn\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RN\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RNillegal\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RNstore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RNZero\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RN$\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RN$store\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSP\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSP128\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSP128dims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSP128store\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSP16\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSP16dims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSP16store\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSP4K\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSP4Kdims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSP4Kstore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSPbanks\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSPbitsPerSectionBank\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSPCT\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSPCTbanks\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSPCTbitsPerSectionBank\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSPCTdims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSPCTsections\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSPCTstore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSPdims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSPsections\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSPstore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSPWEN\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSPWENdims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSPWENstore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"sectionsPerBank\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"sm\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"SM\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"SM0X01\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"SM0X03\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"SM0X11\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"SM0X55\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"SM0XAA\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"SM0XFF\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"SMstore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"undefined\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"wCARRY\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"wGGL\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"wGL\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"wGP\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"wL0\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"wL1R\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"wL2R\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"wLP\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"wRL\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"wRN\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"wRSP128\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"wRSP16\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"wRSP4K\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"wRSPWEN\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"wSM\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {
       RGBColor[1, 0.9, 0.8], {
        RGBColor[0.88, 1, 0.88]}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> False},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.9137511400799303`*^9, 3.913751144969522*^9}, {
   3.91375119086418*^9, 3.913751195975719*^9}, 3.913751267705907*^9, 
   3.913751432075317*^9, 3.91375211794748*^9, 3.913753552160543*^9},
 CellLabel->
  "Out[654]=",ExpressionUUID->"6b767fe9-39e9-4cbd-a6f2-e4f2d9a550a7"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1707, 1051},
WindowMargins->{{Automatic, 10}, {Automatic, 323}},
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringDrop[LinterUIDockedCell`Private`previewString, -1] <> 
                 "\[Ellipsis]", 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{
             LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := ((
           "CodeInspector`LinterUI`Private`Vars`" <> "$$") <> 
          With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]) <> "$$", Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := ((
           CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]) <> "$$") <> 
         CodeInspector`LinterUI`Private`name, 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>1.5 Inherited,
FrontEndVersion->"13.3 for Mac OS X ARM (64-bit) (July 24, 2023)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"a9d5d1da-1c39-4b42-a726-365d7c837254"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 172, 2, 144, "Title",ExpressionUUID->"16778456-057a-439b-ac55-77ff6b95996b"],
Cell[755, 26, 672, 11, 87, "Text",ExpressionUUID->"bb44a52a-3340-48bd-8613-f25291fbd940"],
Cell[CellGroupData[{
Cell[1452, 41, 176, 2, 104, "Section",ExpressionUUID->"46aa0c78-f109-4a03-9859-cba679dbb122"],
Cell[1631, 45, 332, 10, 52, "Text",ExpressionUUID->"fcaa720b-2379-4cda-b331-877ab0e15be3"],
Cell[1966, 57, 511, 13, 87, "Text",ExpressionUUID->"9f6944e9-2232-4b51-a117-4fcd0de51546"],
Cell[2480, 72, 243, 5, 63, "Input",ExpressionUUID->"596e0ac3-24aa-4a16-9243-f7df7cc9153d",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[2760, 82, 261, 5, 104, "Section",ExpressionUUID->"275fc064-9f7b-4419-94fc-12b45d800c9d"],
Cell[3024, 89, 940, 19, 121, "Text",ExpressionUUID->"33053ebb-4258-47ab-8886-21fee119d1a9"],
Cell[3967, 110, 357, 7, 63, "Input",ExpressionUUID->"35a3dfce-032c-48b6-9c2f-24649b1f54d2",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[4349, 121, 117, 1, 51, "Subsection",ExpressionUUID->"00da3566-785a-4257-a2ce-f6167477458f"],
Cell[4469, 124, 116, 0, 52, "Text",ExpressionUUID->"603ef7d2-68da-433f-be48-b1eb2dbb602e"],
Cell[4588, 126, 173, 4, 121, "Text",ExpressionUUID->"b906b5b9-ca12-4bc6-b841-7ab7a37a5a5f"],
Cell[4764, 132, 710, 16, 466, "Text",ExpressionUUID->"a8734c96-c275-46db-a49c-f02d5fb57c5a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5511, 153, 114, 1, 51, "Subsection",ExpressionUUID->"0c2def3a-16a3-47d2-aacc-e474def23be1"],
Cell[CellGroupData[{
Cell[5650, 158, 9403, 249, 2015, "Code",ExpressionUUID->"f209d8cf-1294-47ce-be5e-0c5c5ab9bf40"],
Cell[15056, 409, 664, 10, 70, "Output",ExpressionUUID->"749d90bf-1a16-41a4-8a85-15d858f7af77"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15757, 424, 286, 7, 101, "Code",ExpressionUUID->"1a9d9167-e341-436b-b203-3b691ecfd203"],
Cell[16046, 433, 675, 10, 70, "Output",ExpressionUUID->"d6e70a92-e5ec-4d9e-8664-49e7f8cd2232"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[16770, 449, 137, 1, 51, "Subsection",ExpressionUUID->"8dc42121-ae75-4d2a-ba62-a4f41b979400"],
Cell[CellGroupData[{
Cell[16932, 454, 119, 1, 49, "Subsubsection",ExpressionUUID->"565a04b9-d653-467e-82c5-2f795435f8d6"],
Cell[17054, 457, 184, 3, 52, "Text",ExpressionUUID->"6fe83b28-0392-48ff-a40d-e5b36626d66d"],
Cell[17241, 462, 14888, 476, 1667, "Code",ExpressionUUID->"92ea27d1-23fd-4cfc-a4f6-88a9c13a37c7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[32178, 944, 131, 1, 51, "Subsection",ExpressionUUID->"6c904ca5-ebdf-4c97-b74d-88daeb2d5bf2"],
Cell[32312, 947, 756, 20, 188, "Code",ExpressionUUID->"1d62defa-6659-41c5-8e12-508f744a34d8"],
Cell[33071, 969, 1836, 49, 362, "Code",ExpressionUUID->"6269d9eb-66fa-462c-84bf-8e3bd330de22"],
Cell[34910, 1020, 1150, 23, 420, "Code",ExpressionUUID->"5162c3fd-4512-4384-95ed-e3ee07610e72"],
Cell[36063, 1045, 663, 17, 188, "Code",ExpressionUUID->"cb8b6e5d-1264-4e6a-bca6-a1794465ea9a"],
Cell[36729, 1064, 666, 17, 188, "Code",ExpressionUUID->"58a34af5-e785-48e2-b1f5-de24ce45d191"],
Cell[37398, 1083, 667, 17, 188, "Code",ExpressionUUID->"c440acd6-10fc-4417-a0ba-51466233e4ba"],
Cell[38068, 1102, 512, 13, 188, "Code",ExpressionUUID->"bd85321d-dc77-4067-a615-ffa67c901d91"],
Cell[CellGroupData[{
Cell[38605, 1119, 123, 1, 49, "Subsubsection",ExpressionUUID->"109049a2-b6ed-4160-8c49-6b638bf68dcd"],
Cell[38731, 1122, 121, 0, 52, "Text",ExpressionUUID->"f650e8df-a47c-43e9-af80-be167fb02c2d"],
Cell[38855, 1124, 1014, 27, 159, "Code",ExpressionUUID->"86481609-d4e1-41c9-aae7-630a01a10633"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39906, 1156, 120, 1, 49, "Subsubsection",ExpressionUUID->"ea5ead3c-1661-4f1a-9330-06377153588a"],
Cell[40029, 1159, 145, 2, 52, "Text",ExpressionUUID->"42d804f0-1bb1-48f4-9043-42d97f7b437a"],
Cell[40177, 1163, 1400, 40, 275, "Code",ExpressionUUID->"cc822aa0-3944-40e0-ae24-c1ecc5f68d89"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41614, 1208, 109, 1, 49, "Subsubsection",ExpressionUUID->"feae17b0-b265-481e-bbfb-a7de52c05825"],
Cell[41726, 1211, 102, 0, 52, "Text",ExpressionUUID->"144277bb-a32c-4e9f-bdef-2c5ef0a8e5ce"],
Cell[41831, 1213, 1836, 50, 217, "Code",ExpressionUUID->"f7b4a485-eed7-445b-99e2-3d7c29eb78be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43704, 1268, 121, 1, 49, "Subsubsection",ExpressionUUID->"209db018-6df9-4045-8adf-1ed8954b090f"],
Cell[43828, 1271, 2296, 65, 362, "Code",ExpressionUUID->"1cf66d2f-ff54-46ce-9637-68d395088166"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46161, 1341, 119, 1, 49, "Subsubsection",ExpressionUUID->"5245bd02-98f3-4b51-863b-a360e656bd01"],
Cell[46283, 1344, 167, 3, 52, "Text",ExpressionUUID->"bf1df186-530c-459b-a7ea-435de8d350a0"],
Cell[46453, 1349, 4308, 110, 623, "Code",ExpressionUUID->"5e627712-3b23-453e-b3fb-7feedd764f0c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50798, 1464, 119, 1, 49, "Subsubsection",ExpressionUUID->"da4db3de-9a4e-4e7a-9533-fc8ed2b958e3"],
Cell[50920, 1467, 173, 3, 52, "Text",ExpressionUUID->"1d2bab46-c77a-40ec-906d-d45a3f4ea2de"],
Cell[51096, 1472, 6370, 160, 1000, "Code",ExpressionUUID->"e646eb3e-a30f-4022-96a4-5de40612e6e9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57503, 1637, 119, 1, 49, "Subsubsection",ExpressionUUID->"eba03a26-0ea9-494f-ab07-0ae491adc196"],
Cell[57625, 1640, 186, 3, 52, "Text",ExpressionUUID->"49fb295a-595e-464f-871a-9c1ecff9c840"],
Cell[57814, 1645, 1685, 48, 275, "Code",ExpressionUUID->"c71771b1-8632-495d-91d2-d044ef9e385d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[59548, 1699, 120, 1, 51, "Subsection",ExpressionUUID->"9c936527-4761-4c87-a523-014a06803d1b"],
Cell[CellGroupData[{
Cell[59693, 1704, 113, 1, 49, "Subsubsection",ExpressionUUID->"9ae2c10b-2ef4-4684-8013-1c05d0dd0861"],
Cell[59809, 1707, 217, 3, 52, "Text",ExpressionUUID->"8e5db420-409f-4ae5-a65a-37a69d109f93"],
Cell[60029, 1712, 537, 16, 101, "Code",ExpressionUUID->"1630b32c-bbee-426a-b4a7-2d2d62f96ba7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60603, 1733, 115, 1, 49, "Subsubsection",ExpressionUUID->"e2986885-94da-450e-9b95-1508c3ff7b03"],
Cell[60721, 1736, 152, 2, 52, "Text",ExpressionUUID->"385a54aa-cf0a-4e28-b836-116d12a6382a"],
Cell[60876, 1740, 413, 12, 101, "Code",ExpressionUUID->"ea6ba9d9-23c9-42d6-acd4-3c10f2815731"],
Cell[61292, 1754, 333, 5, 87, "Text",ExpressionUUID->"f2180c3c-10aa-43f5-abad-6471ecaa47f6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61662, 1764, 113, 1, 49, "Subsubsection",ExpressionUUID->"5f006df1-1bcf-4b0c-bcbd-2f695b3cfe12"],
Cell[61778, 1767, 324, 10, 71, "Code",ExpressionUUID->"f10217d0-3ba5-4ab6-8064-26fd2a1e24b7"],
Cell[62105, 1779, 509, 15, 101, "Code",ExpressionUUID->"834b77d6-e664-409f-a1cc-d42929ebab9a"],
Cell[62617, 1796, 170, 3, 52, "Text",ExpressionUUID->"cceeec7e-87b5-4ce0-871b-694f28bbfd64"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62824, 1804, 115, 1, 49, "Subsubsection",ExpressionUUID->"928ff4d6-1f58-4287-bf21-25d0484cc738"],
Cell[62942, 1807, 304, 9, 71, "Code",ExpressionUUID->"228b43b7-3236-4c18-b75f-6cb28075ec15"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63283, 1821, 114, 1, 49, "Subsubsection",ExpressionUUID->"5c8ebedc-fabb-41fd-8154-5a28af7c23f5"],
Cell[63400, 1824, 369, 11, 101, "Code",ExpressionUUID->"5081ce6e-e5b2-4378-9366-a404c818bfe1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63806, 1840, 118, 1, 49, "Subsubsection",ExpressionUUID->"7b10b057-92ee-4c9e-9cd7-70e287fc7899"],
Cell[63927, 1843, 314, 10, 101, "Code",ExpressionUUID->"d1cded5f-5f11-41ee-992d-4d322e854c52"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64278, 1858, 115, 1, 49, "Subsubsection",ExpressionUUID->"5e68b14b-354b-4a9f-857d-6d99b7045c8b"],
Cell[64396, 1861, 586, 18, 101, "Code",ExpressionUUID->"1abf3285-17d9-4ad4-9131-0431366e29e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65019, 1884, 117, 1, 49, "Subsubsection",ExpressionUUID->"f12a704c-4b0a-4fe9-be46-a456de3e10b4"],
Cell[65139, 1887, 415, 12, 101, "Code",ExpressionUUID->"a54c7165-7ddf-4257-90e1-3c633ef265c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65591, 1904, 113, 1, 49, "Subsubsection",ExpressionUUID->"50c4a083-ba6f-4684-9047-a4e950af419f"],
Cell[65707, 1907, 256, 7, 71, "Code",ExpressionUUID->"275feff0-2b2d-445e-92f0-5c3d7f3bf4b6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[66012, 1920, 105, 1, 51, "Subsection",ExpressionUUID->"7503814c-2574-48b1-8ded-96899394b3e6"],
Cell[66120, 1923, 131, 0, 52, "Text",ExpressionUUID->"75bc1d17-74cf-4fcc-a18f-82b00de6a952"],
Cell[CellGroupData[{
Cell[66276, 1927, 111, 1, 49, "Subsubsection",ExpressionUUID->"b5d110d1-03b1-4eff-95ae-17e8230c175a"],
Cell[66390, 1930, 324, 9, 71, "Code",ExpressionUUID->"cb2b5b0f-3a05-4d70-ba30-b74851d9e0c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66751, 1944, 114, 1, 49, "Subsubsection",ExpressionUUID->"19ce5ce6-9b0b-424b-91ad-9173b6c1cc47"],
Cell[66868, 1947, 254, 7, 71, "Code",ExpressionUUID->"6b2e88a3-0386-41d9-8e2c-7b37623f9418"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67159, 1959, 126, 1, 49, "Subsubsection",ExpressionUUID->"93796c7d-cb3b-4acf-888a-64bcc6d73f3d"],
Cell[67288, 1962, 347, 10, 71, "Code",ExpressionUUID->"575b0423-8eeb-45ef-9812-641d07fbda65"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67672, 1977, 134, 1, 49, "Subsubsection",ExpressionUUID->"980d7348-63f4-454c-bd00-bff991a7ef9c"],
Cell[67809, 1980, 836, 24, 130, "Code",ExpressionUUID->"67edac52-9df2-4f91-84a6-56f8d7e43a30"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68682, 2009, 136, 1, 49, "Subsubsection",ExpressionUUID->"6b24564e-a8c9-49ef-bebc-19f6a3a6c313"],
Cell[CellGroupData[{
Cell[68843, 2014, 220, 5, 71, "Code",ExpressionUUID->"6d9e779b-e88a-41a9-b493-bb57752424a5"],
Cell[69066, 2021, 757, 14, 70, "Output",ExpressionUUID->"f75209ce-3600-479e-9451-691f1528563c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[69872, 2041, 127, 1, 49, "Subsubsection",ExpressionUUID->"988aa313-c8bc-48b2-8ccf-8d7edf3940cc"],
Cell[70002, 2044, 1064, 32, 188, "Code",ExpressionUUID->"2c16259a-5286-467f-9a0f-acd1461dba9c"],
Cell[71069, 2078, 679, 20, 130, "Code",ExpressionUUID->"bda6fa45-ad4e-4392-921d-1f6a5157ed59"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71785, 2103, 128, 1, 49, "Subsubsection",ExpressionUUID->"96467067-1ba7-4925-b4ff-bac52876e9d9"],
Cell[71916, 2106, 1109, 33, 188, "Code",ExpressionUUID->"fcb648ee-c7f9-462a-9cbf-f85128e382e5"],
Cell[73028, 2141, 937, 27, 159, "Code",ExpressionUUID->"c1c618f1-49bc-4e21-a7f3-b7a150a028f6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74002, 2173, 115, 1, 49, "Subsubsection",ExpressionUUID->"c00bca25-b1a1-48c0-96b7-a12e4b820ca9"],
Cell[74120, 2176, 186, 3, 52, "Text",ExpressionUUID->"850a9b30-97f0-47cd-b942-8498cc872403"],
Cell[74309, 2181, 333, 8, 71, "Code",ExpressionUUID->"a779046f-72e3-4642-8e9e-91a648e70002"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74679, 2194, 121, 1, 49, "Subsubsection",ExpressionUUID->"f7bd4955-d7c8-4917-9de5-0f51edc6d868"],
Cell[74803, 2197, 112, 0, 52, "Text",ExpressionUUID->"02087736-8065-4215-a645-2a1285e3177b"],
Cell[74918, 2199, 769, 18, 501, "Text",ExpressionUUID->"a6d8013d-bd1a-4361-be5a-07b7d86926b7"],
Cell[75690, 2219, 179, 3, 52, "Text",ExpressionUUID->"a27b1319-66db-4fc9-b739-cb70d8df63f6"],
Cell[75872, 2224, 1695, 47, 391, "Code",ExpressionUUID->"61409ae6-0c93-43c8-83e0-aa9a406bb01e"]
}, Open  ]]
}, Open  ]],
Cell[77594, 2275, 117, 1, 51, "Subsection",ExpressionUUID->"11e5c0ed-b2e1-45b3-9215-3360a79b659c"],
Cell[CellGroupData[{
Cell[77736, 2280, 116, 1, 49, "Subsection",ExpressionUUID->"19266de1-5d22-4c11-8020-1a4f0a72848d"],
Cell[CellGroupData[{
Cell[77877, 2285, 111, 1, 49, "Subsubsection",ExpressionUUID->"3d9b0787-1ad1-4684-9722-a23584183a8e"],
Cell[77991, 2288, 310, 10, 101, "Code",ExpressionUUID->"fd5ec8dd-725e-4ddc-b187-93909d0f0468"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78338, 2303, 115, 1, 49, "Subsubsection",ExpressionUUID->"a9b0cfb2-79af-486f-bc56-07224b376ff9"],
Cell[78456, 2306, 322, 10, 101, "Code",ExpressionUUID->"ed7bc27e-e897-40dd-8c3a-e6d86341fe2a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78815, 2321, 114, 1, 49, "Subsubsection",ExpressionUUID->"43d6c894-b3bb-4a5a-9cf3-dd16d284411e"],
Cell[78932, 2324, 319, 10, 101, "Code",ExpressionUUID->"0c11a1bb-4f81-4fd1-b2c0-237978f42cdd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79288, 2339, 120, 1, 49, "Subsubsection",ExpressionUUID->"a9c19549-6460-4567-abab-0ee2b2b569c2"],
Cell[79411, 2342, 529, 11, 217, "Code",ExpressionUUID->"790ce1c6-dbe3-4c3c-921e-f5a6c12c08b3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79977, 2358, 128, 1, 49, "Subsubsection",ExpressionUUID->"5149ca28-cad2-4b38-ad4c-77e4fc1aa044"],
Cell[80108, 2361, 1933, 47, 362, "Code",ExpressionUUID->"c9516960-da82-4871-9450-97e3726fb7ac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82078, 2413, 133, 1, 49, "Subsubsection",ExpressionUUID->"673644a5-91c0-4312-9a32-aa9beb2d4b81"],
Cell[82214, 2416, 557, 16, 130, "Code",ExpressionUUID->"6ea1a966-a82c-4f0a-922a-dc91cadc234e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82808, 2437, 128, 1, 49, "Subsubsection",ExpressionUUID->"75cd284c-2d82-4917-a33e-be5a8f6735ff"],
Cell[82939, 2440, 2109, 57, 362, "Code",ExpressionUUID->"7620bb13-a354-494d-991f-864c454cd3b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85085, 2502, 139, 1, 49, "Subsubsection",ExpressionUUID->"9b76e979-0ec8-4b33-825d-8eb7d786e15f"],
Cell[85227, 2505, 1591, 42, 362, "Code",ExpressionUUID->"a77f4c6b-d043-4860-a853-a92da54fd921"],
Cell[86821, 2549, 4224, 107, 710, "Code",ExpressionUUID->"270778b8-2827-4a5c-905b-7e55434dfaba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91082, 2661, 143, 1, 49, "Subsubsection",ExpressionUUID->"d8289050-af99-4596-a38c-da0b14212eb2"],
Cell[91228, 2664, 290, 5, 87, "Text",ExpressionUUID->"2e8b0375-1677-45b8-b081-93a46dfcb951"],
Cell[91521, 2671, 2451, 61, 391, "Code",ExpressionUUID->"8163b191-2503-4f5c-9dc6-58bd0e11efae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94009, 2737, 132, 1, 49, "Subsubsection",ExpressionUUID->"fc94bfba-19c7-4dab-afaf-70fe2d9db925"],
Cell[94144, 2740, 166, 3, 52, "Text",ExpressionUUID->"04da459c-8ea4-49e2-be36-3283e39db558"],
Cell[94313, 2745, 2366, 60, 391, "Code",ExpressionUUID->"490605d1-1812-4670-8144-10c51f8a285b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96716, 2810, 137, 1, 49, "Subsubsection",ExpressionUUID->"f2cff17d-4d36-4756-bb6a-63f06b29145d"],
Cell[96856, 2813, 731, 21, 188, "Code",ExpressionUUID->"fd4ee73f-e39f-460c-b861-1f6bdbcf51ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97624, 2839, 132, 1, 49, "Subsubsection",ExpressionUUID->"dbb42862-8ab9-42f9-8e87-c1fc197b6ddf"],
Cell[97759, 2842, 369, 9, 101, "Code",ExpressionUUID->"150e6b6b-df80-443b-913c-6398abd20779"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98165, 2856, 153, 1, 49, "Subsubsection",ExpressionUUID->"21d709c9-ecb8-418b-a260-60d69a3a13da"],
Cell[98321, 2859, 90, 0, 52, "Text",ExpressionUUID->"b55d9cff-9f40-4254-97f8-b096ed5c7a10"],
Cell[98414, 2861, 307, 8, 71, "Code",ExpressionUUID->"b5c7b59a-786b-4213-91df-eb75cf85d7f2"],
Cell[98724, 2871, 86, 0, 52, "Text",ExpressionUUID->"02484a4b-c72d-4bbf-b1e9-d34478799697"],
Cell[98813, 2873, 624, 17, 101, "Code",ExpressionUUID->"9ee56195-4d24-493c-889c-e4330c4f66f2"],
Cell[99440, 2892, 90, 0, 52, "Text",ExpressionUUID->"71f1bc89-0874-44f6-817a-31fa8e0008c4"],
Cell[99533, 2894, 677, 19, 130, "Code",ExpressionUUID->"6c080a35-40c8-498e-a077-c51a6f789946"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100247, 2918, 165, 4, 88, "Subsubsection",ExpressionUUID->"e3780f67-5a3f-4006-89b4-22f2aa79c83d"],
Cell[100415, 2924, 90, 0, 52, "Text",ExpressionUUID->"03491a5e-0e3d-4b3c-8602-51661b2c9096"],
Cell[100508, 2926, 310, 8, 71, "Code",ExpressionUUID->"0250971a-bcf0-4304-86bd-ebe1ee928bde"],
Cell[100821, 2936, 86, 0, 52, "Text",ExpressionUUID->"add2d11d-d825-4fd8-8743-b2e5f6bf4109"],
Cell[100910, 2938, 566, 15, 101, "Code",ExpressionUUID->"e51e53f3-f757-4460-83ce-8c47001219f9"],
Cell[101479, 2955, 90, 0, 52, "Text",ExpressionUUID->"75a67e81-495d-440f-b610-19c2976b4399"],
Cell[101572, 2957, 689, 19, 130, "Code",ExpressionUUID->"b8c7bf2a-613b-4b8b-a10e-6b7190e5b948"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[102310, 2982, 118, 1, 51, "Subsection",ExpressionUUID->"9f63a398-d374-4970-a237-cd5cde694e93"],
Cell[102431, 2985, 3542, 80, 1058, "Code",ExpressionUUID->"81a041b3-1a85-4a89-8a62-d73393f31edf"],
Cell[105976, 3067, 3285, 74, 1000, "Code",ExpressionUUID->"e8e1a2cb-7f07-454b-8689-0fe7fb6079cc"],
Cell[109264, 3143, 602, 13, 188, "Code",ExpressionUUID->"6eb0fbb7-85e1-49ab-b632-01eac5a469b2"],
Cell[109869, 3158, 741, 17, 217, "Code",ExpressionUUID->"4b7b4a58-3b0c-4de9-a813-efdede4ad051"],
Cell[110613, 3177, 877, 20, 246, "Code",ExpressionUUID->"60d46b24-1a4b-489d-bd01-e6c760592a14"],
Cell[111493, 3199, 707, 17, 188, "Code",ExpressionUUID->"4c5b263d-7092-4123-b209-e77c955f261a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112237, 3221, 106, 1, 51, "Subsection",ExpressionUUID->"7537c387-7323-4ff0-9a0d-0b5588483013"],
Cell[112346, 3224, 211, 6, 71, "Code",ExpressionUUID->"377f5257-1ece-4e4d-ba13-ff834e5f99bb"],
Cell[112560, 3232, 158, 4, 71, "Code",ExpressionUUID->"918ae5e9-ed89-472f-8b8a-42240344be15"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112755, 3241, 168, 2, 51, "Subsection",ExpressionUUID->"894b628a-bb6d-446b-8011-dd1c8ba04cff"],
Cell[112926, 3245, 627, 15, 53, "Text",ExpressionUUID->"8a4d7e42-023c-40a8-ab10-8f81ae606672"],
Cell[CellGroupData[{
Cell[113578, 3264, 348, 8, 66, "Input",ExpressionUUID->"17e11793-12a4-41d3-a00b-76212d548a51"],
Cell[113929, 3274, 536, 8, 70, "Output",ExpressionUUID->"ba5fd9e6-689a-4dd8-a71c-623d6dd75c56"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114502, 3287, 496, 13, 66, "Input",ExpressionUUID->"403c9da7-de3b-4b5d-8ce2-93f2af135512"],
Cell[115001, 3302, 584, 9, 70, "Output",ExpressionUUID->"dce44f2b-1b50-498d-abfc-9a305e636378"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115622, 3316, 497, 13, 66, "Input",ExpressionUUID->"207884bd-3e3c-4bb4-a8a4-3ed5c082a5ba"],
Cell[116122, 3331, 556, 9, 70, "Output",ExpressionUUID->"373b703b-80fb-4413-a1a0-89bf4fc93948"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[116727, 3346, 178, 2, 51, "Subsection",ExpressionUUID->"d2b22d21-9128-4b2c-bb34-3840452aab68"],
Cell[116908, 3350, 244, 5, 52, "Text",ExpressionUUID->"fecf91e9-0d85-4a8c-94d0-870a8ffcd3ed"],
Cell[117155, 3357, 1051, 25, 188, "Input",ExpressionUUID->"3e6d4f79-d9e6-43d1-914b-406a163edca0"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[118255, 3388, 228, 3, 81, "Section",ExpressionUUID->"38ce5bba-abeb-447f-9921-e0711f467ee7"],
Cell[CellGroupData[{
Cell[118508, 3395, 176, 2, 51, "Subsection",ExpressionUUID->"8c1da47a-ee85-47d6-b344-990faf75b1d8"],
Cell[118687, 3399, 246, 4, 52, "Text",ExpressionUUID->"7e7e40bb-bcef-4e48-bce9-66818b27ea34"],
Cell[118936, 3405, 366, 8, 95, "Input",ExpressionUUID->"c7117b70-b1f2-4725-9f43-a71f3384694d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119339, 3418, 229, 3, 51, "Subsection",ExpressionUUID->"96445b4c-0980-4255-8806-435dec960025"],
Cell[119571, 3423, 1042, 23, 219, "Input",ExpressionUUID->"22b6a661-0d5c-4c50-a94a-02a97e53d2dc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[120662, 3452, 205, 2, 104, "Section",ExpressionUUID->"3ec8a088-47c6-4c17-b678-206d76763c30"],
Cell[120870, 3456, 153, 3, 52, "Text",ExpressionUUID->"7dadefef-3bd5-4c1f-b282-704280f69acd"],
Cell[CellGroupData[{
Cell[121048, 3463, 173, 2, 51, "Subsection",ExpressionUUID->"bc2dd19b-04b3-425d-92f9-c53535d39ae8"],
Cell[121224, 3467, 1225, 30, 343, "Input",ExpressionUUID->"4c0ea9c0-ecc4-4b18-a07d-b1ef34f2fbbe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122486, 3502, 173, 2, 51, "Subsection",ExpressionUUID->"8d8f8580-e90f-4ce0-bc97-d19fbbf94478"],
Cell[122662, 3506, 920, 23, 250, "Input",ExpressionUUID->"91770af6-dff2-4383-b864-2686e1fb23ba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123619, 3534, 171, 2, 51, "Subsection",ExpressionUUID->"7b56d7ce-4dff-4046-b6eb-083a6088eee2"],
Cell[123793, 3538, 3988, 111, 374, "Input",ExpressionUUID->"fe7e4204-5253-4934-a536-1d3342189b04"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127818, 3654, 166, 2, 51, "Subsection",ExpressionUUID->"ade8c261-1c6d-46e1-a4d4-06924d60adca"],
Cell[127987, 3658, 251, 6, 52, "Text",ExpressionUUID->"e8d6f8ec-650e-4d54-82a2-b2690f1154d8"],
Cell[128241, 3666, 232, 5, 63, "Input",ExpressionUUID->"8243b4e2-fe10-4523-a764-c1d30833c2f1"],
Cell[128476, 3673, 1368, 32, 122, "Text",ExpressionUUID->"ac85bdb0-5022-4d3f-add7-f64a8b47ea7b"],
Cell[129847, 3707, 3114, 71, 253, "Input",ExpressionUUID->"08862b2e-bd29-469b-85c3-ebf3a7762621"],
Cell[CellGroupData[{
Cell[132986, 3782, 226, 3, 49, "Subsubsection",ExpressionUUID->"f6e1b9a9-e80a-4942-b37a-14d5b683dbe5"],
Cell[133215, 3787, 1012, 16, 63, "Input",ExpressionUUID->"f708d845-acfd-4ed1-9a4a-3f6a216f4263"],
Cell[134230, 3805, 2393, 56, 188, "Input",ExpressionUUID->"d34adc51-70d9-4d60-b3fa-863dbdde39df"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[136672, 3867, 167, 2, 51, "Subsection",ExpressionUUID->"c0f8f4bb-78e7-4e33-91d1-6d761efb8cf2"],
Cell[136842, 3871, 214, 4, 52, "Text",ExpressionUUID->"7ce5f8b1-9b31-4760-9852-e272e96ea97b"],
Cell[137059, 3877, 2833, 63, 191, "Input",ExpressionUUID->"45e94f2b-d6c0-44cf-bb6f-debad13aa471"]
}, Open  ]],
Cell[CellGroupData[{
Cell[139929, 3945, 166, 2, 51, "Subsection",ExpressionUUID->"5af2f7c2-b1e2-4159-b039-c6e09045abde"],
Cell[140098, 3949, 7675, 212, 628, "Input",ExpressionUUID->"263feafb-68c8-4fdb-8f8c-d01a00ac2591"],
Cell[CellGroupData[{
Cell[147798, 4165, 176, 2, 49, "Subsubsection",ExpressionUUID->"04a1224b-8f60-41af-9bea-44422f50bd4e"],
Cell[147977, 4169, 1335, 41, 157, "Input",ExpressionUUID->"581c24b1-b797-4e02-95f5-f2b18414d69b"],
Cell[149315, 4212, 2578, 62, 250, "Input",ExpressionUUID->"287af2d0-eebf-4a38-8ba6-b7b846b3f68c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[151942, 4280, 205, 2, 51, "Subsection",ExpressionUUID->"e92ea7ab-ebd2-4521-bd7c-54294000e3ac"],
Cell[152150, 4284, 258, 6, 52, "Text",ExpressionUUID->"83dd286a-fd1d-4c9a-a02b-e299417ea21a"],
Cell[152411, 4292, 148, 3, 52, "Text",ExpressionUUID->"dfcfb9a6-3aac-490b-93cb-b4f9b2089047"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[152608, 4301, 173, 2, 104, "Section",ExpressionUUID->"310498a4-5a0f-45d0-bb5c-d2ce528a4060"],
Cell[CellGroupData[{
Cell[152806, 4307, 172, 2, 51, "Subsection",ExpressionUUID->"47d11e8c-b442-41de-aa25-7d42972cf853"],
Cell[CellGroupData[{
Cell[153003, 4313, 170, 2, 49, "Subsubsection",ExpressionUUID->"f7712b0e-7194-4b45-baf4-f2c10a643945"],
Cell[153176, 4317, 335, 9, 52, "Text",ExpressionUUID->"7bc07e70-632e-4c13-9e3d-723aea1047c5"],
Cell[CellGroupData[{
Cell[153536, 4330, 2303, 56, 314, "Input",ExpressionUUID->"b243217a-67fc-41af-be92-f024e641ff60"],
Cell[155842, 4388, 843, 14, 84, "Output",ExpressionUUID->"c96636cf-70f9-4336-a112-33a145a5caa8"],
Cell[156688, 4404, 850, 14, 63, "Output",ExpressionUUID->"d9841e3d-1e5a-4432-b1b5-61ed35956a0e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[157587, 4424, 168, 2, 49, "Subsubsection",ExpressionUUID->"701b9949-772f-447b-864c-13f0159270cf"],
Cell[157758, 4428, 358, 8, 52, "Text",ExpressionUUID->"faa1447d-93db-47ba-946b-268a4215ec60"],
Cell[158119, 4438, 435, 9, 52, "Text",ExpressionUUID->"5eb90d68-6334-4dfe-bf69-c8dd9aab86f9"],
Cell[CellGroupData[{
Cell[158579, 4451, 1822, 48, 283, "Input",ExpressionUUID->"63fccaa4-7d0e-4b51-9770-2918871d063e"],
Cell[160404, 4501, 493, 9, 84, "Output",ExpressionUUID->"4cfaa7e3-81a9-47bf-b29d-3aadb25a642b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[160946, 4516, 170, 2, 49, "Subsubsection",ExpressionUUID->"c0c5aa46-2bf3-4200-bced-550c3809895d"],
Cell[161119, 4520, 325, 7, 52, "Text",ExpressionUUID->"0218c080-c1f9-4f92-8318-d65ab9434752"],
Cell[CellGroupData[{
Cell[161469, 4531, 1986, 50, 345, "Input",ExpressionUUID->"36baf6c3-55da-43f0-9af1-f5b803d12771"],
Cell[163458, 4583, 417, 8, 84, "Output",ExpressionUUID->"8571db31-53e3-4857-aee3-a5b5728d7b50"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[163924, 4597, 173, 2, 49, "Subsubsection",ExpressionUUID->"9135dd45-1914-4a20-8359-fb305fce6ea0"],
Cell[CellGroupData[{
Cell[164122, 4603, 1565, 42, 252, "Input",ExpressionUUID->"8cdc09f3-4219-4f79-90a0-26848aeebc9d"],
Cell[165690, 4647, 685, 12, 63, "Output",ExpressionUUID->"4a819418-363f-4179-9b44-c1d1720e44a8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[166424, 4665, 172, 2, 49, "Subsubsection",ExpressionUUID->"83b7cc3b-1446-4df4-af8a-bcf1180764b0"],
Cell[166599, 4669, 181, 3, 52, "Text",ExpressionUUID->"79fb0cd0-56a2-448a-9148-d1ff4b330294"],
Cell[CellGroupData[{
Cell[166805, 4676, 1965, 48, 283, "Input",ExpressionUUID->"167182c3-5b56-46d4-999f-74969901837f"],
Cell[168773, 4726, 725, 13, 63, "Output",ExpressionUUID->"e1f8b2a0-e191-40e0-9029-cb858bfeea65"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[169547, 4745, 172, 2, 49, "Subsubsection",ExpressionUUID->"57b53ba3-94aa-46c8-802a-ab0b7c678f45"],
Cell[CellGroupData[{
Cell[169744, 4751, 1731, 45, 283, "Input",ExpressionUUID->"9d199b59-448b-48d0-8b6e-89356ed36979"],
Cell[171478, 4798, 587, 10, 63, "Output",ExpressionUUID->"82dd2de5-092c-4ddd-af10-77a71aedf45b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[172114, 4814, 170, 2, 49, "Subsubsection",ExpressionUUID->"0669b92a-0f52-4151-a1c3-c0c45b2bd32f"],
Cell[172287, 4818, 151, 3, 52, "Text",ExpressionUUID->"4330b4ce-7a29-45cf-9426-8a9bd3c427f6"],
Cell[CellGroupData[{
Cell[172463, 4825, 1300, 34, 221, "Input",ExpressionUUID->"d7d670bf-24f0-401f-a3d4-ad7cf95b0cf8"],
Cell[173766, 4861, 517, 9, 63, "Output",ExpressionUUID->"8e8f6971-4646-4f31-afd0-6ea60280db22"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[174332, 4876, 169, 2, 49, "Subsubsection",ExpressionUUID->"ba42def2-3b56-433a-a787-43ed7ea1261d"],
Cell[CellGroupData[{
Cell[174526, 4882, 1439, 40, 252, "Input",ExpressionUUID->"0382f539-fca7-420b-94d2-f9e819c08c8b"],
Cell[175968, 4924, 609, 11, 63, "Output",ExpressionUUID->"38a75f6a-bb7d-4feb-bbed-67d908b4aecf"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[176638, 4942, 232, 3, 51, "Subsection",ExpressionUUID->"b771c3e3-5dcb-477a-a93c-52ce0ebc6bed"],
Cell[176873, 4947, 201, 3, 52, "Text",ExpressionUUID->"e60b27ab-3b37-4a08-b308-53321816fc81"],
Cell[CellGroupData[{
Cell[177099, 4954, 170, 2, 49, "Subsubsection",ExpressionUUID->"75444226-7dc4-460b-8ab0-5fcfcd9465b2"],
Cell[177272, 4958, 251, 5, 52, "Text",ExpressionUUID->"2ae51aed-fd90-4d0f-85cd-894e4903a6f1"],
Cell[CellGroupData[{
Cell[177548, 4967, 1763, 48, 259, "Input",ExpressionUUID->"7bd2c41e-6785-4547-b85b-04d043003071"],
Cell[179314, 5017, 671, 11, 84, "Output",ExpressionUUID->"911ae63a-b652-4da7-8c6c-2330a3ade343"],
Cell[179988, 5030, 678, 11, 63, "Output",ExpressionUUID->"03ca8273-221a-4999-afe2-1703edf87838"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[180715, 5047, 170, 2, 49, "Subsubsection",ExpressionUUID->"26044a37-6c67-43ea-843e-fe7d8dd8419f"],
Cell[180888, 5051, 251, 5, 52, "Text",ExpressionUUID->"faba8137-ede7-4c85-94d3-5f6c789df3a2"],
Cell[CellGroupData[{
Cell[181164, 5060, 1787, 48, 259, "Input",ExpressionUUID->"eeba1314-4287-4d33-8ae3-79c98aa3f48a"],
Cell[182954, 5110, 550, 10, 84, "Output",ExpressionUUID->"95a09b48-0ddf-42b7-bd2a-d4a0f1b93045"],
Cell[183507, 5122, 553, 10, 63, "Output",ExpressionUUID->"fd949dda-245e-45b3-93d2-b63650cb99ed"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[184121, 5139, 184, 2, 51, "Subsection",ExpressionUUID->"41884856-39f6-464e-ad99-23de7cbfd974"],
Cell[CellGroupData[{
Cell[184330, 5145, 201, 3, 49, "Subsubsection",ExpressionUUID->"12f19ff0-b9d7-432c-8d95-567ddb7a62ee"],
Cell[184534, 5150, 251, 5, 52, "Text",ExpressionUUID->"6a66c554-ab8f-4e7c-91b6-112588329df4"],
Cell[CellGroupData[{
Cell[184810, 5159, 1825, 49, 259, "Input",ExpressionUUID->"18ce82ca-6d41-4d46-8b93-cd357c5745b0"],
Cell[186638, 5210, 697, 12, 84, "Output",ExpressionUUID->"5a6796c3-c2ab-4536-87d8-aafc812ccfe0"],
Cell[187338, 5224, 706, 12, 63, "Output",ExpressionUUID->"47523cd1-ab31-4fc4-8cdc-c446c1f94524"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[188093, 5242, 171, 2, 49, "Subsubsection",ExpressionUUID->"a7df9d13-6dda-469c-b9c8-7855070275a6"],
Cell[188267, 5246, 251, 5, 52, "Text",ExpressionUUID->"89db92bd-fd26-4e8c-8ca0-ba51f7771d2e"],
Cell[CellGroupData[{
Cell[188543, 5255, 1806, 48, 259, "Input",ExpressionUUID->"f424ca79-fa66-4326-b147-be423defcbb3"],
Cell[190352, 5305, 598, 10, 84, "Output",ExpressionUUID->"5ac260da-1979-4684-b7a5-4a2c9ed8bd41"],
Cell[190953, 5317, 601, 10, 63, "Output",ExpressionUUID->"ea10eb7b-d136-49e2-aff5-bfb409b130bd"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[191615, 5334, 171, 2, 51, "Subsection",ExpressionUUID->"2ca05eb3-741f-4f5a-8d18-de6df6dfad62"],
Cell[191789, 5338, 391, 8, 52, "Text",ExpressionUUID->"015f1f65-2b71-4ec1-b699-7ddd6cc237fd"],
Cell[CellGroupData[{
Cell[192205, 5350, 172, 2, 49, "Subsubsection",ExpressionUUID->"9b16f03f-9407-4acc-a6fc-582a1bc7dfde"],
Cell[192380, 5354, 170, 3, 52, "Text",ExpressionUUID->"b7da21af-eb59-43dc-b474-b77e20136d06"],
Cell[CellGroupData[{
Cell[192575, 5361, 226, 5, 40, "Subitem",ExpressionUUID->"7992f1e4-1812-4b94-8914-843f7223a958"],
Cell[192804, 5368, 312, 6, 38, "SubsubitemNumbered",ExpressionUUID->"582af9d1-36e4-49d9-9e36-b2ec3d001512"],
Cell[193119, 5376, 332, 8, 38, "SubsubitemNumbered",ExpressionUUID->"34c0a9e8-54a1-493a-95c2-c433221ef3d7"],
Cell[193454, 5386, 348, 6, 38, "SubsubitemNumbered",ExpressionUUID->"3eaab60f-3540-4428-9b42-3440bac56ccf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193839, 5397, 355, 7, 40, "Subitem",ExpressionUUID->"ef926592-2340-4b5d-9bb2-9152f15240e7"],
Cell[CellGroupData[{
Cell[194219, 5408, 1811, 45, 252, "Input",ExpressionUUID->"63860c21-8b68-4fe2-bbb1-3db4b6add24c"],
Cell[196033, 5455, 476, 9, 84, "Output",ExpressionUUID->"102606f7-9cd8-4c8f-93f1-420b18d65587"],
Cell[196512, 5466, 483, 9, 84, "Output",ExpressionUUID->"57bb6d3a-1518-48b2-ad17-bfc6c567e4fc"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[197080, 5484, 176, 2, 104, "Section",ExpressionUUID->"61b83ca1-3038-4d47-859f-8605fed0246a"],
Cell[197259, 5488, 150, 3, 52, "Text",ExpressionUUID->"e17ad12d-d112-4324-9c19-3941233129c3"],
Cell[CellGroupData[{
Cell[197434, 5495, 166, 2, 51, "Subsection",ExpressionUUID->"3cc9bebf-a96f-464f-8ba1-7ca365473a3f"],
Cell[197603, 5499, 187, 3, 52, "Text",ExpressionUUID->"5ba3534e-2ea0-4494-b269-36f1c9284140"],
Cell[CellGroupData[{
Cell[197815, 5506, 1410, 35, 221, "Input",ExpressionUUID->"cf07ba35-3b02-490a-99c7-51203c69c738"],
Cell[199228, 5543, 392, 7, 84, "Output",ExpressionUUID->"4e691ec5-3c90-4f77-92ab-01c52ad4de3a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[199669, 5556, 217, 3, 51, "Subsection",ExpressionUUID->"66dd2c5a-f9a7-478a-a7f5-192183812bc9"],
Cell[199889, 5561, 183, 3, 52, "Text",ExpressionUUID->"c655a178-3084-4de7-9319-dae931c6ae2f"],
Cell[CellGroupData[{
Cell[200097, 5568, 1462, 36, 221, "Input",ExpressionUUID->"3862b3f7-7f1a-4454-bd0b-644987f7d11d"],
Cell[201562, 5606, 369, 7, 84, "Output",ExpressionUUID->"b35503b9-b233-4b99-b403-e6b122dd0f00"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[201980, 5619, 242, 3, 51, "Subsection",ExpressionUUID->"c3a541d8-9a0c-43f7-a168-c0da351b386d"],
Cell[202225, 5624, 214, 4, 52, "Text",ExpressionUUID->"3c905753-efa7-4cf4-ba8e-e58cfd0b4b62"],
Cell[CellGroupData[{
Cell[202464, 5632, 1543, 38, 221, "Input",ExpressionUUID->"891a44ee-7745-433b-b06a-1856c233ead7"],
Cell[204010, 5672, 371, 7, 84, "Output",ExpressionUUID->"5c7af769-f801-45d4-9fae-f011160e25f1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[204430, 5685, 191, 4, 51, "Subsection",ExpressionUUID->"4a5680b8-5493-41f1-8e84-d14b63643c19"],
Cell[204624, 5691, 209, 7, 52, "Text",ExpressionUUID->"87768409-27f5-4b4f-87ff-634a89145fb4"],
Cell[CellGroupData[{
Cell[204858, 5702, 1583, 38, 221, "Input",ExpressionUUID->"4ff2412a-3080-491c-b873-7281ca40b9e0"],
Cell[206444, 5742, 415, 8, 84, "Output",ExpressionUUID->"372be3d5-041b-4905-8c93-d8e598691e21"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[206908, 5756, 194, 4, 51, "Subsection",ExpressionUUID->"cc528d63-49ab-4e1e-ac5f-bc8622f64ece"],
Cell[207105, 5762, 237, 8, 52, "Text",ExpressionUUID->"b942bc81-819d-4dac-ba78-637e26c0a52b"],
Cell[CellGroupData[{
Cell[207367, 5774, 1232, 34, 221, "Input",ExpressionUUID->"2b93b3dc-4942-4692-84a6-fc1fcb65dfdf"],
Cell[208602, 5810, 348, 7, 84, "Output",ExpressionUUID->"ce982cc6-a8d0-4ac4-905f-aaafcee56fb2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[208999, 5823, 171, 2, 51, "Subsection",ExpressionUUID->"68c829cf-02fc-4546-9d4a-b1d9d56d17f4"],
Cell[CellGroupData[{
Cell[209195, 5829, 1165, 32, 221, "Input",ExpressionUUID->"872aa6e9-67eb-4caf-ae12-64246ef2fbaa"],
Cell[210363, 5863, 316, 6, 84, "Output",ExpressionUUID->"c58d859c-f9a9-4fef-962f-c7ed4ee7525f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[210728, 5875, 200, 3, 51, "Subsection",ExpressionUUID->"1558772a-880e-4a91-bd85-4bbf03eb3290"],
Cell[CellGroupData[{
Cell[210953, 5882, 1222, 33, 221, "Input",ExpressionUUID->"4c76ae8c-4599-44ba-a4b2-2a0f6b205eb4"],
Cell[212178, 5917, 338, 7, 84, "Output",ExpressionUUID->"06b26d64-4a76-4419-ac00-d86bddf59bd5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[212565, 5930, 221, 3, 51, "Subsection",ExpressionUUID->"b59b5e3a-76dc-43fc-86af-76e2672a59ef"],
Cell[CellGroupData[{
Cell[212811, 5937, 1256, 33, 221, "Input",ExpressionUUID->"1bc2a73c-b858-4613-9805-7609ea489de8"],
Cell[214070, 5972, 361, 8, 84, "Output",ExpressionUUID->"85bd6ff2-c427-4c32-a3bf-d4ed53c25a9a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[214480, 5986, 246, 3, 51, "Subsection",ExpressionUUID->"8803cd2d-9b7f-4a0b-8da9-6ad880d3b893"],
Cell[CellGroupData[{
Cell[214751, 5993, 1318, 34, 221, "Input",ExpressionUUID->"98108a39-d792-4b6a-b06e-6b8997650178"],
Cell[216072, 6029, 384, 8, 84, "Output",ExpressionUUID->"142938a5-b1f7-49ec-8315-68580b8db0bc"]
}, Open  ]]
}, Open  ]],
Cell[216483, 6041, 212, 4, 51, "Subsection",ExpressionUUID->"0d2e775e-063d-4203-91cf-6ae85dd1e809"],
Cell[216698, 6047, 209, 4, 49, "Subsection",ExpressionUUID->"1f71663e-d906-4589-a2ea-248ff0d484fe"],
Cell[216910, 6053, 210, 4, 49, "Subsection",ExpressionUUID->"c551c901-22b9-4110-9838-77823bf3b1a9"],
Cell[217123, 6059, 208, 4, 49, "Subsection",ExpressionUUID->"46145d69-055e-4801-bcbd-73c64d3c8612"],
Cell[217334, 6065, 209, 4, 49, "Subsection",ExpressionUUID->"6d5bf3cf-73a9-4e78-acd8-ba5257ae9df1"],
Cell[217546, 6071, 211, 4, 49, "Subsection",ExpressionUUID->"1d3c390e-89f2-4189-b422-f28f0f2b39c2"],
Cell[217760, 6077, 209, 4, 49, "Subsection",ExpressionUUID->"3ffd6846-d8ab-4a8f-ac57-4a6f0cc9f8e8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[218006, 6086, 204, 4, 104, "Section",ExpressionUUID->"72939af5-2d34-4186-9b83-df30f0fe8065"],
Cell[218213, 6092, 838, 15, 95, "Input",ExpressionUUID->"ef32843a-b31f-4ae0-bbc4-7c7cfab38ed1"],
Cell[CellGroupData[{
Cell[219076, 6111, 247, 5, 63, "Input",ExpressionUUID->"c930ff66-6713-479f-9e60-bd264087325e"],
Cell[219326, 6118, 157, 3, 84, "Output",ExpressionUUID->"38343452-97f5-425b-aab7-90d18554e9c3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[219532, 6127, 227, 3, 104, "Section",ExpressionUUID->"a416204a-1e85-4f5e-85cb-c051134b631c"],
Cell[219762, 6132, 180, 3, 52, "Text",ExpressionUUID->"7d9d8008-289d-443d-b29c-f36876c98183"],
Cell[CellGroupData[{
Cell[219967, 6139, 255, 6, 63, "Input",ExpressionUUID->"c7768425-603c-4af8-a0bb-80a41e34700b"],
Cell[220225, 6147, 225, 4, 84, "Output",ExpressionUUID->"3e6fa4ae-0a06-430d-84e7-be1e9126723e"]
}, Open  ]],
Cell[220465, 6154, 191, 3, 52, "Text",ExpressionUUID->"f8a41a81-9213-4a2d-b578-3dba88640e2b"],
Cell[CellGroupData[{
Cell[220681, 6161, 406, 8, 63, "Input",ExpressionUUID->"bcdf14ae-dc08-4ea1-ab22-c8c3e0972042"],
Cell[221090, 6171, 73861, 2170, 6163, "Output",ExpressionUUID->"6b767fe9-39e9-4cbd-a6f2-e4f2d9a550a7"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

