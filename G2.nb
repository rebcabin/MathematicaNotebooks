(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    782123,      16676]
NotebookOptionsPosition[    695485,      15178]
NotebookOutlinePosition[    741910,      16034]
CellTagsIndexPosition[    741867,      16031]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Gemini II", "Title",
 CellChangeTimes->{{3.9134059554869957`*^9, 3.913405962048803*^9}},
 FontWeight->"Bold",ExpressionUUID->"16778456-057a-439b-ac55-77ff6b95996b"],

Cell["\<\
This is an executable, simplified version of the G2 APL2 software, G2 SoC, \
and G2 Core. specifications. Its purpose is to machine-check the prose in \
https://gsitech.atlassian.net/wiki/spaces/AR/pages/2091352073/APL+2.0+\
Language+V1.3. Clarity and accuracy are goals. Efficiency is not a goal.\
\>", "Text",
 CellChangeTimes->{{3.913454463637103*^9, 3.9134545134570007`*^9}, {
  3.913459930684636*^9, 3.913459931600078*^9}, {3.913460103580197*^9, 
  3.913460127205694*^9}, {3.913640796126814*^9, 3.913640810735035*^9}, {
  3.9137477208901043`*^9, 3.913747747387837*^9}, {3.913750380009451*^9, 
  3.9137503964040318`*^9}, {3.914853649938925*^9, 
  3.914853661741346*^9}},ExpressionUUID->"bb44a52a-3340-48bd-8613-\
f25291fbd940"],

Cell[CellGroupData[{

Cell["Preliminaries", "Section",
 CellChangeTimes->{{3.913466177509832*^9, 3.9134662007216883`*^9}},
 FontWeight->"Bold",ExpressionUUID->"46aa0c78-f109-4a03-9859-cba679dbb122"],

Cell[TextData[{
 "Almost all the analysis below pertains per G2C, aka ",
 StyleBox["core",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.913747710908846*^9, 3.913747714075435*^9}, {
  3.9137477530219736`*^9, 
  3.913747785380069*^9}},ExpressionUUID->"fcaa720b-2379-4cda-b331-\
877ab0e15be3"],

Cell[TextData[{
 "We follow 0-based indexing in function calls with single square brackets, \
and 1-based indexing in ",
 StyleBox["Part", "Input"],
 " expressions with double square brackets. For example, ",
 StyleBox["RN[0]", "Input"],
 " is the same as ",
 StyleBox["RN[[1]]", "Input"],
 ". Function-call notation is preferred to reduce the risk of off-by-one \
errors."
}], "Text",
 CellChangeTimes->{{3.913750244005362*^9, 
  3.913750359297455*^9}},ExpressionUUID->"9f6944e9-2232-4b51-a117-\
4fcd0de51546"],

Cell[BoxData[
 RowBox[{"<<", "Utilities`CleanSlate`"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.549536915366044*^9, 3.5495369233915033`*^9}},
 CellLabel->
  "In[213]:=",ExpressionUUID->"596e0ac3-24aa-4a16-9243-f7df7cc9153d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Jacquard.m (closed up)",
 FontWeight->"Bold"]], "Section",
 CellChangeTimes->{{3.911251932352053*^9, 3.911251934588236*^9}, {
  3.9137520912113857`*^9, 
  3.913752094333016*^9}},ExpressionUUID->"275fc064-9f7b-4419-94fc-\
12b45d800c9d"],

Cell[TextData[{
 "If you like, move the following package onto your ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " ",
 StyleBox["$Path",
  FontSlant->"Italic"],
 ". The following unevaluatable cell shows where I put it on my system. I \
include a copy of this package here so anyone can just evaluate this notebook \
without installing packages. We don\[CloseCurlyQuote]t explain this code, \
here, we just use it. Close up this chapter so you don\[CloseCurlyQuote]t \
have to look at all this stuff."
}], "Text",
 CellChangeTimes->{{3.841245538638632*^9, 3.841245647324567*^9}, {
  3.84139870846646*^9, 3.8413987116890798`*^9}, {3.841749441285334*^9, 
  3.841749475793593*^9}, {3.911251785926512*^9, 3.911251809937158*^9}, {
  3.911254213855645*^9, 3.9112543003752112`*^9}, {3.911254456176429*^9, 
  3.9112544866868763`*^9}, {3.912369537601478*^9, 
  3.912369557306286*^9}},ExpressionUUID->"33053ebb-4258-47ab-8886-\
21fee119d1a9"],

Cell[BoxData[
 RowBox[{"<<", "\"\<~/Dropbox/MMA/Packages/Jacquard.m\>\""}]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.629505394618649*^9, 3.6295054078237057`*^9}, {
   3.645653564684004*^9, 3.645653570450636*^9}, {3.841153579311688*^9, 
   3.841153624246653*^9}, 
   3.911297436702623*^9},ExpressionUUID->"35a3dfce-032c-48b6-9c2f-\
24649b1f54d2"],

Cell[CellGroupData[{

Cell["Jacquard and JaqSON", "Subsection",
 FontWeight->"Bold",ExpressionUUID->"00da3566-785a-4257-a2ce-f6167477458f"],

Cell["Serialized expressions for remote evaluation.", "Text",ExpressionUUID->"603ef7d2-68da-433f-be48-b1eb2dbb602e"],

Cell["\<\
Brian Beckman
Februrary 2012
with ideas from Avi Bar-Zeev, Erik Meijer, and Savas Parastiditis\
\>", "Text",ExpressionUUID->"b906b5b9-ca12-4bc6-b841-7ab7a37a5a5f"],

Cell["\<\
Copyright (c) 2012, Microsoft Corporation

   Licensed under the Apache License, Version 2.0 (the \"License\");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an \"AS IS\" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.\
\>", "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"a8734c96-c275-46db-a49c-f02d5fb57c5a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Public Interface", "Subsection",
 FontWeight->"Bold",ExpressionUUID->"0c2def3a-16a3-47d2-aacc-e474def23be1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Mathematica", " ", "Package"}], " ", "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Created", " ", "by", " ", "the", " ", "Wolfram", " ", "Workbench", " ", 
     "Mar", " ", "8"}], ",", " ", "2012"}], " ", "*)"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"BeginPackage", "[", 
    RowBox[{"\"\<Jacquard`\>\"", ",", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<JLink`\>\"", ",", " ", "\"\<MiniData`\>\""}], "}"}]}], 
    "]"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"BeginPackage", "[", 
    RowBox[{"\"\<Jacquard`\>\"", ",", " ", 
     RowBox[{"{", "\"\<JLink`\>\"", "}"}]}], "]"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Exported", " ", "symbols", " ", "added", " ", "here", " ", "with", " ", 
     RowBox[{"SymbolName", "::", "usage"}]}], " ", "*)"}], " ", "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"gridExpression", "::", "usage"}], " ", "=", " ", 
     "\"\<Displays expressions in a hierarchical grid.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"gridCaptive", "::", "usage"}], " ", "=", " ", 
     "\"\<Displays captive expressions in a hierarchical grid.\>\""}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"gridCaptive2", "::", "usage"}], " ", "=", " ", 
     "\"\<Displays captive expressions in a hierarchical grid.\>\""}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"gridRules", "::", "usage"}], " ", "=", " ", 
     "\"\<Displays Lists of Rules and Lists of Lists of Rules in a \
hierarchical grid.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"traceView2", "::", "usage"}], " ", "=", " ", 
     "\"\<Presents Cascading OpenerViews of an expression trace.\>\""}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"traceView4", "::", "usage"}], " ", "=", " ", 
     "\"\<Presents interactive, button-driven view of an \
expression-evaluation trace.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"traceView5", "::", "usage"}], " ", "=", " ", 
     "\"\<Presents an abbreviated button-driven view of an \
expression-evaluation trace.\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SymbolQ", "::", "usage"}], " ", "=", " ", 
     "\"\<Tests whether its argument is a Symbol\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"KvpQ", "::", "usage"}], " ", "=", " ", 
     "\"\<Tests whether its argument is a KVPair or KVP, that is, a list of \
two values, the first of which is a string or symbol Key.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"KvpsQ", "::", "usage"}], " ", "=", " ", 
     "\"\<Tests whether its argument is an association list: that is, a list \
of key-value pairs where no key appears more than once.\>\""}], ";"}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"RulesQ", "::", "usage"}], " ", "=", " ", 
     "\"\<Tests whether its argument is a list of Rules, which is the \
Import/Export preferred representation for key-value pairs (the analog to \
'lookup' for rules is just 'Replace.')\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"RulessQ", "::", "usage"}], " ", "=", " ", 
     "\"\<Tests whether its argument is a list of list of Rules, which is the \
preferred representation for argument lists.\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Args", "::", "usage"}], " ", "=", " ", 
     "\"\<Produces all the arguments of a composite expression; counterpoint \
to built-in Head.\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"rulesFromExpression", "::", "usage"}], " ", "=", " ", 
     "\"\<Documentation TODO\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"rulesFromHeldExpression", "::", "usage"}], " ", "=", " ", 
     "\"\<Documentation TODO\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"rulesFromEvaluatableHeldExpression", "::", "usage"}], " ", "=", 
     " ", "\"\<Documentation TODO\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"expressionFromRules", "::", "usage"}], " ", "=", " ", 
     "\"\<Documentation TODO\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"stringifiedExpressionFromRules", "::", "usage"}], " ", "=", 
     " ", "\"\<Documentation TODO\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"jsonStringFromExpression", "::", "usage"}], " ", "=", " ", 
     "\"\<jsonStringFromExpression[expr]\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"jsonStringFromHeldExpression", "::", "usage"}], " ", "=", " ", 
     "\"\<jsonStringFromHeldExpression[expr]\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"expressionFromJsonString", "::", "usage"}], " ", "=", " ", 
     "\"\<expressionFromJsonString[str]\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"stringifiedExpressionFromJsonString", "::", "usage"}], " ", "=",
      " ", "\"\<stringifiedExpressionFromJsonString[str]\>\""}], ";"}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"jacquardPostRules", "::", "usage"}], " ", "=", " ", 
     "\"\<jacquardPostRules[rules, importer, url]\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"jacquardPostExpression", "::", "usage"}], " ", "=", " ", 
     "\"\<jacquardPostRules[rules, importer, url]\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"jacquardEvalExpression", "::", "usage"}], " ", "=", " ", 
     "\"\<jacquardPostExpression[expr, importer, url]\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"jacquardEvalHeldExpression", "::", "usage"}], " ", "=", " ", 
     "\"\<jacquardEvalHeldExpression[expr, importer, url]\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"jacquardEvalEvaluatableHeldExpression", "::", "usage"}], " ", 
     "=", " ", "\"\<jacquardEvalHeldExpression[expr, importer, url]\>\""}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"jacquardStringifiedEvalHeldExpression", "::", "usage"}], " ", 
     "=", " ", 
     "\"\<jacquardStringifiedEvalHeldExpression[expr, importer, url]\>\""}], 
    ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"During", " ", "Development"}], ",", " ", 
     RowBox[{"keep", " ", "these", " ", "symbols", " ", 
      RowBox[{"public", ".", "  ", "Pick"}], " ", "which", " ", "ones", "\n", 
      "   ", "to", " ", "make", " ", "permanently", " ", "public", " ", 
      RowBox[{"later", "."}]}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"insertCommaSeparators", "::", "usage"}], " ", "=", " ", 
     "\"\<Temporary.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"number2", "::", "usage"}], " ", "=", " ", 
     "\"\<Temporary.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"string2", "::", "usage"}], " ", "=", " ", 
     "\"\<Temporary.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"symbol2", "::", "usage"}], " ", "=", " ", 
     "\"\<Temporary.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"dpyCaptive2", "::", "usage"}], " ", "=", " ", 
     "\"\<Temporary.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"prefixes", "::", "usage"}], " ", "=", " ", 
     "\"\<Temporary.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"postfixes", "::", "usage"}], " ", "=", " ", 
     "\"\<Temporary.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"splits", "::", "usage"}], " ", "=", " ", "\"\<Temporary.\>\""}],
     ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"flat1", "::", "usage"}], " ", "=", " ", "\"\<Temporary.\>\""}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Pluck", "::", "usage"}], " ", "=", " ", 
     "\"\<Pluck[n] is a Function that produces the n-th Part of its \
input.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SelectMany", "::", "usage"}], " ", "=", " ", 
     "\"\<SelectMany[list, listFromElement]\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Zip", "::", "usage"}], " ", "=", " ", 
     "\"\<Zip[list1, list2, itemFromPair]\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ZipMany", "::", "usage"}], " ", "=", " ", 
     "\"\<ZipMany[list1, list2, listFromPair]\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"captive", "::", "usage"}], " ", "=", " ", 
     "\"\<Temporary.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"captive2", "::", "usage"}], " ", "=", " ", 
     "\"\<Temporary.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"RealQ", "::", "usage"}], " ", "=", " ", "\"\<Temporary.\>\""}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ComplexQ", "::", "usage"}], " ", "=", " ", 
     "\"\<Temporary.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"RationalQ", "::", "usage"}], " ", "=", " ", 
     "\"\<Temporary.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"numericSubtype", "::", "usage"}], " ", "=", " ", 
     "\"\<Temporary.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"pairsQ", "::", "usage"}], " ", "=", " ", "\"\<Temporary.\>\""}],
     ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"keys", "::", "usage"}], " ", "=", " ", "\"\<Temporary.\>\""}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"values", "::", "usage"}], " ", "=", " ", "\"\<Temporary.\>\""}],
     ";"}]}]}]], "Code",
 CellLabel->
  "In[214]:=",ExpressionUUID->"f209d8cf-1294-47ce-be5e-0c5c5ab9bf40"],

Cell[BoxData["\<\"Jacquard`\"\>"], "Output",
 CellChangeTimes->{{3.911252420463434*^9, 3.9112524215062838`*^9}, {
   3.91125438105021*^9, 3.911254381392432*^9}, {3.911254645608398*^9, 
   3.911254645916486*^9}, {3.911297451317709*^9, 3.911297451557879*^9}, {
   3.912368778474472*^9, 3.9123687786643753`*^9}, {3.9123699328282743`*^9, 
   3.912369955036199*^9}, 3.912543581317498*^9, 3.912545374350491*^9, {
   3.913148213086172*^9, 3.913148213292471*^9}, 3.9137514316001577`*^9, {
   3.9137521125958753`*^9, 3.913752112798903*^9}, {3.913753546482997*^9, 
   3.913753546672599*^9}, 3.914855951783341*^9, {3.914858313128894*^9, 
   3.914858313323832*^9}, {3.915030581931933*^9, 3.915030582135644*^9}},
 CellLabel->
  "Out[214]=",ExpressionUUID->"92f518c7-c241-4bd3-8d2a-6efc3c78eb02"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Implementation", " ", "of", " ", "the", " ", "package"}], " ", 
   "*)"}]}]}], "Code",
 CellLabel->
  "In[265]:=",ExpressionUUID->"1a9d9167-e341-436b-b203-3b691ecfd203"],

Cell[BoxData["\<\"Jacquard`Private`\"\>"], "Output",
 CellChangeTimes->{{3.911252420472388*^9, 3.911252421509484*^9}, {
   3.911254381065897*^9, 3.9112543813949327`*^9}, {3.911254645615882*^9, 
   3.911254645923902*^9}, {3.911297451328241*^9, 3.911297451568139*^9}, {
   3.912368778476959*^9, 3.912368778669245*^9}, {3.912369932830568*^9, 
   3.912369955042194*^9}, 3.91254358131993*^9, 3.912545374352553*^9, {
   3.91314821309627*^9, 3.913148213298619*^9}, 3.913751431606331*^9, {
   3.913752112607782*^9, 3.913752112805262*^9}, {3.9137535464925838`*^9, 
   3.913753546679677*^9}, 3.9148559517913523`*^9, {3.914858313138418*^9, 
   3.914858313331258*^9}, {3.915030581939823*^9, 3.9150305821424294`*^9}},
 CellLabel->
  "Out[265]=",ExpressionUUID->"97160242-a650-4442-80d6-22f7ec82f6fb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualization and Debugging Definitions", "Subsection",
 FontWeight->"Bold",ExpressionUUID->"8dc42121-ae75-4d2a-ba62-a4f41b979400"],

Cell[CellGroupData[{

Cell["gridRules[ rules ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"565a04b9-d653-467e-82c5-2f795435f8d6"],

Cell["\<\
Display rules generated from expressions and round-tripped through JSON. \
Update to handle Rule-Delayed.\
\>", "Text",ExpressionUUID->"6fe83b28-0392-48ff-a40d-e5b36626d66d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"gridRules", ",", "fopts"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{
    "allAreRulesQ", ",", "noneAreAtomsQ", ",", "noneAreAtomsOrListsQ"}], 
    "]"}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "A", " ", "\"\<HoldAll\>\"", " ", "version", " ", "of", " ", "the", " ", 
     "following"}], ",", " ", 
    RowBox[{"with", " ", "\"\<Unevaluated\>\"", " ", "everywhere"}], ",", " ", 
    RowBox[{"may", " ", "be", " ", 
     RowBox[{"required", "."}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"noneAreAtomsQ", "[", "candidates_List", "]"}], ":=", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{"AtomQ", "@", "#"}], "]"}], "&"}], "/@", "candidates"}], 
     ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"noneAreAtomsOrListsQ", "[", "candidates_List", "]"}], ":=", 
  RowBox[{"And", "@@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Not", "[", 
        RowBox[{
         RowBox[{"AtomQ", "@", "#"}], "||", 
         RowBox[{"ListQ", "@", "#"}]}], "]"}], ")"}], "&"}], "/@", 
     "candidates"}], ")"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"allAreRulesQ", "[", "candidates_List", "]"}], ":=", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"h", "=", 
           RowBox[{"Head", "@", "#"}]}], "}"}], ",", 
         RowBox[{
          RowBox[{"h", "===", "Rule"}], "||", 
          RowBox[{"h", "===", "RuleDelayed"}]}]}], "]"}], "&"}], "/@", 
      "candidates"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"fopts", "[", 
    RowBox[{"fcolor_", ",", "bcolor_"}], "]"}], ":=", 
   RowBox[{"Sequence", "[", 
    RowBox[{
     RowBox[{"Frame", " ", "->", " ", "All"}], ",", 
     RowBox[{"Alignment", " ", "->", " ", "Left"}], ",", 
     RowBox[{"FrameStyle", " ", "->", " ", "fcolor"}], ",", "\n", 
     RowBox[{"Background", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"LightOrange", ",", " ", 
         RowBox[{"{", "bcolor", "}"}]}], "}"}], "}"}]}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gridRules", "[", 
     RowBox[{"Rule", "[", 
      RowBox[{"key_", ",", " ", "val_"}], "]"}], "]"}], ":=", "\n", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"gridRules", "@", "key"}], ",", "Bold", ",", "Black"}], 
          "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"gridRules", " ", "@", " ", "val"}], ",", "Bold", ",", " ",
            "Blue"}], "]"}]}], "}"}], "}"}], ",", "\n", 
      RowBox[{"fopts", "[", 
       RowBox[{"Blue", ",", "LightYellow"}], "]"}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gridRules", "[", 
     RowBox[{"RuleDelayed", "[", 
      RowBox[{"key_", ",", " ", "val_"}], "]"}], "]"}], ":=", "\n", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"gridRules", "@", "key"}], ",", "Bold", ",", "Black"}], 
          "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"gridRules", " ", "@", " ", "val"}], ",", "Bold", ",", " ",
            "Red"}], "]"}]}], "}"}], "}"}], ",", "\n", 
      RowBox[{"fopts", "[", 
       RowBox[{"Red", ",", "LightYellow"}], "]"}]}], "]"}]}], ";"}], "\n", 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Put", " ", "lists", " ", "of", " ", "non"}], "-", 
     RowBox[{
     "atoms", " ", "vertically", " ", "and", " ", "joinGrids", " ", "them", 
      " ", "up"}]}], ",", " ", 
    RowBox[{"removing", " ", "one", " ", "level", " ", "of", " ", 
     RowBox[{"nesting", "."}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gridRules", "[", 
     RowBox[{"exprs_List", "?", "noneAreAtomsOrListsQ"}], "]"}], ":=", "\n", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"joinGrids", "@", 
        RowBox[{"Transpose", "@", 
         RowBox[{"{", 
          RowBox[{"gridRules", " ", "/@", " ", "exprs"}], "}"}]}]}], ")"}], 
      ",", "\n", 
      RowBox[{"Frame", "->", "All"}], ",", 
      RowBox[{"FrameStyle", "->", 
       RowBox[{"Darker", "[", "Green", "]"}]}], ",", 
      RowBox[{"Alignment", "->", "Left"}], ",", 
      RowBox[{"Background", "->", "LightGreen"}]}], "]"}]}], ";"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Put", " ", "other", " ", "lists", " ", "vertically", " ", "but", " ", 
    RowBox[{"DON", "'"}], "T", " ", "joinGrids", " ", "them", " ", 
    RowBox[{"up", "."}]}], " ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gridRules", "[", "exprs_List", "]"}], ":=", "\n", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Transpose", "@", 
        RowBox[{"{", 
         RowBox[{"gridRules", " ", "/@", " ", "exprs"}], "}"}]}], ")"}], ",", 
      "\n", 
      RowBox[{"Frame", "->", "All"}], ",", 
      RowBox[{"FrameStyle", "->", 
       RowBox[{"Darker", "[", "Green", "]"}]}], ",", 
      RowBox[{"Alignment", "->", "Left"}], ",", 
      RowBox[{"Background", "->", "LightGreen"}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gridRules", "[", 
     RowBox[{"h_", "[", "parts___", "]"}], "]"}], ":=", "\n", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"gridRules", "@", "h"}], ",", "Bold", ",", " ", 
           RowBox[{"Darker", "[", "Purple", "]"}]}], "]"}], "}"}], "~", 
        "Join", "~", 
        RowBox[{"(", 
         RowBox[{"gridRules", " ", "/@", " ", 
          RowBox[{"{", "parts", "}"}]}], ")"}]}], "}"}], ",", "\n", 
      RowBox[{"fopts", "[", 
       RowBox[{"Black", ",", "LightGreen"}], "]"}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gridRules", "[", 
     RowBox[{"any_", "?", "StringQ"}], "]"}], ":=", 
    RowBox[{"Style", "[", 
     RowBox[{
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", "any", "}"}], "}"}], ",", 
        RowBox[{"Alignment", "->", "Left"}]}], "]"}], ",", "Bold", ",", 
      RowBox[{"Darker", "[", "Red", "]"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gridRules", "[", 
     RowBox[{"any_", "?", "AtomQ"}], "]"}], ":=", 
    RowBox[{"Style", "[", 
     RowBox[{
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", "any", "}"}], "}"}], ",", 
        RowBox[{"Alignment", "->", "Left"}]}], "]"}], ",", "Bold"}], "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gridRules", "[", "any_", "]"}], ":=", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", "any", "}"}], "}"}], ",", 
      RowBox[{"Alignment", "->", "Left"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "joinGrids", "]"}], ";"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Arbitrarily", " ", "choose", " ", "the", " ", "first", " ", "of", " ", 
     "multiple", " ", "option", " ", "tails", " ", "z1"}], ",", " ", "z2", 
    ",", " ", 
    RowBox[{"...", " ", "."}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"joinGrids", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", "xs__", "}"}], ",", "z1___"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", "ys__", "}"}], ",", "z2___"}], "]"}], "}"}]}], "}"}], 
    "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "ys"}], "}"}], ",", "z1"}], "]"}], "}"}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"joinGrids", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", "xs__", "}"}], ",", "z1___"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", "ys__", "}"}], ",", "z2___"}], "]"}], "}"}], ",", " ", 
      "k__"}], "}"}], "]"}], ":=", 
   RowBox[{"joinGrids", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xs", ",", "ys"}], "}"}], ",", "z1"}], "]"}], "}"}], ",", 
      "k"}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"joinGrids", "[", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Grid", "[", "xs___", "]"}], "}"}], "}"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"Grid", "[", "xs", "]"}], "}"}], "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"joinGrids", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Grid", "[", 
          RowBox[{
           RowBox[{"{", "xs__", "}"}], ",", "z1___"}], "]"}], ",", 
         "sty1___"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Grid", "[", 
          RowBox[{
           RowBox[{"{", "ys__", "}"}], ",", "z2___"}], "]"}], ",", 
         "sty2___"}], "]"}], "}"}]}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xs", ",", "ys"}], "}"}], ",", "z1"}], "]"}], ",", "sty1"}],
       "]"}], "}"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"joinGrids", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", "xs__", "}"}], ",", "z1___"}], "]"}], ",", 
          "sty1___"}], "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", "ys__", "}"}], ",", "z2___"}], "]"}], ",", 
          "sty2___"}], "]"}], "}"}], ",", " ", "k__"}], "}"}], "]"}], ":=", 
    RowBox[{"joinGrids", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"xs", ",", "ys"}], "}"}], ",", "z1"}], "]"}], ",", 
          "sty1"}], "]"}], "}"}], ",", "k"}], "}"}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"joinGrids", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Grid", "[", 
          RowBox[{
           RowBox[{"{", "xs__", "}"}], ",", "z1___"}], "]"}], ",", 
         "sty1___"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", "ys__", "}"}], ",", "z2___"}], "]"}], "}"}]}], "}"}], 
    "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xs", ",", "ys"}], "}"}], ",", "z1"}], "]"}], ",", "sty1"}],
       "]"}], "}"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"joinGrids", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", "xs__", "}"}], ",", "z1___"}], "]"}], ",", 
          "sty1___"}], "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Grid", "[", 
         RowBox[{
          RowBox[{"{", "ys__", "}"}], ",", "z2___"}], "]"}], "}"}], ",", " ", 
       "k__"}], "}"}], "]"}], ":=", 
    RowBox[{"joinGrids", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"xs", ",", "ys"}], "}"}], ",", "z1"}], "]"}], ",", 
          "sty1"}], "]"}], "}"}], ",", "k"}], "}"}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"joinGrids", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", "xs__", "}"}], ",", "z1___"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Grid", "[", 
          RowBox[{
           RowBox[{"{", "ys__", "}"}], ",", "z2___"}], "]"}], ",", 
         "sty2___"}], "]"}], "}"}]}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xs", ",", "ys"}], "}"}], ",", "z1"}], "]"}], ",", "sty2"}],
       "]"}], "}"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"joinGrids", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Grid", "[", 
         RowBox[{
          RowBox[{"{", "xs__", "}"}], ",", "z1___"}], "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", "ys__", "}"}], ",", "z2___"}], "]"}], ",", 
          "sty2___"}], "]"}], "}"}], ",", " ", "k__"}], "}"}], "]"}], ":=", 
    RowBox[{"joinGrids", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"xs", ",", "ys"}], "}"}], ",", "z1"}], "]"}], ",", 
          "sty2"}], "]"}], "}"}], ",", "k"}], "}"}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"joinGrids", "[", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Grid", "[", "xs___", "]"}], ",", "sty___"}], "]"}], "}"}], 
      "}"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Grid", "[", "xs", "]"}], ",", "sty"}], "]"}], "}"}], "}"}]}],
    ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"joinGrids", "[", 
    RowBox[{"{", "}"}], "]"}], ":=", 
   RowBox[{"{", "}"}]}], ";"}]}], "Code",
 CellLabel->
  "In[266]:=",ExpressionUUID->"92ea27d1-23fd-4cfc-a4f6-88a9c13a37c7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Private Display (dpy) Definitions", "Subsection",
 FontWeight->"Bold",ExpressionUUID->"6c904ca5-ebdf-4c97-b74d-88daeb2d5bf2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dpyNullary", "[", "ex_", "]"}], " ", ":=", "\n", "  ", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"ex", ",", " ", "\"\<\>\""}], "}"}], "}"}], ",", "\n", "   ", 
     RowBox[{"Frame", "      ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"All", ",", "False"}], "}"}]}], ",", "\n", "   ", 
     RowBox[{"Alignment", "  ", "->", " ", "Left"}], ",", "\n", "   ", 
     RowBox[{"Background", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"LightOrange", ",", 
         RowBox[{"{", "LightYellow", "}"}]}], "}"}], "}"}]}]}], "]"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[292]:=",ExpressionUUID->"1d62defa-6659-41c5-8e12-508f744a34d8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dpyMultiary", "[", 
    RowBox[{"key_", ",", " ", "vals_"}], "]"}], " ", ":=", "\n", "   ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c", " ", "=", " ", 
       RowBox[{"Length", " ", "@", " ", "vals"}]}], "}"}], ",", "\n", "    ", 
     
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "\n", "      ", 
        RowBox[{
         RowBox[{"spans", " ", "=", " ", 
          RowBox[{"Table", "[", 
           RowBox[{"\"\<\>\"", ",", " ", 
            RowBox[{"{", "c", "}"}]}], "]"}]}], ",", "\n", "      ", 
         RowBox[{"slot", "  ", "=", " ", 
          RowBox[{"Floor", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", "c"}], ")"}], "/", "2"}], "]"}]}]}], "}"}], 
       ",", "\n", "     ", 
       RowBox[{
        RowBox[{
         RowBox[{"spans", "[", 
          RowBox[{"[", "slot", "]"}], "]"}], " ", "=", " ", "key"}], ";", 
        "\n", "     ", 
        RowBox[{"Grid", "[", 
         RowBox[{
          RowBox[{"MapThread", "[", 
           RowBox[{"List", ",", 
            RowBox[{"{", 
             RowBox[{"spans", ",", " ", "vals"}], "}"}]}], "]"}], ",", "\n", 
          "       ", 
          RowBox[{"Frame", "      ", "->", " ", 
           RowBox[{"{", 
            RowBox[{"All", ",", "False"}], "}"}]}], ",", "\n", "       ", 
          RowBox[{"Alignment", "  ", "->", " ", "Left"}], ",", "\n", 
          "       ", 
          RowBox[{"Background", " ", "->", " ", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"LightOrange", ",", 
              RowBox[{"{", "LightGreen", "}"}]}], "}"}], "}"}]}]}], "]"}]}]}],
       "\n", "      ", "]"}]}], "]"}]}], ";"}]], "Code",
 CellLabel->
  "In[293]:=",ExpressionUUID->"6269d9eb-66fa-462c-84bf-8e3bd330de22"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dpyAtom", "[", "ex_", "]"}], " ", ":=", " ", "\n", "  ", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Style", "[", 
        RowBox[{"ex", ",", "Bold"}], "]"}], "}"}], "}"}], ",", "\n", "   ", 
     RowBox[{"Frame", "      ", "->", " ", "All"}], ",", "\n", "   ", 
     RowBox[{"Alignment", "  ", "->", " ", "Left"}], ",", "\n", "   ", 
     RowBox[{"Background", " ", "->", "\n", "     ", 
      RowBox[{"Switch", "[", 
       RowBox[{
        RowBox[{"Head", " ", "@", " ", "ex"}], ",", "\n", "       ", "String",
         ",", "   ", "LightYellow", ",", "\n", "       ", "Symbol", ",", 
        "   ", "LightPurple", ",", "\n", "       ", "Integer", ",", "  ", 
        "LightBlue", ",", "\n", "       ", "Real", ",", "     ", "LightBlue", 
        ",", "\n", "       ", "Rational", ",", " ", "LightBlue", ",", "\n", 
        "       ", "Complex", ",", "  ", "LightBlue", ",", "\n", "       ", 
        "_", ",", "        ", "Red"}], "]"}]}]}], "]"}]}], ";"}]], "Code",
 CellLabel->
  "In[294]:=",ExpressionUUID->"5162c3fd-4512-4384-95ed-e3ee07610e72"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dpyQuotedAtom", "[", 
    RowBox[{"number2", "[", "ex_", "]"}], "]"}], " ", ":=", " ", "\n", "  ", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Style", "[", 
        RowBox[{"ex", ",", "Bold", ",", "Blue"}], "]"}], "}"}], "}"}], ",", 
     "\n", "   ", 
     RowBox[{"Frame", "      ", "->", " ", "All"}], ",", "\n", "   ", 
     RowBox[{"Alignment", "  ", "->", " ", "Left"}], ",", "\n", "   ", 
     RowBox[{"Background", " ", "->", " ", "LightBlue"}]}], "]"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[295]:=",ExpressionUUID->"cb8b6e5d-1264-4e6a-bca6-a1794465ea9a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dpyQuotedAtom", "[", 
    RowBox[{"string2", "[", "ex_", "]"}], "]"}], " ", ":=", " ", "\n", "  ", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Style", "[", 
        RowBox[{"ex", ",", "Bold", ",", "Green"}], "]"}], "}"}], "}"}], ",", 
     "\n", "   ", 
     RowBox[{"Frame", "      ", "->", " ", "All"}], ",", "\n", "   ", 
     RowBox[{"Alignment", "  ", "->", " ", "Left"}], ",", "\n", "   ", 
     RowBox[{"Background", " ", "->", " ", "LightYellow"}]}], "]"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[296]:=",ExpressionUUID->"58a34af5-e785-48e2-b1f5-de24ce45d191"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dpyQuotedAtom", "[", 
    RowBox[{"symbol2", "[", "ex_", "]"}], "]"}], " ", ":=", " ", "\n", "  ", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Style", "[", 
        RowBox[{"ex", ",", "Bold", ",", "Purple"}], "]"}], "}"}], "}"}], ",", 
     "\n", "   ", 
     RowBox[{"Frame", "      ", "->", " ", "All"}], ",", "\n", "   ", 
     RowBox[{"Alignment", "  ", "->", " ", "Left"}], ",", "\n", "   ", 
     RowBox[{"Background", " ", "->", " ", "LightPurple"}]}], "]"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[297]:=",ExpressionUUID->"c440acd6-10fc-4417-a0ba-51466233e4ba"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dpyEmpty", "[", "]"}], " ", ":=", "\n", "  ", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", "}"}], "}"}], ",", "\n", "   ", 
     RowBox[{"Frame", "      ", "->", " ", "All"}], ",", "\n", "   ", 
     RowBox[{"Alignment", "  ", "->", " ", "Left"}], ",", "\n", "   ", 
     RowBox[{"Background", " ", "->", " ", "White"}]}], "]"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[298]:=",ExpressionUUID->"bd85321d-dc77-4067-a615-ffa67c901d91"],

Cell[CellGroupData[{

Cell["gridExpression[ expr ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"109049a2-b6ed-4160-8c49-6b638bf68dcd"],

Cell["Display a gridded representation of an expression.", "Text",ExpressionUUID->"f650e8df-a47c-43e9-af80-be167fb02c2d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"gridExpression", "[", 
    RowBox[{"ex_", "[", "]"}], "]"}], "        ", ":=", " ", 
   RowBox[{"dpyNullary", "[", 
    RowBox[{"gridExpression", " ", "@", " ", "ex"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"gridExpression", "[", 
    RowBox[{"ex_", "[", "parts__", "]"}], "]"}], " ", ":=", " ", 
   RowBox[{"dpyMultiary", "[", 
    RowBox[{
     RowBox[{"gridExpression", " ", "@", " ", "ex"}], ",", " ", 
     RowBox[{"gridExpression", " ", "/@", " ", 
      RowBox[{"{", "parts", "}"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"gridExpression", "[", 
    RowBox[{"ex_", "?", "AtomQ"}], "]"}], "    ", ":=", " ", 
   RowBox[{"dpyAtom", "[", "ex", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"gridExpression", "[", "x___", "]"}], "         ", ":=", " ", 
   RowBox[{"Throw", "[", 
    RowBox[{"{", "x", "}"}], "]"}]}], ";"}]}], "Code",
 CellLabel->
  "In[299]:=",ExpressionUUID->"86481609-d4e1-41c9-aae7-630a01a10633"]
}, Open  ]],

Cell[CellGroupData[{

Cell["gridCaptive[ expr ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"ea5ead3c-1661-4f1a-9330-06377153588a"],

Cell["\<\
Display a gridded representation of a captive (quoted) expression.\
\>", "Text",ExpressionUUID->"42d804f0-1bb1-48f4-9043-42d97f7b437a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SetAttributes", "[", 
    RowBox[{"gridCaptive", ",", " ", "HoldAllComplete"}], "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dpyCaptive", "[", 
    RowBox[{"{", "ex_", "}"}], "]"}], "      ", ":=", " ", 
   RowBox[{"dpyNullary", "[", 
    RowBox[{"dpyCaptive", " ", "@", " ", "ex"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dpyCaptive", "[", 
    RowBox[{"{", 
     RowBox[{"a_", ",", " ", "as__"}], "}"}], "]"}], " ", ":=", " ", 
   RowBox[{"dpyMultiary", "[", 
    RowBox[{
     RowBox[{"dpyCaptive", " ", "@", " ", "a"}], ",", " ", 
     RowBox[{"dpyCaptive", " ", "/@", " ", 
      RowBox[{"{", "as", "}"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dpyCaptive", "[", 
    RowBox[{"ex_", "?", "AtomQ"}], "]"}], "  ", ":=", " ", 
   RowBox[{"dpyAtom", "[", "ex", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"dpyCaptive", "[", "x___", "]"}], "       ", ":=", " ", 
    RowBox[{"Throw", "[", 
     RowBox[{"Unevaluated", " ", "@", " ", 
      RowBox[{"{", "x", "}"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"gridCaptive", "[", "expr_", "]"}], ":=", " ", 
   RowBox[{"dpyCaptive", " ", "@", " ", 
    RowBox[{"captive", " ", "@", " ", "expr"}]}]}], ";"}]}], "Code",
 CellLabel->
  "In[303]:=",ExpressionUUID->"cc822aa0-3944-40e0-ae24-c1ecc5f68d89"]
}, Open  ]],

Cell[CellGroupData[{

Cell["captive2", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"feae17b0-b265-481e-bbfb-a7de52c05825"],

Cell["TODO: deprecate the old captive", "Text",ExpressionUUID->"144277bb-a32c-4e9f-bdef-2c5ef0a8e5ce"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"captive2", ",", " ", "HoldAllComplete"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"captive2", "[", 
   RowBox[{"expr_", " ", "/;", " ", 
    RowBox[{"NumberQ", " ", "@", " ", 
     RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}]}], "]"}], "           ",
   ":=", " ", 
  RowBox[{"number2", "[", 
   RowBox[{"ToString", "[", "expr", "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"captive2", "[", 
   RowBox[{"expr_", " ", "/;", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Head", " ", "@", " ", 
       RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}], " ", "===", " ", 
      "Symbol"}], ")"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"symbol2", "[", 
   RowBox[{"ToString", " ", "@", " ", 
    RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"captive2", "[", 
   RowBox[{"expr_", " ", "/;", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Head", " ", "@", " ", 
       RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}], " ", "===", " ", 
      "String"}], ")"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"string2", "[", 
   RowBox[{
   "\"\<\\\"\>\"", " ", "<>", " ", "expr", " ", "<>", " ", "\"\<\\\"\>\""}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"captive2", "[", 
   RowBox[{"head_", "[", "parts___", "]"}], "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"captive2", " ", "@", " ", "head"}], ",", " ", 
    RowBox[{"captive2", " ", "/@", " ", 
     RowBox[{"Unevaluated", " ", "@", " ", 
      RowBox[{"{", "parts", "}"}]}]}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"captive2", "[", "x___", "]"}], "           ", ":=", " ", 
   RowBox[{"Throw", " ", "@", " ", 
    RowBox[{"{", "x", "}"}]}]}], ";"}]}], "Code",
 CellLabel->
  "In[309]:=",ExpressionUUID->"f7b4a485-eed7-445b-99e2-3d7c29eb78be"]
}, Open  ]],

Cell[CellGroupData[{

Cell["gridCaptive2[ expr ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"209db018-6df9-4045-8adf-1ed8954b090f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SetAttributes", "[", 
    RowBox[{"gridCaptive2", ",", " ", "HoldAllComplete"}], "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dpyCaptive2", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"symbol2", "[", "\"\<List\>\"", "]"}], ",", " ", 
      RowBox[{"{", "}"}]}], "}"}], "]"}], " ", ":=", " ", 
   RowBox[{"dpyEmpty", "[", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dpyCaptive2", "[", 
    RowBox[{"{", 
     RowBox[{"ex_", ",", " ", 
      RowBox[{"{", "}"}]}], "}"}], "]"}], "             ", ":=", " ", 
   RowBox[{"dpyNullary", "[", 
    RowBox[{"dpyCaptive2", " ", "@", " ", "ex"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dpyCaptive2", "[", 
    RowBox[{"{", 
     RowBox[{"a_", ",", " ", 
      RowBox[{"{", "as__", "}"}]}], "}"}], "]"}], "          ", ":=", " ", 
   RowBox[{"dpyMultiary", "[", 
    RowBox[{
     RowBox[{"dpyCaptive2", " ", "@", " ", "a"}], ",", " ", 
     RowBox[{"dpyCaptive2", " ", "/@", " ", 
      RowBox[{"{", "as", "}"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dpyCaptive2", "[", 
    RowBox[{"number2", "[", "ex_", "]"}], "]"}], "          ", ":=", " ", 
   RowBox[{"dpyQuotedAtom", "[", 
    RowBox[{"number2", "[", "ex", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dpyCaptive2", "[", 
    RowBox[{"string2", "[", "ex_", "]"}], "]"}], "          ", ":=", " ", 
   RowBox[{"dpyQuotedAtom", "[", 
    RowBox[{"string2", "[", "ex", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dpyCaptive2", "[", 
    RowBox[{"symbol2", "[", "ex_", "]"}], "]"}], "          ", ":=", " ", 
   RowBox[{"dpyQuotedAtom", "[", 
    RowBox[{"symbol2", "[", "ex", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"dpyCaptive2", "[", "x___", "]"}], "                  ", ":=", 
    " ", 
    RowBox[{"Throw", "[", 
     RowBox[{"Unevaluated", " ", "@", " ", 
      RowBox[{"{", "x", "}"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"gridCaptive2", "[", "expr_", "]"}], " ", ":=", " ", 
   RowBox[{"dpyCaptive2", " ", "@", " ", 
    RowBox[{"captive2", " ", "@", " ", "expr"}]}]}], ";"}]}], "Code",
 CellLabel->
  "In[315]:=",ExpressionUUID->"1cf66d2f-ff54-46ce-9637-68d395088166"]
}, Open  ]],

Cell[CellGroupData[{

Cell["traceView2[ expr ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"5245bd02-98f3-4b51-863b-a360e656bd01"],

Cell["\<\
Display an interactive visualization of the trace of the evaluation of an \
expression. \
\>", "Text",ExpressionUUID->"bf1df186-530c-459b-a7ea-435de8d350a0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"traceView2", "[", "expr_", "]"}], ":=", 
  RowBox[{"Module", "[", "\n", "  ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"steps", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"stack", "=", 
       RowBox[{"{", "}"}]}], ",", "pre", ",", "post", ",", "show", ",", 
      "dynamic"}], "}"}], ",", "\n", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{"pre", "[", "e_", "]"}], ":=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"stack", "=", 
         RowBox[{"{", 
          RowBox[{"steps", ",", "stack"}], "}"}]}], ";", 
        RowBox[{"steps", "=", 
         RowBox[{"{", "}"}]}]}], ")"}]}], ";", "\n", "  ", 
     RowBox[{
      RowBox[{"post", "[", 
       RowBox[{"e_", ",", "r_"}], "]"}], ":=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"steps", "=", 
         RowBox[{
          RowBox[{"First", "@", "stack"}], "~", "Join", "~", 
          RowBox[{"{", 
           RowBox[{"show", "[", 
            RowBox[{"e", ",", 
             RowBox[{"HoldForm", "[", "r", "]"}], ",", "steps"}], "]"}], 
           "}"}]}]}], ";", 
        RowBox[{"stack", "=", 
         RowBox[{"stack", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}]}], ";", "\n", "  ", 
     RowBox[{"SetAttributes", "[", 
      RowBox[{"post", ",", "HoldAllComplete"}], "]"}], ";", "\n", "  ", 
     RowBox[{
      RowBox[{"show", "[", 
       RowBox[{"e_", ",", "r_", ",", "steps_"}], "]"}], ":=", 
      RowBox[{"Grid", "[", "\n", "    ", 
       RowBox[{
        RowBox[{"steps", "/.", 
         RowBox[{"{", "\n", "      ", 
          RowBox[{
           RowBox[{
            RowBox[{"{", "}"}], "->", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\"\<Expr  \>\"", ",", 
               RowBox[{"Row", "[", 
                RowBox[{"{", 
                 RowBox[{"e", ",", "\"\< \>\"", ",", 
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<inert\>\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"Italic", ",", "Small"}], "}"}]}], "]"}]}], "}"}],
                 "]"}]}], "}"}], "}"}]}], ",", "\n", "      ", 
           RowBox[{"_", "->", 
            RowBox[{"{", "\n", "        ", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"\"\<Expr  \>\"", ",", "e"}], "}"}], ",", "\n", 
              "        ", 
              RowBox[{"{", 
               RowBox[{"\"\<Steps\>\"", ",", 
                RowBox[{"steps", "/.", 
                 RowBox[{"{", "\n", "          ", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", "}"}], "->", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<no definitions apply\>\"", ",", "Italic"}], 
                    "]"}]}], ",", "\n", "          ", 
                   RowBox[{"_", ":>", 
                    RowBox[{"OpenerView", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Length", "@", "steps"}], ",", 
                    RowBox[{"dynamic", "@", 
                    RowBox[{"Column", "[", "steps", "]"}]}]}], "}"}], 
                    "]"}]}]}], "}"}]}]}], "}"}], ",", "\n", "        ", 
              RowBox[{"{", 
               RowBox[{"\"\<Result\>\"", ",", "r"}], "}"}]}], "}"}]}]}], 
          "}"}]}], ",", "\n", "      ", 
        RowBox[{"Alignment", "->", "Left"}], ",", "\n", "      ", 
        RowBox[{"Frame", "->", "All"}], ",", "\n", "      ", 
        RowBox[{"Background", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "LightCyan", "}"}], ",", "None"}], "}"}]}]}], "]"}]}],
      ";", "\n", "    ", 
     RowBox[{"TraceScan", "[", 
      RowBox[{"pre", ",", "expr", ",", "___", ",", "post"}], "]"}], ";", "\n",
      "    ", 
     RowBox[{"Deploy", "@", 
      RowBox[{"Pane", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"steps", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "/.", 
         RowBox[{"dynamic", "->", "Dynamic"}]}], ",", 
        RowBox[{"ImageSize", "->", "10000"}]}], "]"}]}]}]}], "]"}]}], "\n", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"traceView2", ",", 
   RowBox[{"{", "HoldAllComplete", "}"}]}], "]"}]}], "Code",
 CellLabel->
  "In[324]:=",ExpressionUUID->"5e627712-3b23-453e-b3fb-7feedd764f0c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["traceView4[ expr ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"da4db3de-9a4e-4e7a-9533-fc8ed2b958e3"],

Cell["\<\
Display a compact interactive visualization of the trace of the evaluation of \
an expression.\
\>", "Text",ExpressionUUID->"1d2bab46-c77a-40ec-906d-d45a3f4ea2de"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"traceView4", "[", "expr_", "]"}], ":=", 
  RowBox[{"Module", "[", "\n", "  ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"steps", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"stack", "=", 
       RowBox[{"{", "}"}]}], ",", "pre", ",", "post"}], "}"}], ",", "\n", 
    "  ", 
    RowBox[{
     RowBox[{
      RowBox[{"pre", "[", "e_", "]"}], ":=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"stack", "=", 
         RowBox[{"{", 
          RowBox[{"steps", ",", "stack"}], "}"}]}], ";", 
        RowBox[{"steps", "=", 
         RowBox[{"{", "}"}]}]}], ")"}]}], ";", "\n", "  ", 
     RowBox[{
      RowBox[{"post", "[", 
       RowBox[{"e_", ",", "r_"}], "]"}], ":=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"steps", "=", 
         RowBox[{
          RowBox[{"First", "@", "stack"}], "~", "Join", "~", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"e", ",", "steps", ",", 
             RowBox[{"HoldForm", "[", "r", "]"}]}], "}"}], "}"}]}]}], ";", 
        RowBox[{"stack", "=", 
         RowBox[{"stack", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}]}], ";", "\n", "  ", 
     RowBox[{"SetAttributes", "[", 
      RowBox[{"post", ",", "HoldAllComplete"}], "]"}], ";", "\n", "  ", 
     RowBox[{"TraceScan", "[", 
      RowBox[{"pre", ",", "expr", ",", "___", ",", "post"}], "]"}], ";", "\n",
      "  ", 
     RowBox[{"DynamicModule", "[", "\n", "    ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "focus", ",", "show", ",", "substep", ",", "enter", ",", "exit"}], 
        "}"}], ",", "\n", "    ", 
       RowBox[{
        RowBox[{"focus", "=", "steps"}], ";", "\n", "    ", 
        RowBox[{
         RowBox[{"substep", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e_", ",", 
             RowBox[{"{", "}"}], ",", "_"}], "}"}], ",", "_"}], "]"}], ":=", 
         RowBox[{"{", 
          RowBox[{"Null", ",", "e", ",", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<inert\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"Italic", ",", "Small"}], "}"}]}], "]"}]}], "}"}]}], 
        ";", "\n", "    ", 
        RowBox[{
         RowBox[{"substep", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e_", ",", "_", ",", "r_"}], "}"}], ",", "p_"}], "]"}], ":=", 
         RowBox[{"{", "\n", "      ", 
          RowBox[{
           RowBox[{"Button", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<show\>\"", ",", "Small"}], "]"}], ",", 
             RowBox[{"enter", "[", "p", "]"}]}], "]"}], ",", "\n", "      ", 
           "e", ",", "\n", "      ", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Row", "[", 
              RowBox[{"{", 
               RowBox[{"\"\<-> \>\"", ",", "r"}], "}"}], "]"}], ",", 
             "Small"}], "]"}]}], "}"}]}], ";", "\n", "    ", 
        RowBox[{
         RowBox[{"enter", "[", 
          RowBox[{"{", "p_", "}"}], "]"}], ":=", 
         RowBox[{"PrependTo", "[", 
          RowBox[{"focus", ",", 
           RowBox[{"focus", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2", ",", "p"}], "]"}], "]"}]}], "]"}]}], ";", 
        "\n", "    ", 
        RowBox[{
         RowBox[{"exit", "[", "]"}], ":=", 
         RowBox[{"focus", "=", 
          RowBox[{"Drop", "[", 
           RowBox[{"focus", ",", "1"}], "]"}]}]}], ";", "\n", "    ", 
        RowBox[{
         RowBox[{"show", "[", 
          RowBox[{"{", 
           RowBox[{"e_", ",", "s_", ",", "r_"}], "}"}], "]"}], ":=", 
         RowBox[{"Column", "[", 
          RowBox[{"{", "\n", "      ", 
           RowBox[{"Grid", "[", 
            RowBox[{
             RowBox[{"{", "\n", "        ", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\"\<Expression\>\"", ",", 
                 RowBox[{"Column", "@", 
                  RowBox[{"Reverse", "@", 
                   RowBox[{"focus", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}]}], "}"}], ",",
                "\n", "        ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Column", "[", 
                  RowBox[{"{", "\n", "          ", 
                   RowBox[{"\"\<Steps\>\"", ",", "\n", "          ", 
                    RowBox[{"focus", "/.", 
                    RowBox[{"{", "\n", "            ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", "_", "}"}], ":>", 
                    RowBox[{"Sequence", "[", "]"}]}], ",", "\n", 
                    "            ", 
                    RowBox[{"_", ":>", 
                    RowBox[{"Button", "[", 
                    RowBox[{"\"\<Back\>\"", ",", 
                    RowBox[{"exit", "[", "]"}], ",", 
                    RowBox[{"ImageSize", "->", "Automatic"}]}], "]"}]}]}], 
                    "}"}]}]}], "}"}], "]"}], ",", "\n", "         ", 
                 RowBox[{"Grid", "[", 
                  RowBox[{
                   RowBox[{"MapIndexed", "[", 
                    RowBox[{"substep", ",", "s"}], "]"}], ",", 
                   RowBox[{"Alignment", "->", "Left"}]}], "]"}]}], "}"}], ",",
                "\n", "\t\t", 
               RowBox[{"{", 
                RowBox[{"\"\<Result\>\"", ",", 
                 RowBox[{"Column", "@", 
                  RowBox[{"focus", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "3"}], "]"}], "]"}]}]}], "}"}]}], 
              "}"}], ",", "\n", "       ", 
             RowBox[{"Alignment", "->", "Left"}], ",", "\n", "       ", 
             RowBox[{"Frame", "->", "All"}], ",", "\n", "       ", 
             RowBox[{"Background", "->", 
              RowBox[{"{", 
               RowBox[{"{", "LightCyan", "}"}], "}"}]}]}], "]"}], "\n", 
           "     ", "}"}], "]"}]}], ";", "\n", "   ", 
        RowBox[{"Dynamic", "@", 
         RowBox[{"show", "@", 
          RowBox[{"focus", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}]}]}], "\n", "  ", "]"}]}]}], 
   "]"}]}], "\n", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"traceView4", ",", 
   RowBox[{"{", "HoldAllComplete", "}"}]}], "]"}]}], "Code",
 CellLabel->
  "In[326]:=",ExpressionUUID->"e646eb3e-a30f-4022-96a4-5de40612e6e9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["traceView5[ expr ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"eba03a26-0ea9-494f-ab07-0ae491adc196"],

Cell["\<\
Display an alternative compact interactive visualization of the trace of the \
evaluation of an expression.\
\>", "Text",ExpressionUUID->"49fb295a-595e-464f-871a-9c1ecff9c840"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"traceView5", ",", "HoldFirst"}], "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"traceView5", "[", 
   RowBox[{"e_", ",", "s___", ",", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "Trace", "]"}]}]}], "]"}], ":=", "\n", 
  "  ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "show2", "}"}], ",", "\n", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{"show2", "[", 
       RowBox[{"{", 
        RowBox[{"expr_", ",", "steps__"}], "}"}], "]"}], ":=", 
      RowBox[{"OpenerView", "[", 
       RowBox[{"{", 
        RowBox[{"expr", ",", 
         RowBox[{"Column", "[", 
          RowBox[{"show2", "/@", 
           RowBox[{"{", "steps", "}"}]}], "]"}]}], "}"}], "]"}]}], ";", "\n", 
     "  ", 
     RowBox[{
      RowBox[{"show2", "[", 
       RowBox[{"{", 
        RowBox[{"HoldForm", "[", "x_", "]"}], "}"}], "]"}], ":=", 
      RowBox[{"Row", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Opener", "[", 
          RowBox[{"True", ",", 
           RowBox[{"Enabled", "->", "False"}]}], "]"}], ",", 
         RowBox[{"HoldForm", "[", "x", "]"}]}], "}"}], "]"}]}], ";", "\n", 
     "  ", 
     RowBox[{
      RowBox[{"show2", "[", 
       RowBox[{"HoldForm", "[", "x_", "]"}], "]"}], ":=", 
      RowBox[{"HoldForm", "[", "x", "]"}]}], ";", "\n", "  ", 
     RowBox[{"show2", "[", 
      RowBox[{"Trace", "[", 
       RowBox[{
        RowBox[{"Unevaluated", "[", "e", "]"}], ",", "s", ",", "opts", ",", 
        RowBox[{"TraceOriginal", "->", "True"}]}], "]"}], "]"}]}]}], 
   "]"}]}]}], "Code",
 CellLabel->
  "In[328]:=",ExpressionUUID->"c71771b1-8632-495d-91d2-d044ef9e385d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Predicates and Helpers", "Subsection",
 FontWeight->"Bold",ExpressionUUID->"9c936527-4761-4c87-a523-014a06803d1b"],

Cell[CellGroupData[{

Cell["KvpQ[ list ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"9ae2c10b-2ef4-4684-8013-1c05d0dd0861"],

Cell["\<\
Something is a Kvp (key-value pair) if it matches the pattern of a list of \
two items, the first of which is either a string or a symbol.\
\>", "Text",ExpressionUUID->"8e5db420-409f-4ae5-a65a-37a69d109f93"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"KvpQ", "[", "kvp_List", "]"}], " ", ":=", " ", 
   RowBox[{"MatchQ", "[", 
    RowBox[{"kvp", ",", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"_Symbol", ",", " ", "_"}], "}"}], " ", "|", " ", 
      RowBox[{"{", 
       RowBox[{"_String", ",", " ", "_"}], "}"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"KvpQ", "[", "___", "]"}], " ", "=", " ", "False"}], 
  ";"}]}], "Code",
 CellLabel->
  "In[330]:=",ExpressionUUID->"1630b32c-bbee-426a-b4a7-2d2d62f96ba7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["pairsQ[ list ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"e2986885-94da-450e-9b95-1508c3ff7b03"],

Cell["\<\
Something is a list of pairs if it is a list and every element is a pair.\
\>", "Text",ExpressionUUID->"385a54aa-cf0a-4e28-b836-116d12a6382a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"pairsQ", "[", "list_List", "]"}], " ", ":=", " ", 
   RowBox[{"And", " ", "@@", " ", 
    RowBox[{"(", 
     RowBox[{"KvpQ", " ", "/@", " ", "list"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pairsQ", "[", "___", "]"}], " ", "=", " ", "False"}], 
  ";"}]}], "Code",
 CellLabel->
  "In[332]:=",ExpressionUUID->"ea6ba9d9-23c9-42d6-acd4-3c10f2815731"],

Cell["\<\
To fetch the keys from a list, map a function that takes the first part of \
every element over the list. Here, we don't need the presumably expensive \
check of ?pairsQ on the argument, just the cheap check of List, since this is \
an internal function.\
\>", "Text",ExpressionUUID->"f2180c3c-10aa-43f5-abad-6471ecaa47f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["keys[ list ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"5f006df1-1bcf-4b0c-bcbd-2f695b3cfe12"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"keys", "[", "list_List", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", "&"}], " ", "/@", " ", "list"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[334]:=",ExpressionUUID->"f10217d0-3ba5-4ab6-8064-26fd2a1e24b7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"keysUniqueQ", "[", "list_List", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"Length", "@", 
     RowBox[{"Union", "@", 
      RowBox[{"keys", "@", "list"}]}]}], " ", "===", " ", 
    RowBox[{"Length", "@", 
     RowBox[{"keys", "@", "list"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"keysUniqueQ", "[", "___", "]"}], " ", "=", " ", "False"}], 
  ";"}]}], "Code",
 CellLabel->
  "In[335]:=",ExpressionUUID->"834b77d6-e664-409f-a1cc-d42929ebab9a"],

Cell["\<\
To fetch the values, map a function that picks the second element from each \
internal kvp.\
\>", "Text",ExpressionUUID->"cceeec7e-87b5-4ce0-871b-694f28bbfd64"]
}, Open  ]],

Cell[CellGroupData[{

Cell["values[ list ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"928ff4d6-1f58-4287-bf21-25d0484cc738"],

Cell[BoxData[
 RowBox[{
  RowBox[{"values", "[", "list_List", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "[", 
     RowBox[{"[", "2", "]"}], "]"}], " ", "&"}], " ", "/@", " ", 
   "list"}]}]], "Code",
 CellLabel->
  "In[337]:=",ExpressionUUID->"228b43b7-3236-4c18-b75f-6cb28075ec15"]
}, Open  ]],

Cell[CellGroupData[{

Cell["KvpsQ[ list ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"5c8ebedc-fabb-41fd-8154-5a28af7c23f5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"KvpsQ", "[", 
    RowBox[{"list_", "?", "pairsQ"}], "]"}], " ", ":=", " ", 
   RowBox[{"keysUniqueQ", "@", "list"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"KvpsQ", "[", "___", "]"}], " ", "=", " ", "False"}], 
  ";"}]}], "Code",
 CellLabel->
  "In[338]:=",ExpressionUUID->"5081ce6e-e5b2-4378-9366-a404c818bfe1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["SymbolQ[ symbol ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"7b10b057-92ee-4c9e-9cd7-70e287fc7899"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SymbolQ", "[", "x_Symbol", "]"}], " ", "=", " ", "True"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SymbolQ", "[", "___", "]"}], " ", "=", " ", "False"}], 
  ";"}]}], "Code",
 CellLabel->
  "In[340]:=",ExpressionUUID->"d1cded5f-5f11-41ee-992d-4d322e854c52"]
}, Open  ]],

Cell[CellGroupData[{

Cell["RulesQ[ list ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"5e68b14b-354b-4a9f-857d-6d99b7045c8b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RulesQ", "[", "vs_List", "]"}], " ", ":=", " ", 
   RowBox[{"And", " ", "@@", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"MatchQ", "[", 
        RowBox[{"#", ",", " ", 
         RowBox[{"Rule", "[", 
          RowBox[{"_", ",", " ", "_"}], "]"}]}], "]"}], " ", "&"}], " ", "/@",
       " ", "vs"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RulesQ", "[", "___", "]"}], " ", "=", " ", "False"}], 
  ";"}]}], "Code",
 CellLabel->
  "In[342]:=",ExpressionUUID->"1abf3285-17d9-4ad4-9131-0431366e29e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["RulessQ[ lists ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"f12a704c-4b0a-4fe9-be46-a456de3e10b4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RulessQ", "[", "vss_List", "]"}], " ", ":=", " ", 
   RowBox[{"And", " ", "@@", " ", 
    RowBox[{"(", 
     RowBox[{"RulesQ", " ", "/@", " ", "vss"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RulessQ", "[", "___", "]"}], " ", "=", " ", "False"}], 
  ";"}]}], "Code",
 CellLabel->
  "In[344]:=",ExpressionUUID->"a54c7165-7ddf-4257-90e1-3c633ef265c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Args[ list ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"50c4a083-ba6f-4684-9047-a4e950af419f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Args", "[", "e_", "]"}], " ", ":=", " ", 
   RowBox[{"Level", "[", 
    RowBox[{"e", ",", " ", "1"}], "]"}]}], ";"}]], "Code",
 CellLabel->
  "In[346]:=",ExpressionUUID->"275feff0-2b2d-445e-92f0-5c3d7f3bf4b6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["LinqSim", "Subsection",
 FontWeight->"Bold",ExpressionUUID->"7503814c-2574-48b1-8ded-96899394b3e6"],

Cell["TODO: generalize these to arbitrary heads, not just to lists", "Text",ExpressionUUID->"75bc1d17-74cf-4fcc-a18f-82b00de6a952"],

Cell[CellGroupData[{

Cell["Pluck[ n ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"b5d110d1-03b1-4eff-95ae-17e8230c175a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Pluck", "[", "n_", "]"}], " ", ":=", " ", 
   RowBox[{"Function", "[", 
    RowBox[{"item", ",", " ", 
     RowBox[{"item", "[", 
      RowBox[{"[", "n", "]"}], "]"}]}], "]"}]}], ";"}]], "Code",
 CellLabel->
  "In[347]:=",ExpressionUUID->"cb2b5b0f-3a05-4d70-ba30-b74851d9e0c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["flat1[ list ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"19ce5ce6-9b0b-424b-91ad-9173b6c1cc47"],

Cell[BoxData[
 RowBox[{
  RowBox[{"flat1", " ", "=", " ", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"#", ",", " ", "1"}], "]"}], " ", "&"}]}], ";"}]], "Code",
 CellLabel->
  "In[348]:=",ExpressionUUID->"6b2e88a3-0386-41d9-8e2c-7b37623f9418"]
}, Open  ]],

Cell[CellGroupData[{

Cell["SelectMany[ lists, func ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"93796c7d-cb3b-4acf-888a-64bcc6d73f3d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SelectMany", "[", 
    RowBox[{"list_", ",", " ", "func_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{"func", ",", " ", "list"}], "]"}], " ", "//", " ", "flat1"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[349]:=",ExpressionUUID->"575b0423-8eeb-45ef-9812-641d07fbda65"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Zip[ list1, list2, itemFromPair ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"980d7348-63f4-454c-bd00-bff991a7ef9c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Zip", "[", 
   RowBox[{"list1_List", ",", " ", "list2_List", ",", " ", 
    RowBox[{"func_", ":", "List"}]}], "]"}], ":=", "\n", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"len", " ", "=", " ", 
      RowBox[{"Min", "[", 
       RowBox[{
        RowBox[{"Length", " ", "@", " ", "list1"}], ",", " ", 
        RowBox[{"Length", " ", "@", " ", "list2"}]}], "]"}]}], "}"}], ",", 
    "\n", "  ", 
    RowBox[{"MapThread", "[", 
     RowBox[{"func", ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Take", "[", 
         RowBox[{"#", ",", "len"}], "]"}], "&"}], " ", "/@", " ", 
       RowBox[{"{", 
        RowBox[{"list1", ",", " ", "list2"}], "}"}]}]}], "]"}]}], 
   "]"}]}]], "Code",
 CellLabel->
  "In[350]:=",ExpressionUUID->"67edac52-9df2-4f91-84a6-56f8d7e43a30"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ZipMany[list1, list2, listFromPair]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"6b24564e-a8c9-49ef-bebc-19f6a3a6c313"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ZipMany", " ", "=", " ", 
  RowBox[{"Composition", "[", 
   RowBox[{"flat1", ",", " ", "Zip"}], "]"}]}]], "Code",
 CellLabel->
  "In[351]:=",ExpressionUUID->"6d9e779b-e88a-41a9-b493-bb57752424a5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"#1", ",", "1"}], "]"}], "&"}], "@*", "Zip"}]], "Output",
 CellChangeTimes->{{3.9112524205500507`*^9, 3.911252421588769*^9}, {
   3.911254381141556*^9, 3.9112543814912167`*^9}, {3.911254645691099*^9, 
   3.911254646002416*^9}, {3.911297451410886*^9, 3.911297451650631*^9}, {
   3.912368778560707*^9, 3.912368778732178*^9}, {3.912369932893731*^9, 
   3.91236995510571*^9}, 3.9125435814109893`*^9, 3.91254537441967*^9, {
   3.913148213173477*^9, 3.913148213358224*^9}, 3.913751431672386*^9, {
   3.9137521126823606`*^9, 3.913752112884721*^9}, {3.913753546563873*^9, 
   3.9137535467602243`*^9}, 3.914855951861334*^9, {3.9148583132059793`*^9, 
   3.914858313423867*^9}, {3.915030582010181*^9, 3.915030582219672*^9}},
 CellLabel->
  "Out[351]=",ExpressionUUID->"86c7b479-04c2-40f7-a327-a0f82a5140fe"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["prefixes[ hd [ list___ ] ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"988aa313-c8bc-48b2-8ccf-8d7edf3940cc"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"prefixes", "[", 
     RowBox[{"acc_", ",", " ", 
      RowBox[{"{", "}"}]}], "]"}], " ", ":=", " ", "acc"}], ";", "\n", 
   RowBox[{
    RowBox[{"prefixes", "[", 
     RowBox[{"acc_", ",", " ", 
      RowBox[{"{", 
       RowBox[{"f_", ",", " ", "r___"}], "}"}]}], "]"}], " ", ":=", "\n", 
    "  ", 
    RowBox[{"Join", "[", 
     RowBox[{"acc", ",", "\n", "    ", 
      RowBox[{"prefixes", "[", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Append", "[", 
            RowBox[{"#", ",", " ", "f"}], "]"}], "&"}], ",", " ", "acc"}], 
         "]"}], ",", " ", 
        RowBox[{"{", "r", "}"}]}], "]"}]}], "]"}]}], ";", "\n", 
   RowBox[{
    RowBox[{"prefixes", "[", "list_List", "]"}], " ", ":=", " ", 
    RowBox[{"prefixes", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", "}"}], "}"}], ",", " ", "list"}], "]"}]}], ";"}], 
  "*)"}]], "Code",
 CellLabel->
  "In[352]:=",ExpressionUUID->"2c16259a-5286-467f-9a0f-acd1461dba9c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"prefixes", "[", 
    RowBox[{"hd_", "[", "list___", "]"}], "]"}], " ", ":=", " ", "\n", "  ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{"Function", "[", 
      RowBox[{"sub", ",", " ", 
       RowBox[{"hd", " ", "@@", " ", 
        RowBox[{"Take", "[", 
         RowBox[{
          RowBox[{"{", "list", "}"}], ",", " ", "sub"}], "]"}]}]}], "]"}], 
     ",", "\n", "  ", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", " ", 
       RowBox[{"Length", "[", 
        RowBox[{"{", "list", "}"}], "]"}]}], "]"}]}], "]"}]}], ";"}]], "Code",\

 CellLabel->
  "In[353]:=",ExpressionUUID->"bda6fa45-ad4e-4392-921d-1f6a5157ed59"]
}, Open  ]],

Cell[CellGroupData[{

Cell["postfixes[ hd [ list___ ] ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"96467067-1ba7-4925-b4ff-bac52876e9d9"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"postfixes", "[", 
     RowBox[{"acc_", ",", " ", 
      RowBox[{"{", "}"}]}], "]"}], " ", ":=", " ", "acc"}], ";", "\n", 
   RowBox[{
    RowBox[{"postfixes", "[", 
     RowBox[{"acc_", ",", " ", 
      RowBox[{"{", 
       RowBox[{"h___", ",", " ", "l_"}], "}"}]}], "]"}], " ", ":=", "\n", 
    "  ", 
    RowBox[{"Join", "[", 
     RowBox[{"acc", ",", "\n", "    ", 
      RowBox[{"postfixes", "[", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Prepend", "[", 
            RowBox[{"#", ",", "l"}], "]"}], "&"}], ",", " ", "acc"}], "]"}], 
        ",", " ", 
        RowBox[{"{", "h", "}"}]}], "]"}]}], "]"}]}], ";", "\n", 
   RowBox[{
    RowBox[{"postfixes", "[", "list_List", "]"}], " ", ":=", " ", 
    RowBox[{"Reverse", " ", "@", " ", 
     RowBox[{"postfixes", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", "}"}], "}"}], ",", " ", "list"}], "]"}]}]}], ";"}], 
  "*)"}]], "Code",
 CellLabel->
  "In[354]:=",ExpressionUUID->"fcb648ee-c7f9-462a-9cbf-f85128e382e5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"postfixes", "[", 
    RowBox[{"hd_", "[", "list___", "]"}], "]"}], " ", ":=", "\n", "  ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"len", " ", "=", " ", 
       RowBox[{"Length", "[", 
        RowBox[{"{", "list", "}"}], "]"}]}], "}"}], ",", "\n", "    ", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{"Function", "[", 
        RowBox[{"sub", ",", " ", 
         RowBox[{"hd", " ", "@@", " ", 
          RowBox[{"Take", "[", 
           RowBox[{
            RowBox[{"{", "list", "}"}], ",", " ", 
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{"len", "-", "sub"}], ")"}]}]}], "]"}]}]}], "]"}], ",", 
       "\n", "    ", 
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", " ", "len"}], "]"}]}], "]"}]}], "]"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[355]:=",ExpressionUUID->"c1c618f1-49bc-4e21-a7f3-b7a150a028f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["splits[ list ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"c00bca25-b1a1-48c0-96b7-a12e4b820ca9"],

Cell["\<\
TODO: a \"cute\" implementation is ReplaceList[list_List, \
{xs___,ys___}->{{xs},{ys}}]. Assess it for perf\
\>", "Text",ExpressionUUID->"850a9b30-97f0-47cd-b942-8498cc872403"],

Cell[BoxData[
 RowBox[{
  RowBox[{"splits", "[", "list_List", "]"}], " ", ":=", " ", 
  RowBox[{"Zip", "[", 
   RowBox[{
    RowBox[{"prefixes", " ", "@", " ", "list"}], ",", " ", 
    RowBox[{"postfixes", " ", "@", " ", "list"}]}], "]"}]}]], "Code",
 CellLabel->
  "In[356]:=",ExpressionUUID->"a779046f-72e3-4642-8e9e-91a648e70002"]
}, Open  ]],

Cell[CellGroupData[{

Cell["permutations[ list ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"f7bd4955-d7c8-4917-9de5-0f51edc6d868"],

Cell["TODO: make this work for arbitrary heads.", "Text",ExpressionUUID->"02087736-8065-4215-a645-2a1285e3177b"],

Cell["\<\
TODO: Consider this variation from the Haskell prelude:

-- | The 'permutations' function returns the list of all permutations of the \
argument.
--
-- > permutations \"abc\" == \
[\"abc\",\"bac\",\"cba\",\"bca\",\"cab\",\"acb\"]
permutations            :: [a] -> [[a]]
permutations xs0        =  xs0 : perms xs0 []
  where
    perms []     _  = []
    perms (t:ts) is = foldr interleave (perms ts (t:is)) (permutations is)
      where interleave    xs     r = let (_,zs) = interleave' id xs r in zs
            interleave' _ []     r = (ts, r)
            interleave' f (y:ys) r = let (us,zs) = interleave' (f . (y:)) ys \
r
                                     in  (y:us, f (t:y:us) : zs)\
\>", "Text",ExpressionUUID->"a6d8013d-bd1a-4361-be5a-07b7d86926b7"],

Cell["\<\
NOTE: this is for ILLUSTRATION only; the built-in Mathematica Permutations is \
MUCH more efficient.\
\>", "Text",ExpressionUUID->"a27b1319-66db-4fc9-b739-cb70d8df63f6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"permutations", "[", 
    RowBox[{"{", "}"}], "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"{", "}"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"permutations", "[", 
   RowBox[{"{", "args__", "}"}], "]"}], ":=", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Flatten", "-", 
    RowBox[{"1", " ", "of", " ", "Map", " ", "is", " ", "SelectMany"}]}], " ",
    "*)"}], "\n", " ", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"pos", ",", "\n", " ", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", "\n", "   ", 
           RowBox[{
            RowBox[{"elt", "=", 
             RowBox[{
              RowBox[{"{", "args", "}"}], "[", 
              RowBox[{"[", "pos", "]"}], "]"}]}], ",", "\n", "   ", 
            RowBox[{"rest", "=", 
             RowBox[{"Delete", "[", 
              RowBox[{
               RowBox[{"{", "args", "}"}], ",", " ", "pos"}], "]"}]}]}], 
           "}"}], ",", "\n", "  ", 
          RowBox[{"Map", "[", "\n", "   ", 
           RowBox[{
            RowBox[{"Function", "[", 
             RowBox[{"perm", ",", " ", 
              RowBox[{"Prepend", "[", 
               RowBox[{"perm", ",", " ", "elt"}], "]"}]}], "]"}], ",", "\n", 
            "   ", 
            RowBox[{"permutations", "[", "rest", "]"}]}], "]"}]}], "]"}]}], 
       "]"}], ",", "\n", "  ", 
      RowBox[{"Range", "[", 
       RowBox[{"Length", "[", 
        RowBox[{"{", "args", "}"}], "]"}], "]"}]}], "]"}], ",", "\n", " ", 
    "1"}], "]"}]}]}], "Code",
 CellLabel->
  "In[357]:=",ExpressionUUID->"61409ae6-0c93-43c8-83e0-aa9a406bb01e"]
}, Open  ]]
}, Open  ]],

Cell["Quotes and Unquotes", "Subsection",
 FontWeight->"Bold",ExpressionUUID->"11e5c0ed-b2e1-45b3-9215-3360a79b659c"],

Cell[CellGroupData[{

Cell["Numerical Subtypes", "Subsection",
 FontWeight->"Bold",ExpressionUUID->"19266de1-5d22-4c11-8020-1a4f0a72848d"],

Cell[CellGroupData[{

Cell["RealQ[ x ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"3d9b0787-1ad1-4684-9722-a23584183a8e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RealQ", "[", "x_Real", "]"}], " ", ":=", " ", "True"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RealQ", "[", "___", "]"}], " ", ":=", " ", "False"}], 
  ";"}]}], "Code",
 CellLabel->
  "In[359]:=",ExpressionUUID->"fd5ec8dd-725e-4ddc-b187-93909d0f0468"]
}, Open  ]],

Cell[CellGroupData[{

Cell["RationalQ[ x ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"a9b0cfb2-79af-486f-bc56-07224b376ff9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RationalQ", "[", "x_Rational", "]"}], " ", ":=", " ", "True"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RationalQ", "[", "___", "]"}], " ", ":=", " ", "False"}], 
  ";"}]}], "Code",
 CellLabel->
  "In[361]:=",ExpressionUUID->"ed7bc27e-e897-40dd-8c3a-e6d86341fe2a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ComplexQ[ x ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"43d6c894-b3bb-4a5a-9cf3-dd16d284411e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ComplexQ", "[", "x_Complex", "]"}], " ", ":=", " ", "True"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ComplexQ", "[", "___", "]"}], " ", ":=", " ", "False"}], 
  ";"}]}], "Code",
 CellLabel->
  "In[363]:=",ExpressionUUID->"0c11a1bb-4f81-4fd1-b2c0-237978f42cdd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["numericSubtype[ x ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"a9c19549-6460-4567-abab-0ee2b2b569c2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"numericSubtype", "[", 
   RowBox[{"x_", "?", "NumberQ"}], "]"}], " ", ":=", "\n", "\t", 
  RowBox[{"Switch", "[", 
   RowBox[{
   "x", ",", "\n", "\t\t", "_Integer", ",", "  ", "\"\<Integer\>\"", ",", 
    "\n", "\t\t", "_Real", ",", "     ", "\"\<Real\>\"", ",", "\n", "\t\t", 
    "_Rational", ",", " ", "\"\<Rational\>\"", ",", "\n", "\t\t", "_Complex", 
    ",", "  ", "\"\<Complex\>\""}], "]"}]}]], "Code",
 CellLabel->
  "In[365]:=",ExpressionUUID->"790ce1c6-dbe3-4c3c-921e-f5a6c12c08b3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["rulesFromExpression[ expr ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"5149ca28-cad2-4b38-ad4c-77e4fc1aa044"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rulesFromExpression", "[", 
   RowBox[{"expr_", "?", "NumberQ"}], "]"}], " ", ":=", " ", 
  RowBox[{"{", "\n", "\t", 
   RowBox[{"\"\<number\>\"", " ", "->", " ", 
    RowBox[{"{", "  ", 
     RowBox[{
      RowBox[{"\"\<subtype\>\"", " ", "->", " ", 
       RowBox[{"numericSubtype", " ", "@", " ", "expr"}]}], ",", "\n", 
      "                   ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "InputForm", " ", "reliable", " ", "for", " ", "roundtripping", " ", 
        "Rational"}], " ", "*)"}], "\n", "                   ", 
      RowBox[{"\"\<value\>\"", " ", "->", " ", 
       RowBox[{"ToString", " ", "@", " ", 
        RowBox[{"InputForm", " ", "@", " ", "expr"}]}]}]}], " ", "}"}]}], " ",
    "}"}]}], "\n", 
 RowBox[{
  RowBox[{"rulesFromExpression", "[", "expr_Symbol", "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{"\"\<symbol\>\"", " ", "->", " ", 
    RowBox[{"ToString", " ", "@", " ", "expr"}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{"rulesFromExpression", "[", "expr_String", "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{"\"\<string\>\"", " ", "->", " ", 
    RowBox[{"ToString", " ", "@", " ", "expr"}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rulesFromExpression", "[", 
    RowBox[{"head_", "[", "parts___", "]"}], "]"}], " ", ":=", " ", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"\"\<head\>\"", "   ", "->", " ", 
      RowBox[{"rulesFromExpression", "  ", "@", " ", "head"}]}], ",", " ", 
     "\n", "\t", 
     RowBox[{"\"\<parts\>\"", "  ", "->", " ", 
      RowBox[{"rulesFromExpression", " ", "/@", " ", 
       RowBox[{"{", "parts", "}"}]}]}]}], "}"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rulesFromExpression", "[", "x___", "]"}], " ", ":=", " ", 
   RowBox[{"Throw", "[", 
    RowBox[{"{", "x", "}"}], "]"}]}], ";"}]}], "Code",
 CellLabel->
  "In[366]:=",ExpressionUUID->"c9516960-da82-4871-9450-97e3726fb7ac"]
}, Open  ]],

Cell[CellGroupData[{

Cell["jsonStringFromExpression[ expr ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"673644a5-91c0-4312-9a32-aa9beb2d4b81"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"jsonStringFromExpression", "[", "expr_", "]"}], " ", ":=", "\n", 
   "  ", 
   RowBox[{
    RowBox[{"ExportString", "[", 
     RowBox[{
      RowBox[{"rulesFromExpression", "[", "expr", "]"}], ",", " ", 
      "\"\<JSON\>\""}], "]"}], " ", "//", " ", "\n", "    ", 
    RowBox[{
     RowBox[{"StringReplace", "[", 
      RowBox[{"#", ",", 
       RowBox[{"Whitespace", "->", "\"\<\>\""}]}], "]"}], "&"}]}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[371]:=",ExpressionUUID->"6ea1a966-a82c-4f0a-922a-dc91cadc234e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["expressionFromRules[ expr ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"75cd284c-2d82-4917-a33e-be5a8f6735ff"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"expressionFromRules", "[", 
    RowBox[{"{", 
     RowBox[{"___", ",", " ", 
      RowBox[{"\"\<symbol\>\"", " ", "->", " ", "sym_"}], ",", " ", "___"}], 
     "}"}], "]"}], " ", ":=", " ", 
   RowBox[{"ToExpression", " ", "@", " ", "sym"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"expressionFromRules", "[", 
    RowBox[{"{", 
     RowBox[{"___", ",", " ", 
      RowBox[{"\"\<string\>\"", " ", "->", " ", "str_"}], ",", " ", "___"}], 
     "}"}], "]"}], " ", ":=", " ", 
   RowBox[{"ToExpression", " ", "@", " ", "str"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"expressionFromRules", "[", 
    RowBox[{"{", 
     RowBox[{"___", ",", " ", 
      RowBox[{"\"\<number\>\"", " ", "->", " ", "val_"}], ",", " ", "___"}], 
     "}"}], "]"}], " ", ":=", " ", 
   RowBox[{"ToExpression", " ", "@", " ", 
    RowBox[{"(", 
     RowBox[{"\"\<value\>\"", " ", "/.", " ", "val"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"expressionFromRules", "[", "rules_", "]"}], " ", ":=", " ", "\n",
     "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MatchQ", "[", 
       RowBox[{"rules", ",", 
        RowBox[{"{", 
         RowBox[{"___", ",", 
          RowBox[{"\"\<parts\>\"", "->", "_"}], ",", "___"}], "}"}]}], "]"}], 
      ",", "\n", "      ", 
      RowBox[{"Apply", "[", "\n", "        ", 
       RowBox[{
        RowBox[{"expressionFromRules", "  ", "@", " ", 
         RowBox[{"(", 
          RowBox[{"\"\<head\>\"", " ", "/.", " ", "rules"}], ")"}]}], ",", 
        "\n", "        ", 
        RowBox[{"expressionFromRules", " ", "/@", " ", 
         RowBox[{"(", 
          RowBox[{"\"\<parts\>\"", " ", "/.", " ", "rules"}], ")"}]}]}], 
       "]"}], ",", "\n", "      ", 
      RowBox[{"Throw", "[", "rules", "]"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"expressionFromRules", "[", "x___", "]"}], " ", ":=", " ", 
   RowBox[{"Throw", "[", 
    RowBox[{"{", "x", "}"}], "]"}]}], ";"}]}], "Code",
 CellLabel->
  "In[372]:=",ExpressionUUID->"7620bb13-a354-494d-991f-864c454cd3b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["stringifiedExpressionFromRules[ expr ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"9b76e979-0ec8-4b33-825d-8eb7d786e15f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"insertCommaSeparators", "[", "ss_List", "]"}], " ", ":=", " ", 
    RowBox[{"StringJoin", " ", "@@", " ", 
     RowBox[{"Riffle", "[", 
      RowBox[{"ss", ",", " ", "\"\<, \>\""}], "]"}]}]}], ";"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"result", " ", "=", " ", "\"\<\>\""}], "}"}], ",", "\n", 
      "\t\t", 
      RowBox[{
       RowBox[{"MapIndexed", "[", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"string", ",", " ", "part"}], "}"}], ",", "\n", 
           "\t\t\t\t", 
           RowBox[{"result", " ", "=", " ", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"part", "[", 
                RowBox[{"[", "1", "]"}], "]"}], " ", ">", " ", "1"}], ",", 
              "\n", "\t\t\t\t\t", 
              RowBox[{
              "result", " ", "<>", " ", "\"\<, \>\"", " ", "<>", " ", 
               "string"}], ",", "\n", "\t\t\t\t\t", 
              RowBox[{"result", " ", "<>", " ", "string"}]}], "]"}]}]}], 
          "]"}], ",", "\n", "\t\t\t", "ss"}], "]"}], ";", "\n", "\t\t", 
       "result"}]}], "]"}], ";"}], " ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"insertCommaSeparators", "[", "x___", "]"}], " ", ":=", " ", 
   RowBox[{"Throw", "[", 
    RowBox[{"{", "x", "}"}], "]"}]}], ";"}]}], "Code",
 CellLabel->
  "In[377]:=",ExpressionUUID->"a77f4c6b-d043-4860-a853-a92da54fd921"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"stringifiedExpressionFromRules", "[", 
    RowBox[{"{", 
     RowBox[{"___", ",", " ", 
      RowBox[{"\"\<symbol\>\"", " ", "->", " ", "sym_"}], ",", " ", "___"}], 
     "}"}], "]"}], " ", ":=", " ", "sym"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stringifiedExpressionFromRules", "[", 
    RowBox[{"{", 
     RowBox[{"___", ",", " ", 
      RowBox[{"\"\<string\>\"", " ", "->", " ", "str_"}], ",", " ", "___"}], 
     "}"}], "]"}], " ", ":=", " ", 
   RowBox[{
   "\"\<\\\"\>\"", " ", "<>", " ", "str", " ", "<>", " ", "\"\<\\\"\>\""}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"stringifiedExpressionFromRules", "[", 
   RowBox[{"{", 
    RowBox[{"___", ",", " ", 
     RowBox[{"\"\<number\>\"", " ", "->", " ", "val_"}], ",", " ", "___"}], 
    "}"}], "]"}], " ", ":=", " ", "\n", "\t", 
  RowBox[{"Switch", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\"\<subtype\>\"", " ", "/.", " ", "val"}], ")"}], ",", "\n", 
    "\t\t", "\"\<Integer\>\"", ",", " ", 
    RowBox[{"(", 
     RowBox[{"\"\<value\>\"", " ", "/.", " ", "val"}], ")"}], ",", "\n", 
    "\t\t", "\"\<Real\>\"", ",", "    ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\"\<value\>\"", " ", "/.", " ", "val"}], ")"}], " ", "<>", 
     " ", "\"\<`\>\""}], ",", "\n", "\t\t", "\"\<Complex\>\"", ",", " ", "\n",
     "\t\t\t", 
    RowBox[{
     RowBox[{"Quiet", " ", "@", " ", 
      RowBox[{"StringReplace", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\"\<value\>\"", " ", "/.", " ", "val"}], ")"}], ",", "\n", 
        "\t\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"p", ":", "NumberString"}], ")"}], " ", "~~", " ", 
          "\"\< + \>\"", " ", "~~", " ", 
          RowBox[{"(", 
           RowBox[{"q", ":", "NumberString"}], ")"}], " ", "~~", " ", 
          "\"\<*I\>\""}], " ", "->", "\n", "\t\t\t\t", 
         RowBox[{
         "\"\<Complex[\>\"", " ", "<>", " ", "p", " ", "<>", " ", 
          "\"\<, \>\"", " ", "<>", " ", "q", " ", "<>", " ", 
          "\"\<]\>\""}]}]}], " ", "]"}]}], " ", "//", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"Quiet", " ", "@", " ", 
       RowBox[{"StringReplace", "[", 
        RowBox[{"#", ",", "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"p", ":", 
             RowBox[{"DigitCharacter", "..."}]}], ")"}], " ", "~~", " ", 
           "\"\<.\>\"", " ", "~~", " ", 
           RowBox[{"(", 
            RowBox[{"q", ":", 
             RowBox[{"DigitCharacter", ".."}]}], ")"}]}], " ", "->", " ", 
          "\n", "\t\t\t\t", 
          RowBox[{
          "p", " ", "<>", " ", "\"\<.\>\"", " ", "<>", " ", "q", " ", "<>", 
           " ", "\"\<`\>\""}]}]}], "]"}]}], " ", "&"}]}], ",", "\n", "\t\t", 
    "_", ",", "         ", 
    RowBox[{"Throw", "[", 
     RowBox[{"{", "val", "}"}], "]"}]}], "\n", "\t\t", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stringifiedExpressionFromRules", "[", "rules_", "]"}], " ", ":=",
     " ", "\n", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MatchQ", "[", 
       RowBox[{"rules", ",", 
        RowBox[{"{", 
         RowBox[{"___", ",", " ", 
          RowBox[{"\"\<parts\>\"", " ", "->", " ", "_"}], ",", " ", "___"}], 
         "}"}]}], "]"}], ",", "\n", "      ", 
      RowBox[{
       RowBox[{"stringifiedExpressionFromRules", "  ", "@", " ", 
        RowBox[{"(", 
         RowBox[{"\"\<head\>\"", " ", "/.", " ", "rules"}], ")"}]}], " ", "<>",
        " ", "\"\<[\>\"", " ", "<>", "\n", "      ", 
       RowBox[{"insertCommaSeparators", " ", "[", "\n", "\t\t", 
        RowBox[{"stringifiedExpressionFromRules", " ", "/@", " ", 
         RowBox[{"(", 
          RowBox[{"\"\<parts\>\"", " ", "/.", " ", "rules"}], ")"}]}], " ", 
        "]"}], " ", "<>", " ", "\"\<]\>\""}], ",", "\n", "      ", 
      RowBox[{"Throw", "[", "rules", "]"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stringifiedExpressionFromRules", "[", "x___", "]"}], " ", ":=", 
   " ", 
   RowBox[{"Throw", "[", 
    RowBox[{"{", "x", "}"}], "]"}]}], ";"}]}], "Code",
 CellLabel->
  "In[379]:=",ExpressionUUID->"270778b8-2827-4a5c-905b-7e55434dfaba"]
}, Open  ]],

Cell[CellGroupData[{

Cell["rulesFromEvaluatableHeldExpression[ expr ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"d8289050-af99-4596-a38c-da0b14212eb2"],

Cell["\<\
Allows call of Evaluate inside the expression. Differs from \
\"rulesFromHeldExpression\" only in the Attributes -- \
rulesFromEvaluatableHeldExpression is HoldAll; rulesFromHeldExpression is \
HoldAllComplete. \
\>", "Text",ExpressionUUID->"2e8b0375-1677-45b8-b081-93a46dfcb951"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SetAttributes", "[", 
    RowBox[{"rulesFromEvaluatableHeldExpression", ",", " ", "HoldAll"}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"rulesFromEvaluatableHeldExpression", "[", 
   RowBox[{"expr_", " ", "/;", " ", 
    RowBox[{"NumberQ", " ", "@", " ", 
     RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}]}], "]"}], " ", ":=", 
  " ", "\n", "\t", 
  RowBox[{"rulesFromExpression", "[", "expr", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"rulesFromEvaluatableHeldExpression", "[", 
   RowBox[{"expr_", " ", "/;", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Head", " ", "@", " ", 
        RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}], " ", "===", " ", 
       "Symbol"}], " ", "&&", " ", 
      RowBox[{
       RowBox[{"AtomQ", " ", "@", " ", 
        RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}], " ", "===", " ", 
       "True"}]}], ")"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"{", "\n", "\t", 
   RowBox[{"\"\<symbol\>\"", " ", "->", " ", 
    RowBox[{"ToString", " ", "@", " ", 
     RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{"rulesFromEvaluatableHeldExpression", "[", 
   RowBox[{"expr_", " ", "/;", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Head", " ", "@", " ", 
       RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}], " ", "===", " ", 
      "String"}], ")"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"{", "\n", "\t", 
   RowBox[{"\"\<string\>\"", " ", "->", " ", 
    RowBox[{"ToString", " ", "@", " ", 
     RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{"rulesFromEvaluatableHeldExpression", "[", 
   RowBox[{"head_", "[", "parts___", "]"}], "]"}], " ", ":=", " ", 
  RowBox[{"{", "\n", "\t", 
   RowBox[{
    RowBox[{"\"\<head\>\"", "  ", "->", " ", 
     RowBox[{"rulesFromEvaluatableHeldExpression", "  ", "@", " ", "head"}]}],
     ",", " ", "\n", "\t", 
    RowBox[{"\"\<parts\>\"", " ", "->", " ", 
     RowBox[{"rulesFromEvaluatableHeldExpression", " ", "/@", " ", 
      RowBox[{"Unevaluated", " ", "@", " ", 
       RowBox[{"{", "parts", "}"}]}]}]}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rulesFromEvaluatableHeldExpression", "[", "x___", "]"}], " ", ":=",
    " ", 
   RowBox[{"Throw", " ", "@", " ", 
    RowBox[{"{", "x", "}"}]}]}], ";"}]}], "Code",
 CellLabel->
  "In[384]:=",ExpressionUUID->"8163b191-2503-4f5c-9dc6-58bd0e11efae"]
}, Open  ]],

Cell[CellGroupData[{

Cell["rulesFromHeldExpression[ expr ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"fc94bfba-19c7-4dab-afaf-70fe2d9db925"],

Cell["\<\
Applies maximal quoting to input expressions. Will even quote calls of \
\"Evaluate\". \
\>", "Text",ExpressionUUID->"04da459c-8ea4-49e2-be36-3283e39db558"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SetAttributes", "[", 
    RowBox[{"rulesFromHeldExpression", ",", " ", "HoldAllComplete"}], "]"}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"rulesFromHeldExpression", "[", 
   RowBox[{"expr_", " ", "/;", " ", 
    RowBox[{"NumberQ", " ", "@", " ", 
     RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}]}], "]"}], " ", ":=", 
  " ", "\n", "\t", 
  RowBox[{"rulesFromExpression", "[", "expr", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"rulesFromHeldExpression", "[", 
   RowBox[{"expr_", " ", "/;", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Head", " ", "@", " ", 
        RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}], " ", "===", " ", 
       "Symbol"}], " ", "&&", " ", 
      RowBox[{
       RowBox[{"AtomQ", " ", "@", " ", 
        RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}], " ", "===", " ", 
       "True"}]}], ")"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"{", "\n", "\t", 
   RowBox[{"\"\<symbol\>\"", " ", "->", " ", 
    RowBox[{"ToString", " ", "@", " ", 
     RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{"rulesFromHeldExpression", "[", 
   RowBox[{"expr_", " ", "/;", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Head", " ", "@", " ", 
       RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}], " ", "===", " ", 
      "String"}], ")"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"{", "\n", "\t", 
   RowBox[{"\"\<string\>\"", " ", "->", " ", 
    RowBox[{"ToString", " ", "@", " ", 
     RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{"rulesFromHeldExpression", "[", 
   RowBox[{"head_", "[", "parts___", "]"}], "]"}], " ", ":=", " ", 
  RowBox[{"{", "\n", "\t", 
   RowBox[{
    RowBox[{"\"\<head\>\"", "  ", "->", " ", 
     RowBox[{"rulesFromHeldExpression", "  ", "@", " ", "head"}]}], ",", " ", 
    "\n", "\t", 
    RowBox[{"\"\<parts\>\"", " ", "->", " ", 
     RowBox[{"rulesFromHeldExpression", " ", "/@", " ", 
      RowBox[{"Unevaluated", " ", "@", " ", 
       RowBox[{"{", "parts", "}"}]}]}]}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rulesFromHeldExpression", "[", "x___", "]"}], " ", ":=", " ", 
   RowBox[{"Throw", " ", "@", " ", 
    RowBox[{"{", "x", "}"}]}]}], ";"}]}], "Code",
 CellLabel->
  "In[390]:=",ExpressionUUID->"490605d1-1812-4670-8144-10c51f8a285b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["jsonStringFromHeldExpression[ expr ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"f2cff17d-4d36-4756-bb6a-63f06b29145d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SetAttributes", "[", 
    RowBox[{"jsonStringFromHeldExpression", ",", " ", "HoldAllComplete"}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jsonStringFromHeldExpression", "[", "expr_", "]"}], " ", ":=", 
   "\n", "  ", 
   RowBox[{
    RowBox[{"ExportString", "[", 
     RowBox[{
      RowBox[{"rulesFromHeldExpression", "[", "expr", "]"}], ",", " ", 
      "\"\<JSON\>\""}], "]"}], " ", "//", " ", "\n", "    ", 
    RowBox[{
     RowBox[{"StringReplace", "[", 
      RowBox[{"#", ",", 
       RowBox[{"Whitespace", "->", "\"\<\>\""}]}], "]"}], "&"}]}]}], 
  ";"}]}], "Code",
 CellLabel->
  "In[396]:=",ExpressionUUID->"fd4ee73f-e39f-460c-b861-1f6bdbcf51ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell["expressionFromJsonString[ str ]", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"dbb42862-8ab9-42f9-8e87-c1fc197b6ddf"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"expressionFromJsonString", "[", "str_String", "]"}], " ", ":=", 
   "\n", "  ", 
   RowBox[{"expressionFromRules", " ", "@", " ", 
    RowBox[{"ImportString", "[", 
     RowBox[{"str", ",", " ", "\"\<JSON\>\""}], "]"}]}]}], ";"}]], "Code",
 CellLabel->
  "In[398]:=",ExpressionUUID->"150e6b6b-df80-443b-913c-6398abd20779"]
}, Open  ]],

Cell[CellGroupData[{

Cell["captive[ expr ] -- a direct mapping to S-expressions", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"21d709c9-ecb8-418b-a260-60d69a3a13da"],

Cell["Less verbose output", "Text",ExpressionUUID->"b55d9cff-9f40-4254-97f8-b096ed5c7a10"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SetAttributes", "[", 
    RowBox[{"captive", ",", " ", "HoldAll"}], "]"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"NOT", " ", "HoldAllComplete"}], " ", "*)"}]}]], "Code",
 CellLabel->
  "In[399]:=",ExpressionUUID->"b5c7b59a-786b-4213-91df-eb75cf85d7f2"],

Cell["Rules for Atoms", "Text",ExpressionUUID->"02484a4b-c72d-4bbf-b1e9-d34478799697"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"captive", "[", 
     RowBox[{"expr_", " ", "/;", " ", 
      RowBox[{"AtomQ", " ", "@", " ", 
       RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}]}], "]"}], " ", ":=", 
    " ", "\n", "  ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"Quiet", "[", 
       RowBox[{"ValueQ", " ", "@", " ", "expr"}], "]"}], ",", " ", 
      RowBox[{"captive", " ", "@", " ", 
       RowBox[{"Evaluate", " ", "@", " ", "expr"}]}], ",", " ", "expr"}], 
     "]"}]}], ";"}], " "}]], "Code",
 CellLabel->
  "In[400]:=",ExpressionUUID->"9ee56195-4d24-493c-889c-e4330c4f66f2"],

Cell["Rules for non-Atoms", "Text",ExpressionUUID->"71f1bc89-0874-44f6-817a-31fa8e0008c4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"captive", "[", 
   RowBox[{"head_", "[", "parts___", "]"}], "]"}], " ", ":=", " ", "\n", "  ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"captive", " ", "@", " ", "head"}], "}"}], " ", "~", "Join", "~", 
   " ", 
   RowBox[{"(", 
    RowBox[{"captive", " ", "/@", " ", 
     RowBox[{"(", 
      RowBox[{"Unevaluated", " ", "@", " ", 
       RowBox[{"{", "parts", "}"}]}], ")"}]}], ")"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"captive", "[", "x___", "]"}], " ", ":=", " ", 
   RowBox[{"Throw", "[", 
    RowBox[{"{", "x", "}"}], "]"}]}], ";"}]}], "Code",
 CellLabel->
  "In[401]:=",ExpressionUUID->"6c080a35-40c8-498e-a077-c51a6f789946"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
jaqCaptive[ expr ] -- TODO: a 
more Jacquard-ish captive\
\>", "Subsubsection",
 FontWeight->"Bold",ExpressionUUID->"e3780f67-5a3f-4006-89b4-22f2aa79c83d"],

Cell["Less verbose output", "Text",ExpressionUUID->"03491a5e-0e3d-4b3c-8602-51661b2c9096"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SetAttributes", "[", 
    RowBox[{"jaqCaptive", ",", " ", "HoldAll"}], "]"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"NOT", " ", "HoldAllComplete"}], " ", "*)"}]}]], "Code",
 CellLabel->
  "In[403]:=",ExpressionUUID->"0250971a-bcf0-4304-86bd-ebe1ee928bde"],

Cell["Rules for Atoms", "Text",ExpressionUUID->"add2d11d-d825-4fd8-8743-b2e5f6bf4109"],

Cell[BoxData[
 RowBox[{
  RowBox[{"jaqCaptive", "[", 
   RowBox[{"expr_", " ", "/;", " ", 
    RowBox[{"AtomQ", " ", "@", " ", 
     RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}]}], "]"}], " ", ":=", 
  " ", "\n", "  ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"Quiet", "[", 
     RowBox[{"ValueQ", " ", "@", " ", "expr"}], "]"}], ",", " ", 
    RowBox[{"captive", " ", "@", " ", 
     RowBox[{"Evaluate", " ", "@", " ", "expr"}]}], ",", " ", "expr"}], 
   "]"}]}]], "Code",
 CellLabel->
  "In[404]:=",ExpressionUUID->"e51e53f3-f757-4460-83ce-8c47001219f9"],

Cell["Rules for non-Atoms", "Text",ExpressionUUID->"75a67e81-495d-440f-b610-19c2976b4399"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"jaqCaptive", "[", 
   RowBox[{"head_", "[", "parts___", "]"}], "]"}], " ", ":=", " ", "\n", "  ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"jaqCaptive", " ", "@", " ", "head"}], "}"}], " ", "~", "Join", 
   "~", " ", 
   RowBox[{"(", 
    RowBox[{"jaqCaptive", " ", "/@", " ", 
     RowBox[{"(", 
      RowBox[{"Unevaluated", " ", "@", " ", 
       RowBox[{"{", "parts", "}"}]}], ")"}]}], ")"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jaqCaptive", "[", "x___", "]"}], " ", ":=", " ", 
   RowBox[{"Throw", "[", 
    RowBox[{"{", "x", "}"}], "]"}]}], ";"}]}], "Code",
 CellLabel->
  "In[405]:=",ExpressionUUID->"b8c7bf2a-613b-4b8b-a10e-6b7190e5b948"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["HTTP Post Interfaces", "Subsection",
 FontWeight->"Bold",ExpressionUUID->"9f63a398-d374-4970-a237-cd5cde694e93"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"jacquardPostExpression", ",", " ", "HoldFirst"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"jacquardPostExpression", "[", "\n", "    ", 
   RowBox[{"request_", ",", "\n", "    ", 
    RowBox[{"importer_", ":", "expressionFromRules"}], ",", "\n", "    ", 
    RowBox[{"url_", ":", " ", "\"\<http://127.0.0.1:5000/jacquard\>\""}]}], 
   "\n", "]"}], " ", ":=", "\n", "  ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\n", "      ", 
     RowBox[{
     "requestExprString", ",", "\n", "      ", "client", ",", " ", "method", 
      ",", "\n", "      ", "entity", ",", " ", "responseCode", ",", " ", 
      "response", ",", "\n", "      ", "responseRules", ",", " ", 
      "responseExpression"}], "}"}], ",", "\n", "    ", 
    RowBox[{"JavaBlock", "[", "\n", "      ", 
     RowBox[{
      RowBox[{"requestExprString", " ", "=", " ", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"Unevaluated", "[", "request", "]"}], ",", " ", 
         "InputForm"}], "]"}]}], ";", "\n", "      ", 
      RowBox[{"Print", "[", "requestExprString", "]"}], ";", "\n", "      ", 
      RowBox[{"client", "=", 
       RowBox[{
       "JavaNew", "[", "\n", "        ", 
        "\"\<org.apache.commons.httpclient.HttpClient\>\"", "]"}]}], ";", 
      "\n", "      ", 
      RowBox[{"method", "=", 
       RowBox[{"JavaNew", "[", "\n", "        ", 
        RowBox[{
        "\"\<org.apache.commons.httpclient.methods.PostMethod\>\"", ",", 
         "url"}], "]"}]}], ";", "\n", "      ", 
      RowBox[{"entity", "=", 
       RowBox[{"JavaNew", "[", "\n", "        ", 
        RowBox[{
        "\"\<org.apache.commons.httpclient.methods.StringRequestEntity\>\"", 
         ",", "\n", "        ", "requestExprString"}], "]"}]}], ";", "\n", 
      "      ", 
      RowBox[{"method", " ", "@", " ", 
       RowBox[{"setRequestHeader", "[", 
        RowBox[{"\"\<Content-Type\>\"", ",", " ", "\"\<text/plain\>\""}], 
        "]"}]}], ";", "\n", "      ", 
      RowBox[{"method", " ", "@", " ", 
       RowBox[{"setRequestEntity", "[", "entity", "]"}]}], ";", "\n", 
      "      ", 
      RowBox[{"responseCode", "=", 
       RowBox[{"client", " ", "@", " ", 
        RowBox[{"executeMethod", "[", "method", "]"}]}]}], ";", "\n", 
      "      ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"responseCode", " ", "===", " ", "200"}], ",", "\n", 
        "        ", 
        RowBox[{"(*", " ", "then", " ", "*)"}], "\n", "        ", 
        RowBox[{
         RowBox[{"response", " ", "=", " ", 
          RowBox[{"method", " ", "@", " ", 
           RowBox[{"getResponseBodyAsString", "[", "]"}]}]}], ";", "\n", 
         "        ", 
         RowBox[{"responseRules", " ", "=", " ", 
          RowBox[{"ImportString", "[", 
           RowBox[{"response", ",", "\"\<JSON\>\""}], "]"}]}], ";", "\n", 
         "        ", 
         RowBox[{"responseExpression", " ", "=", " ", 
          RowBox[{"importer", " ", "@", " ", "responseRules"}]}]}], ",", "\n",
         "        ", 
        RowBox[{"(*", " ", "else", " ", "*)"}], "\n", "        ", 
        RowBox[{
         RowBox[{"Message", "[", "\n", "          ", 
          RowBox[{
           RowBox[{"jacquardPostRules", "::", "httperr"}], ",", "\n", 
           "          ", "responseCode"}], "]"}], ";", "\n", "          ", 
         "$Failed"}]}], "\n", "        ", "]"}]}], "]"}]}], "]"}]}]}], "Code",\

 CellLabel->
  "In[407]:=",ExpressionUUID->"81a041b3-1a85-4a89-8a62-d73393f31edf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"jacquardPostRules", "[", "\n", "    ", 
   RowBox[{"request_", ",", "\n", "    ", 
    RowBox[{"importer_", ":", "expressionFromRules"}], ",", "\n", "    ", 
    RowBox[{"url_", ":", " ", "\"\<http://127.0.0.1:5000/jacquard\>\""}]}], 
   "\n", "]"}], " ", ":=", "\n", "  ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\n", "      ", 
     RowBox[{
     "requestJsonString", ",", "\n", "      ", "client", ",", " ", "method", 
      ",", "\n", "      ", "entity", ",", " ", "responseCode", ",", " ", 
      "response", ",", "\n", "      ", "responseRules", ",", " ", 
      "responseExpression"}], "}"}], ",", "\n", "    ", 
    RowBox[{"JavaBlock", "[", "\n", "      ", 
     RowBox[{
      RowBox[{"requestJsonString", "=", 
       RowBox[{"ExportString", "[", 
        RowBox[{"request", ",", "\"\<JSON\>\""}], "]"}]}], ";", "\n", 
      "      ", 
      RowBox[{"client", "=", 
       RowBox[{
       "JavaNew", "[", "\n", "        ", 
        "\"\<org.apache.commons.httpclient.HttpClient\>\"", "]"}]}], ";", 
      "\n", "      ", 
      RowBox[{"method", "=", 
       RowBox[{"JavaNew", "[", "\n", "        ", 
        RowBox[{
        "\"\<org.apache.commons.httpclient.methods.PostMethod\>\"", ",", 
         "url"}], "]"}]}], ";", "\n", "      ", 
      RowBox[{"entity", "=", 
       RowBox[{"JavaNew", "[", "\n", "        ", 
        RowBox[{
        "\"\<org.apache.commons.httpclient.methods.StringRequestEntity\>\"", 
         ",", "\n", "        ", "requestJsonString"}], "]"}]}], ";", "\n", 
      "      ", 
      RowBox[{"method", " ", "@", " ", 
       RowBox[{"setRequestHeader", "[", 
        RowBox[{
        "\"\<Content-Type\>\"", ",", " ", "\"\<application/json\>\""}], 
        "]"}]}], ";", "\n", "      ", 
      RowBox[{"method", " ", "@", " ", 
       RowBox[{"setRequestEntity", "[", "entity", "]"}]}], ";", "\n", 
      "      ", 
      RowBox[{"responseCode", "=", 
       RowBox[{"client", " ", "@", " ", 
        RowBox[{"executeMethod", "[", "method", "]"}]}]}], ";", "\n", 
      "      ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"responseCode", " ", "===", " ", "200"}], ",", "\n", 
        "        ", 
        RowBox[{"(*", " ", "then", " ", "*)"}], "\n", "        ", 
        RowBox[{
         RowBox[{"response", " ", "=", " ", 
          RowBox[{"method", " ", "@", " ", 
           RowBox[{"getResponseBodyAsString", "[", "]"}]}]}], ";", "\n", 
         "        ", 
         RowBox[{"responseRules", " ", "=", " ", 
          RowBox[{"ImportString", "[", 
           RowBox[{"response", ",", "\"\<JSON\>\""}], "]"}]}], ";", "\n", 
         "        ", 
         RowBox[{"responseExpression", " ", "=", " ", 
          RowBox[{"importer", " ", "@", " ", "responseRules"}]}]}], ",", "\n",
         "        ", 
        RowBox[{"(*", " ", "else", " ", "*)"}], "\n", "        ", 
        RowBox[{
         RowBox[{"Message", "[", "\n", "          ", 
          RowBox[{
           RowBox[{"jacquardPostRules", "::", "httperr"}], ",", "\n", 
           "          ", "responseCode"}], "]"}], ";", "\n", "          ", 
         "$Failed"}]}], "\n", "        ", "]"}]}], "]"}]}], "]"}]}]], "Code",
 CellLabel->
  "In[409]:=",ExpressionUUID->"e8e1a2cb-7f07-454b-8689-0fe7fb6079cc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"jacquardEvalExpression", "[", "\n", "    ", 
    RowBox[{"requestExpr_", ",", "\n", "    ", 
     RowBox[{"importer_", ":", "expressionFromRules"}], ",", "\n", "    ", 
     RowBox[{"url_", ":", " ", "\"\<http://127.0.0.1:5000/jacquard\>\""}]}], 
    "]"}], " ", ":=", "\n", "  ", 
   RowBox[{"jacquardPostRules", "[", 
    RowBox[{
     RowBox[{"rulesFromExpression", " ", "@", " ", "requestExpr"}], ",", " ", 
     "importer", ",", " ", "url"}], "]"}]}], ";"}]], "Code",
 CellLabel->
  "In[410]:=",ExpressionUUID->"6eb0fbb7-85e1-49ab-b632-01eac5a469b2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"jacquardEvalHeldExpression", ",", "HoldAllComplete"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jacquardEvalHeldExpression", "[", "\n", "    ", 
    RowBox[{"requestExpr_", ",", "\n", "    ", 
     RowBox[{"importer_", ":", "expressionFromRules"}], ",", "\n", "    ", 
     RowBox[{"url_", ":", " ", "\"\<http://127.0.0.1:5000/jacquard\>\""}]}], 
    "]"}], " ", ":=", "\n", "  ", 
   RowBox[{"jacquardPostRules", "[", 
    RowBox[{
     RowBox[{"rulesFromHeldExpression", "[", "requestExpr", "]"}], ",", " ", 
     "importer", ",", " ", "url"}], "]"}]}], ";"}]}], "Code",
 CellLabel->
  "In[411]:=",ExpressionUUID->"4b7b4a58-3b0c-4de9-a813-efdede4ad051"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "jacquardEvalEvaluatableHeldExpression", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"jacquardEvalEvaluatableHeldExpression", ",", "HoldAllComplete"}], 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jacquardEvalEvaluatableHeldExpression", "[", "\n", "    ", 
    RowBox[{"requestExpr_", ",", "\n", "    ", 
     RowBox[{"importer_", ":", "expressionFromRules"}], ",", "\n", "    ", 
     RowBox[{"url_", ":", " ", "\"\<http://127.0.0.1:5000/jacquard\>\""}]}], 
    "]"}], " ", ":=", "\n", "  ", 
   RowBox[{"jacquardPostRules", "[", 
    RowBox[{
     RowBox[{"rulesFromEvaluatableHeldExpression", "[", "requestExpr", "]"}], 
     ",", " ", "importer", ",", " ", "url"}], "]"}]}], ";"}]}], "Code",
 CellLabel->
  "In[413]:=",ExpressionUUID->"60d46b24-1a4b-489d-bd01-e6c760592a14"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"jacquardStringifiedEvalHeldExpression", ",", "HoldAllComplete"}], 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jacquardStringifiedEvalHeldExpression", "[", "\n", "    ", 
    RowBox[{"requestExpr_", ",", "\n", "    ", 
     RowBox[{"url_", ":", "\"\<http://127.0.0.1:5000/jacquard\>\""}]}], "]"}],
    " ", ":=", "\n", "  ", 
   RowBox[{"jacquardPostRules", "[", 
    RowBox[{
     RowBox[{"rulesFromHeldExpression", "[", "requestExpr", "]"}], ",", " ", 
     "stringifiedExpressionFromRules", ",", " ", "url"}], "]"}]}], 
  ";"}]}], "Code",
 CellLabel->
  "In[416]:=",ExpressionUUID->"4c5b263d-7092-4123-b209-e77c955f261a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Ends", "Subsection",
 FontWeight->"Bold",ExpressionUUID->"7537c387-7323-4ff0-9a0d-0b5588483013"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"End", "[", "]"}], ";"}], 
  RowBox[{"(*", " ", "Private", " ", "*)"}]}]], "Code",
 CellLabel->
  "In[418]:=",ExpressionUUID->"377f5257-1ece-4e4d-ba13-ff834e5f99bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]], "Code",
 CellLabel->
  "In[419]:=",ExpressionUUID->"918ae5e9-ed89-472f-8b8a-42240344be15"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Units", "Section",
 CellChangeTimes->{{3.91346620745632*^9, 3.913466207992731*^9}},
 FontWeight->"Bold",ExpressionUUID->"894b628a-bb6d-446b-8011-dd1c8ba04cff"],

Cell[TextData[{
 "All quantities are in bits unless otherwise stated. E.g., 576 means \
\[OpenCurlyDoubleQuote]576 bits\[CloseCurlyDoubleQuote] One Kib is 1024 bits. \
One Mib is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"1024", "*", "1024"}], "=", "1048576"}], TraditionalForm]],
  ExpressionUUID->"8d83fe17-7e4f-4e54-be09-52e2688dd97b"],
 " bits."
}], "Text",
 CellChangeTimes->{{3.9134599372687893`*^9, 3.91346004698563*^9}, {
  3.913464978511443*^9, 3.9134649818795757`*^9}, {3.913473335917804*^9, 
  3.913473363294248*^9}},ExpressionUUID->"8a4d7e42-023c-40a8-ab10-\
8f81ae606672"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantityMagnitude", "[", 
  RowBox[{"1024", 
   TemplateBox[{
     InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
    "Quantity"]}], "]"}]], "Input",
 CellChangeTimes->{{3.913464986789818*^9, 3.913464997825039*^9}},
 CellLabel->
  "In[420]:=",ExpressionUUID->"17e11793-12a4-41d3-a00b-76212d548a51"],

Cell[BoxData["1024"], "Output",
 CellChangeTimes->{3.913465004250507*^9, 3.9134662908975167`*^9, 
  3.9134726325020847`*^9, 3.9134726919594927`*^9, 3.913640842829493*^9, 
  3.91364199695116*^9, 3.9136443855751963`*^9, 3.913646597548736*^9, 
  3.913646831003454*^9, 3.913646891786708*^9, 3.9136475091826353`*^9, 
  3.913741375091742*^9, 3.913748860539134*^9, 3.913749123260173*^9, 
  3.913751431748497*^9, 3.913752113098438*^9, 3.913753546976122*^9, 
  3.91485831364995*^9, 3.9150305822956133`*^9},
 CellLabel->
  "Out[420]=",ExpressionUUID->"40fb0dde-ba5b-4690-88f8-cd444b1550ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantityMagnitude", "[", 
  RowBox[{
   RowBox[{"1", 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"Kib\"", "kibibits", 
      "\"Kibibits\""},
     "Quantity"]}], ",", 
   TemplateBox[{
     InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
    "Quantity"]}], "]"}]], "Input",
 CellChangeTimes->{{3.913465013376729*^9, 3.91346507200178*^9}},
 CellLabel->
  "In[421]:=",ExpressionUUID->"403c9da7-de3b-4b5d-8ce2-93f2af135512"],

Cell[BoxData["1024"], "Output",
 CellChangeTimes->{{3.913465051707905*^9, 3.913465059068859*^9}, 
   3.913465094139686*^9, 3.91346629101661*^9, 3.9134726325773478`*^9, 
   3.913472692014198*^9, 3.913640843003228*^9, 3.91364199951018*^9, 
   3.913644385740367*^9, 3.913646597716599*^9, 3.9136468311708*^9, 
   3.913646891975788*^9, 3.913647509346789*^9, 3.913741375269058*^9, 
   3.913748860708372*^9, 3.913749123437142*^9, 3.913751431757281*^9, 
   3.9137521131027737`*^9, 3.9137535469808693`*^9, 3.914858313654067*^9, 
   3.9150305823079157`*^9},
 CellLabel->
  "Out[421]=",ExpressionUUID->"9cb284e8-ce26-4865-86b7-22868b515c94"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantityMagnitude", "[", 
  RowBox[{
   RowBox[{"1", 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"Mib\"", "mebibits", 
      "\"Mebibits\""},
     "Quantity"]}], ",", 
   TemplateBox[{
     InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
    "Quantity"]}], "]"}]], "Input",
 CellChangeTimes->{{3.913465096280878*^9, 3.913465135576432*^9}},
 CellLabel->
  "In[422]:=",ExpressionUUID->"207884bd-3e3c-4bb4-a8a4-3ed5c082a5ba"],

Cell[BoxData["1048576"], "Output",
 CellChangeTimes->{3.9134651090830584`*^9, 3.913465147399488*^9, 
  3.913466291023722*^9, 3.913472632589038*^9, 3.913472692019792*^9, 
  3.913640843011631*^9, 3.9136420059774303`*^9, 3.91364438575097*^9, 
  3.913646597729985*^9, 3.91364683118146*^9, 3.9136468919879727`*^9, 
  3.913647509357738*^9, 3.913741375279866*^9, 3.913748860719811*^9, 
  3.913749123447175*^9, 3.91375143176274*^9, 3.913752113109824*^9, 
  3.913753546989582*^9, 3.9148583136670027`*^9, 3.915030582311274*^9},
 CellLabel->
  "Out[422]=",ExpressionUUID->"d26d7064-4132-41b3-9ab1-65e053edb7cf"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Error Messages", "Section",
 CellChangeTimes->{{3.913405398649191*^9, 3.913405405812077*^9}},
 FontWeight->"Bold",ExpressionUUID->"d2b22d21-9128-4b2c-bb34-3840452aab68"],

Cell["\<\
Defined with open argument lists, future-proofing later improvements.\
\>", "Text",
 CellChangeTimes->{{3.913454541625052*^9, 3.9134545633592577`*^9}, 
   3.913747818533589*^9},ExpressionUUID->"fecf91e9-0d85-4a8c-94d0-\
870a8ffcd3ed"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"argMsg", ",", "undefined", ",", "illegal", ",", "nyi"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"argMsg", "[", "___", "]"}], ":=", 
   "\"\<One or more arguments are out of range.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"undefined", "[", "___", "]"}], ":=", 
  "\"\<Operation undefined.\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"illegal", "[", "___", "]"}], ":=", 
  "\"\<Illegal operation.\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nyi", "[", "___", "]"}], ":=", 
  "\"\<Not yet implemented.\>\""}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.913405414730081*^9, 3.913405429101414*^9}, {
  3.913412242374647*^9, 3.913412250347446*^9}, {3.9134536094319143`*^9, 
  3.913453649122951*^9}, {3.913453684983429*^9, 3.913453689617097*^9}, {
  3.913643122091002*^9, 3.913643132675167*^9}, {3.9136433867483797`*^9, 
  3.913643388673891*^9}},
 CellLabel->
  "In[423]:=",ExpressionUUID->"3e6d4f79-d9e6-43d1-914b-406a163edca0"]
}, Closed]],

Cell[CellGroupData[{

Cell["Global Parameters", "Section",
 CellChangeTimes->{{3.913406635656062*^9, 3.9134066377840137`*^9}, {
  3.91374197114415*^9, 3.913741974916288*^9}},
 FontWeight->"Bold",ExpressionUUID->"38ce5bba-abeb-447f-9921-e0711f467ee7"],

Cell[CellGroupData[{

Cell["Global Modes", "Subsection",
 CellChangeTimes->{{3.913741962855627*^9, 3.913741967230596*^9}},
 FontWeight->"Bold",ExpressionUUID->"8c1da47a-ee85-47d6-b344-990faf75b1d8"],

Cell["In GVML, more registers are reserved (open question).", "Text",
 CellChangeTimes->{{3.913406643675159*^9, 3.9134066591291027`*^9}, {
  3.913409812657983*^9, 
  3.913409816041049*^9}},ExpressionUUID->"7e7e40bb-bcef-4e48-bce9-\
66818b27ea34"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "GVMLmode", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GVMLmode", "=", "True"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9134098222763443`*^9, 3.913409845578425*^9}, {
  3.913411354759479*^9, 3.913411356066916*^9}},
 CellLabel->
  "In[428]:=",ExpressionUUID->"c7117b70-b1f2-4725-9f43-a71f3384694d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["APU Parameters", "Subsection",
 CellChangeTimes->{{3.913741838742887*^9, 3.913741845331361*^9}, {
  3.9137419798004837`*^9, 3.913741981134694*^9}, {3.914856068015894*^9, 
  3.914856073024287*^9}},
 FontWeight->"Bold",ExpressionUUID->"96445b4c-0980-4255-8806-435dec960025"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "sectionsPerBank", ",", "groupsPerBank", ",", "banksPerCore", ",", 
    "coresPerChip", ",", "bitLinesPerWordLine"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sectionsPerBank", "=", "8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"groupsPerBank", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"banksPerCore", "=", "8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coresPerChip", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitLinesPerWordLine", "=", "4096"}], ";"}]}], "Input",
 CellChangeTimes->{{3.913741864072224*^9, 3.913741896808861*^9}, {
   3.913746254097533*^9, 3.913746298878591*^9}, {3.913746383448924*^9, 
   3.913746385014186*^9}, {3.9137465365332937`*^9, 3.913746548978928*^9}, {
   3.913746746452059*^9, 3.913746783816826*^9}, 3.913747519654841*^9, {
   3.913749783306571*^9, 3.91374979551821*^9}},
 CellLabel->
  "In[430]:=",ExpressionUUID->"22b6a661-0d5c-4c50-a94a-02a97e53d2dc"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["SEU Registers", "Section"]], "Section",
 CellChangeTimes->{{3.913369030747135*^9, 3.913369036648312*^9}},
 FontWeight->"Bold",ExpressionUUID->"3ec8a088-47c6-4c17-b678-206d76763c30"],

Cell["Per core.", "Text",
 CellChangeTimes->{{3.9137476794854918`*^9, 
  3.913747684429793*^9}},ExpressionUUID->"7dadefef-3bd5-4c1f-b282-\
704280f69acd"],

Cell[CellGroupData[{

Cell["How Many?", "Subsection",
 CellChangeTimes->{{3.913465765261924*^9, 3.913465768550272*^9}},
 FontWeight->"Bold",ExpressionUUID->"bc2dd19b-04b3-425d-92f9-c53535d39ae8"],

Cell["\<\
What are the $ registers? Small caches! $ is a mnemonic \
\[OpenCurlyDoubleQuote]cash\[CloseCurlyDoubleQuote] for \
\[OpenCurlyDoubleQuote]cache\[CloseCurlyDoubleQuote].\
\>", "Text",
 CellChangeTimes->{{3.9148561438307037`*^9, 3.914856148586109*^9}, {
  3.914856890132366*^9, 
  3.914856922166379*^9}},ExpressionUUID->"104531b8-6de6-4478-8eed-\
453b1b0b2865"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "nRN", ",", "nRN$", ",", "nSM", ",", "nL1R", ",", "nL1R$", ",", "nL2R$", 
    ",", "nL2R", ",", "nGP", ",", "nLP"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nRN", "=", "32"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nRN$", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nSM", "=", "16"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nL1R", "=", "8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nL1R$", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nL2R", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nL2R$", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nGP", "=", "16"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nLP", "=", "4"}], ";"}]}], "Input",
 CellChangeTimes->{{3.91336904165549*^9, 3.9133692914474792`*^9}, {
   3.9133693267640753`*^9, 3.91336942110597*^9}, {3.9133777507671766`*^9, 
   3.913377808031684*^9}, 3.913379415050074*^9, {3.913405036781934*^9, 
   3.913405038479692*^9}, {3.913641015208369*^9, 3.913641063653507*^9}},
 CellLabel->
  "In[436]:=",ExpressionUUID->"4c0ea9c0-ecc4-4b18-a07d-b1ef34f2fbbe"]
}, Open  ]],

Cell[CellGroupData[{

Cell["How Wide?", "Subsection",
 CellChangeTimes->{{3.913465776423272*^9, 3.913465781944626*^9}},
 FontWeight->"Bold",ExpressionUUID->"8d8f8580-e90f-4ce0-bc97-d19fbbf94478"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "wRN", ",", "wSM", ",", "wL1R", ",", "wL2R", ",", "wGP", ",", "wLP"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wRN", "=", "18"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wSM", "=", "8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wL1R", "=", "16"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wL2R", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wGP", "=", "16"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wLP", "=", "12"}], ";"}]}], "Input",
 CellChangeTimes->{{3.91336904165549*^9, 3.9133692914474792`*^9}, {
   3.9133693267640753`*^9, 3.91336942110597*^9}, {3.9133777507671766`*^9, 
   3.913377808031684*^9}, 3.913379415050074*^9, {3.913405036781934*^9, 
   3.9134050421572657`*^9}},
 CellLabel->
  "In[446]:=",ExpressionUUID->"91770af6-dff2-4383-b864-2686e1fb23ba"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Storage", "Subsection",
 CellChangeTimes->{{3.913465790293207*^9, 3.913465791449828*^9}},
 FontWeight->"Bold",ExpressionUUID->"7b56d7ce-4dff-4046-b6eb-083a6088eee2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "RNstore", ",", "RN$store", ",", "SMstore", ",", "L1Rstore", ",", 
    "L1R$store", ",", "L2Rstore", ",", "L2R$store", ",", "GPstore", ",", 
    "LPstore"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RNstore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"nRN", ",", "wRN"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"576", 
   TemplateBox[{
     InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
    "Quantity"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RN$store", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"nRN$", ",", "wRN"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"36", 
   InterpretationBox["\[InvisibleSpace]",
    1], 
   InterpretationBox["\[InvisibleSpace]",
    1], 
   TemplateBox[{
     InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
    "Quantity"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMstore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"nSM", ",", "wSM"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"128", 
   TemplateBox[{
     InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
    "Quantity"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L1Rstore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"nL1R", ",", "wL1R"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"128", 
   TemplateBox[{
     InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
    "Quantity"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L1R$store", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"nL1R$", ",", "wL1R"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"16", 
   TemplateBox[{
     InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
    "Quantity"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L2Rstore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"nL2R", ",", "wL2R"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"16", 
   TemplateBox[{
     InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
    "Quantity"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L2R$store", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"nL2R$", ",", "wL2R"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"4", " ", 
   TemplateBox[{
     InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
    "Quantity"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GPstore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"nGP", ",", "wGP"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"256", 
   TemplateBox[{
     InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
    "Quantity"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LPstore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"nLP", ",", "wLP"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"48", 
   TemplateBox[{
     InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
    "Quantity"]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.91336904165549*^9, 3.9133692914474792`*^9}, {
   3.9133693267640753`*^9, 3.91336942110597*^9}, {3.9133777507671766`*^9, 
   3.913377808031684*^9}, 3.913379415050074*^9, {3.913405036781934*^9, 
   3.9134050421572657`*^9}, {3.91345928184797*^9, 3.913459436350434*^9}, {
   3.9134656983854837`*^9, 3.913465719288731*^9}, {3.913641093725071*^9, 
   3.9136411342783413`*^9}, {3.913641199407439*^9, 3.913641325726514*^9}, {
   3.9136413600883613`*^9, 3.91364151539191*^9}, {3.914856184830233*^9, 
   3.914856204557637*^9}},
 CellLabel->
  "In[453]:=",ExpressionUUID->"fe7e4204-5253-4934-a536-1d3342189b04"]
}, Open  ]],

Cell[CellGroupData[{

Cell["RN", "Subsection",
 CellChangeTimes->{{3.913405383684835*^9, 3.913405383824853*^9}},
 FontWeight->"Bold",ExpressionUUID->"ade8c261-1c6d-46e1-a4d4-06924d60adca"],

Cell[TextData[{
 StyleBox["RNZero", "Input"],
 " is special (see Bob\[CloseCurlyQuote]s email below)"
}], "Text",
 CellChangeTimes->{{3.913405549729392*^9, 3.913405562546917*^9}, {
  3.914856214694497*^9, 
  3.914856223074128*^9}},ExpressionUUID->"e8d6f8ec-650e-4d54-82a2-\
b2690f1154d8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClearAll", "[", "RNZero", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.91340556741885*^9, 3.913405575070277*^9}},
 CellLabel->
  "In[463]:=",ExpressionUUID->"8243b4e2-fe10-4523-a764-c1d30833c2f1"],

Cell[TextData[{
 "Can\[CloseCurlyQuote]t use ",
 StyleBox["RN[[31+1]]", "Input"],
 ". Values in this document are stored as integers and retrieved as \
bit-vectors. Getter is ",
 StyleBox["RN[n]", "Input"],
 " or ",
 StyleBox["RN[[n+1]]", "Input"],
 " (avoid the double-bracket form, except in implementation of function \
forms, i.e., forms with single square brackets), where ",
 StyleBox["n", "Input"],
 " is a 0-based index, returning a cross-section (columnar) value of ",
 StyleBox["wRN", "Input"],
 " bits. Setter is ",
 StyleBox["RN[n,newVal]", "Input"],
 " returning ",
 StyleBox["newVal", "Input"],
 ", which is an integer between 0 (inclusive) and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", "wRN"], TraditionalForm]],ExpressionUUID->
  "b139ef3e-4472-4949-80c5-90a65070619f"],
 " (exclusive)."
}], "Text",
 CellChangeTimes->{{3.913405099960508*^9, 3.9134051091414948`*^9}, {
  3.913405270429778*^9, 3.913405295916654*^9}, {3.913405444011445*^9, 
  3.9134054675750647`*^9}, {3.913642913175972*^9, 3.913642991476124*^9}, {
  3.913643025528248*^9, 3.913643051442593*^9}, {3.913750148073802*^9, 
  3.913750189093378*^9}, {3.913750223694858*^9, 3.9137502243297567`*^9}, {
  3.913750420806567*^9, 3.913750425501153*^9}, {3.9137504645083027`*^9, 
  3.913750544632862*^9}, {3.913750713677096*^9, 3.913750730447854*^9}, {
  3.91485642621448*^9, 
  3.9148564657505817`*^9}},ExpressionUUID->"ac85bdb0-5022-4d3f-add7-\
f64a8b47ea7b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"RN", ",", "RNillegal"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RN", "[", 
    RowBox[{"rn_Integer", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"#", "<", "nRN"}], ")"}], "&"}], ")"}]}], "]"}], ":=", 
   RowBox[{"RNstore", "[", 
    RowBox[{"[", 
     RowBox[{"rn", "+", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RN", "[", 
    RowBox[{
     RowBox[{"rn_Integer", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"#", "<", "nRN"}], ")"}], "&"}], ")"}]}], ",", 
     RowBox[{"newVal_Integer", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0", "<=", "#", "<", 
          SuperscriptBox["2", "wRN"]}], ")"}], "&"}], ")"}]}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RNstore", "[", 
     RowBox[{"[", 
      RowBox[{"rn", "+", "1"}], "]"}], "]"}], "=", 
    RowBox[{"IntegerDigits", "[", 
     RowBox[{"newVal", ",", "2"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RNillegal", "=", "31"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RN", "[", "RNillegal", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"illegal", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RN", "[", "___", "]"}], ":=", " ", 
   RowBox[{"Throw", "[", 
    RowBox[{"argMsg", "[", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.913377235792734*^9, 3.913377384653007*^9}, {
   3.913377467703455*^9, 3.913377561825926*^9}, {3.9133775921165676`*^9, 
   3.91337767544387*^9}, 3.913377757844816*^9, {3.913377812309288*^9, 
   3.913377848064885*^9}, {3.913379437949976*^9, 3.913379498164866*^9}, {
   3.913379643689788*^9, 3.913379718519044*^9}, {3.91337996087108*^9, 
   3.913380015766099*^9}, {3.913380072383652*^9, 3.9133801243124847`*^9}, {
   3.913380381783443*^9, 3.913380432078824*^9}, {3.913380488707341*^9, 
   3.913380552671476*^9}, {3.91338061490949*^9, 3.913380651174829*^9}, {
   3.913383486065533*^9, 3.913383641421735*^9}, {3.9133836858283*^9, 
   3.913383801846324*^9}, {3.913383847987875*^9, 3.913383973794216*^9}, {
   3.9134047160497847`*^9, 3.913404754190367*^9}, {3.913404805032063*^9, 
   3.913404966181066*^9}, {3.913405024233035*^9, 3.913405027909916*^9}, 
   3.913405410390194*^9, {3.913405996314307*^9, 3.9134059987143173`*^9}, {
   3.913453680457136*^9, 3.913453681067068*^9}, {3.913453732475659*^9, 
   3.913453768282888*^9}, {3.913454583123309*^9, 3.913454603371889*^9}, {
   3.913454699999263*^9, 3.913454708386525*^9}, {3.91345474555648*^9, 
   3.913454747162093*^9}, {3.913454779877508*^9, 3.9134547812892237`*^9}, {
   3.913641626055239*^9, 3.913641663181611*^9}, {3.9136417748295383`*^9, 
   3.9136417951987143`*^9}, {3.913642057180911*^9, 3.913642057481846*^9}, {
   3.913643061410719*^9, 3.9136430681620417`*^9}, {3.913750448673834*^9, 
   3.913750454838819*^9}},
 CellLabel->
  "In[464]:=",ExpressionUUID->"08862b2e-bd29-469b-85c3-ebf3a7762621"],

Cell[CellGroupData[{

Cell["Unit Tests", "Subsubsection",
 CellChangeTimes->{{3.913405318233304*^9, 3.913405324962141*^9}, {
  3.913405524325865*^9, 3.913405526693739*^9}},
 FontWeight->"Bold",ExpressionUUID->"f6e1b9a9-e80a-4942-b37a-14d5b683dbe5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"On", "[", "Assert", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.913377235792734*^9, 3.913377384653007*^9}, {
   3.913377467703455*^9, 3.913377561825926*^9}, {3.9133775921165676`*^9, 
   3.91337767544387*^9}, 3.913377757844816*^9, {3.913377812309288*^9, 
   3.913377848064885*^9}, {3.913379437949976*^9, 3.913379498164866*^9}, {
   3.913379643689788*^9, 3.913379718519044*^9}, {3.91337996087108*^9, 
   3.913380015766099*^9}, {3.913380072383652*^9, 3.9133801243124847`*^9}, {
   3.913380381783443*^9, 3.913380432078824*^9}, {3.913380488707341*^9, 
   3.913380552671476*^9}, {3.91338061490949*^9, 3.913380651174829*^9}, {
   3.913383486065533*^9, 3.913383641421735*^9}, {3.9133836858283*^9, 
   3.913383801846324*^9}, {3.913383847987875*^9, 3.913383973794216*^9}, {
   3.9134047160497847`*^9, 3.913404754190367*^9}, {3.913404805032063*^9, 
   3.913404966181066*^9}, 3.913405024233035*^9},
 CellLabel->
  "In[470]:=",ExpressionUUID->"f708d845-acfd-4ed1-9a4a-3f6a216f4263"],

Cell[TextData[{
 "Values are stored as integers and retrieved as bit-vectors. Convert the \
integer value ",
 StyleBox["42", "Input"],
 " to a bit-vector via ",
 StyleBox["IntegerDigits[42,2(*base*)]", "Input"],
 ". Convert the bit-vector back to an integer via ",
 StyleBox["FromDigit[\[Square],2(*base*)]", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.914856756202176*^9, 
  3.9148568717554693`*^9}},ExpressionUUID->"df4b6dbf-e1ee-4281-89d0-\
c68cae2a37a1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"IntegerDigits", "[", 
     RowBox[{"42", ",", "2"}], "]"}], "==", 
    RowBox[{"RN", "[", 
     RowBox[{"17", ",", "42"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"42", "==", 
    RowBox[{"FromDigits", "[", 
     RowBox[{
      RowBox[{"RN", "[", "17", "]"}], ",", "2"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"illegal", "[", "]"}], "==", 
    RowBox[{"Catch", "[", 
     RowBox[{"FromDigits", "[", 
      RowBox[{"RN", "[", "31", "]"}], "]"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Assert", "[", 
  RowBox[{
   RowBox[{"argMsg", "[", "]"}], "==", 
   RowBox[{"Catch", "[", 
    RowBox[{"FromDigits", "[", 
     RowBox[{"RN", "[", 
      RowBox[{"17", ",", "300000"}], "]"}], "]"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Assert", "[", 
  RowBox[{
   RowBox[{"argMsg", "[", "]"}], "==", 
   RowBox[{"Catch", "[", 
    RowBox[{"FromDigits", "[", 
     RowBox[{"RN", "[", 
      RowBox[{"300", ",", "42"}], "]"}], "]"}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.913377235792734*^9, 3.913377384653007*^9}, {
   3.913377467703455*^9, 3.913377561825926*^9}, {3.9133775921165676`*^9, 
   3.91337767544387*^9}, 3.913377757844816*^9, {3.913377812309288*^9, 
   3.913377848064885*^9}, {3.913379437949976*^9, 3.913379498164866*^9}, {
   3.913379643689788*^9, 3.913379718519044*^9}, {3.91337996087108*^9, 
   3.913380015766099*^9}, {3.913380072383652*^9, 3.9133801243124847`*^9}, {
   3.913380381783443*^9, 3.913380432078824*^9}, {3.913380488707341*^9, 
   3.913380552671476*^9}, {3.91338061490949*^9, 3.913380651174829*^9}, {
   3.913383486065533*^9, 3.913383641421735*^9}, {3.9133836858283*^9, 
   3.913383801846324*^9}, {3.913383847987875*^9, 3.913383973794216*^9}, {
   3.9134047160497847`*^9, 3.913404754190367*^9}, {3.913404805032063*^9, 
   3.913404966181066*^9}, {3.913405310598888*^9, 3.913405312618538*^9}, {
   3.913453669565752*^9, 3.913453721673718*^9}, {3.913453759327818*^9, 
   3.913453784347862*^9}, {3.913454632057108*^9, 3.913454678902617*^9}, {
   3.91345472558751*^9, 3.91345475782391*^9}, {3.913454790194524*^9, 
   3.913454792281712*^9}},
 CellLabel->
  "In[471]:=",ExpressionUUID->"d34adc51-70d9-4d60-b3fa-863dbdde39df"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["RN$", "Subsection",
 CellChangeTimes->{{3.913640970146043*^9, 3.913640977609565*^9}},
 FontWeight->"Bold",ExpressionUUID->"c0f8f4bb-78e7-4e33-91d1-6d761efb8cf2"],

Cell["A 2-level cache for RN.", "Text",
 CellChangeTimes->{{3.913640981097344*^9, 3.913640984326784*^9}, {
  3.913643097703992*^9, 
  3.913643103534374*^9}},ExpressionUUID->"7ce5f8b1-9b31-4760-9852-\
e272e96ea97b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "RN$", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RN$", "[", 
    RowBox[{"rn_Integer", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"#", "<", "nRN$"}], ")"}], "&"}], ")"}]}], "]"}], ":=", 
   RowBox[{"RN$store", "[", 
    RowBox[{"[", 
     RowBox[{"rn", "+", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RN$", "[", 
    RowBox[{
     RowBox[{"rn_Integer", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"#", "<", "nRN$"}], ")"}], "&"}], ")"}]}], ",", 
     RowBox[{"newVal_Integer", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0", "<=", "#", "<", 
          SuperscriptBox["2", "wRN"]}], ")"}], "&"}], ")"}]}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RN$store", "[", 
     RowBox[{"[", 
      RowBox[{"rn", "+", "1"}], "]"}], "]"}], "=", 
    RowBox[{"IntegerDigits", "[", 
     RowBox[{"newVal", ",", "2"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RN$", "[", "___", "]"}], ":=", " ", 
   RowBox[{"Throw", "[", 
    RowBox[{"argMsg", "[", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.913377235792734*^9, 3.913377384653007*^9}, {
   3.913377467703455*^9, 3.913377561825926*^9}, {3.9133775921165676`*^9, 
   3.91337767544387*^9}, 3.913377757844816*^9, {3.913377812309288*^9, 
   3.913377848064885*^9}, {3.913379437949976*^9, 3.913379498164866*^9}, {
   3.913379643689788*^9, 3.913379718519044*^9}, {3.91337996087108*^9, 
   3.913380015766099*^9}, {3.913380072383652*^9, 3.9133801243124847`*^9}, {
   3.913380381783443*^9, 3.913380432078824*^9}, {3.913380488707341*^9, 
   3.913380552671476*^9}, {3.91338061490949*^9, 3.913380651174829*^9}, {
   3.913383486065533*^9, 3.913383641421735*^9}, {3.9133836858283*^9, 
   3.913383801846324*^9}, {3.913383847987875*^9, 3.913383973794216*^9}, {
   3.9134047160497847`*^9, 3.913404754190367*^9}, {3.913404805032063*^9, 
   3.913404966181066*^9}, {3.913405024233035*^9, 3.913405027909916*^9}, 
   3.913405410390194*^9, {3.913405996314307*^9, 3.9134059987143173`*^9}, {
   3.913453680457136*^9, 3.913453681067068*^9}, {3.913453732475659*^9, 
   3.913453768282888*^9}, {3.913454583123309*^9, 3.913454603371889*^9}, {
   3.913454699999263*^9, 3.913454708386525*^9}, {3.91345474555648*^9, 
   3.913454747162093*^9}, {3.913454779877508*^9, 3.9134547812892237`*^9}, {
   3.913641079502533*^9, 3.913641082862482*^9}, {3.913641690299734*^9, 
   3.91364175220287*^9}, {3.913641817687901*^9, 3.913641820142301*^9}, {
   3.913643081548212*^9, 3.913643087279584*^9}, {3.913750585329795*^9, 
   3.913750594837448*^9}},
 CellLabel->
  "In[476]:=",ExpressionUUID->"45e94f2b-d6c0-44cf-bb6f-debad13aa471"]
}, Open  ]],

Cell[CellGroupData[{

Cell["SM", "Subsection",
 CellChangeTimes->{{3.913405628032413*^9, 3.913405628185795*^9}},
 FontWeight->"Bold",ExpressionUUID->"5af2f7c2-b1e2-4159-b039-c6e09045abde"],

Cell[TextData[{
 "SM registers are complicated by the fact that the software reserves several \
of them, namely 0 through 3, plus 4 and 5 if GVML mode is ",
 StyleBox["True", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.91485694461201*^9, 
  3.914857028183572*^9}},ExpressionUUID->"05f3d6ed-a5bc-4a47-b7bb-\
fb58e0587a0c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "SM", ",", "SM0XFF", ",", "SM0X01", ",", "SM0X03", ",", "SM0X11", ",", 
    "SM0X55", ",", "SM0XAA"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SMstore", "[", 
    RowBox[{"[", 
     RowBox[{"0", "+", "1"}], "]"}], "]"}], "=", 
   RowBox[{"IntegerDigits", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Interpreter", "[", "\"\<HexInteger\>\"", "]"}], "[", 
      "\"\<0xFF\>\"", "]"}], ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SMstore", "[", 
    RowBox[{"[", 
     RowBox[{"1", "+", "1"}], "]"}], "]"}], "=", 
   RowBox[{"IntegerDigits", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Interpreter", "[", "\"\<HexInteger\>\"", "]"}], "[", 
      "\"\<0x01\>\"", "]"}], ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SMstore", "[", 
    RowBox[{"[", 
     RowBox[{"2", "+", "1"}], "]"}], "]"}], "=", 
   RowBox[{"IntegerDigits", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Interpreter", "[", "\"\<HexInteger\>\"", "]"}], "[", 
      "\"\<0x03\>\"", "]"}], ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SMstore", "[", 
    RowBox[{"[", 
     RowBox[{"3", "+", "1"}], "]"}], "]"}], "=", 
   RowBox[{"IntegerDigits", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Interpreter", "[", "\"\<HexInteger\>\"", "]"}], "[", 
      "\"\<0x11\>\"", "]"}], ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SM0XFF", ":=", 
    RowBox[{"SMstore", "[", 
     RowBox[{"[", 
      RowBox[{"0", "+", "1"}], "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"read", "-", 
    RowBox[{"only", " ", "access"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SM0X01", ":=", 
   RowBox[{"SMstore", "[", 
    RowBox[{"[", 
     RowBox[{"1", "+", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SM0X03", ":=", 
   RowBox[{"SMstore", "[", 
    RowBox[{"[", 
     RowBox[{"2", "+", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SM0X11", ":=", 
   RowBox[{"SMstore", "[", 
    RowBox[{"[", 
     RowBox[{"3", "+", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SM0X55", ":=", 
    RowBox[{"If", "[", 
     RowBox[{"GVMLmode", ",", 
      RowBox[{"SM", "[", "4", "]"}], ",", 
      RowBox[{"Throw", "[", 
       RowBox[{"undefined", "[", "]"}], "]"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"alias", " ", "for", " ", 
    RowBox[{"SM", "[", "4", "]"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SM0XAA", ":=", 
    RowBox[{"If", "[", 
     RowBox[{"GVMLmode", ",", 
      RowBox[{"SM", "[", "5", "]"}], ",", 
      RowBox[{"Throw", "[", 
       RowBox[{"undefined", "[", "]"}], "]"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"alias", " ", "for", " ", 
    RowBox[{"SM", "[", "5", "]"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SM", "[", 
    RowBox[{"sm_Integer", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0", "<=", "#", "<", "4"}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{"6", "<=", "#", "<", "8"}], ")"}]}], ")"}], "&"}], ")"}]}], 
    "]"}], ":=", 
   RowBox[{"SMstore", "[", 
    RowBox[{"[", 
     RowBox[{"sm", "+", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SM", "[", "4", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{"GVMLmode", ",", 
     RowBox[{"IntegerDigits", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Interpreter", "[", "\"\<HexInteger\>\"", "]"}], "[", 
        "\"\<0x55\>\"", "]"}], ",", "2"}], "]"}], ",", 
     RowBox[{"SMstore", "[", 
      RowBox[{"[", 
       RowBox[{"4", "+", "1"}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SM", "[", "5", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{"GVMLmode", ",", 
     RowBox[{"IntegerDigits", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Interpreter", "[", "\"\<HexInteger\>\"", "]"}], "[", 
        "\"\<0xAA\>\"", "]"}], ",", "2"}], "]"}], ",", 
     RowBox[{"SMstore", "[", 
      RowBox[{"[", 
       RowBox[{"5", "+", "1"}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SM", "[", 
    RowBox[{
     RowBox[{"sm_Integer", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"6", "<=", "#", "<", "8"}], ")"}], "&"}], ")"}]}], ",", 
     RowBox[{"newVal_Integer", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0", "<=", "#", "<", 
          SuperscriptBox["2", "wSM"]}], ")"}], "&"}], ")"}]}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SMstore", "[", 
     RowBox[{"[", 
      RowBox[{"sm", "+", "1"}], "]"}], "]"}], "=", 
    RowBox[{"IntegerDigits", "[", 
     RowBox[{"newVal", ",", "2"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SM", "[", 
    RowBox[{
     RowBox[{"sm", ":", 
      RowBox[{"(", 
       RowBox[{"4", "|", "5"}], ")"}]}], ",", 
     RowBox[{"newVal_Integer", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0", "<=", "#", "<", 
          SuperscriptBox["2", "wSM"]}], ")"}], "&"}], ")"}]}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{"GVMLmode", ",", 
     RowBox[{"Throw", "[", 
      RowBox[{"illegal", "[", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"SMstore", "[", 
       RowBox[{"[", 
        RowBox[{"sm", "+", "1"}], "]"}], "]"}], "=", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"newVal", ",", "2"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SM", "[", "___", "]"}], ":=", 
    RowBox[{"Throw", "[", 
     RowBox[{"argMsg", "[", "]"}], "]"}]}], ";"}], " "}]}], "Input",
 CellChangeTimes->{{3.913377235792734*^9, 3.913377384653007*^9}, {
   3.913377467703455*^9, 3.913377561825926*^9}, {3.9133775921165676`*^9, 
   3.91337767544387*^9}, 3.913377757844816*^9, {3.913377812309288*^9, 
   3.913377848064885*^9}, {3.913379437949976*^9, 3.913379498164866*^9}, {
   3.913379643689788*^9, 3.913379718519044*^9}, {3.91337996087108*^9, 
   3.913380015766099*^9}, {3.913380072383652*^9, 3.9133801243124847`*^9}, {
   3.913380381783443*^9, 3.913380432078824*^9}, {3.913380488707341*^9, 
   3.913380552671476*^9}, {3.91338061490949*^9, 3.913380651174829*^9}, {
   3.913383486065533*^9, 3.913383641421735*^9}, {3.9133836858283*^9, 
   3.913383801846324*^9}, {3.913383847987875*^9, 3.913383973794216*^9}, {
   3.9134047160497847`*^9, 3.913404754190367*^9}, {3.913404805032063*^9, 
   3.913404966181066*^9}, 3.913405310598888*^9, 3.9134055406750793`*^9, {
   3.913405605923749*^9, 3.9134057788277884`*^9}, 3.9134058258654947`*^9, {
   3.913410573308664*^9, 3.913410798813284*^9}, {3.913411064899219*^9, 
   3.913411274190911*^9}, {3.913411329234653*^9, 3.913411365095737*^9}, {
   3.913411654758087*^9, 3.913411680192525*^9}, {3.913411723274469*^9, 
   3.9134118371809196`*^9}, {3.913411927341474*^9, 3.9134121387500153`*^9}, {
   3.9134121792523108`*^9, 3.9134122077941837`*^9}, {3.91345380333709*^9, 
   3.913453808930229*^9}, {3.913453840241802*^9, 3.9134540274431267`*^9}, {
   3.913454057863386*^9, 3.913454106641694*^9}, {3.913454153353602*^9, 
   3.913454211823806*^9}, {3.913454249085059*^9, 3.9134542858968277`*^9}, {
   3.913454366435285*^9, 3.913454406486171*^9}, {3.913454842940522*^9, 
   3.913454843009272*^9}, {3.913454957025388*^9, 3.913454986574548*^9}, 
   3.913455142336795*^9, {3.913741662862386*^9, 3.9137416818490753`*^9}, {
   3.913750605632085*^9, 3.91375066663482*^9}, {3.9148571815701027`*^9, 
   3.914857213226016*^9}},
 CellLabel->
  "In[480]:=",ExpressionUUID->"263feafb-68c8-4fdb-8f8c-d01a00ac2591"],

Cell[CellGroupData[{

Cell["Unit Tests", "Subsubsection",
 CellChangeTimes->{{3.91340583320234*^9, 3.913405836221067*^9}},
 FontWeight->"Bold",ExpressionUUID->"04a1224b-8f60-41af-9bea-44422f50bd4e"],

Cell[TextData[{
 "Results for ",
 StyleBox["SM[4]", "Input"],
 " and ",
 StyleBox["SM[5]", "Input"],
 " are different in GVML mode than not."
}], "Text",
 CellChangeTimes->{{3.914857063408423*^9, 
  3.914857096752184*^9}},ExpressionUUID->"740ccb36-9fd5-4c0c-8146-\
ca76a70931e9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"GVMLmode", "=", "True"}], "}"}], ",", 
    RowBox[{"Assert", "[", "GVMLmode", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"GVMLmode", "=", "False"}], "}"}], ",", 
    RowBox[{"Assert", "[", 
     RowBox[{"Not", "[", "GVMLmode", "]"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"GVMLmode", "=", "True"}], "}"}], ",", 
    RowBox[{"Assert", "[", 
     RowBox[{"85", "==", 
      RowBox[{"FromDigits", "[", 
       RowBox[{
        RowBox[{"SM", "[", "4", "]"}], ",", "2"}], "]"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"GVMLmode", "=", "False"}], "}"}], ",", 
    RowBox[{"Assert", "[", 
     RowBox[{"0", "==", 
      RowBox[{"FromDigits", "[", 
       RowBox[{
        RowBox[{"SM", "[", "4", "]"}], ",", "2"}], "]"}]}], "]"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.913411410617795*^9, 3.91341158313978*^9}, {
   3.913454306001057*^9, 3.913454353717781*^9}, 3.913454458046311*^9},
 CellLabel->
  "In[497]:=",ExpressionUUID->"581c24b1-b797-4e02-95f5-f2b18414d69b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"argMsg", "[", "]"}], "==", 
    RowBox[{"Catch", "[", 
     RowBox[{"SM", "[", 
      RowBox[{"0", ",", "42"}], "]"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"255", "==", 
    RowBox[{"FromDigits", "[", 
     RowBox[{
      RowBox[{"SM", "[", "0", "]"}], ",", "2"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"255", "==", 
    RowBox[{"FromDigits", "[", 
     RowBox[{"SM0XFF", ",", "2"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"GVMLmode", "=", "True"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Assert", "[", 
     RowBox[{"85", "==", 
      RowBox[{"FromDigits", "[", 
       RowBox[{"SM0X55", ",", "2"}], "]"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"GVMLmode", "=", "False"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Assert", "[", 
     RowBox[{
      RowBox[{"undefined", "[", "]"}], "==", 
      RowBox[{"Catch", "@", 
       RowBox[{"FromDigits", "[", 
        RowBox[{
         RowBox[{"Echo", "@", "SM0X55"}], ",", "2"}], "]"}]}]}], "]"}]}], 
   "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.913377235792734*^9, 3.913377384653007*^9}, {
   3.913377467703455*^9, 3.913377561825926*^9}, {3.9133775921165676`*^9, 
   3.91337767544387*^9}, 3.913377757844816*^9, {3.913377812309288*^9, 
   3.913377848064885*^9}, {3.913379437949976*^9, 3.913379498164866*^9}, {
   3.913379643689788*^9, 3.913379718519044*^9}, {3.91337996087108*^9, 
   3.913380015766099*^9}, {3.913380072383652*^9, 3.9133801243124847`*^9}, {
   3.913380381783443*^9, 3.913380432078824*^9}, {3.913380488707341*^9, 
   3.913380552671476*^9}, {3.91338061490949*^9, 3.913380651174829*^9}, {
   3.913383486065533*^9, 3.913383641421735*^9}, {3.9133836858283*^9, 
   3.913383801846324*^9}, {3.913383847987875*^9, 3.913383973794216*^9}, {
   3.9134047160497847`*^9, 3.913404754190367*^9}, {3.913404805032063*^9, 
   3.913404961744899*^9}, {3.9134058679306593`*^9, 3.913405889107308*^9}, {
   3.913410767669981*^9, 3.913410781232125*^9}, {3.913410814323598*^9, 
   3.91341102465407*^9}, {3.913454889867787*^9, 3.9134549442250137`*^9}, {
   3.913455020472911*^9, 3.913455027656764*^9}, {3.9134550734362082`*^9, 
   3.913455202625085*^9}},
 CellLabel->
  "In[501]:=",ExpressionUUID->"287af2d0-eebf-4a38-8ba6-b7b846b3f68c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Shadowing \[LongDash] Shadow Mask Enable", "Subsection",
 CellChangeTimes->{{3.913459176593682*^9, 3.91345919781993*^9}},
 FontWeight->"Bold",ExpressionUUID->"e92ea7ab-ebd2-4521-bd7c-54294000e3ac"],

Cell["\<\
Shadowing has no power ramifications. Power consumption is the same whether \
shadowing is enabled or not.\
\>", "Text",
 CellChangeTimes->{{3.913748030708215*^9, 
  3.913748067474972*^9}},ExpressionUUID->"83dd286a-fd1d-4c9a-a02b-\
e299417ea21a"],

Cell["TODO", "Text",
 CellChangeTimes->{{3.913465179190652*^9, 
  3.913465180078872*^9}},ExpressionUUID->"dfcfb9a6-3aac-490b-93cb-\
b4f9b2089047"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Memory Model", "Section",
 CellChangeTimes->{{3.913459219665821*^9, 3.913459222273942*^9}},
 FontWeight->"Bold",ExpressionUUID->"310498a4-5a0f-45d0-bb5c-d2ce528a4060"],

Cell[CellGroupData[{

Cell["Per Core", "Subsection",
 CellChangeTimes->{{3.913465417000654*^9, 3.913465418355474*^9}},
 FontWeight->"Bold",ExpressionUUID->"47d11e8c-b442-41de-aa25-7d42972cf853"],

Cell[CellGroupData[{

Cell["L2", "Subsubsection",
 CellChangeTimes->{{3.9134663120680103`*^9, 3.91346631234371*^9}},
 FontWeight->"Bold",ExpressionUUID->"f7712b0e-7194-4b45-baf4-f2c10a643945"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQeYVVWCru2df577TPdcnzvdz+3r/ed6Jzg99vx0jzNt3za0jalRRERB
RBFBEAQFEQqQKDlJFAQkSJIgIEmSBMkioiAYSEqWpIIoIkgwrL++dWpt9t4n
1KlTmzp1qt736bc55+y09j5V1trfXuGfG7a8v8lfXXbZZW3+Jv//7n+s/W2t
Wz/Wsebf5b+p1aJN0ydaNH68SotnGj/RuPUNDf+f/A9/lf9/X/31ZZfl/+8y
AwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEVi7ty5ZsyYMeabb77JdlEK5eDBg2bk
yJFmzZo12S4KAAAAAAAAAADAJWPnzp3msssus65fvz7bxSmUOnXq2LJWrlw5
20W5JJw/f94sXLjQLFq0yHz//ffZLg4AAAAAAAAAAGSJLl262Bzs8ssvNxcu
XMh2cVLy9ddfexmj2tyVRbZu3eqd4549e7JdHAAAAAAAAACAMs+WLVvMTTfd
ZNuJnTt3rsjbr1u3zjz99NPmmmuusRmbrFSpkmnXrp05fPhwRmX64YcfzBVX
XGEzIu3HT6tWrcwNN9xgpk6dmtG+HT/99JOZNGmSue6666yHDh3KeF/jx4/3
Mq3jx497n3/11VemUaNGpmbNmgFr1aplGjRoYLPJJUuW2LKUdvy53e7du7Nd
nDjUPlPfp34+KlasaMt55ZVX2mvdp08f21ZQbQbBmDNnztjfV12jCRMmZLs4
AAAAAAAAAJCEBQsWeHnMyZMn095u//795tZbb/W2TaQyvOnTpxe5TCtXrvT2
8cEHHwSWubyhffv2Rd6vQ7mTskV/WT/88MOM96fcU/uoUaNG4HNlRamuj1Pb
F+f4JUFpze2U8fbu3Tut66x89sCBA9kuctbZuHGjd02UKwMAAAAAAABA6STT
3E7txdx2ysAmT55sx6FT+7G8vLxAXqK2UEXB7VsZXZji5HYal23gwIEJM51M
czNlWG4f8+fPDyzzX1tlS4MHD7Z269bN1K9f32tTKPW6KNe/pCmNud2xY8ds
O1F/Tly9enXTv39/Ow7fiy++aH+WrrrqqsA6WlaeUTtQdz1GjBiR7eIAAAAA
AAAAQBIyze2efPJJc+211yadM0Jzwbr9htuhpeLUqVPedsOGDYtbnmlu9/HH
H9vyun1rP8osipvb9ejRw8uDwv0wC7u26q/YrFkzb51OnTplVIaSoDTmdq4/
rLz99tuT/vyqTV44S/7ss89KuLSli7Nnz5rTp09nuxgAAAAAAAAAkIJMc7t0
xmSrUqWKl2mli9rtpcpWMs3ttL6/jZHa3mlsv+Lkdj/++KMdQ03ba1y1MOlc
W+Unbh/qd1xaKW253YoVK7zyaC7fdMZmVDs8t01x+lkDAAAAAAAAAJQEmeZ2
6fDcc895+1bfvHRQuymtX61atYTLM83tlAeqjeCRI0e8z4qb27355pve9ps2
bYpbnu61ffDBB9PON9VGb9euXXaMMrUhVP5YGMoX1bYqnLXqO9E1SKfdVbq5
ncqXqky6Djqm9lec9l5uTEFdMx0zXdzPj/TPIaK2kkXZj9YtbJ7jb775xp5r
um37En1P+nnVz5auuZYLXV+t594XhrJh6Uf7KMr5pnsu7hzUxjEV6R6/qN8L
AAAAAAAAQFniUuZ2zz//vLfvdO69NdeFW3/27NkJ14liXgpHcXO7xo0b222v
vvrqhMuLmttpjLtEKLvQXKn+fqF+1d7Mn0eG0Vh6Wq9nz572/cSJE+0cDf59
VKhQIW58Pj+F5XaffvqpvQ6J8kdlOTqma1foV/ms8seioL7Zmbabe+mll7xt
R48e7ZXPfaZ+z4WhtpVaV9lhGP2ct23b1rsW/vELi/I96edFcw/79+HGe3Tt
WPXzUBj+/urffvut97kbW3HmzJlJt83kXJSNax31SU+GyuH2NWrUqKTr6efC
raesGgAAAAAAAKC8cSlzO//YbenQt29fL/f57rvvEq5TWnI7tSly2w4aNCjh
OulcW/XvdHmW5vcIo7ZX4YzNZSf+97pmhw8fTngMlwu2adPGNG/ePLCN9O8n
2TwFqXK7gwcPBuZ+CO/D5VxOres/bq1atRIeMxn+7G3Pnj1F2lbtxhJlfm5u
ZF3XVG3FlKG6sjds2DCwbNu2bTb/DH8v4fdqp5kI9z21aNEiMBajf1uhXC/d
PEvzdGg9/Yz52+e5cilPTUSm56K5QNzyvXv3Jtz34sWLvXXUvjYZmsPFradx
LwEAAAAAAADKG5cqt1M/OJctVa1atdD1lU+57EfZUjJKS243ffp0b9tkeVlh
11bnrLko3DrTpk2LW0dtnlxG0r1790BOpexQn7nt1f4vES4P8uctamflchz1
ufXngIn6NCfL7XTu/sxu3Lhxge0++ugjb5nyKH+brw0bNti2Y8p3i0LHjh0T
tutLF9d+TNfFofaMrpxr1qxJuq3monXrrV692vvcP06ha0f25Zdf2mX6nqZM
meLlXrrWidqfhr8nrafjaft33nnH/swJ/xzGrg1lInR8t164HWGq3K4453Lg
wAFvO2V4iQjnuF9//XXC9Vz7UmWPAAAAAAAAAOWRS5XbLVy40NuvxpYrDGU4
bn29TkZpye0qV65st9O/yfBfW71W2yS5bNky2yZN7evccmU2yeb6mDdvnjlx
4kTS46i9Wqocy58HaZ0PPvggbh3/9U/U5i5Rbqd+kv7MbsaMGXHbubZxynfS
GYsvHWrXrm336fqNFhV33dWO0eFvh9ekSZOk29atWzdh+7UhQ4Z42yebY1nZ
m1tHfcjDhHO7VD+TLtPS9U/2c6MMNVHWKlLldsU9F9dWMFH7URHudztnzpy4
dTT2YFH++wEAAAAAAABQFrkUuZ36uLo8R3mNv41VMlyf2lQ5hCgNud2hQ4e8
7VwbqET4r21hvvfeexmfh8YCdPtJNNeDf96LVOfp+kUmau8Yzu2U2fnzF7UL
S4TLgHTsdOdRKAzXbziddpyJcOPIKXtL9Hmyftr+cdn87deUR7ocrFGjRimP
XaNGjbjM0OHP7dSmLRXK29y6ytAS4fr+JhoHL1luF8W5+OejCbel87fHc4b7
Gwu1PXXL/fOHAAAAAAAAAJQnLkVup0zD7VNtxQpDGYnLCnTPn4rSkNsNHDjQ
2y7VfBv+a6uMyBkem87Zv3//jM7D31ZOuUgYlwc1aNAg5X7cespjwvhzu3Xr
1gUyu1WrViXd58qVK7311Kc3CtyxE5UzHTSngsuU/fjLqvkcwvj7Rvvbr+3b
t8/73N93NhH+HDOMu/7K2wpDv6vumHl5eXHLNeagW56oTV2y3C6Kc9HYeG4f
s2bNCiybMGGC9/vg/juh7cNjCro2lanGvwMAAAAAAAAo60Sd2y1ZssTbX7q5
iu7tU+VOfkpDbudyo1T9KUWqa6t2TRobTmPv+8f7T9V+T6g9nebZXLt2rW1n
p3HqOnToEElup/wnWfssf27nN1lbL8eFCxfMDTfc4K2v15qXoDh9ZpXluH1l
QrL5WJUduUw10c+u5r7VsvA8sitWrPDOT2P49e7dO6muf3Witmjpfk+OevXq
ebmXrrMf/1zOiX6vk+V2UZ2La2+rNoyJzlFtOv19bf194zVXi/t85MiRaV0L
AAAAAAAAgLJIlLmdP9tRtpVofoNEuDwknbY12c7tNm3a5G2TbF5QR7rXVjmc
v11eokxLbcHcOHapLE5u5/K/cC4lkuV2ycY/83P06NFAxuPaumke3nT6UIdR
v0p3rTLB9QdO1D+za9euXhn9YwoeO3bM+1xtxvz457ctiuHfj6LmdsuXL/f2
pSzUj/s9UbaXiGS5XVTn4uZb0XHcz7O/D+78+fNtTure+9ti+ts9qt0gAAAA
AAAAQHklqtzus88+8+ag1L34/v3709pOmY47fmFjeols53auTVp4XoJEFOXa
9urVy1s3PIeAros/I1EmqrHdlDtpDlnXfqykcjt/+8h0v2uNWaj5OPxlddcx
0TwZqfDPoZtoHLpUuPl5ZaK5WP0Zqn9uXH+eFW5bpvlW3bIuXbrYftSFqdwq
TFFzO/+czZovw7Fjxw6vPMr2EpEst4vqXPx9t12+7W9f566hy2D9c4y0bt3a
fpZoDEAAAAAAAACA8kQUuZ3a2rg8Tb777rtpbzt06FBvu1OnThW6fjZzO/Xf
c3lHoswnTFGurX/+Xf+4Yv4yap7ORPNX+NcpidxOuaLGf3Pv1X5N87Gmy549
e2ze6M/u0vnuHePHj/e2LaxfcZhJkyZ522rug0S4fr3+frRu/lZ/PuZQWze3
T+V+mVLU3E4oWwv//rhx41LN4Zsst4vqXPx9jt3vap8+feJ+vvxzqri2dS7/
HzBgQMbHBwAAAAAAACgLFDe3Uz9H3Ye7fSSbVzQZLodLN6vIZm6nOTaStYlL
RFGurT8H0xhjDv8cGGrTWNh5lFRuJzTGmftMfZ2LOmadxi4rrF1YIj799FNv
u3TmcPCj7NO1E0w0964YO3ast3+1JfTPgao2g2F27tyZcnm6ZJLb+dvWTZ06
1bZrdGPLde7cOel2yXK7qM5FaAw77UflEe6/E8rvHMr83fF03f1zWqgsAAAA
AAAAAOWZ4uR2Z8+eNZUqVfK21xwJRUH9I922GtMqHbKZ22mugmS5ViKKcm3b
tGmTMBN0Y9r5+xGGiWo+2aLmdsqI3LyfUudQFM6fP+9tO3ny5CJt26hRoyJn
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
7Sav01Sb9eRVaWOmXnWzOfLzX2Y9q1MZVJaGVTvGypZfRpVVZc5FdA6aq4Lc
DgAAAAAAAAAAisrKd/aYzgPmmZseHGIerN7TjPr3u83O/35liWV1OpaOqWOr
DCqLylQWUJb2P7vnlUhud03tQeR2AAAAAAAAAABlFM2Z2m/McnNXvWGmSs3+
ZsB1tc2qv/9d5Fmd9ql96xg6lo6pY5c1SjK305yx5HYAAAAAAAAAAGUfOybe
/E2mVuNRdny5Lrc0znhMPDdWnfahfWmf2ncujVWXCSWZ21V4qpfpP351tk8Z
AAAAAAAAAABKEOVrdky8jlNi485Vbm1zuFRj4rmx6rSu3SZ/W+2jrGd1fpLl
dj8bUz8j/27wE+aKni0S+ttH+5uGXWZm+5QBAAAAAAAAACBLaI4IOyZe/9di
Y+Ld18NM/fWtdpw6qdf6zI5Vl7+O1s3VeSWKi3K7kpTcDgAAAAAAAAAAHBu3
HjL9x7xhKtd9warX+gyMHW/OrzJMXZuiWp7aKAIAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAABAar777jtz4sSJbBcDAAAAAAAAAACg1PH999+bUaNGmVat
WtnX4uzZs2bs2LGmUaNGpkWLFua9997z1l+0aJFp3ry5adiwoZkxY0axjq1j
XnbZZcXaBwAAAAAAAAAAQFnjyy+/NNddd53NzqTyOjFx4kT7/qqrrvKWad3V
q1fb17fffrupVKmSfb1y5cqMj09uBwAAAAAAAAAAEM/evXtN+/btTe3atQO5
3aeffmo+++wz+/rWW2+1y9TmbsiQIfb1hx9+aNavX29fT5kyJbDPr776yu6z
SpUqpnPnzrYN3+nTp03Pnj1NtWrVTIMGDcyGDRvsuv7crmPHjrbdn3jzzTft
etrXli1bbNu+uXPnmurVq9ttdPy6devacm/fvt1u07VrVzNp0iTTpk0bu57a
BYrdu3fbdoOVK1c2w4cPv/QXFQAAAAAAAAAAICLy8vICuZ3j3Llz5sorr7TL
Tp06ZXbt2mUuv/xyc8UVV9jPr732Wvu5n6pVq9r169evb9vrHT161NSoUcN+
pszt6quvtq8PHToUyO20bq1atezrl156yX5+4MABm9fptY5bsWJFr/2fckHX
9k9UqFDBvr/pppts+fT6zJkzNnfUMUePHm3atm1bAlcTAAAAAAAAAI6fvGCG
ztpjNu78KttFAchpkuV2rVu3tp+PHDnSvj958qTX/k5ec801Xrs8oXZ1+rxJ
kyb2/Q8//GBzPX2mdnBi7dq19v20adOKlNstXrzY5nB6rbZ4QusroxPK7dTn
98cffzQjRoyw66mtnfrzKvMbMGCAbb8HAMZ8+90P2S4CAAAAAACUUb7+9oIZ
8dpeU6XtelOp9Vvm7W3MRwlQHBLldoMGDfLayDmUvemznTt3mnXr1tnX6hPr
OHz4sP2sb9++ST9Tv1e91xh64dxO7fJEotxu48aNdpn/mMrv/Lmd2voJ9ZfV
eh9//LHt81uvXj1vvL4LFy5Efv0Aco1a3d41I+ftM1+d4vcBAAAAAACi4eTp
782YBfvN3e3etnmdc8N2cjuATPjuu+/M8uXL7XhwyrU0JtyRI0fM/PnzvZxr
5syZZvbs2baPrHIyfb5s2TIvT+vQoYO3P41lp7Zt6pe6atUq2y9V/WT1mXI1
ZW8aa07bbd26NZDb3XDDDTaD0/FcX9oocrvp06fb7NC1HTxxgv9eANzXaYP9
+6nnX2q3/sVX57JdJAAAAAAAyFHUn2fc6wfMPR2CeR25HUDxULs51+fVqT6x
vXr1ivu8T58+tq2cG+9Oql+qcjk/yvjccq2rvqnKA5Xduc+HDh1q13Xt94Ty
Orfc5YgaA2/BggX29ebNm+16eq05LIQyQJfbqc+uthOaK8P1k9X4d26/LVq0
KJHrClDacbmd885n3jIDpu8yh4+dLXxjAAAAAACAAo6eOGce6r4xYV7n7DPl
YzNp6aeIWAK+vOSAGfHqFjN6zrak60x8fa9dR+sGt3s//9/9ZvKyg1a77uJ9
9vWUNw6a8Qs/MeMWfGxfT8r/fGr+v3LykvzXyw9aJy2Nff7K8kP5/35qpizd
b6atOGSmLNuf/9mnZnr+azk1/3P7euUhM3r2+2bioo/t6xkrD3u+uirozNXJ
nbXmSMDZIeesTe7cN4O+9ubRi64LOu+toPN9Llj/WUoXvn3RRSFf35Dcxe98
HnDJu0GXvvvFRTcGXRbyjU3JXfHesaSu2hx05ZaLrt5yPKVr3vf5QdC1H3wZ
8M0PL7ou7EdB39p6wnN92G1B3/apZ0l+39n+VdCdF313R1CN1+p308dfJ/W9
T4Ju9rll18mUVm2f+DmY7D35Y7Pv6Jls//kHAAAAAIAcwbW3C/ePdfad8knW
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
5UE1BqSctnKM5/RVowPOWD2mwJcCvrpmrOfMtTFnvTku4Ox14+3vY9MODczs
t8abOesnxDn37YkxN7ycUI1JKa+pMTjwd5jcDgAAAACgfKL5ZDWX7OWXX27r
3vp38eLFgXWStbd7a/9C67p9Qd/cu8Cqtj8x5wXslH/frvv71bvnmTW7Xguo
sbmcqz6OqXZEAXfMtq7YPts8O7CVzSKWb58VUG2NpPoPBvwo5tIPZ3gu+WB6
wMXvT4u5OebrW+JdtHmqVeOK+V2waUrMjZOt899NYMF9WbL7Nu++Lt/wPZ/u
Ba3rYobvG6W7p3T3mOH7T3dfGr5fle5e1t3fhu97vfvhfN09cvje2d1Xx91v
5+vuxd29efi+3bufz9fd44fv/V0uEJcX5OuyBC9fCOUOLo9w+YQMZxcu14jL
OwpyEJuFFGQj4czE5SkuX4nLXXyZTDivcTmOl+u8HJ/5uDzI5UPh3Ei6TCmc
NbkcyuVS4bxKuizL5VtxuZcvEwtnZS5Hc7laOG+zmZvL4gqyuXBu5/K8mMGs
z+WALhcM54XWgiwxnDG6/NHlkeGc0lqQYbpcM5x3uhzUGspIXX7q8tRwztqy
IH+1FmSy4bzW5bjhfNdakP26PDicE7v82FqQKYezZpdDh/Np6bJrl2WHc26X
f7s8XMZl5QU5ejhfd7m7dFl8OKN3+b3L822mH876C54DhJ8PeM8N8nXPEsLP
GNzzB/c8IvycQnrPMULPN9xzD/ccRMY9Jyl4fqJnKX+46T/Mf17/u7hnLe4Z
TNzzmYLnNu45jnuu87t7+wT+DpPbAQAAAABAMqLuJ6t7ct2zR7EvZQG6p892
3yhERET9bdPfuOLuh36yAAAAAACQLlHndmozo7wtin25djrZvldDRESM6rkU
uR0AAAAAAKRL1Lmd+rOpX10090jRZYCIiIjFMarnUpnmdos2HzLVH2lsmjzT
ndwOAAAAAKCcEHVup/GmNFZWFPtSBqgxtbJ9r4aIiBjVc6lMczs58fV3zCvL
3ye3AwAAAAAoJ0Sd22kMeI2BH8W+lAH2iqjtHiIiYnGM6rlUprndzLU77Lqy
UV7nQtdf+uFn5he//JW58p9+bbcltwMAAAAAyD2izu00N6PmtYxiX5obUvNe
ZvteDRERMarnUsUd385Z+/GWZsWOEym3qVb7Mbvu/fWakNsBAAAAAOQgUed2
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
/IKYExYOjbnohYATX7/oy4uHWSctGR506Qjr5AROWfaideobI2MuD/rKitHW
aSvHeE5fNTrgjNVjCnwpoOYsd85cG1PzIfmdvW68VX+3JiwaasddDTv37Ykx
N7ycULUdl2/uXUBuBwAAAABQjlmwYIEZOHBg4LPz58+b8ePHm2bNmpmOHTua
U6dOecsStbd7a/9C67p9QXW/IdfumV/gvDiVqb2+ZZpZs+u1gKs/meu56uOY
K3fOCbpjtnXF9pjK4XSvtHz7LM83ts20Ltv6atCPYi79cIbnkg+mB1z8/rSY
m2OqnGEXbZ5qVZsKvws2TYm5cbJ1/rsJLLgvS3bf5t3X5Ru+55v91viYBfeH
4ftG6e4p3T1m+P7T3ZeG71elu5d197fh+17vfjhfd48cvnd299Vx99v5untx
d28evm/37ufzdff44Xt/lwvE5QX5uizByxdCuYPLI1w+IcPZhcs14vKOghzE
ZiEF2Ug4M3F5istX4nIXXyYTzmtcjuPlOi/HZz4uD3L5UDg3ki5TCmdNLody
uVQ4r5Iuy3L5Vlzu5cvEwlmZy9FcrhbO22zm5rK4gmwunNu5PC9mMOtzOaDL
BcN5obUgSwxnjC5/dHlkOKe0FmSYLtcM550uB7WGMlKXn7o8NZyztizIX60F
mWw4r3U5bjjftRZkvy4PDufELj+2FmTK4azZ5dDhfFq67Npl2eGc2+XfLg+X
cVl5QY4eztdd7i5dFh/O6F1+7/J8m+mHs/6C5wDh5wPec4N83bOE8DMG9/zB
PY8IP6eQ3nOM0PMN99zDPQeRcc9JCp6fuOcp//sf/1/73Mb/rMU9g4l7PlPw
3MY9x3HPdfS3idwOAAAAAKD88f3335tatWqZK664wlxzzTWBZfq8SpUqZt68
eTa/+/LLL71lUfeTVW6nfC2KfaltnPK2bPeNQkRE1LMkPScq7n7I7QAAIBdZ
P+Njs2rSNnP+7Pdxy86ePm/Wz/zErvPWzI/Ne6/vNSe/OJNwPz/+8JPZ897n
ZtlLH5qFL2w229YctPekl4LDu74yy8d/ZHa9e/TSHCBD5g3eZGb0WF/s/Wxa
tNeMeWq5+e7U+QhKlRhdO32v8u1Zn9j3l+r7Kgt8tudrs3baDvPaoI1mw2u7
zLnTF7JdJChFqE3d3LlzzfLlywO53Y4dO8zll19uvvvuu4TbRZ3bqZ+r2syV
pnskRETE4hrVcylyOwAAyDWU1eT958vWN8Z+GLd81cSt3nK/k9qvCax37NNv
TLc7ZsWt1+HP08y3X52NvNx9q79m9//MdVNKVdbU+v9OMq2unVSkbeYN3mje
nbc78NnA2gvs+SkHvVS0u3Fq3PfV/k9Tzadbj1+yY+YiyrNHPrEs7lrpu/74
7SPZLh6UMlasWBHI7aZOnWquvvpq065dO1O/fn3b3u7HH3/0lked22n8H/WB
LU33SIiIiMU1qudS5HYAAJBrjG250sshetw9O2652rRp2fJxH5njB0+Z99/Y
b7MdfaZ2eOL78z94GdDEZ1abg9u/NF/sP2kWDd9ss409mz6LtMzfHP8ukJ9s
XXMw0v0Xh72bPjf73v+iSNso5xv40ILAZ7p+W1cfzL+/v3ShpDJP5aonjnxr
Du88Yaa0X+tlrXCRIfUW2evS5965NqfT9Xp79iemU8VpZu6Ad7NdPChlhHO7
kSNHmiuvvNLMnj3bLFq0yPajnTNnjrc86txOc1Os3j2vVN0jISIiFteonkuR
2wEAQC6hfq3K1XpXm2P615pvswllc35cbqd+gY4tS/fZz9QGSai9mN4rAwxz
9sz3kbeHW/jCe/Z4S0a+b/8d8fjSuHUO7fjSZirKot6cvsP88MOPaS1TTqY+
qjN7v21m9dlg+wUnYt8HX9jzfqXzOvPugj3eOardnPoTO3648KP9bFrXt+zx
1M9S11189dlpm4fqHDrfNsO+Vp9Voaxz8Yvv2+2VFb0+YrPts+xH/ZCXjv7A
e688U+0jpz77pv3ekvVndii3U/bkp8vtr9ryqGxC3/uWpfttFju545tmyaj3
vXU/33fSttHU5/o3/LMjlHGpjFpHZQr3Ld3+5iEzp9879lp/tPrTuO0/XHHA
zOi+3l6/cD6batnpk+fsd6vvRz8v4XaLameq8pz68jv7Xatvc/j6Cm3nvh/3
vTn03t+3vLDrkepaFvW7g9JLOLebPHmyqVy5svf+ySefNL169fLeR53baZ5Z
zVlRmu6REBERi2tUz6XI7QAAIJdQPmXb0o3/yGYcej37uXcC6yTK7VyWMerJ
N+z77nfF+scqoykJOt8+w2ZOov1Nr9j2ahfO/eAtVzbi+jFquV6vnry90GXq
z+vORft07fnUzkr5mcPllH7HFWSWyne0X6+s+e+1vM0fJ9tj6rX6+IrNi/fG
7UfrCbVb1HvlNwuGxHJKjRvoR20c3fpq56fXbh/uHA98dCzpdUyU2/WrMc9u
+/XnZ7zyaz13PVwfYF0zV2b/MmWYDmVp/uso/cdzfU/ddZGjmy33lr/SZZ39
TOepMuj1l4e/LXTZ3i1feJ/5jz+9+8VxB931VdtCtzzRtXLHWTNle9LrmO71
SHYtM/nuoPQSzu22bNli691ffPGFOXPmjKlQoYKZOXOmtzzq3O76m6+1c89G
sa+b/nKdnYs22/dqiIiIUT2XIrcDAIBc4vm6sf5/Z06et+3ilCOE+0iGczu1
RxvecElgPDyXSZUEhz8+ERhfT+2k9N7fxm3wwwvtubj2U2pfp/H3Cls2sc1q
L7vUeSoLfKH+YvvZomGb7TpqU2XHgbvpFbNz3SF7z61MZ0ZBJhTO7aY+u87m
SELts1y7Ru1HaHuVZ0D+5/52if7cTm3f9LrXPRf71qk9nj6bkL+ettNx9R1o
vg6h/sz+jDAR4dxO7cDcmIEOlzv2rDLblkPr6F+VWf2l1Z9X7Fx/2H6mnwVd
N52ry1SVael6fvLOUTP00dft+u/O3x3LO/Nieafam/WrGcsM3VwjOh9/323l
gOqTXdgyV2ZdA/HV0W/tefqzOXd9VV59pp8rt70f9zui805GOtcj2bXM9LuD
0ofmk1UfWM1BoXq2/l28eLFd1qxZM/teyxs2bGjXdUSd211X8feR7evGW3WP
FE2fW0RExOIY1XMpcjsAAMgVlFspG1CO5HAZlcuZhMvtut05047B5sa203tl
M7rndDlWuqh/ozKaVGo+2kQoB9Px3BhymuNT77WNY3jjpV77tPD4cKmWKWPR
+flxY+mpzZ1Qn0+9TzauWTi3C6O+kdp+m69fZ6Lx7fy5nVBfZv/7l9ut8b4r
ZUWuzZ/6oTqfvWV6yjkyXNsvZVPKklx7MWVq/vPROupPGj6HcBs0N1ai8jll
UKmypxcaLPbOx5V37SuxNp+ak1eoLZ3yLOWjYZItc7nui02WBT7XeHT6XH1y
/ddXP4upcO0v9XOQjHSuh0h0LTP97iD3OH36tDl7Nn6Onqhzu27D2ka2rxtu
ia7tHiIiYnGM6rkUuR0AAOQKbp5Y5RtqSycnFGQZ+tfhcjvlWcrqNEa/xpXz
j/WlvKsoGcOmRXvs3LOpnNs/cS6mvEbHcmWWrm+hy0OU5bl5MpRNqZ+py+iS
LVNWos80j2sY7d+1Q3R5WbJ5RMO5neZmVRs/V25vLo3VRcvtVr4c+74014dw
c0oI1z4rmcnmtnB9STWmnXJJ5Uxqf5jqfPxlC7dBWzrmA6/to+uDHe537Ug0
97BT49UJjQvorpn6RmufjmTL9LPlv06OIwU54pjmKxJe32S49nap5hpJ53qI
RNcy0+8Oyg5R53ZR2vWFZ7JeBkRERBnVcylyOwAAyBXU5zJZVqCcyuUFica3
C+PaJGmuhkvJjrcOp8w4NHeDQ30elU268cvUnzbVMo1fZ9vt1ZgXd1zlQ8qZ
hJtz1d8m0Y8/m1H/Y7UJk8oHNceFy0aLmtu59pHKTtV+S681l4NQmzO913hx
6mPqV+3PkpFofLtU5+PQ3An2GmwKzvXgxuFTFuXGEdRYgIlwP3/h8sqzvrkr
1M5N80a4MfD8808kWuZysNcGBo+rn019rvkgEl3fZGheC62nc0tGOtdDJLqW
mX53ULbQPQQiIiKWjH6UjZVmAQCgfKL5I1xGpezDr+u/qNxFpJPbuXld1ZfT
Pz+EUD9EN8dBcdE8GDqO5iD1l/nAR8djmVZBtuZH830qF/OPDZdsmWsT58+N
XFY4qmlsDg6N6Wf7yfraA6q9zJGCscn82YzLkPzrurlww7mdsk8/iXIl1/ZL
7ff0rxuXT9c3k/HQMs3tXFtNfxYqXBanny/XfzlcJpdF6XpqucbpSweNF6f1
X+35dspluiZ6Hf6+X+31tv1c86+IdHM7N+afsuzjh4Lzw+pcVP50rodIdC0z
/e4AAAAAAAAAoGyisdmUFWg8sTDK2bRMY92JdHI79Zl14/7rX/Vz1DhiLrdI
ND5ZUVF7ODf2fyJcmz/lRWqTpv6ZOq7mk/DnbqmWvTZoo5f/6dpo3DLXlkv7
FWpD5/pn6hxXTthqj+3Gv/NnMy5P1DVRWzu3/3Bu5+a11Zh+bv6LRLmS5iZ1
24dzPpflaT5WZa6aq3ZS+7V2PMBkZJrbqU+xuy6aj+PtWZ94YyNq/ECHGzNP
ZdLYb24+E/+1URnUB1jj/elaarxFzdlx7MA39tj6TLmcm3tWuVuqZcLNiasM
WmXTPLJ6r58d17873dxOqG+t1tU5q72k2hC681VWmO71SDb2YSbfHQAAQFFZ
9e4e02X4Muv8VdvNqdPnsl0kAAAAAEiA5uEMtytzqH+sf7w6N66af66CRCi7
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
mKpVq5rLL7/c2+aKK64w9erVMydPniz0uD/++KOpXLmyt+0111yTcL2vvvrK
dOjQIXAcZ/Pmzc1nn32W8blHzY4dO7yyrV+/PtvFAQAAAMgI6ofRQf0QoGyR
K3lYrpQTAFIzePDguLpOWD0jDPPmm2+m3Oa6664zX375ZcpjT5kyJbCN6nRh
zp07Z6699trAeldeeWXgvepzRXn+eymhXgZQPvnu7HnzxZffmAvf/1jsff30
00/m9Jlz5sx35yMoWfr8+ONPZt/BY2b/oePm7LkLJXpsAChdUD+MFuqHAGWL
XMnDcqWcAJAaPY/U73ODBg3MunXr7LNJPSe94YYbvPpFtWrVAtuov4S/LrV8
+XJbLzp9+rRp3bq1t0yvk6Hnrdq2sHrZiBEjvOVt2rQxhw8ftp/rWE2aNPGW
TZ06NdoLkyHUywDKF8q6xk5fYy7/3ZPmsn9qYJ7uVvz/FlV+dJDdl+z74qKU
6379zRlz5fV53vpOleemB3qbEZNW2AwwGcoIx81Ya+6oO9A7B6fKsWT1h8U+
HwDIPagfRgv1Q4CyRa7kYblSTgBIzQcffGANo/qZq1+o/4GfSZMmectWrVoV
WKa+DTfddJNXz0o2xkjbtm29Z6NPP/100npZnTp1vGOdOnUqsOy7777zlrVv
376op35JoF4GUH74eO9npmKtvoGsq2nnScXap9q6+fenTE7ZYDK27z4Sl9mF
rXBHJ3Po6Im4bb86edrUbDqi0O0Hj11arHMCgNyD+mG0UD8EKFvkSh6WK+UE
gMxRXwZXx/D3M9C4Jvrs6quvTrjdxIkTve3Wrl0bt1zjGrvlc+bMMZ06dUpa
L9OzXC276qqr4pbt37/f20+fPn2KdG7z58+3z3srVapkx1BRvU7lCqO2KAsW
LDBdunSxY7Vo/VatWtm66YUL8f3IktXLjh49ap9dqw564kT8/fO2bdtMs2bN
7DNjf11WY7doG5VV4ztr/927d7ffQfXq1e3zZvfdaLtx48bZct5+++32nD78
ML6tTHifu3fvNn379rXXoVatWqZ///52nUSoLqxj1q1b19a/dSxtW5rGkAEo
CdSOLVHGVdzcrt+o1+P2ufbdj5Ou78/txkxbbfZ+eszsyP9s3htbApniPQ2H
BLZTFvjHe3t4y6+9p5uZsfBds/vAF2bX/s/NrCWbbHs9Lav99KhinRMAlC2o
H1I/DEP9EMobuZKH5Uo5ASBzVO9ydQw/7rMWLVok3E51AbeO6i9hVGfQMtVx
RKp6WY8ePbx9vfTSS4Fl/j4XGzduTOucvv76a1OjRo2k465Mnz7dW/f48eNe
vTCRGldl165dgf0nq5dp7jD3eaK6ko7rlqufSaL9qa9HonKoPqV51Nxz7LAr
VqxIWsYZM2Yk3Ebf/ZEjRwLbqa7m/5nwq+8UoDxxxR9a2Eyrbt4Yc+Tzr733
xc3tfnNbB7ufRu3Ge5nak88m36c/t5u3fEtgmcbH82dzGrvOMfP1jd7n1RoN
NWcS9KXVfemU1942U/MFAHBQP6R+6If6IZRHciUPy5VyAkBm7N271/ubq2dm
jm+//db7fPjw4Qm39Y9vonGN/cyaNctbpvqBSFUv09jF/nFO9Czz008/tc/z
CqsfJkLruu1U59Kz31GjRnl1Go3j4vDPoabnjFp3/PjxgXqdxjzWM0nHpayX
OTUf27Bhw+wz5vAyfaZny7pO/jLq/jvVPmvWrGmfk/rnb9M+/Oj5rFs2efJk
ex4LFy60z3X1fBegPPHcyEVm3bufeO+jyO3e+2i/l6W98/5e287NjVWneS8S
kSq3E0MnvOEtX/ZmbP7H8xe+N1fd8oz3uebTAABIB+qH1A+pHwLkTh6WK+UE
gMxw4xG7Z26Offv2eZ+rnpIIjWHi1lGdy6Gxgl0dyz/eSKp6mfj4448T1kGk
nrfqeOmg/bjt6tevH9hO9Radz+zZs+37RYsWeet27do1bl/t2rXzlvufwV7q
etnixYu9Zaqf+pepbql6s8Nfj/I/9w3vc+7cud4y9aVw/V/C49a4uuuTTz4Z
V35/3RSgPBJFbtemzwxvTDv9N0k5nMvW5ix5L+E2heV20+a/4y1f8Vasr9cH
Ow56n+X1nJZxeQGg/EH9kPoh9UOA3MnDcqWcAFB03n333cDfev/f3C1btiSs
j4Rx62g8DofqN67+5a97FFYvE0uWLElYL1NdKt162dixY73tVEdLRe3atb26
yZkzZ+KWq0+A21fDhg29zy9lvSxRPdiNJaPxm/3bCfUNcduuWbMm4T4nTJgQ
t089q3XL/ePW6Lmpe2bLeCUAQYqb233/w4/efK5dBsfulc6eu+B9dl/jFxJu
V1hu1/65md5yNzeFMkD32cKV8ePOAwAkgvoh9UPqhwAxciUPy5VyAkDR0N9b
/Y13f5ddXwWHnsu5ZarnJMOt061bN/teY9u6zzQOh59U9TLVCf3jlFSoUMHk
5eUF6mYPPvigHQ+3MNzzxfBzwkRobBKtq/4PyXB1ItVdHZeyXpZo/jE9Fw6X
wXHw4EFvW42dnO4+9UzZLdd4yY4pU6Z4n+sa6rs9cOBA0usDUJ4obm6nPqwu
S/tw50Hv8yYdX/Y+P/bVt3Hbpcrt3tq0y1umfrGuP1T/MRfnvlDbOwCAwqB+
GIP6IfVDAJEreViulBMA0kfPDf1zhPnbxzs0nohbPmjQoIT7UX8Ht47GxBBu
zA/VH/xjaYhU9bKOHTt6++rcubM3l9bhw4e98YtleKyNRLgyaDyPwkhnv25/
/rnMSrpe1rhx46T1MtWpMqmXqa+FWx4ee1hjo4SfaWvMF/1cAJRnipvb1Wv1
kt1e81L4Wbl+R2C+2DD+3K5h+wlm2MvLTbchr9n2ef45aTds2eNto3ku3Oef
HTuZUXkBoPxA/fAi1A+pHwKIXMnDcqWcAJAe58+fD8yN5epTYVQvcuvoOWci
/H/3Z86cGdgmHfWsTs9fNQeW+6xRo0YJy+yee8rCnqnWqVMnrh6VDJVB66re
kwyNx6x1VJdNdO7J6mXqSxImV+plQs9pVUd210jqe9D3AVBeKU5ud+r0WS9H
6/viosAy9Z91+76heq+4bf25XSLVzi7cF7Zdv4t9Z3fsjv8dBwBwUD8MQv2Q
+iGAyJU8LFfKCQCFo3qTq7NI/1jBiXBjAGvO90T4xwnZuXNnketlcuvWrXZ+
evd++fLlCY/1/PPPe+vs2bMn4ToO1SXSrcO5MXZvuOGGhMs1ZorrL6L5uxzJ
6jx6huo+13mFUd+QXKmXOfTcXPVlt+7atWuTrgtQ1ilObjf1tbe9HK1F91fM
iEkrAvrnft194IvAtv7c7tba/UyDZ8aZ5l2nmCHjl9m8TmPkhRk3Y23cHLMA
AGGoH8ZD/ZD6IYDIlTwsV8oJAKlRn4QmTZp4f1s1NkhhdOnSxVs/3KZfdTD3
jNP/nPHQoUN2rN9EuuOrH4Teu/rVunXrvONMmpT4XtiNZSxVT0iF9uHWTTSG
r8Zu2bx5s32tObGSnaPwzyc2evRo7/NkdR7t233er1+/wL70fNI/H1qu1MvC
x3BzrQGUR4qT21V+dFDKNnN+ew9fENi2sHkpEqF5Zd02PYfNL3J5AaDsQ/3w
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
NRxTdWOqGvPdt29f7O90e/rnJb0uO336dIXfp/8c9q0xQj1/Af189OjR2PuK
X3/9tUZjwb/88ov/G+KOQfvQaxpF9407zz/uuKP7D78/cuSI3246ep527dpV
5TGf73kKqC666qqr/Lh5VcS936pC81Zk3PHouYvbf7Quq+64o3+rtqX3eEDf
zdGfo4/V46p6z+l1jzve9G1U9ToIvRbaTlWP1bGlv2ei5Oo9Ff6vx0Y/GwBQ
e/Q9smHDBrdkyZIq1flT6d9TAAHqQ+rDqo6b+pD6MP2x1IcQB7kdQPbQmOlN
N93k/696R+/jaBvZrl07X5sFJkyY4Gs5zT+ItpNqd/Tzc88953/+/vvv/c8j
R46stE+dy7569epKHjhwoNpjVQ2WPv4b5amnnqqyLlNN9Oijj6bG5TT+Gs6p
19yNMFYrVYeG5yBal4W1JaNtrMYB33rrLf9/zdNQjdGkSZPUtnQN6LZt26Z+
7t27d+qxqjV0TJdffrn/nZ5X7SOOTz/9tMIxhjFxof+rttC/uo/Ys2ePu+OO
O1L31WuoHF+oHddtmlsQ0Fhmo0aN/P+XLVvmf6+5MuHxeo+EuqB///6p27W/
9HpHP+t3mpsiNK9Bf1uo9wM6xvTjSKeq91s6W7duTY3hS70Geh/obw3nCITn
WMcfiNZlmvsTvVb35s2b/WPC+QR6vZo3b54au9ff/vnnn7sGDRqktv3ZZ5+l
Hh+eg/C66XGhT6R/w+suX3755Up/0/leB9VH+nyG3+l9+tVXX1V47BNPPOH/
1fkI6eTyPaXPhl4f/Rwe37FjxypfdwCoGTon5a677qrxHIyVK1fm+5ChSKA+
pD4U1IfUh9SHUFP0+hUDxXKcAAGNzet9qzUjxIsvvpj6Dg6ENlho3Ee/HzBg
gB+jSW8ntd6JbovOh4g73zN836eb3m4LjSOptlO7pRpI7UbcWIzaKLUTocZM
R4/XPnSOvfo5as/Uf5Gh7dOYsNZA0c+aLyKidZnaIP0uWoeE5yPcN7SBGvvV
sehn1WqqKdu3b+9/Vvsm9DyFWm39+vV+Pofa6ji0nw4dOvjatXXr1v5xoY0P
z5/q1dBOqh+n50PttOoLzWvRa6JxNz1Xuv/UqVNT29drpceIL7/8MlVHaJ79
9OnTU8+J6lX9XzW8tqPfxY0Hhudbf5e2q22lvxcWLlzo7/PQQw/550j30TyW
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
f8pUX0h9otA/+v6s6jt9d7YvpX5V6GPJNWf7XqEvJled7aP5/trZvlu0P3fe
cYg18eMQC6oYhwg5Wvo4RMjd0schQk4XHYdQPzhuHCKaAVYYh5gfPw4xoYpx
iJBHVhqHmFV5HKK6rOXubkv9328Bud05SnFOBGOpjKUylspYKmOpjKUylloc
Y6lQOPz2229u+fLlGXnqVHGfh6l+p75zGrYrz+/0+QAAAICq+dMzlWvEpi8s
83XtqdN2a6qR29UNGEsFgLoMY6mMpRbDWCoUDgMGDMh4DsbKlSvzfdgm6DtN
4wn6TgAAAICqieZ2zV9e7mtew7guRbHkYcVynIUOY6kAAACZkauxVCgc+vfv
n3Fut27dunwfNgAAAOSQmzoscn/pu8KPZ2eTYsnDcnGcdWlOBGOpAAAANSNX
Y6lQOOzfv98tW7asWps0aeLr03r16rk9e/bk+5ABAAAgx2jeSi4gtztHXZ4T
AQAAAPHkaiwVigutcdyoUSNfD9588835PhwAAAAoUcjtzsGcCAAAAEgnV2Op
UHzs3LkzVRPq/wAAAADWkNudgzkRAAAAAJAJF198sa8NJ02alO9DqTG/u70v
IiIi5sjaQm6XGcyJAAAAAACxYsWK1Pl2s2fPzvfh1Bjfh/jtq1q747sZ7rOp
A022hYiIWIqS2+WHYpkTYZkPX3JjN/f//aFl3nNqRETEQhVKhx07driJEyfG
+sEHH7ghQ4a41q1bV1g7Ze/evRnt46dfjmXp6M+Pf78a9EWWzhvlnm33oMm2
yAAREbEQtG6PLGrEQsrDqqPQjjPJnIhc12dWNZm0rMsQERFLTXK70qJfv34Z
rXfcq1evjLZ/6Ogpd1fXJf7ffGBVIy6ZO9KsPqTWRETEQtC6PSK3yw9J5kTk
oz6zzO0s67If189ws6YMyPvnERER67aW7RG5XWkxePDgGuV1l19+uRs9erQ7
c+ZMRtsf+clWd23bBe6dGVuz9BdUj1WN+OWcd1zn9g+bbMuy1kREREyqdXtE
bmdLNudE5KM+s8ztLOsyxlMREbEQtGyPyO1KC61nrOuPVeWBAwcSb1tjuH96
ZpGvC/VvPs65s6oRF88e4bp0eMRkW5a1JiIiYlKt2yNyO1uyNSciX/WZZW5n
WZcxnoqIiIWgZXtEbgc1RWO4qgmDI6bn/pw7qxpx0WfD3XPPNDfZlmWtiYiI
mFTr9ojczpZszYnIV31mmdtZ1mWMpyIiYiFo2R6R20FNiI7lBi3GdLVui8aT
Bw4c6DZt2nTe+1vViAs/HeG6dnzUZFuWtSYiImJSrdsjcjtbsjEnIlv1WU2w
zO0s6zLGUxERsRC0bI/I7YqXrVu3uo0bN9ZKZWU1Gc8dkTaWGxz28Q+Jj79z
586+Tr7tttvcpZde6i644AL37bffVvsYy9yum1F9aFlrIiIiJtW6PSK3K3yy
UZ/VFOvczqouYzwVERELQcv2iNyuONm3b19Ga6RU56pVq6rdl8Zsb+64OLYu
1JjuwSOZj+lqbWbte9SoUf7nY8eOuXr16rkWLVpU+zirGvGLmUNd906PmWzL
stZERERMqnV7RG5X2FjUZ5nOe4himdtZ12WMpyIiYr61bI/I7YoTXV/MKrdb
sWJFtfvSOilxNWFw6LTMx3RHjBjh93348OHUbe3atfPZXXVY1YjzPxniejzb
wmRblrUmIiJiUq3bI3K75ORiTkRt67Mk8x6iWOZ2lnXZglnDGE9FRMS8a9ke
kdsVLwsWLHBz586tlfPmzfPrrVTHd9sOupUb9qds+eo3FX5eX/b7THnxxRfd
hRdeWOG2/v37n7dutsztnu/c0mxbVrUmIiJiUq3bI3K7ZORqTkRt6rOk8x6i
WOd2VnUZ46mIiFgIWrZH5HaQKe0Gra71NjTGe9FFF1W47a233spZbjdv+tuu
Z5fHTbZlWWsiIiIm1bo9IrdLRi7nRETJpD5LOu8himVuZ12XMZ6KiIj51rI9
IrerG6guO336tMm2LHK7V155xc/HiNKnT59K5+ClY5nb9XrOpj60rDURERGT
at0ekdslJ1dzIqJkUp8lnfcQxTq3s6rLGE9FRMRC0LI9IrcrTTTfQfXX1Vdf
7euyMG6r9Useeught379+sTbtsjtxo8f749ny5YtqdsaN27sGjRoUO3jrGrE
uR8PNs3trLaFiIiYVOv2iNyuuMikPks67yGKZW5nXZcxnoqIiPnWsj0itys9
lIWpFjvf3Itu3bol2r5FbnfgwAF/DE2aNHHbtm1zkydP9j+PGTOm2sdZ1Yhz
pr3lXuj6F5NtWdaaiIiISbVuj8jtcoPVnIhM6rOk8x6iWOZ2lnUZ46mIiFgI
WrZH5HalxalTp/w5diGbU0328MMPu44dO7oOHTr4a4ZFs7tJkyZlvA+L3E7M
nDkzdS6gjrMmOaJVjTj7o0Gud/cnTLZlWWsiIiIm1bo9IrfLDtmaE5FJfZZ0
3kMUy9zOsi5jPBUREQtBy/aI3K60+Oyzz1L1n7K648ePV7qPriF21VVXpfKy
M2fOZLQPq9wu8Msvv9R4nNmqRvxs6kCz+tCy1kREREyqdXtEbmdPNudEZFKf
JZ33EMUyt7Ouy17s1irvn0dERKzbWrZH5HalxZtvvunrLuVy1bFz585UbRgd
a60J1rldJljViJ9OGehe6vGkybYsa01ERMSkWrdH5Ha2ZHtORKb1WZJ5D1Es
czvLuozxVERELAQt2yNyu9KiZcuWvv7q0qXLee972WWX+ft+9NFHGe2jFHK7
WVMGuD49/2qyLctaExERManW7RG5nS3ZnhORtD7LZN5DFMvczrIuYzwVEREL
Qcv2iNyutND1wVTrtWnT5rz3vfjii/19p0yZktE+SiG3mzm5v1l9aFlrIiIi
JtW6PSK3syXbcyJyXZ9Z5naWdRnjqYiIWAhatkfkdqVFWGe4Xr16bv/+/VXe
b+3atamaMNP1j0sht/vkw37ulV6tTbZlWWsiIiIm1bo9IrezJdtzIvKR2418
u4e7vv4VrsG/XuluuLbcG6+70jVs8Ht30/V/cH+64Wp3c8N/9t5y4z+7P9/0
L+7WP13jbru5vrv9lj+6O/5c33v173/n/v5vL3aNbrvO3X379a7xneXec2cD
d2+jht777r7R3d+43Afuuck1bXKza3bvLe7B+25xD99/i3vkgT97tf9/+oe/
dc0fvN099vDtrsVDd3hbPnKn+8ujjbytynzisbu9T7Zo7Fo/3sTb5i9NXNtW
97qnnrjP+/ST97t2f23q2rd+wHVo08w907apt+NTzdyz7R70dm7/sOvS4RHv
c880d906Purt3ukx1+PZFu75zi29Wptc6toxWu9I52BI9en0uZWqTV99oY33
tRfbutdfesr7xstPuzf7tHP9XmnvHfBqB+/A155xg/p2dG+93sn79pvPuiH9
O3uH9u/ihg14zjt84HNuxFvdvO8M7u5fNzl6SA/33rCe3jHDe7mxw19w40aU
O35kb++EUS+5D0a/7Ca++5L3wzGvuMljX/VOGfeam/r+Wcf3dR9/8IZ3+sQ3
3YxJb/p6W2pMQaoPq/NPNHdMas12XW/RO+NtN/+TId4Fs4a5hZ+O8C76bLhb
PHuE+3LOO96l80Z5l31e5vzR7usv3vV+s2CMW7Gw3JWLxrpVi8d5v10y3q0J
Lhvv1n01wa3/eqL7bvkk9/035W5Y8aHbuHKy27RqinfLt1PdD2s+8m5dO81t
W/ux98f1M9yO78r9acMnbueGmW7nxllu16ZZbvfmT717tnzm9v4w2/2ydY7b
t13Odft/nOc9sONz99tP872Hfv7CHd61wHtk10J3dPcid2zPInd872J34pcv
vSf3LXGnfl3qTu9f6s4cWJb3NgYRM9NyPJXcrrT44YcfUnncNddc41auXFnh
95oHMXfu3NSayJqDcfLkyYz2kc/c7m/+4V67+vDv/ptJfXiD6sPL/476kPqQ
+hAR86rlmJQkt7Ml23Mi8nW+ndoLtRtSbYjaErUpal/Uzki1OWp71AapPTq4
c36qfVJbNfG9l13PsppF7ZjaM6m2TW2c2jq1e2r/vGVtodpEtY1qJ7evm55q
N9WGqtbo9HQzt3n11FQ7qzZXba/aYLXHapel2mi11Wqz1X6v/vL9VHuutl1t
vNr7r794L9X+qxZQTaDaYMnckal6QbWDagjVEqorvpg5NFVnqOZQ7aE6RNd9
DnWJahTVKqpZlLuHOkY1jWob1TgfTXjd1zyh/lEtpJpI9dGk987VS6qdQi31
/jsvpuor1VqquVR7vTv0ef/8hLpMNZqv1wZ19bVbqONU06m2U503+I1OqbpP
NWCoCfufrRGlakbVjqoh+/Zu62vKUF/qO0k158vPP+lr0FCPqjYNtWrPLo+n
6lfVsqG27Vqmat1Q96oGVi3c6ekHfW0c6mTVzKqfpWrpUFerxg41919b3uNr
8FCPhxr98eZ3+Zo91O+q5R9pdpv34aa3pup91f7qB0j1CdQ3CP2E0HdoctcN
vi8R+hXqZ9x5+7Xl3lo/1Q9Rn0T9E6m+ivosof+i/oxU30Z9nNDfUf/nuj/+
kzfaF4r2g9L7QqEflN4X0rGE44r2hXTs+hvS+0LRflB6X8g/R2efr2hfSM+p
ntv0vpBeA70WcX2h0A9K7wvptdZrnt4X0nuj69n3SnpfSO+puL6Q3oN6L6b3
hfSe1Xs3ri/Uv4q+kD4bcX0h3w8q+0yl94X02dNnMK4vpM9sXF9In/HYvlDZ
d4K+G6J9ofD9oe+SuL6Qvnvi+kL6rkrvC4XvNX3HRftC4XtQ34lxfSF9h6b3
hcL3bXpfKHw/67s62hcK3+f6bq/UFzrbDqT3hUK7kd4XCu2M2pxoXyj0g+L6
QqE9s+gLWY6nktuVHmEeRlDn3l177bU+xwvrDwfffffdjLef7/PtLOrDCWXf
hb2M6sORb3f3bQj1IfUh9SH1IfUh9WE+60O9Hnp/kdtlTi6OM9tzIop5nqy+
U/S9WIj5NWKhGe0LhX5QXF8otEHpfaHQZqn9ivaFQj8ovS8U+kHpfSH1g0Jb
qnY12hcK/aD0vlDoB6X3hUI/KL0vFO0HpfeFQj8ovS8U+kHpfaFoPyjaF4r2
g9L7QqEflN4XUt2k+im9LxTtB6X3hVL9oLS+UOgHpfeFVP+pDkzvC0X7Qel9
odAPSu8LqS5VfZreF1Idq3o2ri8U+kHpfSHVy6qb0/tCqq9VZ8f1hVqdrc/T
+0Kq41XPp/eFVPer/o/rC6m/ENcXUv8iri+k/oj6JdG+UOi7qB8T1xdSvye9
LxR3zpCMO2dIar9/uPJ37tL/8V8r9YWi5wxF+0Jx5wxJfU7J7UoPrWGsa4JF
87k4u3fvnmj7+c7tLNo7fSfrO85iW5a1JmIhSn1IfUh9WBz14VVX/L37u7+9
2KQ+1Gef3M6WbM+JKObczrIu03esZX6NiIh129AXip4zFO0LRc8ZCn0h9YFU
x/cqq4fj+kLRc4Yq9IUi5wyFvpD2S25XuuiaZL1793bNmjXzayBL/b9nz57u
xx9/TLzdUsnt1P+02pZVrYmIiJi0PlS+q8zUoj7UcZDb2ZPNORHFnttZ1WWM
pyIiYiFo2R6R20GmWNaFOjdQ80bGjh1bo/tb1Yg6t0Xnj1hsy7LWRERETKp1
e0RuZ08250QUc25nXZcxnoqIiPnWsj0itys9li9f7jp16uRGjx4d+/tdu3a5
1q1buw4dOrh9+/ZlvH2runDDhg2ufv36vj7VuYA1wSy3e/81P/fLZFuGtSYi
ImJSrdsjcrvskY05EUWd2xnWZYynIiJiIWjZHpHblRaHDh1KzbNo2bJl7H0O
HjyYWjtFNWKmWNWFl19+ub+mWuPGjfOS22ndJqttWdWaiIiISbVuj8jtioti
z+3M6jLGUxERsQC0bI/I7UoLrYUS1jKu7lplM2bMSM3F2Lt3b0b7sKoLlTGK
Vq1a5Ty309rvlrmd1bYQERGTat0ekdvZk805EUnrs0zXLAlY5nbWdRnjqYiI
mG8t2yNyu9Liqaee8rWnsrDzEc7LU4aXCdbjufnI7XStRl0v0WJblrUmIiJi
Uq3bI3I7W7I9JyJJfZZkzZKAZW5nWZcxnoqIiIWgZXtEbldaKANT7dW5c+fz
3veSSy7x9810fLUUcrsPx7xiVh9a1pqIiIhJtW6PyO1syfaciCT1WZI1SwKW
uZ11Xdaf3A4REfOsZXtEbldaDBgwwNd5qsNOnjxZ5f22bt2aqgkXL16c0T5K
Ibeb9N7LbuBrz5hsy7LWRERETKp1e0RuZ0u250Qkqc+SrFkSsMztLOsyxlMR
EbEQtGyPyO1Ki2XLlqXyuCZNmrgtW7ZUuo9yunCunfztt98y2kcp5HYT333J
vfV6J5NtWdaaiIiISbVuj8jtbMn2nIja1Gf5zu0s6zLGU7GuumbZeLf6y/dj
fz65b4lbOm+U+3H9jLwfJ2Jd0bI9IrcrPbRmSsjkpGq/hg0b+vVLwpopwe7d
u2e8favcbufOnX5dlfvuu89ddtll/v+7d++u9jFWNeIHo182qw8ta03Euiz1
JmLttG6PyO1syfaciGLO7SzrMsZTsS66c+Os1PfG0d2LKv2sz4X+X/9f/jHv
x4pYV7Rsj8jtSg+taRzGdKvz4YcfrrZurAqr3O6aa66pdExaX6U6rGrECaNe
coPfsKkPLWtNxLoq9SZi7bVuj8jtbMn2nIhizu0s6zLGU7Euuv/Hef4748L/
+O/9WGf6z59OGeh/bnTbdXk/VsS6omV7RG5Xunz77beuZ8+evjbU+Wyqx+6/
/37XrVs3t379+sTbtZ4nmwlWNeL4kb3d228+a7Ity1oTsa5KvYlYe63bI3I7
e7I5J6KYczvLuozxVKyrHt61wNdMVf18YMfneT9GxLqkZXtEbgeZUgq53fvv
vOiG9O9ssi3LWhOxLku9iVg7rdsjcjt7sjknIkl9lmTNkoBlbmdZlzGeioiI
haBle0RuB5lSCrnduBEvuKH9u5hsy7LWRERETKp1e0Rulz2yMSciSX2WZM2S
gGVuZ1mXMZ6KiIiFoGV7RG4HmZLv3G70kB6uwb9e6a6vf4W77o//5NX/b7j2
Su+N113pGjb4vbvp+j94b274z95bbvxn9+eb/sXd+qdr3D9edom77O//u7vj
z/W9d95a5u3Xeu++/XrX+M5y77mzgWty1w3u3kYN3X133+jub1zuA/fc5Jo2
udk1u/cWd83Vl7k/XPk798gDf/Y+3PRW90iz21zzB293jz18u2vx0B3elo/c
6R5vfpf7y6ONXKsyn3jsbu+TLRq7v7a8x7V+vIlr85cmrm2re91TT9znffrJ
+127vzZ17Vs/4Dq0aeaeadvU2/GpZu7Zdg96O7d/2HXp8Ij3uWeau24dH/V2
7/SY6/FsC/d855beXs897n2h61/ci91aud7dn/C+/PyTrk/Pv3pf6dXavfpC
G2/f3m3d6y895X3j5afdm33auX6vtHf9y9R1caTW2RzUt6M//1djCfpeUp9R
qv4eNuA5N3zgc27EoK5uxFvdvO8M7u5Gvt3Dv47vDn3evTesp3fM8F5u7PAX
fO2uvqe+56TGKXSOsdYH0Bpnui6Prqktp77/Wrnj+7qPJrzuPv7gDe+MSW+6
Tz7s5505ub+bNWWA97OpA93sjwZ550x7y839eLCbN/1tN2/G227+J0O8X8wc
6hbMGuYWfjrCLfpsuFs8e4T7cs473iVzR/prIyz7vMz5o93XX7x71vfcNwvG
uBULx7iVi8a6VYvHeXVNhW+XjHdr5LLxbt1XE9z6ryd6v1s+yX3/zSS3YcWH
buPKyW7Tqinezaunuh/WfOTdunaa27b2Y+/2ddPdju9meH/a8InbuWGmXwNO
7t78qXfPls/c3h9mu1+2zvHu2z7XzzeVOlftt5/mew/9/IU/l00e2bXQrx93
bM8id3zvYnfily+9Os/t1K9L3en9S92ZA8vy3u4h4vm1zD4kuV1xkev6zDq3
U81gsS3GUxERsRC0bI/I7SBT8p3bxb2PlSsoX1DOoLwhZA/KIZRHKJdQPhGy
CuVIA/s+4zMM5Rkh21DOETIP5R/KQUImEjIS5SXKTUKGouxKmZeyFeUsIXNR
/hKyGOUyymeU0yivCdmNchzlOcp1lO8o5wmZj/If5UDKg5QLhYxIeZFyI+VH
ypFCpqR8STmT8iblTsqfQhalXEr5lHIq5VUhu1KOFTIt5Vsh61LuFTIw5WHK
xUJGFjIz5WfK0ZSnSeVrIWvTd5RqcKk8LmRzyumU1ym3U34Xsjy9Hsr3VLOr
zxmyP+WAygOVCyof1HMdMkPlh8oRlScqVwwZo/LGkD0qhwyZpPLJkFUqt1R+
GbLMkG0q51TeGbJP5aAhE1U+GrJS5aYhQ1WeqlxV+apy1pC5Kn9VDqs8Vrms
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
kzt9+kzWjy2gY1u38Ec3Z8Rqfwzb1uyt9v7K3ZZ/ssX9uK7i/IVBLWe51r97
xy3+sOq1hPfvOuzv0+nqMSbHHmXhwoWpuRWh1kuvCQ8ePOgaN26cut/hw4cz
2kcp5Hb9yurDqe+/ZrIty1oTERExqdbtEbmdLdmeE1HMuZ1lXcZ4KiIiFoKW
7VEucrvX7pvmc6qF47+L/f2O7/e5rtdN8PeJ2rn+OLdn+29ZP76P+3/t2lw2
stL+lcvFsXruttR9Olz1XoXf5Tu3E2GMVmrdlLB2imrAhx56qMJ6yL169cp4
+6WQ273Zp51ZfWhZayIiIibVuj0it7Ml23Miijm3s6zLGE9FRMRC0LI9KoTc
7v0ei/zve9822X34ylL3Tvt5qVzspbumZPXYZgz8JrWv0R0+d0umbnRfjFvn
87dNy36udP/Tp864Z/4w5lxu9/t3K/y+EHK7ffv2+WuQpV+rLN0GDRq4EydO
ZLz9Usjt3nj5aTd1fOFlgIiIiEm1bo/I7WzJ9pyIYs7tLOsyxlMREbEQtGyP
CiG327xil1u/aEeF22YMKs/TdB7cmSxNl9Xc2HCe3doFP9boMR+98ZW/f7+H
ZhRsbifOlD1pWv/41ltvdfXq1UvVfxdffLG/bfr06Ym3XQq53esvPeU+mvC6
ybYsa01ERMSkWrdH5Hb2ZHNORDHndpZ1GeOpiIhYCFq2R4WQ28Wh9ePCOW2n
Tp3OynHNGrLSb//Vez6q0f2Vtynne+ofR7ldW/bXOLeb9NISn9HpPMKwnZDb
ad2/LvXf99t99l/G+nMPs5FTnjx5sux5rP5aGTWlFHK7vr3buo8/eMNkW5a1
JiIiYlKt2yNyO3uyOSeimHM7y7qM8VRERCwELdujQs3tPh+z1j9GGVl1fDJ4
hetz99QqDVlZHAMfm+n3oetQ6PqvuhbFD6v2uJPH4/OtcI7d3FFr3G97j9Qo
t9PaeeG8QV1rQ4TcLtj2H8ozu/Dz0Naza/w85YNSyO1ee7Gtmz7xTZNtWdaa
iIiISbVuj8jtskO25kQUc25nWZcxnoqIiIWgZXtUqLldtxvKr1Mx9K/VZ1gh
e6vKzn8cV+Vjn//TxNR5b+mPU3YWze+Uuen2rteP9z/XJLdbOG59KrOLzgOO
5na975jsjh4qH09dNm1T6nZtv7asWbPGvfbaa65t27auadOmrmXLlu7FF1/0
1yY7duxY4u2WQm736gtt3IxJNvWhZa2JiIiYVOv2iNwuN1jNiSjm3M6yLmM8
FRERC0HL9qgQc7tPh61KnYd2YE/t86uq0PVqQ06mY5z08hKfE4bbJvRa7O+n
eavK/3Sb5u+K8+V2Q85uJz2zEyG3e/ry0ZXO7QvHVN36eOdj7969fp2U6uZf
XHjhhW7o0KGJtl8Kud0rvVq7Tz7sZ7Ity1oTERExqdbtEbldcVHMuZ1lXcZ4
KiIiFoKW7VGh5XbKuEJutmhCzc/PS4LWldN+vvp4U4Xb548tn6Or68YKzcXV
z4P/8mnqPufL7YLjui2stN/qrksRzh+cPuCbRH+Trjt2+eWXV8rpLrroIp/V
pd8+Zkzm18YohdyuT8+/upmT+5tsy7LWRERETKp1e0Rulz2yMSeimHM7y7qM
8VRERCwELdujQsrtfvx+nz/HTvf98JWlNdr2xN5f+nPUqvKNplWvERLmyS6Z
vKHC7TrHL5wrJzpc9Z7/+YVbP3R975/mffmuKan76OfZw8trpZDb9Wk8NfX7
7Wv3Vth+TXK7GQOT5XbTpk1LZXI6527hwoV+/kVA6yEPGzaswvXKMq0PSyW3
mzVlgNm2rGpNRETEpFq3R+R29mRzTkSx53ZWdRnjqYiIWAhatkeFktvt2fab
nzeq+414am6Ntz2ywzz/uKpU1lYVg1rMqjAfNrDj+33+9vZXlp9Lp3PqqltD
T/Zr/kn5NiPr24UMTrlfWMNOhNwunM8XpUfDD/zvlk3bWOPnIEqXLl18zXfJ
JZdUex2ylStXpurDr7/+OqN9PD2w+HO7l59/0jS3s9oWIiJiUq3bI3I7W7I9
JyLX9ZllbmddlzGeioiI+dayPSqE3O7Xnw+nsjFlablC14VN5WqHz52TNrjV
Z/72cK7e6VNn3KkTpyu4b+eh1DxZ/aw18EQ0t9M1asN1YvUcBKLXpXiv8xep
27V2Xrhd209CixYtfK3Xvn378943XMNs7NixGe2jFM636939CffZ1IEm27Ks
NREREZNq3R6R29mS7TkRxXy+nWVdxngqIiIWgpbtUS5zO51fpvPJom786mf3
+gMfp/KqXrdM8ufIRdX6ctng+NGTqXP8lK/p3D3tPxzLzo2/VvnYmlxPVmgb
miur26b1Kz+vLZrb+Wve1h/nz80Lc4T1/6T079/f13kNGzas9n6apxFqwjlz
5mS0j1LJ7WZ/NMhsW1a1JiIiYlKt2yNyO1uyPSei2HM7q7qM8VRERCwELduj
XOR2Izt8XuX80m9mbXGv3vNRtXNQhzz5WdaObevqPRWuKyt1vYofVu2p9nEH
9x2NnesaztVbMvXcPFdleGHbp06dTq2fp/P5+j/ySYV9D3h0ZqVrzGbCnj17
UuO048aNi73PmTNn/PrHuo/Ouauudoyj/Vvfps4vzDVWNeKL3VqZ5nZW20JE
REyqdXtEbmdLtudE5Lo+s8ztrOsyxlMRETHfWrZHucjtigFlacrwdA5eTTl2
6ESljO306TPuyG/HK91X243OxdV6d5p/G913bfK6KJMnT06N044YMcJt3Lix
gq1bt079fvTo0ZV+v3v37mq3Xwq5Xa/nHndzPx5ssi3LWhMRETGp1u0RuZ0t
2Z4TUcy5nWVdxngqIiIWgpbtEbldaTF+/Hi/vnF11yk7n1ozuTpUF54ugdxu
3vS3zbZlVWsiIiIm1bo9IrezJdtzInJdn1nndlZ1GeOpiIhYCFq2R+R2pUW/
fv1qldnJyy67rNp9lEJu17OLbW5ntS1ERMSkWrdH5Hb2ZHNORDHndtZ1GeOp
iIiYby3bI3K70kJjuXPnzq2Va9asqXYfHQeX1YWnc/QHpWFVIz7fuaWbN8Om
PrSsNREREZNq3R6R29mS7TkRua7PLHM7y7qM8VRERCwELdsjcjvIlFLI7Xo8
28LN/2SIybYsa01ERMSkWrdH5Ha2ZHtORDHndpZ1GeOpiIhYCFq2R+R2kCmq
C0/laaKsVY3YvdNj7ouZQ022ZVlrIiIiJtW6PSK3syXbcyJyXZ9Z5naWdRnj
qYiIWAhatkfkdpAppZDbdev4qFswa5jJtixrTURExKRat0fkdsVFMed2lnUZ
46mIiFgIWrZH5HaQKc+8vcadPFXcuV3Xsvpw4acjTLZlWWsiIiIm1bo9Ircr
LnJdn1nmdpZ1GeOpiIhYCFq2R+R2kCmlkNs990xzt+iz4Sbbsqw1ERERk2rd
HpHbFRfFnNtZ1mWMpyIiYiFo2R6R20GmdBxS/Lldlw6PuMWzR5hsy7LWRERE
TKp1e0RuV1zkuj6zzO0s6zLGUxERsRC0bI+KIbebPXy1mzNidb4PoxIH9hxx
G5ftdCeOnfI/Hz10wk16eYlbPW9bno8su5RKbvflnHfMtmVVayIiIibVuj0i
tysuij23s6rLGE9FRMRC0LI9KvTcbuvqPa71795xPW+emO9DqcSglrP8sS3+
8Hv/87FDJ/zPHX7/bp6PrHpOnjxZq8c/W1YXnjhZ3Lnds+0edEvmjjTZlmWt
iYiImFTr9ojcrrjIdX1mmdtZ12WMpyIiYr61bI8KPbfr/8gnPgubNWRl6rZT
p067tQt+dD9v3l+rbevx2o62l4T03E68es9H/jZtN19MmDDB9e/f3x08eLDC
7aNHj3YXXXSRr0317/PPP1/2t5/KePulktstnTfKbFtWtSYiImJSrdsjcrvi
othzO6u6jPFUREQsBC3bo0LO7U4eP+XaXDbS52AH9x1N3b5p2c/+thdu/bBW
2+9922S/Hc11TUJcbrdownf+tn7NP6nVsSVl6dKlvvaU+/btS93+6aefpm6P
+swzz2S8j05D17jjJ5NlnbXFqkbs9LRtbme1LURExKRat0fkdrmnNnMicl2f
WeZ21nUZ46mIiJhvLdujQs7tlkzd6DMw5WtRCjm301p3yhql1rvLNT169PC1
Z9u2bSvcftlll/nbL7jgAte3b1/XpEmTVHa3d+/ejPZRCrndM22bumXzR5ts
y7LWRERETKp1e0RuZ08250QUc25nWZcxnor4lfv+m0lu5aKxeT8OxLqsZXtU
yLndsLZzfC42fcA3qdsGt/rMdbjqPX+7srEu9d/3rvtie+o+m1fs8vNVtc5c
uM/7PRal5sNu/maXvy2cy/fMH8b4n/s9NMP//vjRk+7DPktT95Gd/zjOLRy3
vsLxxeV2ovcd5XlgPq5P0bx5c1/zjR8/PnXbl19+mcropk+f7m87c+aMu/ji
i/1t8+fPz2gfnYeudcdOFPc8WdWHX3/xrtm2rGpNRETEpFq3R+R2tmR7TkSu
6zPr3M6qLmM8Feu6uzef+07Z8d2MvB8PYl3Vsj0q5Nyu2w0TfP61bNqm1G1a
7+6pfxyVyu2U4ck188tzuyVTNvjfhTyu63UTUj/3aPiBv8+m5btS2Z98+vLR
/mdlfWJCr8X+9rb/MNKfk9f9xg9S910991wWV1VuN+Svs/3tug5urunQoYP/
jh48eHDqtkaNGvnbLrnkkgr3vf/++/3tY8eOzWgfpZDbdWjTzDS3s9oWIiJi
Uq3bI3I7W7I9J6KYczvruozxVKzLHt61oOz75N+6C//jv3f7ts/N+/Eg1lUt
26NCzu2Umyn/+mHV7gq3VzVP9tSJ0679le9WOkdvx/f7UlnfwvHfpW6vap6s
zpObM/Jbd/rUudpnXPeF/r5vPf5p6raqcrtJLy3xt7/X+Yvkf3xCRowYkZpj
MWPGDD/PItR+Q4YMqXDf+vXr+9snT55cxdbi6TJsrTt6vLjnybZv/UBZffie
ybYsa01EZG4HYlKt2yNyO1uyPSci1/WZZW5nWZcxnoqIiIWgZXtUyLldOMct
ek0KUVVup3PhdHunq8dU2lY4h07n6wUyWd9u/aIdldbaqyq3+/y9tf721x/4
uEZ/pyVaL+XCCy+sNNdC9d+RI0dS9/vpp59Sv1u/fn01W6xMKeR27f7a1K1Y
OMZkW5a1JmJdl7kdiMm1bo/I7WzJ9pyIYs7tLOsyxlMRGQNFLAQt26NCze10
LdmQ26VTVW438+2V/vZBLWZVesw3s7ZUmCsrqsvttEbeO+3n+ftonbswrza6
z6pyu7Cv5/80MeO/24Lly5enxmml5l+kZ3Pt2rXzv7v00ksz3v5zJZDbPf3k
/Wb1oWWtiVjXZW4HYnKt2yNyO1uyPSci1/WZZW5nWZcxnop1XcZAEQtDy/ao
UHM7EXK7A3uOVLi9qtxu8qtL/e1aXy6dTHK7ZdM2pvbduf44v+6d9lXT3G7e
6DUm17utLTqnbvfu3bG/mzdvnnvrrbfchg0bMt5uKeR2Tz1xn9kYlGWtiYiI
mFTr9ojczpZsz4ko5tzOsi5jPBXruoyBIhaGlu1RIed2YX07XUciSsjtet0y
qcLtiz74zt/e8+bK57l93P9r/7sBj85M3RZyO82BjaKsLn0tPF2Dtqa53cTe
X+Ztnqw4fPhwje53/Phxd+LEiYy3/9zwte7IsVMZP84Cqxqxbat73arF40y2
ZVlrIiJzOxCTat0ekdvZk805EbmuzyxzO8u6jPFUREQsBC3bo0LO7TQ/VfnX
kskVzwnbvnZv6jqwUXZvPZA6T07ZXuDw/uOpea7RLE7n0cVd9zXkhT+u+yV1
W7jWRE1yu8GtPvO3j+u2MPkfnxCtg6Jar1WrVtXe79dff03VjLt27ar2vumU
Qm7X5i9N3Oov3zfZlmWtiVjXZW4HYnKt2yNyu+yRjTkRxZzbWdZljKcifuVG
DOrqBrzawZ05sCzvx4JYV7Vsjwo5t9O1W5V/Te37VYXbjx4+mcrndM7da/dN
c+u+2O5/F7K0NpeNdP2af+KGtZ2TusZs1+vHV9jOmOcW+NuV02lfYV28MCe2
8x/HubHdFro+d09N7a8muV04j2/JlMznoNaWsHZK06ZNz3vfMN47bdq0jPZR
Crld68ebuG+XjDfZlmWtiVjXZW4HYnKt2yNyO3uyOSeimHM7y7qM8VSs625f
Nz01Brpx5eS8Hw9iXdWyPSrk3G7huPXnnfcaXDV3q7/91KnT7t1nv/C5Xfid
/q9cTnlfFK2b9+y/jE3dr/uNH/jbd23Z7zO76OO1dp7+jV5PNpxXt2TqxtRt
2kfYd/p1cHNBTXO7LVu2pL7PM1nzWHQtqwsPl0But8aoPrSsNREREZNq3R6R
29mS7TkRua7PrHM7q7qM8VSs657ct8Q1uu0617TJze743sV5Px7Euqple1TI
ud2xQydS2dlve49U+r0ysm1r9sb+Tmje7M+b9593P3u2/eZ+/H6fO33qTIXb
9+085OfKnjlzbn/KBQOnT59xR347XuExC8ZXnTVmi+nTp7tmzZp5L7nkktS1
ysJtUZXnXXXVVRXWQ165cmVG+yuF3O7JFo3dmmV2uZ1VrYmIzO1ATKp1e0Ru
Z0u250QUc25nXZcxnoqIiPnWsj0q5NxOvNF0us/BPhm8It+HUiPCmnlzR63J
2T7bt29f6dpkNbVhw4buzJkz599JhG4j1rlDR4s7t3visbvduq8mmGzLstZE
rOsytwMxudbtEbmdLdmeE5Hr+swyt7OsyxhPRUTEQtCyPSr03G7zil05P38t
KWHdPV0vI3peXrbRvItrrrnGW69ePV/nXXDBBanb0r322mt9zdi/f3938ODB
jPdXKrnd+q8nmm3LqtZErOsytwMxudbtEbld7cnlnIhiz+2s6jLGUxERsRC0
bI8KPbcTs99ZXemar4XI0UPH3aSXl7hv523L2zFkMgcjKd3eKf7c7i+PNnLf
LZ9ksi3LWhMRETGp1u0RuV3tyeWciFzXZ5a5nXVdxngqIiLmW8v2qBhyO6g5
c+fOdZdffrnr169f1vZRKrnd99/Y1IeWtSYiImJSrdsjcrvak8s5EcWe21nV
ZYynIiJiIWjZHpHbQaZ0L6sLDx4p7tzu8eZ3meZ2VttCRERMqnV7RG5nS7bn
ROS6PrPM7azrMsZTEREx31q2R+R2xc2RI0fcrl27crrPUsjtWj5yp9uw4kOT
bVnWmoiIiEm1bo/I7WzJ9pyIYs7tLOsyxlMREbEQtGyPyO2Kl927d6fWQNEY
rpgwYYK78MILM1LXLcuEHiPXud+OnLT/g2qAVY3Y4qE73KZVU0y2ZVlrIiIi
JtW6PSK3Ky5yXZ9Z5naWdRnjqYiIWAhatkfkdsXL8uXLU7ldx44d/W2vv/56
xusef/XVVxnttxRyu8cevt2sPrSsNREREZNq3R6R29WOXM+JKObczrIuYzwV
ERELQcv2iNyueDlx4oRr1KiRu/nmm93XX3/tb/v2229d9+7da2yPHj3cgQMH
Mtrv8yPXu4OHizu3a/7g7W7z6qkm27KsNREREZNq3R6R2yUnH3Micl2fWeZ2
lnUZ46mIiFgIWrZH5HaQKaWQ2z3S7Db3w5qPTLZlWWsiIiIm1bo9IrdLTj7m
RBRzbmdZlzGeioiIhaBle0RuB5ny/Kj17sCh4s7tHm56q1l9aFlrIiIiJtW6
PSK3S04+5kTkuj6zzO0s6zLGUxERsRC0bI/I7UqXtWvXur59+7q2bdu6pk2b
uhYtWrgXX3zRTZw40R07dizxdksht3vkgT+7rWunmWzLstZERERMqnV7RG5X
XBRzbmdZlzGeioiIhaBle0RuV3rs27fP1a9fv9p5F1ozZciQIYm237OsLtxf
ArndtrUfm23LqtZERERMqnV7RG5XXOS6PrPO7azqMsZTERGxELRsj8jtSgtd
u+yqq66Kzelk+u2jRo3KeB+lkNs9eN8tbvu66Sbbsqw1ERERk2rdHpHbZY9s
zIko5tzOui5jPBUREfOtZXtEbldazJgxI5XJXXPNNW7+/Pnu5MlzNZzWSRk5
cqS74IILUvc7evRoRvvoNXq9+/XgCetDrxFWNWKze29xP66fYbIty1oTEREx
qdbtEbmdPdmcE5Hr+swyt7OsyxhPRUTEQtCyPSK3Ky2ee+45X/Ndcskl1Y7X
rl69OlUfLl26NKN9lEput+M7m/rQstZERERMqnV7RG5nS7bnRBR7bmdVlzGe
ioiIhaBle0RuV1ponoVqvXbt2p33vvXq1fP3HTt2bEb7eGH0d0Wf2z1wz03u
pw2fmGzLstZERERMqnV7RG5nS7bnROS6PrPM7azrMsZTEREx31q2R+R2pcWb
b77p67ybbrqp2vvt3bs3VRPOnTs3o32UQm53f+Mb3c4NM022ZVlrIiIiJtW6
PSK3syXbcyKKObezrMsYT0VExELQsj0itystdu/enRqnnTBhQux9zpw541q2
bOnvc9FFF7kTJzKr8V549zu377cSyO02zrLbllGtiYiImFTr9ojczpZsz4nI
dX1mntsZ1WWMpyIiYiFo2R6R2xUvW7dudRs3bqxknz59UuO0mm+R/vs2bdqk
fr9gwYKM91sKud19dxvndkbbQkRETKp1e0RuZ0u250QUc25nXpcxnoqIiHnW
sj0itytOdD2y6q5FVlO1DvKmTZsy2veLZXXhL0We293bqKHbvflTk21Z1pqI
iIhJtW6PyO1syfaciFzXZ5a5nWVdxngqIiIWgpbtEbldcRIdi62ty5cvz2jf
pZDbNbnrBrP60LLWRERETKp1e0Rul5x8zIko5tzOsi5jPBUREQtBy/aI3K54
UT2n+RO1cd68eRmvb9d7zHdu74HjWfqrqseqRrznzgZuz5bPTLZlWWsiIiIm
1bo9IrdLRr7mROS6Pvubf7jXXV//CtfgX690N1xb7o3XXekaNvi9u+n6P7g/
3XC1u7nhP3tvufGf3Z9v+hd365+ucbfdXN/dfssf3R1/ru+989b67v/5zxe6
P5f97u7br3eN7yxXtZqyaKm+j85bkFovqGmTm/163w/ed4t7+P5b3CMP/Nn7
cNNb3X+t91/8fR57+HbX4qE7vC0fudP95dFG3lZlPvHY3d4nWzR2rR9v4m3z
lyaubat73VNP3Od9+sn7Xbu/NnXtWz/gOrRp5p5p29Tb8alm7tl2D3o7t3/Y
denwiPe5Z5q7bh0f9Xbv9Jjr8WwL93znlt5ezz3ufaHrX9yL3Vq53t2f8L7U
40nXp+dfva/0au1efaGN97UX27rXX3rK+8bLT7s3+7Rz/V5p7x3wagfvwNee
cYP6dnRvvd7J+/abz7oh/Tt7h/bv4oYNeM47fOBzbsRb3bzvDO7uRr7dwzt6
SA/33rCe3jHDe7mxw19w40aUO35kb++EUS+5D0a/7Ca++5L3wzGvuMljX/VO
Gfeam/r+Wcf3dR9/8IZ3+sQ33YxJb7pPPuznnTVlgPfTKQPdZ1MHutkfDfLO
/Xiwmzf97XJnvO3mfzLEu2DWMLfw0xHeRZ8Nd4tnj3BfznnHu3TeKO+yz8uc
P9p9/cW73m8WjHErFpa7ctFYt2rxOO+3S8a7NcFl4926rya49V9PdN8tn+S+
/6bcDSs+dBtXTnabVk3xbvl2qvthzUferWunuW1rP/bqmpBaX15qvSrNfVN/
fNemWf57V6pvsfeH2e6XrXPcvu1yrtv/4zzvgR2fu99+mu899PMX7vCuBd4j
uxa6o7sXuWN7Frnjexe7E7986T25b4k79etSd3r/UnfmwLK8ty+ImLmW46nk
dpAppZDbqR5Um2qxLcsMEBERManW7RG5XTLyNSci1/WZ3h/KE5QrSGUMyhqU
OSh/UA4hlUkom1BGobzi4M75qfxCWYYyDeV4ykxUm0llH3ovq7+jXET5iHfD
TJ+ZKDtRjrJ93fRUrqKMRVmL8kFlOiGHUSajbEYZjfIa5TZSGY6yHGU6yndW
f/l+Ku9R9qMMSHnQ11+8l8qHtF1lRsqOlswdmcqTlC0pY1LWpNzpi5lDUzmU
MillU8qp5kx7K5VbKcNSlqVMa+bk/qmcS5mXsi9lYB9NeN1nYiEfU1amzEz5
2aT3zuVpytZC1vb+Oy+m8jdlccrklM29O/R5n9WF3E4Zns/zBnX12V7I+ZT5
KftTDjj4jU6pXFAZYcgM+5/NEKUyRWWLyhj79m7rM8eQPyqLVCb58vNP+owy
5JXKLkOW2bPL46l8U1lnyD67lqksNOSiykiVlXZ6+kGfnYYcVZmq8lWprDXk
rspgQyb715b3+Iw25LUhw328+V0+0w35rrLeR5rd5lUGnMqD77/F58RSmbFy
4ZAjh2xZ4yb6Dg65c6PbrnN33n5tubfWT+XUeq8rv5Z6ryrTDvm28m6p7FsZ
eMjDlY9f98d/8kaz8mhOnp6Vh5w8PSvXsYTj0jGGrFzHrr8hPSuP5uTpWbl/
js4+X80fvD2Vles51XObnpXrNdBrEZeVh5w8PSvXa63XPD0r13uj69n3SnpW
rvdUXFau96Dei+lZud6zeu/GZeX9q8jK9dmIy8p9Tl72mUrPyvXZ02cwLivX
ZzYuK9dnPDYrL/tO0HdDNCsP3x/6LonLyvXdE5eV67sqPSsP32v6jotm5eF7
UN+JcVm5vkPTs/LwfZuelYfv582rp1bIysP3ub7bK2XlZ9uB9Kw8tBvpWXlo
Z9TmRLPykJPHZeWhPbPKyi3HU8ntIFNeGvN90ed2aqOscjvLDBARETGp1u0R
uV1y8jEnItf1meU8Wcu6jPFULGWjWXnIyeOy8pBRpGflIdNQvqGcI2QeISdP
z8pDTp6elYecXCp3Uf4SspiQk6dn5SEnT8/KQ06enpVHc/L0rDzk5OlZecjJ
07PyaE4ezcqjOXl6Vh5y8vSsXLma8rX0rDyak6dn5amcPC0rDzl5elaufFA5
YXpWHs3J07PykJOnZ+XKLZVfpmflyjmVd8Zl5SEnT8/KlacqV03PypW/KoeN
y8pbnc1v07Ny5bzKe9OzcuXCyofjsnLlyXFZudqQuKxcebVy62hWHrJt5dxx
Wbly8fSsPO6cchl3TrkMOfl/uehCd3PZ76JZefSc8mhWHndOudTnVJ99cjvI
lFLI7fSZCZ+B2mpZayIiIibVuj0itysuijm3s6zLGE9FREQrQ1YePac8mpVH
zykPWXnIyZXdKddOz8qj55RXyMoj55SHrFz71XGQ20GmqC7cs7+4r0uhvFuf
HYttWdaaiIiISbVuj8jtiotc12eWuZ1lXcZ4KiIiFoKW7RG5HWRKSeR2t9b3
ubfJtgxrTURExKRat0fkdsVFUed2hnUZ46mIiFgIWrZH5HaQKS+P/d7t/jW/
82S1VkBt5p7/5//0H92fbvhDpeuZhbnn6dczC3PP465n9v/+zX9y997dsNL1
zNLXaE1fpzX9emZhndZ8XM8sbo1WWQxrtEavZRZdozV6LbPoGq3Ra5lVWKM1
ci2z6Bqt6dcyC2u0pl/LLLpGa/RaZhXWaI1cyyy6Rmv6tcy0Rkjctcy0pkjc
tcxk3LXMytdo5VpmiHVFy+xDktsVF7muzyxzO9VhaqNMPgeMpyIiYgFo2R6R
20GmFEJuF2cmc8+1XuTOjTMrXc8szD2Pu56ZjLuemXLBdcsmVLqemYyu0VrI
1zNLX6M1rNMat0arjFujVcat0SrzsUZr+rXMwhqt0WuZRddojV7LLLpGa9y1
zGT6tczCGq3p1zILa7SmX8usVTXXMgtrtKZfyyys0Zp+LbOwRmv6tcyUP+fr
Wmbp67NaXsssLiOX2czIw7XM0jPyrlVk5OFaZukZudYIjsvItaZwXEber4qM
XMZl5DIuI5fZvI5ZyMlzfR0zi4w8XMcsPSMP1zFLz8jDdcwqZ+RzYjNyrQce
l5HLuIxcJq3pLLMPqxqxWPKwYjnO6ij23E6fF5N+knF+jYiImETL9ojcrm5w
/Phxt337dnfs2LFab6tQc7tMVIagvpTFtixrTcRisCbXMktfnzVcyyw9I0+y
PmtcRq7sJS4jl3EZ+ZoqMnKZzYw8XMssPSMP1zJLz8jDtczSM3Jla3EZubK4
uIxcxmXkMi4jl3EZuSyk65jFZeQyLiOX2czIU9cxS8vIw3XM0jPycB2z9Ixc
mXhcRi7jMnIZMnKdS66frTLyv72lV63b7WLJw4rlOKujmHM767rMMr9GRERM
omV7RG5X3OzevdtNnz7dbd68Ofb3kyZNcpdeeqmvR4MXX3yxGzBggDtxItka
KH3K6sJdv9Y+/0uCVY2o/o2yBIttWdaaiIiIwWhGrvPx4jJynb8XMnLlgtFz
yeMychmbkZeZnpFfeturtW63iyUPK5bjrI5c12eWuZ1lXcZ4KiIiFoKW7RG5
XXHTqFEjX2t279690u9Gjx5dIa9L9/LLL3dHjx7NeJ+lktupj2O1LataExER
ManW7RHzZHOD1ZyIYs/trOoyxlMREbEQtGyPyO2KmwsuuMDXml988UWF248c
OZL6nWzRooXr06eP69Gjh7vkkktSt7dr1y7jffYZV1YX7ivu3E5ziixzO6tt
ISIiJtW6PSK3qx25nhOR6/rMMrezrssYT0VExHxr2R6R2xUvyuZCnbdv374K
v1u9enXqdwsXLqzwu9OnT7unnnoq9ftMz7krhdxO6/9obpHFtixrTURExKRa
t0fkdrUj13MialqfnTlzxo0fP96NHTu2wu07duxwgwcPruCyZcuq3I5lbmdZ
lzGeioiIhaBle0RuV7xoLDbUd5pfEUVjuLr9sssui33syZMnU+fjrVixIqP9
vjJug/s5w9yu0GpE1YdaF8hqW1a1JiIiYlKt2yNyu9qR6zkRNanPNmzY4OrX
r++3f9VVV1X43bvvvpvKDIOqy6rCOrezqssYT0VExELQsj0itytuNJ9CNdYH
H3xQ4faQ2916661VPlb1mu6jPC0TMs3tCrFG1HX4LHM7q20hIiIm1bo9IrdL
Tj7mRNSkPlOd1aZNG9e4cePYmkx1ZU2xzO2s6zLGUxERMd9atkfkdsWN6q5w
Xt2BAwdSty9fvtzfXq9evdjHae3jMNY7c+bMjPb56vsb3E+/1Dy3K8Qa8abr
/+CvyWexLctaExERManW7RG5XXLyMSeiJvXZoUOH/L+tWrUqmJpMWtZljKci
ImIhaNkekdsVNyGfC+ey6Wehmu/CCy/0t69cubLCY/bu3evuuOOO1OO2bNlS
7T5+3H3UrdywP2WnoWvc3OV7KtxWHYVYIzZs8Huz+tCy1kREREyqdXtEblc7
sj0nojb1WVU1WZgD0aBBA/f888+7/fur3oZlbmdZlzGeioiIhaBle0RuV/x0
6tSpwlrGV1xxhT+/LeR2V199tXvhhRf8vIubbrqpwn3vuuuu825/5aYD7tq2
C6q0xSvf1Og4C6lGvPG6K93JfUtMtmVZayIiIibVuj0it6sd2Z4TUZv6LK4m
27Ztmxs1apTPCnUtDe3/2muvrXIblrmdZV3GeCoiIhaClu0RuV1p8Pbbb1d7
XbI4Va/t3r27Rtt/euDqKuvCJWv3nX8DrrBqxBuuvdKd+nWpybYsa01ERMSk
WrdH5Ha1IxdzIpLWZ3E1WTr9+vXzx/DLL7/E/t4yt7OsyxhPRUTEQtCyPSK3
Kx10ntqgQYP8vItQD6ar23WO3ZQpU3zdWFPWbT1Yq3PtRCHViA3+9Up3er9N
fWhZayIiIibVuj0it6s92Z4TkbQ+q0lNNmzYMH8cv/76a+zvLXM7y7qM8VRE
RCwELdsjcrvSRfMsNG77008/+ZpLayTXhrgx3S/X1excO1FINeL19a9wZw4s
M9mWZa2JiIiYVOv2iNzOhnzMiaiqPtu5c6fbsGGDu++++/z8Xf0/7Of11193
S5YscXv27PHXub3oootc/fr1q9yvZW5nWZcxnoqIiIWgZXtEbgc1JX1Mt6bn
2hVijXjdH//J7PNoWWsiIiIm1bo9IrezI5dzIqqrz6655ppK+9U6fKJFixYV
br/tttvcjh07qtyWZW5nWZcxnoqIiIWgZXtEbld3+f77793XX3+d0WPaDVqd
8bp2hVgjqm9j9Xm0rDURERGTat0ekdtlD+s5EUnqsziOHj3q67Djx4+f977W
59tZbovxVEREzLeW7RG5Xd0lXKts8+bNNX5MGNPNZF2785GPGlHZt+XnMd/f
CYiIiNbtEbld8ZCN+ux8WK9vZ7UtxlMREbEQtGyPyO3qLiG327hxY0aPa//W
t25pBuvaWWJVI059/zWzz5BlrYmIiJhU6/aI3C5/JJkTkev6zDK3s6zLGE9F
RMRC0LI9IreruyTN7XbsPZqlIzo/ljWilZa1JiIiYlKt2yNyu/yRZE5Eruuz
QqzJJOOpiIhYCFq2R+R2xU2TJk38+nFJDGvKZZrb5RO9XxERETE31pZCy8Oq
otCOM+nYai7x748C6Bely3gqIiIWgpbtkUVNBvkj1HW1sZBrQgAAACheCi0P
q4pCO85iye0QERExN0LxcvXVV6fytwYNGmQkuR0AAABkk0LLw6oiG8dZ1+ZE
AAAAAEBlVq1alartpk2bltFji2EsFwAAAIqXupzbMScCAAAAAETXrl19bVev
Xj139GjN1yQmtwMAAIBsUpdzO+ZEAAAAAIBQVnfxxRf7+q537941fhy5HQAA
AGSTupzbMScCAAAAAAJLly51DRs2dN26davxYzp27OiaNWvmDhw4kMUjAwAA
gLpKXc7tBHMiAAAAAAAAAACgEKnruR1zIgAAAAAAAAAAoBCp67mdYE4EAAAA
AAAAAAAUGuR2AAAAAAAAAAAAhUex5GHFcpwAAAAAAAAAAAAWFEseVizHCQAA
AAAAAAAAYEGx5GHFcpwAAAAAAAAAAAAWFEseVizHCQAAAAAAAAAAYEGx5GHF
cpwAAAAAAAAAAAAWFEseVizHCQAAAAAAAAAAYEGx5GHFcpwAAAAAAAAAAAAW
FEseVizHCQAAAAAAAAAAYEGx5GHFcpwAAAAAAAAAAAAWFEsepuNERERERERE
RESsSwIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAA1BXyfb0YREREREREzJ0AAFA88L0NAAAAAABQN6D/BwBQXPC9
DQAAAAAAUDeg/wcAUFzwvQ0AAAAAAFA3oP8HAFBc8L0NAABQePx26Jjr0m+m
G/T+4nwfCgAAlBD0/wAAigu+twEAIMpDT49yv7u9b07VPuEc73603F15b3/3
93e/6p+f6x8d4pau3p7vwwIAgBKA/h8AQHHB9zYAAER5qNXbbul/+K/O/Zv/
LSdqX9onOLdu8273YJfxPqv7by27uv/j3cbu/3zrQXfJw73K882y3+3YdSDf
hwkAAEUM/T8AgOKC720AAIhCbpd7NCdW82GVzV3a+BX3f73Z3P2bybdW8N+9
0sL/Tvd5ecQ8/xgAAIBMof8HAFBc8L0NAABRyO1yi+a/ah6s8riLOj3l/vfx
d1bK7IL63f/drbW/71X3DXBT5qzJ9+EDAECRQf8PAKC44HsbAACikNvlhnDd
CWVwmger+bBV5XXpav5svZZd/WPvbDOate8AAKDG0P8DACgu+N4GAIAo5HbZ
R+fJ6Xy5/3nPa/78uZrmdekq6/sfD7zk87vWvaey9h0AAJwX+n8AAMUF39sA
ABCF3C57KFc7d92Jbv68uaSZXdT/8GIrf+1ZXYNW6+Sx9h0AAFQF/T8AgOKC
720AAIhCbpcdznfdidqqte/+5ukOfh9aL4+17wAAIA76fwAAxQXf2wAAEIXc
zhatPdfgsaE1uu6Ehf92+H3u4se7+/3p3L51m3fn+ykAAIACgv4fAEBxwfc2
AABEIbezIXrdif/xSGbXnbBQ5/T93f/P3ptHWVXded//vVO/rqdXr16v3eux
V6fp1fZqn4QnbXdoEkIkPEmUGH0kBqPERBIjcQBFVIpRQGSOEyiIEBEoBZlE
QAYZqpSxmAcLEJlHmaeCYijYL9+N+3DuvedWFVWnhnP357PWd3HPPufss8+5
Z2/u71t7aHNt7juVg7GzAAAgiP8AAJIF7TYAAITBt6s+GqP6fbvuxCvVWnci
jrGzur7Wv3Bz3wEAgN8Q/wEAJAvabQAACINvV3W07sQfamDdiepK5XBz32nM
rsbuAgCAnxD/AQAkC9ptAAAIg29XNWp63Yk4pLG6tz3a15ZT/qJ8RgAA8Avi
PwCAZEG7DQAAYfDtbgz1XftZ22vrTvz3bjW/7kQc+us/P279RZV50OhC5r4D
APAI4j8AgGRBuw0AAGHw7SpHyroTvxtY6+tOVFdu7juVX3PxaU4+AADIfYj/
AACSBe02AACEwberGLfuhDyvulx3oipe3f894pEU/fUrfzLf+fVgey+/enYc
c98BAOQ4xH8AAMmCdhsAAMLg22VH88E9+uKkYB47eV5/PfRRc/NLT1cojU2t
LX/O9aOrqjoMmM7cdwAAOQrxHwBAsqDdBgDIPYZNWGaaPPxmlX2b2vbtqlpO
3aPutTbQuhM/fHhYlct665O9a92307OR8messf3obkSbdxyulecKAAC1C/Ef
AECyoN0GAMhN1F/qmR7jzV0t+9eqD1cbPp/uSfdWW33CdJ0ob6uyaO3W257q
U+u+HQAAQDrEfwAAyYJ2GwAgt5G/dNcjb5oOzdub/f/P39S571ZVqey6B91L
0uZg6z5kDr4dAADUC4j/AACSBe02AIAfDHt/sWnS6lUzvOE95vT/8X/VuQ9X
WamsKrPKrntIIhqr+u2nXsa3AwCAOof4DwAgWdBuAwD4gx07++IEO850wd99
p849uYqkMtoxsVfLnOR1EuTbfed3g/DtAACgziH+AwBIFrTbAAD+4cbOPvqz
F+rl2FmVSWVL4pjYKOTbyUfDtwMAgLqG+A8AIFnQbgMA+MuwD5bUq7Gz4TGx
4z5eWdePJzbw7QAAoL5A/AcAkCxotwEA/OZ0yXnTfcBU8/NfDqjTsbO6tsqg
sqhMuQS+HQAA1BeI/wAAkgXtNgAACI1HbfXY27U+dtaNidW1c2FMbBT4dgAA
UF8g/gMASBa02wAAEEbjU2tj7GyujomNorZ9u/93yGP4dgAAEAnxHwBAsqDd
BgCAdOzY2YEfmRb3D6yRsbPKU3nrGrk2JjaK2vbt/urt3+PbAQBAJMR/AADJ
gnYbAACyYcfO/mmEefSuTmbzf7ul2n6d8lBeyjNXx8RGUVe+nU/PGAAAKgfx
HwBAsqDdBgCAirBjZx94zQz83q+rNHZW5+hc5ZHrY2KjwLcDAID6AvEfAECy
oN0GAIDKYMfODppmfvjLP5uP//F7lfbsdKzO0bk+jImNAt8OAADqC8R/AADJ
gnYbAABuhGDsbIu8csfO2jGxV4/xbUxsFPh2AABQXyD+AwBIFrTbAABQFaYt
+MKOex3U6MGUsbP6rDTt0zGAbwcAAPUH4j8AgGRBuw0AAFVF414HvjU7GDvr
xsQqzdcxsVE43+7ml542//RMN9PgiZ43rH/948s2jxsRvh0AAKRD/AcAkCxo
twEAoLps3nHY/OGZv1jpM6Qi/6z5YyPM/Xmjza/y3jMPdBlrfm01zjzUJd+0
vqrfdH3f/LbrB+Z33cabR7pNMG26f2j+0GOilXy/qmj/oVN1fesAAFDPIP4D
AEgWtNsAAAAAAAB+QPwHAJAsaLcBAAAAAAD8gPgPACBZ0G4DAAAAAAD4AfEf
AECyoN0GAAAAAADwA+I/AIBkQbsNAAAAAADgB8R/AADJgnYbAAAAAADAD4j/
AACSBe02wHW++8vXEEIIIeSJAHyE+A8AIFnQbkNNcOLECTNt2jTToUMH06xZ
Myu9a049e/as6yJGot/wl/ZvRgh5JOo9Qn4K3w58hfgPACBZ0G5D3Kxdu9bc
cccd5rXXXjMFBQVWSYH4HSH/RL1HyE/h24GvEP8BACQL2m2IG/Wlq6/96SqC
+B0h/0S9R8hP4duBrxD/AQAkC9ptiBt8O4RQkkS9R8hP4duBrxD/AQAkC9pt
iBt8O4RQkkS9R8hP4duBrxD/AQAkC9ptiBt8O4RQkkS9R8hP4duBrxD/AQAk
C9ptiBt8O4RQkkS9R8hP4duBrxD/AQAkC9ptiBt8O4RQkkS9R8hP4duBrxD/
AQAkC9ptiBt8O4RQkkS9R8hP4duBrxD/AQAkC9ptiBt8O4RQkkS9R8hP4duB
rxD/AQAkC9ptiBt8O4RQkkS9R8hP4duBrxD/AQAkC9ptiBt8O4RQkkS9R8hP
4duBrxD/AQAkC9ptiBt8O4RQkkS9R8hP4duBrxD/AQAkC9ptiBt8O4RQkkS9
R8hP4duBrxD/AQAkC9ptiBt8O4RQkkS9R8hP4duBrxD/AQAkC9ptiBt8O4RQ
kkS9R8hP4duBrxD/AQAkC9ptiBt8O4RQkkS9R8hP4duBrxD/AQAkC9ptiBt8
O4RQkkS9R8hP4duBrxD/AQAkC9ptiBt8O4RQkkS9R8hP4duBrxD/AQAkC9pt
iBt8O4RQkkS9R8hP4duBrxD/AQAkC9ptiBt8O1RVfV281BQv+sSU7t5YI/kr
3+0rFpiL+4rr/F7rWjyL66Le156o47UnnkXFwrcDXyH+AwBIFrTbEDd14dvl
5+eb5cuXZ92/bNkyM3jwYFNWVlZuPnURv+9Z+5l5s/+LpmuHJ8yIwS+Z41+u
TNmvGPfV3l3s/jFDB5mSnesy8lg17yPzSq/OZuXcKXUeB1VV770xwLZHkp5D
1DGKQQf2eMHsWLkwY5+em/Lo8exTZnDPTmbX6oKMY5bMnGDz1zOPyn/6uBGm
4xN/qJX7VSw9b9Jo0+v59ublLh3Msk8mBvvO7FhrXu/TLeUeFk4ea0a+8nJs
16/oWfikmq731PFroo5Tx+ub8O3AV4j/AACSBe02xE1d+Ha33nqr6dGjR0b6
yZMnTbt27YJY8dy5c+XmU9u+3cmvVtty/ce/f9s81PIX9vO/f+d/mPN7rvVF
+fzj923af93+P03b3/7a3HTTX5m7mjdNyeP09tXmlr//O3tcz+efqvM4qKr6
9r/9q3n8kYfMud0bzLEtK1L26XkM7dcj+B7nfvhuyv6tS+eam//2b+xz+P1D
v7LPKCr+rSiOHfTiC/ZZu+1W97SwsXRN3K/ieJXlJz/6QfD9TX53qN23b90i
uz1nwl/strwabT//5KOxXZ+Y/rpqst5Tx6+LOk4dr2/CtwNfIf4DAEgWtNsQ
N/XJt8vLyzMtWrQwvXv3rpe+neLXwmn5wfbbg66Vc8uSOXZbMe4/fesfgnFO
6qOi/fIC3Dkv5T1j/qXBP1qVF9Mrj4t7vjD71y/OGDd1eNPyjHFrOrbcbeUX
yufUtjU2n4ru+cTWVdaHSE+XXzF8YK/Ic9RHRvf3l9dejozpFcP/4Hu32zKU
d+1wHKtjVZaM5xS6Tx373pCBGccc2VyU8h2U95zcs0pPWzxjfBBPqxy6/3vv
bG63wzH9wY1LbMz/8//1o3LHFuq6GoMYdf2oZ54e01f0/br96gsW7i+m7XQP
JnzPurbe8/T9upeod7EuVJP1njpOHXfPhDpe/4RvB75C/AcAkCxotyFu6pNv
V1JSYv+dNGlSvfTt0vXGy91sORXraLvz021trLd7TaGNfX7XqqXtc+LioG1F
84PYT31ZssX0f+6VZ/uYSDre9VMZP+I1m5/r46L+Pop11bdF2/Mnv2ePc32G
BnR7PshTMeYfH37AxmYP/+reIA+lR5VB4/zUz8gd96Pv/5ctv67n0pwUM4fP
PbtrvY0LFX+mx/SKeZU2bezwCp+vi2N1n+5av/jpj4PYXs/p3279Z3N0S1FG
mVwMrn5TLi38PJz0jH/Y+D/sd6Rno+P1vVVUNn1/7tm5mF5exo+bNArKlO1c
9VPSe6Jz9H0WTB1X7jMPPwvdk8qZ/gzVp0l9kfR5+ayJdn/fLs8GeXX40++t
3+Gu2/KunwSxu56jPJbwe6F32+U9pG/3IF3l/bp4WZ3H7tRx6jh1PHfreHl1
H8BHiP8AAJIF7TbETX3y7Rz12bfbtnye7WPSqf1jtozdOzwZ7FNsr3hOcZPG
Wulfjatz+39598/Mr35xVxATZovpNV+U8tbxiuW+WvapWT1/qk3T3EvyDKaO
fstua2yXzlEfIDcP1KwPRtp9itO0rRhY2+8Pf8XO3+T6D6mPxkfvvZVxfcXt
it3U10TX1pgw5a970n6dq3vTvFWbF8/O+qyiYno3zrDNg7+05VMM+/Rjj2T4
AuE4Vsfo/hXDuljVPSf1+dFnlcPF7Zp/TL6Cnq/KrfvfuaogiJ3DUuyv8959
o5+d00yfdWx574DuX8dpzq5wTO++ez2zbOe662l8nbyYYQN72WtX9MzDMb1i
cX0Of3fyIdy75Y7VO1Y0e5J9DtpW2eQnffjO69c8gTHDUt43jQvdUDDDPPn7
39ht9dVyHo7eeV1XvkW2fk21GbtTx6nj1PHcrePl1X0AHyH+AwBIFrTbdYvW
SVixYoVdN+HSpUt1XZxYwLe7MS2YNMaOAVP85mJTzVmufeojoVjNxU8aS+Xi
SMVSSnd9KyqK6XV+eIyZ5sBXfuGxU4rj1HdEn3VdxYD6/MJTfwz67GiclouF
FaMpxnNxcbbYzHkC4dhUcafS3HgslS/bXPXlxfQz89+xaeo3othSeSgvPcds
Mb0boygpblUflfSYXtKx4TF0WhdAaVNGvxnMTxYlxbCuj4r6nZR3T/qO72z2
Q/tduOfnYno9c+Xz5dVYPdv53To8aY9NH19X0TOvSkzvntuBDYvt9qRRQ4Lj
VVY9H/ccdT+uTF98NtMeLx9FabonfV/ykmq7vkWppus9dZw6Th2vn8K3A18h
/gMASBa023XL5s2bg7Ek8u5uhLNnz5rz58+npMn7O3PmjLly5UrW8+QV6rp7
9uypUpkrAt+u6nKxstYZ1LbmvlKstLFwpp1fyM1rrz4X8gDUr0J9GSTFUIqT
wmsWOqXHqpLGN7l+GU7yBJSPPss70LXUJ0XXGvVqXxuLadydYlbFoe48xa3a
J0XFsDpXeYX9A9eHR32RtF3VmD7cF8ilyYNw9xFW1Dzt6rcjPyTqOaXH9Jo/
St+J0pW//JiocroYNuxZZNPTj/3OHhdeJ9TF9IqZVR71HXI+T7rkXThP4kae
eVVievfcXH8a+QbuePk/en5Rz1FrZto27pt3U+XQfqU9+ptWtp9TXda72qz3
1HHquEQdrx/CtwNfIf4DAEgWud5u33nnncFv67AaNGhgHnvsMfPVV1/Vafk2
bdoUlGnJkiWVPq+wsPCb/hk3paQ3atTIpo8bNy7jnOXLl5u7777bnuOuefPN
N5vf/va3dt3VuMC3q7o0X5LK6cau6bPmpE+P9fKHDbZxqOIoJ9dfx81XFFZU
TK9ruL424TjOjZNzfSYUHytvxWW//t8/v3rMfTaefWtAz5RzFXNqDFy4f5CT
xlYpPTyWzM0/7+ZSr2pMr/Ft6fGl7i39fsOx6dZQ3xbN2eTW74yK6VXO9Hw0
tlFzZkX5BpKek4tZ1ecp2/24sWhuTcn071np6xZ8bD/LR4nKQ3NQRd1rRc88
HKcr7rftxluDgmMVz8cV06vPTTimd++6PIT069aFarPeU8ep4+HvmTpet8K3
A1/J9fgPACDXyPV2O+xRZdPcuXPrrHxV9e1GjRplz2nYsGFKurvf9Hv6/PPP
y30G8vuOHj0ayz3VlW/Xpk0bU1RUFOjy5cvWj5Q3O3ToUHufGzduNLt3786a
T237dpq3SHNdqa+N4iXNQ6VyaoyW9qsPjKR+GnvXfh7EzOF+G04VjaFLj/sU
Fysv7VMMqWtqW+tdumMU4yvNnat+Ke6d2b5igU3TvPaKPdWfY8I3cyC5fU4a
d+f8hh0rFwbzMKlvkTumvJhefTXU18bNc6WxYNqW76B4VHmpP4riV63dqbzy
2v0pI5/w3Fcqg4t7Ned71HNSPyiVUf2R1KfmvTcG2Bhb5VEfnqiY3vWnWvrJ
h+bV3l3sZ52TfpzmqHIxv8ripHsKx/Q61q0xqn5Q2a6nPlDyXTTflj5X9MzT
43Tdt/pmacyd5j/TvpqI6fVuyFvQ/GFffrM2Ql3H9DVZ76nj1HHqeN3X8fLq
PoCP5Hr8BwCQa+R6u+18rHbt2pl9+/ZZz0aeTq9evVL6nNXV3HJV9e26d7+2
Vtv9998fpJ04cSLIq7i4OEg/depUyr3OmzfPlJaW2rVWO3bsGOzT5zioC9+u
SZMmGV7kkSNHTJ8+fTLS0/sohqlt305xaXgtQMnNny4pBnJzYrm+Nm58XVRM
37vT05H7NBd6VH8Nzccevrbiy/AcSq6vhObB0rbrC+PmxwrHlE7yJaLKoPgv
vK6l+sAo7gzH9G4NzHQtnDw20m/WfOjar1g/nLfGlUXNw6Xnqf3htSZ/c/89
wfi09Oc06MUXguM0x5fzVNx3kb6+pfwFxfnKX9vyOfS9hMcbOmldyah7kn/g
5pYK9zlS/x6lub5LwTX3FQf9pWwdv/oc3Ni+8p65exbyD7Tt5hBz369ifxfT
px/rYvpwHyI9NzfnfvpzdDG9nqFiej0jdy3NqZ9+T3URu1PHqePU8dyt4+XV
fQAfyfX4DwAg18j1dtv5dl26dMnY16lTp+u/ozdvroPSVd23a926tT1H9+BQ
XzKX1+nTp4P0MWPGBOkLFy5MyUd90pznFZd/WRe+XVzU1TjZo1uKbF8bxWdR
+7Vu4tfFy7Lud/FjeJ6j9FhT+7PtU6yWbQ52xbvh6yqf9GOVpjxKdq6r8F4P
blwSeZz6t5R3fxXJ3Ue2+wxfR/9qvn31B6noOakPjo512/IKNIYu2/PSvYXv
Q8dVVKbyyhmU7Wqe5c0RpX1uPFxln3l6mvwcd68qd9jfST82vSzh9y/qOYbP
173It9B8blX9vuNUbdR76jh1PFs5g7JRx2td+HbgK7ke/wEA5Bq53m6X59tN
nDgx8LPmz5+fsk9+ltKee+4506JFC+ttySt76aWXbD+udI4fP27at29v+6xp
3QeNzezXr5+dX69Vq1Zm4MCB9ph0yvPtNNb1ySefNE8//XRwrsZ7qq+dPDad
c/vtt9ttyXl5krZnzpxpz2nWrJlN01jSKEaPHh2c99lnn1XuwZYDvh1CKEmi
3iPkp/DtwFdyPf4DAMg1cr3dLs+3GzRoUOBXbdmyJUjXGq2NGzeOHN9ybezM
TWb9+vUpeYX9twkTJkSeJ99s//79Wc8L+3by7IIxMTffbMe6imxlipK8xvA5
8v+i0L24Y9Q3ryponQzp9ddfN3fccYdZu3ZtlfKpa4jfEfJP1HuE/BS+HfhK
rsd/AAC5Rq6329l8O62t6vY5f8uxc+fOwJ/TONTp06fbOeG6du0a+FvqRxcm
7L85ae65N998M2VN22effTbrec63W7FiRYpnF17zdtasWebtt98O9st71Nqx
kutXp/vR9qJFi8yZM2eCY9VXL4rw/HevvPJKhc9UfemyeYUqg55fUiF+R8g/
Ue8R8lP4duAruR7/AQDkGrnebjtvTv82bdrU6pZbbgl8pgYNGpi9e/emnKM5
3jTG1PVxC6M+a+7cK1euBOnpvt3UqVNT8tN6ra4cYdJ9O/X7c2VO9+wcOsad
o7UoHG6cbOfOnYO0HTt2BMdqPGwUGhPsjpE3eaMUFBRYvfbaa+aRRx4x3/rW
t+x2EiF+R8g/Ue8R8lP4duAruR7/AQDkGrnebjsPrDxprdkLFy5UKr9JkyYF
5x0+fDhID/tv7777bsZ5Q4YMCfZrLdeo8zS+1nmK2Tw7ob5/UR6g8waHDx8e
pK1ZsybIf/z48Vnvyx2j+fyqC/PbIYSSJOo9Qn4K3w58JdfjPwCAXCPX223n
2z3wwAN2nQlp8uTJdp2IcL87rf8QhcZ86pz8/HwzbNgw25/MnROeq66idWF1
Tbf/wIEDkeeFlc2zE/IFdUzDhg0j79WtRyG2bt0a5Dly5Misebpj4vDb8O0Q
QkkS9R4hP4VvB76S6/EfAECukevtdnnrUpSUlNi1IqJ8uHXr1gX917LpRnw7
zUtX0XlhqU9dOlr/tm3btnYNWdcnT9vSo48+Gpx7zz332PG8Gp979OjRIP3P
f/5z5DPSc3DHaD6+6oJvhxBKkqj3CPkpfDvwlVyP/wAAco1cb7fL8+2E+qCl
e2Xq6xYeX/v4449bP0trPbzwwgs15ttpLdfwfHx79uxJySPc168y0jheeXdu
u2PHjpHPIFwGeYPVBd8OIZQkUe8R8lP4duAruR7/AQDkGrneblfk240dOzbw
rObOnWvT+vfvH6TJ0wqjY2rKt9N5WrvWbTdu3NicP38+OFbnacyuuyf1qVN5
JHlyzu/T9oIFC4LztPaG9qlvYRRh73Lz5s2VeKrlg2+HEEqSqPcI+Sl8O/CV
XI//AAByjVxvt8vz7bQebMuWLQPPSuu0Cs2F58ahpjNq1Kga9e1EXl5ekNa+
ffus9xSex27EiBE2TWNo0+nRo0eQ3/r161P2qT+eG3erccFxgG+HEEqSqPcI
+Sl8O/CVXI//AAByjVxvt53H1aZNG7Nr1y6rbdu2mYULF5pWrVoFflazZs2C
czp37hykz5gxw6bJ3wr3S6tJ3+7ixYumadOmQXp4HdgzZ85EenBdu3a1afIc
09Fx7hytxaG5+y5fvmyOHz+eMi+evL84wLdDCCVJ1HuE/BS+HfhKrsd/AAC5
Rq632+F56rJJ40jDXtqaNWtS9svrisqnpnw7oWPC13TjddUn0KXJd3O0bt3a
pqmvXhR9+vQp9xloDr+ysrKqP+gQ+HYIoSSJeo+Qn8K3A1/J9fgPACDXyPV2
++677470qeSJqY+d1ps4d+5cxnmaZ05+XfgcHR/2zQ4dOhQcr7UsXPqqVasy
8tO8dOH1Iipznuaoc/u0HoZYtGhRUP4wKltFfeaGDRtmbrvttpR7atiwoenX
r58dMxwX+HYIoSSJeo+Qn8K3A1/J9fgPACDXoN3OjsaSak3X1atXm5KSkiD9
7NmzVunoGI1jzcbp06dv+LzS0lJz4sSJlL5wJ0+ezPAatX6FjquM/3bq1Cnb
p1D51AT4dgihJIl6j5CfwrcDXyH+AwBIFrTbEDf4dgihJIl6j5CfwrcDXyH+
AwBIFrTbEDf4dgihJIl6j5CfwrcDXyH+AwBIFrTbEDf4dgihJIl6j5CfwrcD
XyH+AwBIFrTbEDf4dgihJIl6j5CfwrcDXyH+AwBIFrTbEDf4dgihJIl6j5Cf
wrcDXyH+AwBIFrTbEDf4dgihJIl6j5CfwrcDXyH+AwBIFrTbEDdJ9+0QQggh
5IcAfIT4DwAgWdBuQ9wk3ber67//I4RqV9R7hPwUvh34CvEfAECyoN2GuMG3
QwglSdR7hPwUvh34CvEfAECyoN2GuMG3QwglSdR7hPwUvh34CvEfAECyoN2G
uMG3QwglSdR7hPwUvh34CvEfAECyoN2GuMG3QwglSdR7hPwUvh34CvEfAECy
oN2GuLlR327u3Llm5MiRZv/+/ZH7CwoKzIgRI4L9x44dM++8846ZMWNG5PHH
jx83o0aNMtOnTw/SZs2aZfOQxo0bZ7Zv3x55LvE7Qv6Jeo+Qn8K3A18h/gMA
SBa02xA3N+rb3XrrrfY9bNmyZca+gwcP2n2S/DYxderUIG3dunUZ5zz33HN2
3y233JJyjQYNGpgWLVrYf7Vf+aRD/I6Qf6Lep+rivmKzd+3n9t+o/aW7N5rt
KxZk3Y9QUoRvB75C/AcAkCxotyFuquLbOS9t3759Kfv69+8f+HrOt5syZYrd
Vnq7du1Sjj9z5oy56aabzG233Zbh2/Xu3dt+LisrM02aNDHNmzfPKAvxe6aI
4VGuqzbq/f71i83rfbqZj957KyW9eNEn5tXeXUzXDk+YMUMHmZKd6+r8eXy5
dK5tY1fPnxq5f8nMCXb/nrWfmbO71ps//e5Bs3jG+Dovd67q3O4NZvyI18yL
zz1p+nd7zqxfOL3Oy3Qj2rdukRk+sJfp1uFJM+rVvubUtjXBvoKp48yEd14P
tk9+tdoM6dvdbCycWStlw7cDXyH+AwBIFrTbEDdV8e1efPFF67f17ds3SL90
6ZK5+eabzZAhQyJ9u1dffdX+K6/OofGxyqdfv35ZfTtx3333mWbNmmWUpbZ8
O2J4VFURw8ev2qj3v7n/HltPftj4P4K0zz9+36b91+3/07T97a+vtl1/Ze5q
3rTOv6MtS+ZUus4f/3Kl+adv/YOZNGpInZe7vqlvl2ft+1vdfPRO6N34XauW
5kff/y/77GujjY2j/Ce2rrLl/ZcG/2h+8qMf2M///p3/Yf/eo/3tHn3Yvv/6
rL/9/Pp//9ze67bl82rlO8K3A18h/gMASBa02xA3VfHt5Nd16tTJem3y68TH
H39s30/NZxfl27kxtKNHjw7yatiwoenSpYt57bXXMny7u+++27z99tumffv2
9rzZs2dnlKW2fDtieP9EDF9/Y/iarvfyI3Wv+u7Cdf7xRx6y9cX1VR0x+CV7
nPzK9Dwu7vnihre/Ll6Wmc8319LfBNL3y0NV+o3U+chrf3MNfd/ymaPyOLK5
KPje0889uHFJ1vPC+R/dUpT1bxu6l7AnHD5X5dXfTrL1EVbZor4DlVf7spXr
8Kbl9m8XbrvlXT8xv3/oV9nvo4LvUNq9pvDa/39vDbLb5/dsNDf/7d/Yv+1k
y7cq5b/2vixNKUMc5df3OG3s8OBZD+7Zyd7PyrlT7Ha4zg968QW7T/Ul2zXj
Fr4d+ArxHwBAsqDdhripqm9XXFyc4qf95Cc/MW3atLGfo3w7jXd98MEHTaNG
jWz6kiVLbPq2bdsifTuNxVU/u8aNG9vjWrdubS5fvpxSltrw7Yjho+NMYnhi
+LqK4Wuy3us5f/vf/tV07/Ck6dC2TUqd7/x0W+tL6nvVM5EXq+8z/V18740B
9lmoDml7/uT3UvxavffKR++Frqf3wc0BqvSw3/qLn/7YPNTyF/Y62q8+vqob
SnPnuM+VrfP67Lz6P/fKMz/43u3m4V/dG+T3xsvdgnOLZk8y/3brPwf7nn7s
kaDu67t25ZIWTh6bcW3lL7+61T0tguPy2v0p2K/+nD//Xz8K9t3Z7IfmwIbF
wbl6vyTtG/nKyyl5637+49+/HZw7oNvzwXvb8Yk/BOnynXUf7jyVU22326/n
7a6RnpfTrA9G2vS5H75rt1UvtK32Nnyc2hGl6/3R9ubFs+32u2/0y3g2VS3/
0H497HuifXr++h7iKn+61Mdcxy395MOUOq98lK4+uDVd39PrPoCPEP8BACQL
2m2Im6r6dkKemtan2Lz5Wiy4bNkym57Nt5s3b579vGbNGvPwww/bdSdElG8X
Hifr1rbQ+WFq2rcjhieGJ4avfzF8TdZ7ff96jvJO0+u8/GK9/3re6n+of9Xv
Nj0PzR+p5zFtzDC77ep0j2efstvzJo2227tWF5g3+79oP09+d6htS17Ke8Zu
F07Lt8fq7wXa7pPXwX63akecfzp93AjbjuiduNE678Y3D+zxQtBubCiYYZ78
/W/stt5dtS16FhpLL89Y7YT25Q8bbM/Vs5E3rDZgxdzJtj1Kv7bLX22KxvD3
69ox5f5+9Yu77Huve9d7pbqo/svhc39598/sPXy17NOUvHs+/5Q9Xs9k56qC
wDPWM9V3s3zWRNv3U+2m/RvLni/s3wu0T+2MnpfqwgtP/dF+F/pOVR7dR5RH
ru9C+ehvE7f8/d+ZDn/6feTzdt9puK9t1N85qlJ+fd/K+/knHzVbrz7PYQN7
2fYkzvKH1ebBX9qynNmxNqjzeieUpvpRG/U9ve4D+AjxHwBAsqDdhripjm+n
Ma96J+XdacyrI5tvJ8mfUz86pWlsrajIt9P6Fzr+gw8+SClLTft2xPDE8MTw
9S+Gr6l6rzqte/nwm/qQXuf1velZO09dzy1b/0KNJ1ZdcZ/1nPQ3AG3rHdN7
rs/yPcP9IvW9Kl/nZ+t70ncezltl0nvktvXuujqvd3rBpDGB9N1XVOd1PfdO
fvHZzCAv1zbJl9W2pGPdfalcagNd/8soufzV11Tb+lfPrnenp+17pPw176PL
X2Ot9V66c3VsVN9b6ZVene35U0a/GeTvno/efZenayNVL+ZM+Iv9rPqUnl9F
fVTV5uhc3Y/k/haTLj0P7Xd+utpRV2eqW37NM6nPUW1IXOV30vuj498a0DNI
U5139/XUH35Ta3U+XPcBfIT4DwAgWdBuQ9xUx7c7ffp00KfnnXfeCY7J5tuJ
l19++VrfoJtvDubGi/Lt2rZta8fiFhUVmQceeMCeozG1YWrStyOGJ4Ynhq+f
MXxN1Xv1H9X9yAOX7r2zufXB5eeqH63Gxqvuat2NY1tWBH1b5Zmm5yXPXceq
HdExWptE/8qTVp7yrHWcjtFchOl12n13qvN6Z8L7VSfk87rt8Nh4tUHa76S/
JVRU51Uel5feK+1f9slE896Qgfaz6rXaK6eXu3Swx24rmm/7xOoY9aPdsXJh
ZJ0P5y8pP/nE4XcwnL+ee7Zzwzq9fbX9TlweekeV7upbOE+1u1pn2/V/jhrL
X1Gdkdx37vrQpsutC6R2XfVSbYzK4v7+UN3yyzvXs466dhzld1LfYJVBf2MJ
9yF3fWzdcwyvS1NbdR/AR4j/AACSBe02xE1BQYH57ne/a15//XVTWFhoVR63
3Xab6d+/f7D9xBPX+o+dOnUqSAv3jXNjXN3cdLt377bb8u8cQ4cOTfHtmjRp
kjLOT3PipY+RFTXp2xHDE8MTw9fPGL6m6r086HB9ce2P3jv5xfqsuuyO17ju
cJ/TsOTXal+n9o/ZvJxHrfH1Sl+34GN7nL7P8Psgr17tgNYfzlbn5fM/+ptW
wfbaBdOq1cc2XK/cnIyq8248tdLKe266F72nf3z4gYx9zqt38yeqruk5KF39
mF17GJVvRXXeSe2q/m6g62hb72T6M3NyY73ds0ivM+G/gaTL/U1Ez1/3oDqY
foz6aOuY8FyZKov7+0N1y6+2MtsziaP8ktpulUXtefg+pPCclm4+hYrG18cp
fDvwFeI/AIBkQbsNNcGJEydsn7dHHnnE3HHHHeZb3/pWim8W7o938eLFlPUh
9FlpYS5cuGCuXLmSsl3efn12fe9uhJr07YjhieGJ4etnDF9b60in97GVx+z6
lOp5aay77jmqj6n8TT037ddzUpp8VG2Hv3+Xh/42oDzlwWt7/cLpdn9UnXdj
7Qs/yrf1Te1GTdR5jY93fq3eS9VRec/6W4WO1VokylN/t9B7kK3OKz+9i/J/
1ZaFy/rjJo1s+TWeW3N96lm6eRcrqvPyi3X/ei/1dxZXZzSPgMqtPsLq26q/
Cbh22bXTKo/+1qDn7tpc+eC6nt5h/c0ifC357qorGlOv+1W7LN87vUya40D5
69nomakvr8ql+hhH+d1clGpb3NwKbg7UOMqvPtnKQ9fX+6XvQ9LY/fQ679Yj
198RovoQ11TdB/AR4j8AgGRBuw1wndqK34nhieGJ4etPDF9b9V7rgYT7M6oe
hNdl0XN5vU+3rOerzdBx+p607eaElH/vjtH45PA6MPouwt61viPXZjipLqqu
uHP0juhfefZR5VC5tV/vu6vzE0e+YT9r3HVUnXdrn3w6cXTQdrnyufko1R66
dD2XKM/WjW8PH6sx4W6/3ufwPvc+R5UtXa69dN+Fe876u4prX53C77faOze+
W3LfodaoiSqj9JfXrs3v8OU3/amVh7bd+kJO+puM6m/42ro/zXMaR/n1f4n6
74a/D9c3N47yu3clXXpHtV/3prWL3PHub1Ka36A26iS+HfgK8R8AQLKg3Qa4
Tm36dsTwxPDE8PUjhq+teq/vL2ruQPmZXxcvy1g7Ol3an+5hajvqPPm1bu3k
sHT98HyH6XXflS+9L2S65IOHr+XKoL6v6ePEw8c66X61hklUGaRs1w377fpb
RNTzlPR3APn+4f1RZYs6T5541DPSuWrDonxk5a3nnf7cdO9fFy+NfBeinlO2
d0D3oWtnm4+zuuVXufW8XN/luMufTVF1Qvlme0fjFr4d+ArxHwBAsqDdhppg
2rRppkOHDqZZs2Z2rrtwjH4ja1bUNvoNf3HfplqRYpVzuzZmpB/e9E0Mv6e4
/Dyu7j+9fW1Kmt2OOK9k53oby6Wn6/oqR1T+XxcvD8qn88sry5kd61Ku5cpw
/moMeHbXhqzHXr/Wsqsx75LIMkjZrjug27UYXp/3XI3ho56ndGLr6qvx6mcp
+6PKFnXevnWLI5+Rzt29ujDjO3B563mnPzfdu7yKqHch8jlleQd0H7r2ya/W
1Ej5VW49L91HTZQ/m6LqhPLN9o7Gpdqs96h6Ctd5hKorfDvwFeI/AIBkQbsN
cSOv7plnnrHrU0hJQr/hUXL0379zr/k//+r/q/NyIIRqR//ctJ35+2//os7L
gXJHAD5C/AcAkCxotyFukvxO1XX8gG5MxPAIIYSqIwAfSfJvdQAAH6HdhrhJ
8jul3/C1MacOQqj+iHqPkJ/CtwNfSfJvdQAAH6HdhrhJ8jtF/I6Qf6LeI+Sn
8O3AV5L8Wx0AwEdotyFukvxOEb8j5J+o97kjrWGi9ZVvdF1T5Kfw7cBXkvxb
HQDAR2i3IW6S/E4Rv+eWiOFRZUS9zx0tmTnB/h+0Z+1ndV4WVP+Fbwe+kuTf
6gAAPkK7DXGT5HeK+D23RAyPKiPqfe6IOo9uRPh24CtJ/q0OAOAjtNsQN0l+
p4jfc0vE8Kgyot7XX13c84X5unip/Td934mtq8zp7atT0tLrfFRf23Be7nPJ
znXm+Jcrg3RtH9uyIvPcb/LTtc/t3pCxX318969fTB/fhAjfDnwlyb/VAQB8
hHYb4ibJ7xTxe/0WMTyqCVHv66eG9uthbrrpr2wdvvlv/8YUTB1n01fN+8j8
+3f+h02XfvT9/zLbiubbfel1/sdNGpkXnvpjkOd7QwbaPPV5+ayJ9ti+XZ4N
8urwp98Hx2i75V0/Cer2n3vlmR9873bz8K/uDY5/4+VuQd5D+nYP0lXer4uX
1fkzROUL3w58Jcm/1QEAfIR2G+Imye8U8Xv9FTE8qilR7+ufFs8Yb+vO808+
arYunWuGDexl3n2jnzm1bY2tT/fe2dx8texTs3LuFPNP3/oH85Mf/cCel17n
1R6oHrt8//Lay0Gdd8d++9/+1RTNnmR6Pv+U3db+ORP+Yj5853W7PW3MMHv8
wB4v2O2HWv7CbCiYYZ78/W/s9uFNy2259Fn5q42YPm6EOfnV6lp7XqhqwrcD
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
aV66is4LS33q0tH6t23btrVryLo+edqWHn300eDce+65x47n1fjcbODbRUP8
jpB/ot4j5Kfw7cBXkvxbHQDAR3K93S7PtxMjR47M8MrU1y08vvbxxx+360to
rYcXXnihxny7MWPGpMzHt2fPnpQ8wn39KqPwON508O2iIX5HyD9R7xHyU/h2
4CtJ/q0OAOAjud5uV+TbjR07NvC55s6da9P69+8fpMlXC6Njasq303lau9Zt
N27c2Jw/fz44VudpzK67J/WpU3mkjh07Bn6fthcsWFDuc8G3i4b4HSH/RL1H
yE/h24GvJPm3OgCAj+R6u12eb6f1YFu2bBn4ZFqnVWguPDcONZ1Ro0bVqG8n
8vLygrT27dtnvafwPHYjRoywaRpDWxnw7aIhfkfIP1HvEfJT+HZV58TXZ82Z
Y6UVHwj1kiT/VgcA8JFcb7edx9WmTRuza9cuq23btpmFCxeaVq1aBf5Ys2bN
gnM6d+4cpM+YMcOmaa648JjamvTtLl68aJo2bRqkjx8/Pjj+zJkzQfr69euD
9K5du9o0eY5RnD171hw7diyQ8+1at24dpJ06daqKTzmVJL9TxO8I+SfqPUJ+
Kg7fbs6IdWZj4Z6s+zcU7Dbjey0xl8uuVPtajoPbTtg89W+YsouXzcLRG83o
5wvM5P7LzfEDZ4J9V65efuXM7WZMXqHJ7/a5Kf58b7Dv8uUrZtZba83sYWtN
6dnMuZG1/9OR682MN1bba4jeP59shv5hdmz3BLVLkn+rAwD4SK632+F56rKp
QYMGKV7amjVrUvZr3dmofGrKtxM6JnxNN15XfQJd2vHjx4Pj5b8pTX31omjS
pEml5sSTv1ddkvxOEb8j5J+o9wj5qTh8u07fzzd/6bgwI1190eRrdfjue1bn
Sy5W+1ry/qYOLAryLJq+LWVf9+YTzLO3jzGvPDTDPPe9sabjf44xJw9d+10n
r07n9PzZRLtPnwvzi+2+o/vOBHlOGbA847qfj98U7N+39dpvT3y7ZJPk3+oA
AD6S6+323XffHelPyRNTHzutN3Hu3LmM8zTPnPy68Dk6PuybHTp0KDhea1m4
9FWrVmXkp3npotaLKO88zVHn9mk9DLFo0aKg/GFUNqVrvGwUzZs3x7erBMTv
CPkn6j1CfqomfbsR7eZbb+u9ToWx+XZLJn5pr/fJm6szfLvFE7fYtK1FB+z2
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
Pl9y0RTmF9u0lTO3mb2bro2dlWcnr27T4n1m35Zjtn+dvLjTR8/ZNSZ6/myi
PWbXhiM27ezJC2bk0/Ovbh+2/fNeeWiG6fifY4Lrpvt24/I+s/kDVBbiPwCA
ZEG7DXFzo+/UxYsXU9aH0Gelhblw4YK5osmfQ9vl7ddn1/fuRiB+R8g/Ue8R
8lPV9e2O7T9jPbSCscVBWvo42XOnL9jt2cPXBsfIz1Oa+ueJbONkNT5W42Rn
vLHaHi+fUKT7dp+8eW1/2cXLGXkAREH8BwCQLGi3IW7uuOMOO99cr169TGFh
odWJEyfquliVQr/hL+7ZhBDySNR7hPxUdX27I3tOW79Mfewc6b7d7o1H7Pa6
+buCYzTPndLmvL3Obqf7dhpbO/zxT+0x6menvnn6XHr22t8j0307eYJ2f0nq
3zwBskH8BwCQLGi3oSbQWNZnnnnGenhaXyI8RrVnz551Xbys6Dc8QgghhPxQ
dZBPJr8svBas8+3c+rKnjpyz2/NGbQiO0T43llbIt9NYWMeyj7ba/RsL9qRs
Z/PttB6t0gAqC/EfAECyoN0GuI5+w9f1uB2EUO2Keo+Qn6qubyee+97YYF0K
sW/zsWDOux1rD9m07j+eYDp9P99sW3nQHNx2wvT5xRR7nvPh5Nlpv/w8zXcn
T055rP10px0n+1KLyeX6dkP/MNvkNXm/2vcC/kD8BwCQLGi3Aa5D/I6Qf6Le
I+Sn4vDtBv96uvXlHJpqV75ceD1Z+XHhdWPlsW0tOhCcs2bOjmDfh32WmtKS
C6ZH8w+DNLcW7YXS675deE495Tf0sTnVvhfwB+I/AIBkQbsNNcG0adNMhw4d
TLNmzcx3v/vdRI2Tres4AiFUu6LeI+Sn4vDt3Pqx6icXRuNj0+ebKzl53q4P
G4U8uRNfn83M45s+dm5NCvfZLcWlNWh1/aLp26p7K+ARxH8AAMmCdhviRl6d
5rYrKCiwShLE7wj5J+o9Qn4qDt9OHprWjgjPcVeb5Hf73I6xVb8+gMpC/AcA
kCxotyFukvxOEb8j5J+o9wj5qTh8O7Fmzk5T9PFXseR1oyyZ+GWwfgVAZUny
b3UAAB+h3Ya4SfI7RfyOkH+i3iPkp+Ly7QCSRpJ/qwMA+AjtNsRNkt8p4neE
/BP1HiE/hW8HvpLk3+oAAD5Cuw1xk+R3ivgdIf9EvUfIT+Hbga8k+bc6AICP
0G5D3CT5nSJ+R8g/Ue8R8lP4duArSf6tDgDgI7TbEDdJfqeI3xHyT9R7hPwU
vl3tce70BXNk7+m6LgZ8Q5J/qwMA+AjtNsRNkt8p4neE/BP1HiE/FYdvt+yj
rWb6a6vM4V2nIvev+mS7mfbKCnN497X9Jw+dvbq90iyasDny+FNHzpkZb6wy
n4/fFKRpzVjlIc0evtbs23ys2uV2XLlizMLRG82nI9dnpK+cud2MySs0+d0+
N8Wf7w32Xb58xcx6a62ZPWytKT17KSNP7Vd+M95YbcouXrZp43stMZ2+nx9b
uaF6JPm3OgCAj9BuQ9wk+Z0ifkfIP1HvEfJTcfh28qI6fPc90/feqRn7ju47
Y/dJc95eZ9MKxxUHaV8uP5BxzvAnPrX7nvve2JRrPN9onOn988n2X+1XPtVl
T/FR0/Onk2x+3X88IWWfvDql9/zZRFsWe8384oz7mjJgeUa+8hzd/n1bj9s0
fLv6RZJ/qwMA+AjtNsRNkt8p4neE/BP1HiE/FZdv57y0QztPpuzL77Yo8PWc
b1cw9ppvp/Shf5idcvzZkxfMs7ePMXk/yM/w7d7rVGg/Xy67Yj02+W3VpWvT
D8ywP801A+6fluHbbSzYY47sOZ1SrpfvmWK3nW+n+1bZ1DcvjLw+3UM23+70
0XPm4vmycsvm8jxzrNRcKM3s0+fycf350s9Vn79j+89klM2h/Se+Pmv/TUf3
e77kYuQ5QuddupBa/mxlqa8k+bc6AICP0G5D3CT5nSJ+R8g/Ue8R8lNx+Xbv
Pl9gfa2xXT4P0uXhdPzPMWZS32WRvt2HLy21/8ojcmh8rPJRX7dsvp2Qf9aj
+YcZZZGvtG3V12b7ylSpX10UmnNOyD9M9+3SyWvyvnmpxWT72fl27h7Wfroz
OG7XhsM27aM/r8jw7fQ8BrScFvTF+0vHhZHXUr66v/CxI59ZEOzftHhf4AtK
8h7Lyi4H53a7Y7yV9mmsbjpTBxbZ56z9KtOaOdfKr/6PnX/4QZCvyrD/m/Jv
XrTXpg19bI79d/Cvp1dYlvpMkn+rAwD4CO02xE2S3ynid4T8E/UeIT8Vl28n
v27EU/Os1+Y8m88+uDZWVPPZRfl2WqNB/84cet1Xkjcmf+rDPkszfDt5ZvLC
nG+0dPKXGWXRHHvOPwornFcUFfl28v2Uz4TeS+y28+3k18nnGvzg9ODY4Y9/
avvxyc9K9+20/cpDM8zeTUeDcbjr5u/KuJ47Vt6Yjn2/+6LgeqUlF63X9kab
WbaPmxt3PG/UhpRz+933kdlYuMfs25I6F6D6EWq/vi/NE6hnqrn6XL7yRHXO
lqX7bX9C9R205xXuCfpJqhybl+yrsCz1mST/VgcA8BHabYibJL9TxO8I+Sfq
PUJ+Kk7fbvuaQyl+mvweeVQiyrfTeFeNT5XHJeRfKV0+VZRvJw9JnpLrRzaw
1ceRYzyrQnm+nXzIXndNsuVx/fPCvp3WynD+pBtPKx8syrdTHrpvoX917Ji8
zzKuWd6xWitD+RZN32a2Fh2w0rHyzty5Ora05EJGvkJ9/HR++phWrS9iyxvy
+XQfSis5eT7w7dTvzlFRWeozSf6tDgDgI7TbEDdJfqeI3xHyT9R7hPxUnL6d
kKem9Sl2rLvm4alvl8jm2xVN+8p+Vt+uQa0+tutOiCjfLjxO1vXrKvr4q5Sy
aG1X9d+bOSRVWi+2PMrz7d5qOzcooyPs22n9W32e3H95MM5XnlmUb5e+LoXG
l2odjnTKO1br6Spfbat/opP672U7N4y81KgxxnpO9nsJeaHOl9M9ON/Ozfkn
KipLfSbJv9UBAHyEdhvipi7eqfz8fLN8eeaaZo5ly5aZwYMHm7Ky8udBJn5H
yD9R7xHyU3H7dp+8uTpYW1b+jSObbyfJn1M/OqVpbK2oyLfT+hc6fu4761PK
cvxgiV2vIl2aJ648svl2uqb1B6el+oNh307IC1MZrbf2+DUfLmt/u298MfV3
k8en9HTSj9UaEO5Y1y/u8O5TkfdSkW8n7y9q/6IJm22+X++4vraI+z61RkWU
b1dRWeozxH8AAMmCdhvipi7eqVtvvdX06NEjI/3kyZOmXbt2tkzSuXPnys2H
+B0h/0S9R8hPxe3baTylm1Nu2isrg2Oy+XZiXN5nwfoIbuxmlG/3+u8+sWNx
vyjcE6zXoDG11UFz7GnuOvX10zx1+nz8wBm7z60rMarDAtvXzkllTPfttK6D
u+8daw/ZtPLmt9u98YgZk3fNE9TY0nTSjx39fEFwrPr3ycPT3HdaL1Zjd+Ur
uutW5NstnrjF5jVlQJH1P6cOKrr6ebldI1b56tke3HYimN9O45FFlG9XUVnq
M8R/AADJgnYb4qY++XZ5eXmmRYsWpnfv3vh2CKFIUe8R8lNx+HbqY5bfbVGw
rbnN5O+cOV4apIX7xhXmF6eMx5RHpO1xoXneNOY07NupL1x4nQnNiZfeB64q
aLxo+hoWmnNPaB2MqDUu5KPJ2wuvKXHlyjVvUX37HPK9dIzuT2hNC3mD4XvR
2q9RuDnqujcPHdvn+rErZ26zz8ftk+fpPERdpzzfTmUd0W5+yrmrZ223+9R/
Tttun/pNys8TxZ9fW09WnmWY8spSnyH+AwBIFrTbEDf1ybcrKSmx/06aNAnf
DiEUKeo9Qn4qDt9OYzjDc6Lps9LCXDxfZv2i8HZ5+/U5fd2E+kb6PWj9CteH
0HGh9FLwWc/FrbWrfn7pzyhMuM+cjs32LLQWhsYGh4l6/tnKr75zUWt7KM9w
2aPupzJlqc8Q/wEAJAva7bpF862tWLHCzr926VL23wNJoj75dg58O4RQNlHv
EfJTcfh2ED8VjXWF6kP8BwCQLGi365bNmzcHc6/Ju7sRzp49a86fP5+SJu/v
zJkz5sqVzL8fitLSUvPVV1+ZdevW2bnfagJ8O4RQkkS9R8hP4dvVTzRu9f3u
iyo+EKoM8R8AQLLI9Xb7zjvvDHyxsBo0aGAee+wx62HVJZs2bQrKtGRJ5ppa
2SgsLLTn3HTTTSnpjRo1sunjxo1LSV+zZo154IEHIp/D9OnTY7kXB74dQihJ
ot4j5Kfw7cBXcj3+AwDINXK93ZavFeXbhTV37tw6K19VfbtRo0bZcxo2bJiS
7u43fE/Lly+v8BmMHj06rlvCt0MIJUrUe4T8FL4d+Equx38AALlGrrfbzsdq
166d2bdvn9m9e7cpKioyvXr1Cjyrm2++uc7mlquqb9e9e3d7zv333x+knThx
IsiruLg4SJ84caJNa9q0qfn444/N3r17zZYtW8yjjz4aHK/nlD7mtqrUlW/X
pk0b+906Xb582Y4FVp/KoUOH2nJt3LjRvgPZIH5HyD9R7xHyU/h24Cu5Hv8B
AOQaud5uO9+uS5cuGfs6deoU+FaaZ64uqKpv17p1a3uO7sEhT8rldfr06SD9
4MGDZvbs2Rlz3snXcuNqpQ0bNlT/hkzdvFNNmjTJ6EN45MgR06dPn4z09LHF
YYjfEfJP1HuE/FRcvt2OdYfM1qIDseRVGQ7tPBmsbbpl6X6zp/horV0bcoNc
j/8AAHKNXG+3y/PtXD80af78+Sn75Gkp7bnnnjMtWrSwvpC8spdeesn6Qekc
P37ctG/f3nTs2NGuEas+Xv369bPz67Vq1coMHDjQHpNOeb6dxro++eST5umn
nw7OVb8x9bVTH0Gdc/vtt9ttyXl5krZnzpxZ4fPp2rVrcM6CBQsqPL4yJPmd
In5HyD9R7xHyU3H4dvqTaN4P8mt1HYUO333PLHhvo/086pkFpudPJ9XatSE3
SPJvdQAAH8n1drs8327QoEGBZ6Vxow6NF23cuHHWueCU5/r161PyCvtvEyZM
iDxPYzn379+f9bywbyfPLjyO99SpUza9onnqwpLXWBHyGt3x6fdUVZL8ThG/
I+SfqPcI+ak4fLs1c3ZYH831edu/9bh5qcVkc/xgSaXzyO+2yEwZUFTp48O+
nfrbaXvf5mM3VnDwmiT/VgcA8JFcb7ez+XZaq8HtS/e3du7cGfhzGoeq9Vbn
zZuX0jdN/ejChP03J8099+abb6asafvss89mPc/5ditWrEjx7MJr3s6aNcu8
/fbbwX55j1o7VmrWrFlwP9petKj8v/2qT+Ett9wS3GtpaekNP98okvxOEb8j
5J+o9wj5qTh8u7fazjWdf/hBsP3l8gPXfLStmWMsLl0oM2eOZf7W6nvvVPPq
w5ljJDQW9sje06as7HJKeti3E883GmfG5BVW5zbAM5L8Wx0AwEdyvd123pz+
1boMkvOqpAYNGth1GsJojQqNMXV93MJozKo7NzxfXLpvN3Xq1JT83Dxy6XOr
pft26vfnypzu2Tl0jDtHa1E43DjZzp07V+rZhMcJP/HEE5U6pzIk+Z0ifkfI
P1HvEfJTcfh2GiM7ot21uVaWTv7SemphXS67Yvve9bvvoyBNPtvqWdvtOd3u
GJ9y/AcvLjYXz5eZAfdPC9KevX2MWTj6uk+X7tu98cgs0/vnk6t9L+APSf6t
DgDgI7nebjsPrDxprdkLFy5UKr9JkyYF5x0+fDhID/tv7777bsZ5Q4YMCfaH
+7Wlj691nmI2z06o71+UB+i8weHDh1d4H1pn1c2Rp3wOHIhvPuUkv1PE7wj5
J+o9Qn6qur6d/DV5aJP7L7fb50sumsL8Ypu2cuY2s3fTtbGz8uzk1W1avM/s
23LM9q+TF3f66Dm7xkTPn020x+zacMSmnT15wYx8ev7V7cO2f94rD80wHf9z
THDddN9uXN5nNn+AypLk3+oAAD6S6+228+0eeOABu86ENHnyZLtORLjfndZ/
iEJjZnVOfn6+GTZsmHnkkUeCc8Jz1VW0Lqyu6faHPbKo8bVSNs9OyBfUMQ0b
Noy814rWo1D/v7vvvju41pgxY8o9/kZJ8jtF/I6Qf6LeI+SnquvbHdt/xnpo
BWOLg7T0cbLnTl+w27OHrw2OkZ+nNPXPE9nGyWp8rMbJznhjtT1ePqFI9+0+
efPa/rKLlzPyAIgiyb/VAQB8JNfb7fLWpSgpKbFrRUT5cOvWrQv6r2XTjfh2
mpeuovPCUp+6dDSutW3btnYNWdcnT9vSo48+Gpx7zz332PG88uei6NChQ3Cs
1r+NmyS/U8TvCPkn6j1Cfqq6vt2RPaetX6Y+do503273xiN2e938XcExmudO
aXPeXme30307ja0d/vin9hj1s1PfPH0uPXvtd126bydP0O4vuVit+wF/SPJv
dQAAH8n1drs8306MHDkywytTX7fw+NrHH3/cri+htR5eeOGFGvPt1O8tPB/f
nj17UvII9/WrjMLjeB39+/cP9qsPYllZWZWea3kk+Z0ifkfIP1HvEfJT1fXt
5JPJLwuvBet8O7e+7Kkj5+z2vFEbgmO0z42lFfLtNBbWseyjrXb/xoI9KdvZ
fDutR6s0gMqS5N/qAAA+kuvtdkW+3dixYwMfa+7cuTYt7G3JVwujY2rKt9N5
WrvWbTdu3NicP38+OFbnacyuuyf1qVN5JPWbc36fthcsWJBRhrfeeivIu3nz
5ubcuXM39jAj0LoYhYWFVr169TL33XefVVIhfkfIP1HvEfJTcaxL8dz3xgbr
Uoh9m48Fc97tWHvIpnX/8QTT6fv5ZtvKg+bgthOmzy+m2POcDyfPTvvl52m+
O3lyymPtpzvtONmXWkwu17cb+ofZJq/J+9W+F/CHXI//AAByjVxvt8vz7bQe
bMuWLQMvS+u0CvVDc+NQ0xk1alSN+nYiLy8vSGvfvn3WewrPYzdixAibpjG0
UaivoMuzSZMm5syZM9keWYX07Nkzax8/eXdJhvgdIf9EvUfIT8Xh2w3+9XTr
yzmu/rS0vlx4PVn5ceF1Y+WxbS26Ptfxmjk7gn0f9llqSksumB7NPwzS3Fq0
F0qv+3bhOfWU39DH5lT7XsAfcj3+AwDINXK93XYeV5s2bcyuXbustm3bZhYu
XGhatWoV+E3NmjULzuncuXOQPmPGtXELmisuPKa2Jn27ixcvmqZNmwbp48eP
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
ONTviPqk3yPqlNwOtEL9BwDgF4zbEDe5aFMLFy40b7zxRsr2e/fumdraWntO
4oMHDyY9DvU7oj7p94g6JbcDrVD/AQD4BeM2xM1cyu02b95sysvLTUNDA7kd
IkZKv0fUKbkdaIX6DwDALxi3IW7mUm43MjJifx47dozcDhEjpd8j6pTcDrRC
/QcA4BeM2xA3cym3CyC3Q8R00u8RdUpuB1qh/gMA8AvG7dwi6yRcuXLFrpvw
5MmTXJ9OLJDbIaJP0u8RdUpuB1qh/gMA8AvG7dzS3d3t1kyQ7G463L9/3zx6
9Chhm2R/w8PDZmJiIs7TnBbkdojok/R7RJ2S24FWqP8AAPwi38ft5557zuVi
YQsLC82aNWvMb7/9ltPz++WXX9w5Xbx4ccr7tbe3233mzZuXsH3RokV2+6FD
h9y2srKyyL9BlJ2dnbP+TuR2iOiT9HtEnZLbgVbyvf4DAMg38n3cllwrU1Z1
7ty5nJ3fTHO71tZWu09xcXHC9uD7hr+TfGaqud2333476++Uq9yupqbGdHR0
OMfHx829e/dsNtvS0mLP6+effza9vb1pj0P9jqhP+j2iTsntQCv5Xv8BAOQb
+T5uBzlWbW2t6evrs5mNZDr19fUuqyooKMjZs+Vmmtu9/vrrdp8XXnjBbRsY
GHDH6urqctt7enrMd999l9Zwrtff3z/r75SLNlVaWpqSQd65c8e89dZbKduT
71EMQ/2OqE/6PaJOye1AK/le/wEA5Bv5Pm4Hud3WrVtT3tu0aZPLcuQ5c7lg
prlddXW13Ue+Q4DcSxYca2hoaErHuX37tttHjhkHPrcp6ndEfdLvEXVKbgda
8flaHQBAI/k+bk+W233++ecus/rqq68S3pM5lrJt48aNpry83N7PJbnWm2++
ae/jSubu3bumrq7ObNiwwa4RK3Mzm5qa7PP1VqxYYd5++237mWQmy+1kruvL
L79sXnnlFbevzPeUe+3kHkHZ59lnn7WvxSDLE+X1l19+mfHv09jYOON1MdLh
c5uifkfUJ/0eUafkdqAVn6/VAQA0ku/j9mS53TvvvOMyq19//dVtlzVaS0pK
0j4DTo557dq1hGOF87fPPvsscj95BtutW7fS7hfO7SSzC8/jHRwctNun+pw6
UbLGyZA1GoK/j6xnERc+tynqd0R90u8RdUpuB1rx+VodAEAj+T5up8vtLl++
7N5Lzrdu3Ljh8jmZh3rq1Clz/vx5s23bNpeJyX10YcL5W6A8e+79999PWNP2
1VdfTbtfkNtduXIlIbMLr3l75swZs3fvXve+ZI+ydqwYrBsr30deX7hwYdK/
zcGDB91xjh49Ou2/bTp8blPU74j6pN8j6pTcDrTi87U6AIBG8n3cDrI5+bl4
8WLrggULXF5VWFhobt68mbCPrFEhc0yDe9zCyJzVYN+JiQm3PTm3O3HiRMLx
5H62qDURknM7ue8vOOfkzC5APhPsI2tRBATzZLds2ZLx7yLnXlRU5P6dx48f
Z9xnqvjcpqjfEfVJv0fUKbkdaMXna3UAAI3k+7gdZGCTKWvNTjW3OnbsmNvv
r7/+ctvD+dvHH3+cst+ePXvc+w8fPozcT+bXBpliusxOkHv/ojLAIBv86KOP
Mn6P8DxceQ5fnPjcpqjfEfVJv0fUKbkdaMXna3UAAI3k+7gd5HZVVVV2nQnx
iy++sOtEhO+7k/UfopA5s7LP4cOHzYcffmhWr17t9gk/qy7TurDybwbv//nn
n5H7hU2X2QmSC8pniouLI7/rVNajCM/dlTVl48TnNkX9jqhP+j2iTsntQCs+
X6sDAGgk38ftydalGBkZsWtFROVwV69edfevpXM6uZ08ly7TfmHlnrpkZP3b
tWvX2jVkg3vy5LX44osvun2ff/55O59X5udG8dNPP7nPyn5x43Obon5H1Cf9
HlGn5HagFZ+v1QEANJLv4/ZkuZ1w4MCBlKxM7nULz6996aWX7PoSstbDa6+9
lrXc7pNPPkl4Ht8ff/yRcIzwvX5TMTyPN8yaNWvcZySfjBuf2xT1O6I+6feI
OiW3A634fK0OAKCRfB+3M+V2n376qcuw5JlvQnNzs9smuVqY8HPh4s7tZD9Z
uzZ4XVJSYh49euQ+K/vJnN3gO8k9dXI+4oYNG1zeJ6+//vrryO/b39/vji/r
z2YDn9sU9TuiPun3iDoltwOt+HytDgCgkXwftyfL7WRN1crKSpdjyTqtgjwL
L5iHmkxra2tWczth8+bNbltdXV3a7xR+jt2+ffvsNplDOxkNDQ3u2CdPnpz0
s1NB1rNtb2+31tfXm4qKCquvUL8j6pN+j6hTcjvQSr7XfwAA+Ua+j9tBxlVT
U2N+//13a09Pj/nmm2/MihUrIu8927Jli9t++vRpu02eFReeU5vN3G50dNQs
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
nduIiIiIiIiIiIg4x/w/GjHk5A==
    "], {{0, 789.}, {1262., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{72., 72.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{719.8630208333344, Automatic},
  ImageSizeRaw->{1262., 789.},
  PlotRange->{{0, 1262.}, {0, 789.}}]], "Input",
 Evaluatable->False,ExpressionUUID->"b93159aa-9094-4b21-a2cb-c6ff331d4b0e"],

Cell[TextData[{
 "Model as flat storage for now. Express DMA transactions via overloads of \
accessor function ",
 StyleBox["L2", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.913642772661375*^9, 3.913642820368548*^9}, {
  3.9137489348279743`*^9, 
  3.9137489359732227`*^9}},ExpressionUUID->"7bc07e70-632e-4c13-9e3d-\
723aea1047c5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "L2", ",", "L2store", ",", "L2rows", ",", "L2leftColGroups", ",", 
    "L2rightColGroups", ",", "L2colsPerGroup", ",", "L2cols", ",", "L2dims"}],
    "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L2rows", "=", "16"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L2leftColGroups", "=", "32"}], ";", 
  RowBox[{"L2rightColGroups", "=", "32"}], ";", 
  RowBox[{"L2colsPerGroup", "=", "64"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L2cols", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"L2leftColGroups", "+", "L2rightColGroups"}], ")"}], "*", 
    "L2colsPerGroup"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L2dims", "=", 
   RowBox[{"{", 
    RowBox[{"L2rows", ",", "L2cols"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L2store", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "L2dims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"L2", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Times", "@@", "L2dims"}], 
  TemplateBox[{
    InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
   "Quantity"]}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "L2dims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
     
     "Quantity"]}], ",", "\"\<Kib\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.913459859943615*^9, 3.913459923890294*^9}, 
   3.913460148377887*^9, {3.9134601823532467`*^9, 3.913460185577817*^9}, {
   3.913464939966411*^9, 3.91346496489507*^9}, {3.913465396273439*^9, 
   3.913465402953084*^9}, {3.9134655987340603`*^9, 3.913465601458982*^9}, {
   3.913465633415092*^9, 3.913465661041072*^9}, {3.913470918167332*^9, 
   3.913470957735427*^9}, {3.9136423501003847`*^9, 3.91364239696066*^9}, {
   3.913642529384925*^9, 3.91364257090325*^9}, {3.91364263639631*^9, 
   3.913642756271289*^9}, {3.913642806858741*^9, 3.913642846875936*^9}, {
   3.913643143050487*^9, 3.913643153774807*^9}, {3.914857282359009*^9, 
   3.914857282900085*^9}},
 CellLabel->
  "In[506]:=",ExpressionUUID->"b243217a-67fc-41af-be92-f024e641ff60"],

Cell[BoxData[
 TemplateBox[{"65536", "\"b\"", "bits", "\"Bits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{
  3.913460187073296*^9, 3.913464954692483*^9, 3.913465186647312*^9, 
   3.913465406666918*^9, 3.913465677392568*^9, 3.913466291083045*^9, 
   3.91347095838933*^9, 3.913472632640368*^9, 3.913472692059536*^9, 
   3.9136408431302752`*^9, 3.913642091792081*^9, 3.913642397704528*^9, {
   3.913642743135238*^9, 3.9136427567666883`*^9}, 3.913642828416203*^9, 
   3.913643157970165*^9, 3.913644385853881*^9, 3.9136465978377438`*^9, 
   3.913646831297676*^9, 3.913646892100563*^9, 3.9136475094664803`*^9, 
   3.913741375398986*^9, 3.913748861698598*^9, 3.913749124377085*^9, 
   3.9137514318006477`*^9, 3.9137521132133822`*^9, 3.913753547095624*^9, {
   3.914857263733601*^9, 3.914857283447935*^9}, 3.9148583137752867`*^9, 
   3.9150305824295483`*^9},
 CellLabel->
  "Out[513]=",ExpressionUUID->"aee296a5-1df3-4a12-bd87-4e1fe789942e"],

Cell[BoxData[
 TemplateBox[{"64", "\"Kib\"", "kibibits", "\"Kibibits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{
  3.913460187073296*^9, 3.913464954692483*^9, 3.913465186647312*^9, 
   3.913465406666918*^9, 3.913465677392568*^9, 3.913466291083045*^9, 
   3.91347095838933*^9, 3.913472632640368*^9, 3.913472692059536*^9, 
   3.9136408431302752`*^9, 3.913642091792081*^9, 3.913642397704528*^9, {
   3.913642743135238*^9, 3.9136427567666883`*^9}, 3.913642828416203*^9, 
   3.913643157970165*^9, 3.913644385853881*^9, 3.9136465978377438`*^9, 
   3.913646831297676*^9, 3.913646892100563*^9, 3.9136475094664803`*^9, 
   3.913741375398986*^9, 3.913748861698598*^9, 3.913749124377085*^9, 
   3.9137514318006477`*^9, 3.9137521132133822`*^9, 3.913753547095624*^9, {
   3.914857263733601*^9, 3.914857283447935*^9}, 3.9148583137752867`*^9, 
   3.915030582431315*^9},
 CellLabel->
  "Out[514]=",ExpressionUUID->"c6fe7de6-ac18-4f08-ac70-f7e40d3aac85"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["L1 (NYI)", "Subsubsection",
 CellChangeTimes->{{3.91346631761656*^9, 3.913466318169228*^9}, {
  3.914857320480719*^9, 3.914857322054442*^9}},
 FontWeight->"Bold",ExpressionUUID->"701b9949-772f-447b-864c-13f0159270cf"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3WuQVVWD5nmmZz50TAQx/WmIjiBiqvlARxDRfGC6GaMJommDCZoxiIBy
IBijGCgcKXTQUShEbBVRVFBABgEVEIpLoYNAgdIIL3eUAlR4TUCguMhdCpFL
cr+v4Vn1rt3r7Dzn5MncmWftzPX/Ra0yzz5777PPOod8cz17Xf7V0P/nz4f9
szZt2oz654/+35//5Zj/OHLkX4598l88etD/hVHP/tULz/xfvV/462f+6pmR
jw39bx9t/O8f/b9/+d+1afPo/9oYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAECUzp49a7744gvz9ddfm4cPH4a+HAAAAAAA0EJNmzbNtGnT
xpaLFy+GvhwAAAAAAJrc6tWrzYABA8zw4cPNgwcPMp/v3r17ZtasWaZPnz72
vFevXm2Cqyzts88+s68zaNAgU1NT06yvlcWHH37YZBnDkiVLTKdOnUyXLl1s
/wgAAAAAAPJg9OjRSdv3zp07mc61d+9e07Vr1+R8KidPnmyiK63rypUrBa/V
v3//ZnutrJoyY+jRo0dyLmVEAAAAAADkQVNkDDdv3jRvvPFGQXu/GhnDggUL
6rxeXschNGXGMHDgwORc27ZtK7rP559/brp162b69u2b6bWqad++faZ79+62
HD9+PPTlAAAAAAAaKGvGoDZux44dk3O0bdvWdO7cuSoZg38/35XZs2c32+tl
0ZQZg8ZHKF9Zt26dHZtSzNixY5PXaym++eab5Jp37NgR+nIAAAAAAA2UJWP4
8ccfC9r3Tz/9tPntt9/M+++/3+wZg+5zu9d47733kp8fe+yxZnm9rJoyY6gE
GQMAAAAAoNqyZAyaC0DHqd/C9u3bk+3VyBjefffd5DV+/fVXM2TIkOTxoUOH
muU1syBjqB8ZAwAAAAC0bFkyBs25uGbNmjr99Zs7Y3j48KHp0KGDPX+vXr3s
tvXr1yev+eabb9Z7juvXr5s5c+bYsRX6WQ4ePGjGjRtn+2OMGjXKLF++3L5W
Mcoxli5dal5//XUzbNgw+99ly5aZ2traovsXyxhu3bpltm7dasaPH29GjBhh
5s6da/uGlBr/4Pzyyy/m448/NgsXLixYC+TcuXPmyy+/tEXzMLjXc9tc2bhx
Y8lz379/3xw4cMDO5zBmzBjzwgsv2LU7dF263kpdu3bNbNmyxcyYMcM899xz
5sUXXzRTp06ts/aHvnOqZ12Xn4tMmDCh4Jq1z927dwuO1fvQGial5qTwbd68
2e6r+i5GGZme/+677+zj27dvm0WLFpnnn3/errmi7/SJEyeKHqv5SL7//nv7
+Wn/V155xX439B1RfQIAAABALJpyXQmnuTMG3eN251c7W9Qub9eund3Wvn37
etfh9Md56GflDcXmrDxy5EjBcVqLU23OYvu6+SiUJ6RfP50x6J699i12jt69
e5vLly+XvPZSfSImTZpU8rrSpVh2ovEnmiey1DGq3507d9b7+ajt7z6LYuXx
xx9P+pr4n2V9Jd23wV2rzlcfzSOpfTWHRzFaa1XP67/KatLro6ior0yasoty
71Wvq342AAAAABCDlpgx6J6/O7/fFvffS6n71Y6fMYwcObKgXejPWemvb6C5
Fl3/CVe6dOli+1Kk25kay+HzcwH1D/AziQEDBpgnnniiIHPo1KlTyf4MpTIG
jV3R9aWv0W1zxfX98Kk/iv/6+rlnz572utLvbfHixSXr1Z8bw51HmYnqKb1d
n93p06fte01fs17Tv2bto/r3uYxB11mfSjMG5RX+tSqvUtHP6t/ie/vtt+tc
s/qP6DX8utT2dP8NAAAAAGiNWlrGoP76rv3Wv3//gud2796dvG66PZiWnq/S
tT9dO/bGjRv2vrnf133o0KHJvmp7p/saaLyGyyeUG/j8XMAVZSUab+Lofrff
vtXYi2IqmduhIfMx6H34beIpU6YUvG/1efjkk08K8oFLly7VOc/hw4cL3t+q
VasKnv/9998Lrmv//v0Fzzd0PobmyBj84vrIiPqz+HmTxlb49aHP3qfvj8aI
+N8tAAAAAGjtWlrGsGLFiuTc+jnNX0dT7bxS0hmD2vYaB1HKnj17kn3VD6BU
HwONzdf8ChqP70tnDHpcjN9OLzUGoKkzhtdeey3ZV/MwlDJ//vxkP73HtH79
+lXUj0T5gfKa9OeTp4xhyZIlJc+lzMUfU5IeT+Pz5yLdtGlTvdcJAAAAAC1Z
S8sY/LkMi2UIEydOrKi9nM4YyrUTRf0iKmk/l+LnApofshy1mV0f+/rOlTVj
0ByVbj+1m0vNcSnKVdyYBo1d8PlriTb2nn1eMgbNt1GO5puo9LPU/JxuX817
CQAAAACtWUvKGM6fP5+cV/fBi/HbupoHoBQ/Y/jggw/qfW3XnlU/icZoyNqV
WpvA7VtsXYKmzBj8epg3b16978PPWvx5LTds2JBsT/fhqFQeMgaNeyi1Nojj
17/6ndTHzeeg8TUAAAAA0Jq1pIxh5syZyXnT4999rj2pkp4n0PHb1l999VW9
r+3mK0jPs1CphmQM77zzTtl9mzJjUB7g9tOaixp/Uq64PhbpuvXX5di3b18F
NVJXHjIGzadRH3/OUc2ZUV+due9OY/MpAAAAAGgpWlLG4OZDVJut1HwIMnfu
3OT1p06dWnSfhmQMmpfR7as1KBqjIRnDRx99lOz722+/NepclWYMWv/CHzPS
kOKPL/HXytDcjo3RUjIGP2dpSCk19gUAAAAAWouWkjFoDQK/vab2Zaniz/uY
njfAaUjGoLa027fYXIeVyGvG4K/bqbkW1MaupAwcOLAg5xk8eHBynrt371ZQ
I3W1lIzBX9u00vpSmTZtWr3nBgAAAICWrKVkDK+++mqj77drTYi0hmQMWtvR
7fvss8826vrzmjH459q1a1flbyjF78dw5syZRp2jsRlDqfU3fE2ZMfjzQ5ab
IxMAAAAAYtMSMgbdL1c/c9fffPr06fWWF154IbmGUaNG1TlnY+djaOy8fXnN
GFatWpXst3LlysrfUMqsWbMyZxUNzRiULZTrq+JryozB7/tx4cKFevcHAAAA
gFi0hIzBX7PgjTfeqOiYW7duJbmA/pvuv9/QjMGfC6LYmpn1CZkxlJu7oqam
JtmvsXNNyOrVq5Pz6Poaw88Ytm3bVu/+gwYNSj6TctTXwI1vaIqMYcaMGcl1
KqMBAAAAAPyTlpAxDBkyJDnf3r17Kz7uueeeS45bs2ZNwXMNzRiGDx+e7K81
FMq5fv26OXfuXMG2amcM7733XrKP1vwsRXmJy2JUGjtfoz5ndw71NalvToZj
x44VrH0p27dvT86h9Rjq44/P+Pnnn0vu5+ctTZExfP/998n5HnvssXr3BwAA
AIBY5D1juHr1anKuSvrE+7777rvk2PSakw3NGA4fPlzQhj548GDR/bZu3Wqf
79u3b8H2amcMCxcurHgMhH9fXtetdTTKOX36tP1c0vwsSO3/dIYgyjRcXpOe
J0O5gzv+pZdeKnsNohzC7T906NA6z+v1X3vttWSfpsoYpF+/fsk53377bXP/
/v2S+6ofyS+//NLouTABAAAAoKXwM4bZs2eb+fPnlyzqD5++P//DDz/Y+89+
8fsPLF68uOC5n376qUHXt2jRouRcujffEGpjtm/fPjn+0qVLyXMNzRjE9c13
/fM//vhjO9bg1KlTZv369TbH8NvqvmpnDGq/u320zoau89q1a7Y/R7oeb9++
bdeUcPvrZ9W7zqFj1LdBP2sdUDdmpNhncejQoYL2vOpg3bp1NpPQ68+cOTOZ
V6NYxqDr8PtU6HPR6+/evdu89dZbdepCbXf/ukeMGGHb8mrv65jevXsXXE9T
Zgzp99qrVy+beWj7zZs3za+//mrzJmUc7j1XMv4DAAAAAFqyl19+uU47rFxZ
sGBBcuyBAwcadKwrWqehUm5ePxWtIdlQ48aNS46fO3dusr0xGYPa2sXaremi
dvKWLVsKjq12xiBa07HUNaapbax+/5V+hur7UMzSpUsrOr5///5F7+u/++67
JY9RTpGmDKO+19J6o3q9pswYRPNH+JlJfaWh+RoAAAAAtDSVtNH8smzZsuRY
3b9vTMZQX198nztG6xQ2hn+/Wf0rHM3r4LarDiqle+QTJ04suH/uZwtaw0L3
sNP8dRdqa2vLvob6k7h9/b4XDT2XMhHXtvaLcpJi1C9A7039HkplJxojoPv1
5cYGqM5L5Rta30HzJJZa81HXoEwgfZza8sXyFlH2UCwf0Rog6ksgrg+K+hsU
4+qpa9euJd9XMcp4hg0bVtBfJn3dGhuiORwAAAAAAGFp/kTNWVhubYT6aO4A
jfFI3zdX+72+PgXlqH2vPvnq86/5GorNP+CoTa02crF5DBq6b0PO5a5TmYru
o584caKiYzRuYf/+/fa9aTyMjiv3/orR/up7otdVPRXLS8q9/r59++xcjuov
U8nnr7VE3Geh43367PUdKDXniHs+fVxDqJ5VV8o89J7T44oAAAAAAAAAAAAA
AAAAAMgNjRWkVK8AAAAAANAaqc37z/4bSrULAAAAAACtjcsYUD3UNwAAAACg
NSJjqD7qGwAAAADQGpExVB/1DQAAAABojcgYqo/6RhUdO3bMXL58OfRlZLJm
zRq7FrtobfdDhw5lWtu9nOY+fyX27dtnVqxYEez1AQAAgEYjY6g+6rtVO336
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
8479r5/DiK7L7zMiu3fvttfkxo7o+7Ns2TJ7/RpTonMpH2rKzA7501wZg8Y8
+f9WRf9+PvzwQ/ud9un7qXFSon8DGiNXjPbRv0fR71P9HhJ9h/V4/Pjx9t+Y
Gx/l27hxo/1Oz5o1q+DfoL7zn376aZ3i/1vXv4GZM2cmr50ZGQMARImMAVmR
MTSe2tZqC2qcvfhtNse1UdVG7tatm/252Fh9n/4GnT17dtGyf//+iq7N5R8D
BgwouY/aiNqnQ4cOBWMFHnvsMfv8m2++mdyzd88dOnTI1NbWml69etnH/liD
fv36JXXw9ddf1xljoDkNtG3cuHH28a1bt5IcJD1eQW1GUVu8d+/eyXXo9Tp2
7Fj0/bz44ot2vyVLltjHaue666qEPkftr74pTmM+P83pkO6v4Opy7NixBd8Z
UeagczsNyRjUHtG+ro78HEN9WhzNA+E+L/eZ6TVv3rxZcB7/s547d26d11Ob
S+cu9r1Zs2ZN8pn651GfGlEe4La5a9B//XktOnfunHz/nJEjR9p93bW6uuze
vXvB6+v9kDO0Xs2VMUycONF+f/zvjrJMbfvoo48K9tV3/7XXXrM/6/fQ66+/
XvSc+m4qMxX9PlGeIPqdq+/8wIED7Xddr6G5cxyd2/3O0vPa1/3O178j9bFy
RWPhtK/LhPXvyG1zv2MzI2MAgCiRMSArMobGe+655+zfc0899VTSZtLfoPp7
0rW1XRvVtcvU1qtPnz596rS5XXF/t9bn5ZdftvuXuofv+u7r2nVvTe1ZtRn9
9rtry+nvVmULug+uvgj6+9X9/a1j79y5Y8ccaJv6LojLGNzfv1IqY3DvS3Wm
v6dVl3pNzZvpcoL333/fHqN9it37kytXriT9DHQ/3uUg6Xkcfbrfpz4cI0aM
KHivTmM+P9F8DH5/BbV/e/bsaa9d51H/D3HvT+0cpzEZg+rM1bXuyWrbkCH/
9G/6woUL9nm9vj53fYbqk6J9dM/TP4+K7tWqX4PrV+HT/Vc/I1EO4Y/z8D9T
7avPRPXvrkH14vqAqH+C+6z1HZKGZAza9+jRo/b9uM9P/WTQOjVXxqB5WfTd
0b8BR238dN6o3wva5vrllMsY9G/f5aTaz/0e1mupX5joe6v93L9T9UfQ+dUP
SG7fvm1/J+t3azH6Pap/P/o3rX9n+ll9H3QMGQOQTc3R2qQAMSJjQFZkDI03
aNCgZPy+7nupr7m71615AcW1UV0GUY020E8//ZTcSy7Wt0LUNtM+ams6w4YN
s9tcu9i15dL9btUmTM9pqDa932egIRmD+xvbce1FN7eEftZ8icX6/6e5e+X6
u17/1edSjt6/u/fn7s3rfrzT2M/P9Vf4+eef7dgClyPo89C51O9ANNZAz6nt
4TQmY0hfl96/G/Ph3oPel9rpKr/99luSMfnn8bOOYvRZaT/3vXJ9NiZPnmwf
u89U+Y5PbSy/f0q6nvSdlYZkDPoOO+57on+TaJ2aK2NQTqp/K6+++qp97P8b
9b93Gpeg7coGpFjGoBy2VD6s7M6n8+p8mktH3Ly9fn+K0aNH299JadpHx7o+
FeLWq9F1kTEA2TDnI2JHxoCsyBgaz7W3dA/JcW1td//Lte90b9n1La9vvIP+
VlQbsFhx93tLUVtLfy/r78+DBw+W3E/3yNy4A62BoRxBj/0++64t59/P1t/F
2jZ48OA651RbXbmGNCRjGDVqVMF53BgUl2289957yd/pahP7bcti3PoNqu9S
GUuachXNH+CyBPUvkMZ8frJly5akn4DGi+hn1/9C41dcW0I/6/Py16lsTMag
uSh8ffv2tdt1Xo3tLtXucVlHqfOkqe+K66OgOnLjU9w94FKfqfsuuXp1NKbd
b381JGNI97Molm2g9WjOOR81rsn97vrxxx/td0n9bPzvdv/+/QvGnhXLGPR7
xPVVUr7o8t7vv/8+ySaUs+n3gn7X6nemcgnR7zl/LhhxYzbSNG6uVB8tMgYg
OzIGxI6MAVmRMTSe7jHp77z03Hh+W92fM1B/Z7p77O6eUzHq016qTai/Q0tR
vuHG+Lq1M0v5/9u791jLintP7P43UqxEykj+I2gi8Qd/MBK6gzQIBSERjxOG
i4ggFoRxcEAgM3AHEDQxr8vDGIyNebRld2Nj87jdMOABzIAh0B0DxjYML5vr
pnk4bh7uxlwuYKDbYF4GVvJbvrWmzu59Ht1Fn1p96vORSpz9WHuvXWfvQ9d3
V/0qvltP8/9Ti/PKx8/TxnJpb8ZpdR7idacakzFmTN+dJwvNGKImYT4fP8TY
NPV3nPds+zpGvYC8RkQ+P2AhUp4R3ymG7fn9hciC4r4x1o/vR+PnlA+l7yvj
MeNc056VySeRMcRYOx47xDqUuE/MJYg6HXmL3Gqux5kUdfAm35MxFyGZ7Xea
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
p8gYmOGsb94yb84wWztv+X+qffqwYLEXwl133dVdfvnl3ZVXXtnv/fjWW2/V
Pi1gHjKGCmQMNErGQOum/e0/48Lru7/5V1d1X9rne93/+a9XdP/2gOXdwf/b
xd3/dOx53V+dcWr3zy87dsgYVm26r8JZMzaRMfzLvz5XxsCSFXs7XnTRRd2n
PvWprdouu+zSrV27tvYpAnNIGUP694u245v+1lpt/83fnTi02ueiabXapNMv
uK47+a/+bs529H5XdGd/3xwGrJWgDWefffaQKey6667dcccd1x188MEzsoYX
Xnih9mkCszCPoQIZg6ZpWrNtUsxjmC9jSO3FZ9T0a12eJfwP/+Mp3d9eckt3
w+0PqfnIkrFx48YhRzjggAO6d999d7jtJz/5yXDbMccc01/3yiuvdJdcckl3
6623do899lh3/PHHdytXrqx1+kAnY6jCWgmAJs32t//tN97r/vH5zd3zf/9K
98RPN3YP3frb7t5r1nfX/+3Pu/P/+uYhY7j7u3+/yGfM2Ni7kqXu2muvHXKE
X/3qV1vdvu+++/a37bbbbv3ln//851utp9h9990X+7SBjIyhAhkDjVq9dtPQ
oEXb87c/cgUZA4mMgaUuXyfx0UcfbXX7smXLZtw+mTF88Ytf7E466aQKZw4k
MoYKZAw0Ss1HWidjoJSMgaUu1kBEVvDpT3966u1nnXXWkCd88MEHMzKGq6++
epHPFphGxlCBjIFGyRhonYyBUjIGlrrzzjtvyAzef//9rW7/0pe+1N/2mc98
pr+cZwxRmwGoT8ZQgYyBRi1b8cTQoEUyBkrJGFjq8noMUeMxF5lDzG+I2/bf
f//+OhkDjM9iZQxPPvlkd9NNN3V/+tOfZlwfc5xuueWWvg7spN/97nf9MX/8
4x/7y/F35mc/+9msz/Gb3/ymu+2224bLcf/HH398xn1ee+217s477+yuuOKK
7oEHHujee++9kpe1fWQMAE2SMVBKxsBS9+KLLw6ZQdR1jH/fhzfeeKOvtZBu
u+OOO/rrZQwwPouVMVx22WX9Zz/PAML9998/7H076YQTTuhvi6whxH322muv
WZ/jlFNOGeZNhcg5zzzzzOHytLqzUZt2y5YtpS9v28gYAJokY6CUjIEWfOUr
X5nx7/U0dyG1gw/+L39LZQwwPouVMaxbt67/7EdukDv//POHvwvPP//8jNsi
U0j70qTLc2UMBx10UJ8ZhM2bN/ePeeWVV/aXY/5E/H3aZZdduqeffrr78MMP
u69//ev9feIcFpWMAaBJMgZKyRhoxQ033ND/uz3PFuLyt7/97Rn7TTz00EPD
7a+//nrFMwaSxcoYPv74436OweR8hbTH7WQt2Ji7ENeddtppw3WzZQzx9yTW
VMTfnb333rv/efny5f3xp556ardhw4b+urh84403DsfF36dp57TDyRholJqP
tE7GQCkZA62J7wljvURaOz3Nu+++26+/BsZhMWs+HnfccTPmK7z11lv95VjP
EP899NBDh/uuXr26v+7ee+8drpstY4i6CvkcqsmfI++MrCIu//73v59x7GGH
HdZfv6h1GWQMNErGQOtkDJSSMQAwdouZMdx66639eP6aa67pL0dNxrgcGcEB
BxzQ5wF//vOf+9uOPPLI/rbIJZO51kpELce4f2QTIdZIxOVUayHViJncAydq
OMT1L7/88if+emclY6BRMgZaJ2OglIwBgLFbzIzhzTff7Mfzhx9+eH/5nHPO
GeYQxFyD+DnWVKV1FYcccsiM4+fKGGL/iDj+vvvu6y/H3IjILJKoDRO35+u3
wpe//OX++o0bN36SL3VuMgYatWrNxqFBi2QMlJIxADB2i5kxhP32268f+0fN
xaidkPa2jb0tY6x/4YUXDj//4Ac/mHHsbBnD2rVru5NOOqk/5uyzz+6uuuqq
/rHjeWKP3cgsjjrqqBnzGpITTzyxvz5qRC4aGQNAk2QMlJIxADB2i50xXHrp
pf2Y/p577un/e8kll/zTefxl7sI+++zTrVy5csaelclsGcPRRx891F+I+0TL
99WNWjFpvsJTTz0149hYoxHXLyoZA0CTZAyUkjEAMHaLnTGkPSxjnkH895FH
HhluO/bYY/vrImfI96xM5lorEfMYIqNIYg7DGWecMVy+7bbbZmQaIfbQzddu
LBoZA41a9+yWoUGLZAyUkjEAMHaLnTGk+QppnkGq8RhuueWW4fo8H0giY4js
IOZCpHb55Zf3j3HQQQf1+2CG2NsmHuO73/3ucOw777wzPO93vvOdPnNIOccv
fvGLHf/CczIGGqXmI62TMVBKxgDA2C12xhBSDYTPf/7zM65//fXXh4wh9pqY
FBlCuj1vkSnsscce/ZqJ8Nvf/ra//q677ppxfOytu+eee85YV3H77bfvuBc6
GxkDjZIx0DoZA6VkDACMXY2MIeYyRI2EyT0ewgcffNDvM7GtYk/KfE5EPP5s
ou5j7HVZjYyBRskYaJ2MgVIyBgDGrkbG0DwZA0CTZAyUkjEAMHYyhgpkDABN
kjFQSsbAGMXc5Geeeaa78847u5/85CfdG2+8UfuUBk8//XT34IMPdm+++Wbt
U1lyXnrppb5vN27cWPtUpvrwww+7Rx99tHvooYdmzHdnx5MxVCBjAGiSjIFS
SyFjiPWsGzZs6B5//PG+FtdCxVraqK0Vx23PeDGOjxpeMe7gkxPrjz/3uc/N
qJWW7/W2UH/4wx+2+fca669jnPvrX/+63/N+2u826sXHOV188cXb9Nix9911
113X/f73v9+m41ryhS98oe/b/fffv/apTBW5V3pPRs7A4pExVCBjoFGnrlw/
NGiRjIFSO3PG8PDDD3cHH3zwVrW7d9lll+7GG2+c9bj4Xjz2Lp88bvfdd+/3
CVuICy+8cMaxMS7lk3HqqafO+J1EHfYY1y/U888/349R02O8/PLL8x4TWdMh
hxyy1XsinjdygVzKGL7xjW8s+JxeffXV4TGPPfbYBR/XmrFnDDGHJf0eY74F
i0fGUIGMgUap+UjrZAyU2lkzhvhOeNreYHlbvXr1Vsfl+5qnMWS+B3q0H/7w
h3M+d9pvLG/PPffcjnqpzUlj+EMPPbSfVxDeeuuteY+Luevf+ta3tvrdzDdv
4IYbbtjqmPw9ceSRR049v23JGF555ZXh8Y455pgZt8VY9aCDDuq++MUvLvjx
lioZA7ORMVTwTxmDprXW8oyh9rloWq22rWQM5HbWjOFHP/pR/+/8GJf98pe/
7MeX77777owx5uT8+rhPGh/GbT/72c/6/cdCzHtOt8U8iLkceOCBMoYdJNa9
pD6dnD8wl8gRps1NmS9jiPdO/n65++67+/Uv4Z133unnvEzOid+ejCFEbYlV
q1ZtNeflBz/4wXAOKVNplYyB2cgYKtDfNGrVmo1DgxbJGCi1s2YMUQNw3bp1
U2+L74TTOCDmqCf5WuoLLrhgq+POO++84fbNmzdPfew77rhjuM9FF10kY/iE
RS2G1KcxJl+omLOScoKYhxJj+YVkDAcccMBwXKyxWIjtzRhmI2P4L2QMzEbG
UIH+BmiSjIFSO2vGMJeTTjppap2E/DvrafUajjrqqOH2999/f6vb43vtmOMQ
t8dzrF27dpszhshGTjzxxG7ZsmV9PcGbb765H0/ts88+fWaRe/vtt7trr722
O+WUU7rPfvazfe2Js88+u3/eSTGmPu6447qVK1dudVu8lqhx8Dd/8zdTc5mo
l3nCCSf0rynVyo+x7q233trXDth3333754/HmC3XmU3sD7BixYruS1/6Uv8a
YwwZr/OJJ56Ycb+Yv3DWWWf155j6NPrljDPO6Nt86x3ivL7+9a8PcxBS5jBX
xhCvO93nm9/85oJfU54xRBYV/41zjT4699xz+zoh00Sudfzxxw9j0zjneG15
7YjTTz99eM2xJieJ91704xFHHNH3Y8yliX5cSK2JEO/3eO4HHnig/x1ff/31
3ec///n+seJ3f9NNN82Zb8Scn3POOad/3shlzjzzzKnvw/Rc8V685557+vOL
x9977737eheR880lzxji8xFzWeK4OM94f8Z7crbzXL9+fd/H8TmJ54u6ofHZ
iesnTX4O470Q/RnPG2t0op7ntL1M5soYoj/i/RvnOaZ9UJYKGUMF+hugSTIG
Si21jCHGT1EnMNVayMcjMf5M44PddtttxjggxqHpthhHTZPqPMbjxrHbkzHk
Y5Tzzz9/xpz+XXfddbhf7GsQ5zhbrYlYI7Jly5bh/vnYPLKJ3M9//vPhthjv
TYqxY7o91ptEnx1++OGzPnfsp7EQMW5N4/FpLcb16feTj/entW2Z0xAWkjHk
cx2iXsJCpdcUY9nJWh6pTasFMjn/4Tvf+c6crzmtFYn32mzvhcg1FiKN3WPM
HeP1aY8VdSIm92OM98PJJ5886zlGbpHWG00+VzxeyuTmyvamHRuf4ci2ZnvO
yf0+IiuYqy/jd53LP4cx72XaMdHnk+taZssY8r8F8Z7IP5t8MmQMFehvgCbJ
GCi1lDKGGIsdffTRw7/1J+cFhPiuOx/T33vvvf34II3/4r+xx8Ck2McwHXfN
Ndf015VmDHleEN/7xve1IfbfzMfmMX6Ksdny5cu7Pffcc7g+xotJjMHT9Xfd
ddeM5/zKV74y3Dat1kTs2xC3xffaIY5P9495E7G3Z3yPneaHxHfq87nvvvtm
jLnidxGZw1e/+tUZ4/L4XjrEXItLLrmk/x4/75f4fUWLNRTbYiEZQ/RfOr/I
TeK9EPU8or+++93v9mPIjz76aKvjJnOT+O475pucdtppM67P5yHkx6WMIXKV
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
oubDbOPPhUi/o3ishTxO9GfJ822veL0xbsy/t54m+jY/v+jHeG0xl2WufSEi
64k5C7PdJ35XMYaNtQ+Trz+OiVzt0Ucf7e+zrbUFJ+cWRI4Wv9cYmy+kzmQ6
v3iNkWHNdQ5xv7nee/M9Rxyb+ijOM84xznUhj/faa6/1n5V8nU88xrT3+nyf
w9k+23Mdlz53C5lbwraRMVSgvwGaJGOg1M6eMQDzK1m/AGMw9owh8qXIq6fV
/Y35RtP2B46sO66P7HGURtzfLViS7ymWJO/VpUfGQCkZAyx9MgZ2dmPOGGJO
T1rXc+SRR8647eGHHx7W0EzuNXzggQcOa+DmmgNVzUj7uwVL9j21k1DzceG8
V5cmGQOlZAyw9MkY2NmNOWOI7+/Sv6OjLmsu3+M49o3J5fVGRvld3kj7uwVL
9j21k5AxLJz36tIkY6CUjAGWvqhlGnuSLmTfURijMWcMUfMj/Xs5agrnoj5I
+nd07HObi89kXB97+YzSSPu7BUv2PbWTkDEsnPfq0iRjoJSMAYCxG3PGEGI9
8mz7vETN0dlqAy90b5gqRtzfLViS76mdxKo1G4fG/LxXlx4ZA6VkDACM3dgz
hiVJfwM0ScZAKRkDAGMnY6hAfwM0ScZAKRkDAGMnY6hAf9Oodc9uGRq0SMZA
KRkDAGMnY6hAf9MoNR9pnYyBUjIGAMZOxlCB/qZRMgZaJ2OglIwBgLGTMVSg
v2mUjIHWyRgoJWMAYOxkDBXob4AmyRgoJWMAYOxkDBXob4AmyRgoJWMAYOxk
DBXob4AmyRgoJWMAYOxkDBXobxp16sr1Q4MWyRgoJWMAYOxkDBXobxql5iOt
kzFQSsYAwNjJGCrQ3zRKxkDrZAyUkjEAMHYyhgr0N41atWbj0KBFMgZKyRgA
GDsZQwX6G6BJMgZKyRgAGDsZQwX6G6BJMgZKyRgAGDsZQwX6G6BJMgZKyRgA
GDsZQwX6m0ap+UjrZAyUkjEAMHYyhgr0N42SMdA6GQOlZAwAjJ2MoQL9TaNk
DLROxkApGQMAYydjqEB/06h1GzYPDVokY6CUjAGAsZMxVKC/AZokY6CUjAGA
sZMxVKC/AZokY6CUjAGAsZMxVKC/adTqtZuGBi2SMVBKxgDA2MkYKtDfNErN
R1onY6CUjAGAsZMxVKC/aZSMgdbJGCglYwBg7GQMFehvGrVsxRNDgxbJGCgl
YwBg7GQMFehvgCbJGCglYwBg7GQMFehvgCbJGCglYwBg7GQMFehvgCbJGCgl
YwBg7GQMFehvGqXmI62TMVBKxgDA2MkYKtDfNErGQOtkDJSSMQAwdjKGCvQ3
jZIx0DoZA6VkDACMnYyhAv1No1at2Tg0aJGMgVIyBgDGTsZQgf4GaJKMgVIy
BgDGTsZQgf4GaJKMgVIyBgDGTsZQgf6mUeue3TI0aJGMgVIyBgDGTsZQgf6m
UWo+0joZA6VkDACMnYyhAv1No2QMtE7GQCkZAwBjJ2OoQH/TKBkDrZMxUErG
AMDYyRgq0N8ATZIxUErGAMDYyRgq0N8ATZIxUErGAMDYyRgq0N8ATZIxUErG
AMDYyRgq0N806tSV64cGLZIxUErGAMDYyRgq0N80Ss1HWidjoJSMAYCxkzFU
oL9plIyB1skYKCVjAGDsZAwV6G8atWrNxqFBi2QMlJIxADB2MoYK9DdAk2QM
lJIxADB2MoYK9DdAk2QMlJIxADB2MoYK9DdAk2QMlJIxADB2MoYK9DeNUvOR
1skYKCVjAGDsZAwV6G8aJWOgdTIGSskYABg7GUMF+ptGyRhonYyBUjIGAMZO
xlCB/qZR6zZsHhq0SMZAKRkDAGMnY6hAfwM0ScZAKRkDAGMnY6hAfwM0ScZA
KRkDAGMnY6hAf9Oo1Ws3DQ1aJGOglIwBgLGTMVSgv2mUmo+0TsZAKRkDAGMn
Y6hAf9MoGQOtkzFQSsYAwNjJGCrQ3zRq2YonhgYtkjFQSsYAwNjJGCrQ3wBN
kjFQSsYAwNjJGCrQ3wBNkjFQSsYAwNjJGCrQ3wBNkjFQSsYAwNjJGCrQ3zRK
zUdaJ2OglIwBgLGTMVSgv2mUjIHWyRgoJWMAYOxkDBXobxolY6B1MgZKyRgA
GDsZQwX6m0atWrNxaNAiGQOlZAwAjJ2MoQL9DdAkGQOlZAwAjJ2MoQL9DdAk
GQOlZAwAjJ2MoQL9TaPWPbtlaNAiGQOlZAwAjJ2MoQL9TaPUfKR1MgZKyRgA
GDsZQwX6m0bJGGidjIFSMgYAxk7GUIH+plEyBlonY6CUjAGAsZMxVKC/AZok
Y6CUjAGAsZMxVKC/AZokY6CUjAGAsZMxVKC/AZokY6CUjAGAsZMxVKC/adSp
K9cPDVokY6CUjAGAsZMxVKC/aZSaj7ROxkApGQMAYydjqEB/0ygZA62TMVBK
xgDA2MkYKtDfNGrVmo1DgxbJGCglYwBg7GQMFehvgCbJGCglYwBg7GQMFehv
gCbJGCglYwBg7GQMFehvgCbJGCglYwBg7GQMFehvGqXmI62TMVBKxgDA2MkY
KtDfNErGQOtkDJSSMQAwdjKGCvQ3jZIx0DoZA6VkDACMnYyhAv1No9Zt2Dw0
aJGMgVIyBgDGTsZQgf4GaJKMgVIyBgDGTsZQgf4GaJKMgVIyBgDGTsZQgf6m
UavXbhoatEjGQCkZAwBjJ2OoQH/TKDUfaZ2MgVIyBgDGTsZQgf6mUTIGWidj
oJSMAYCxkzFUoL9p1LIVTwwNWiRjoJSMAYCxkzFUoL8BmiRjoJSMAYCxkzFU
oL8BmiRjoJSMAYCxkzFUoL8BmiRjoJSMAYCxkzFUoL9plJqPtE7GQCkZAwBj
J2OoQH/TKBkDrZMxUErGAMDYyRgq0N80SsZA62QMlJIxADB2MoYK9DeNWrVm
49CgRTIGSskYABg7GUMF+hugSTIGSskYABg7GUMF+hugSTIGSskYABg7GUMF
+ptGrXt2y9CgRTIGSskYABg7GUMF+ptGqflI62QMlJIxADB2MoYK9DeNkjHQ
OhkDpWQMAIydjKEC/U2jZAy0TsZAKRkDAGMnY6hAfwM0ScZAKRkDAGMnY6hA
fwM0ScZAKRkDAGMnY6hAfwM0ScZAKRkDAGMnY6hAf9OoU1euHxq0SMZAKRkD
AGMnY6hAf9MoNR9pnYyBUjIGAMZOxlCB/qZRMgZaJ2OglIwBgLGTMVSgv2nU
qjUbhwYtkjFQSsYAwNjJGCrQ3wBNGnvGsG7duu5HP/pR99FHH815v9/85jfd
dddd173xxhs79HwWU7yWm266qduyZUt/Ofpi7dq1W93vz3/+c99H999//2Kf
Yk/GAMDYyRgq0N8ATRp7xnD88cd3n/rUp7o//vGPU29/7733uvPPP7+/T7SH
Hnpoh57PYrr11lv717Rhw4b+8qGHHtrttddeM+7z+OOPd3vuuWd/v/3337/G
acoYABg9GUMF+hugSTtLxvDWW29tdds777zT7b777v3tMfZeahnD8uXL+9f0
7rvv9pcjSzj88MOH21etWjXjtcsYAGA6GUMF+ptGqflI63bmjCHmNhxzzDHd
Cy+80F155ZULzhji/t///ve7iy66qFu9enV344039msSYs3BK6+80l177bX9
OoVYe3HhhRd2zz333HBsrFf4wQ9+0F188cXd7bff3uccSRwf4/64T+7OO++c
scYhfn7wwQe7N998s7vqqqv6x7rvvvuG2z/++ON+7cOBBx7Yv6Y4t2if/vSn
uwMOOKA/NsR5xLnGOpK4TcYAANPJGCrQ3zRKxkDrSjOGSw//cX/5vmvXd4/c
vqF75sGXut898Vr36sYt3dtvvld8fnNlDLmFZgwxlo/7xZj8M5/5zLDGIlrk
Cvfee2//c1p/EC1ygHDGGWcM18Xx8d/ddtut27RpU397HB/XnXPOOTOec489
9uj22Wef4XL8HNdNPv+yZcv62//0pz/NuC2eKz1ftFgzMUnGAACzkzFUoL9p
lIyB1m1PxhAZQsoY5mul8xw+6Yxh33337Xbdddd+DkTMOzjqqKP6437/+9/3
t6eMIVrMP4h5Da+//np3zz339Nd94Qtf6OcuxFyDmAMR133xi1/sj92WjCE9
VtRzjPkMab1Dqr0QYh3I0Ucf3f/81FNP9bffddddU1+XjAEAZidjqEB/06h1
GzYPDVq0PRlDuOnCh3bKjCHmB8QahOSGG27oj3vkkUf6yylj+MY3vjHjuFiT
Ede//PLLM65P2UDYloxhl1126TOO5Oabb+6Pveaaa4br4nLUswx33313f3n9
+vVTX5eMAQBmJ2OoQH8DNGl7MoYX1r26085jOOSQQ/r7Rb2D2O8y5jXE5ZhL
EFLG8OMf/3jGcZELRD4xKWUPcfy2rpXIxf4QKdt44oknuhUrVgzrImKtxpFH
HtlfvuSSS/q5FZNkDAAwOxlDBfoboEml9RjO/+ubu+tO/1l37zXru4du/W23
/qebuuf//pXuH5/f3L39xvjqMRx00EEzaiDE2PyWW24Zbp8tY/jc5z7X33dS
rHeI+3/wwQdDxnD66afPuM9CMoY47zj2iiuu6OtRpvoLkWvE2o50vvFzqvmY
kzEAwOxkDBXobxq1eu2moUGLduZ9JXILyRjiMdL6g9hb4umnnx72hUxmyxhO
OOGE/vrHHntsuC5qM8bYPuUFH374YX+fmCuRxFyJuM9kxhDX5bUX4pzi2LT/
RMyziMvPPvtsfzn2rIx1GbORMQDA7GQMFehvGqXmI63bWTKGr371q92ll146
tI0bN/Z1F3/4wx92119//TCf4LzzzusvP/nkk1s9Vtw/8oA0PyBqKsZ4/+ST
T+5eeuml/j6zZQyxfiGujzoKsaflbbfd1u233379dfk8iFTP8bLLLutWrlw5
7A8xreZj3Bb3+da3vjXMUUg1GpYvX95f9957f5kLEvnCYYcdNuOcIiOJ1xot
7huvJ36OvTjjtS4WGQMAYydjqEB/0ygZA60be8aQvt+fbPF9f+zvMO22aBdc
cMFWjxX3j4whcoJvf/vb3cUXX9zvCZH2qgz333//sKfEpLgujk3PERlB5A25
yCLytQ2xbiLmNUTdhyTVfIy5Cel+cV7PPPPMcJ/TTjttRv2H+Dn2zsxF7jLb
60/ZxGKQMQAwdjKGCvQ3jVq24omhQYvGnjF8km6//fZ+/H3HHXfMuP7ggw/u
r09zCGINxFxiL8tXX311zvvEvIi0DiMeN+o1JHk9hqjf+Nprr211fBzz/vvv
D5fjsWItxhjJGAAYOxlDBfoboEktZQz33HNPnyVE/caYB7Fu3bp+r8i4bjFr
GUyr+bgzkzEAMHYyhgr0N0CTWsoYokZBrL1IezakFmsWXn755UU7j1g3IWMA
gMUjY6hAfwM0qaWMIfnoo4/6TCFa/LzY3nzzzX6fy6VCxgDA2MkYKtDfNErN
R1rXYsbAJ0vGAMDYyRgq0N80SsZA62QMlJIxADB2MoYK9DeNkjHQOhkDpWQM
AIydjKEC/U2jVq3ZODRokYyBUjIGAMZOxlCB/gZokoyBUjIGAMZOxlCB/gZo
koyBUjIGAMZOxlCB/qZR657dMjRokYyBUjIGAMZOxlCB/qZRaj7SOhkDpWQM
AIydjKEC/U2jZAy0TsZAKRkDAGMnY6hAf9MoGQOtkzFQSsYAwNjJGCrQ3wBN
kjFQSsYAwNjJGCrQ3wBNkjFQSsYAwNjJGCrQ3wBNkjFQSsYAwNjJGCrQ3zTq
1JXrhwYtkjFQSsYAwNjJGCrQ3zRKzUdaJ2OglIwBgLGTMVSgv2mUjIHWyRgo
JWMAYOxkDBXobxq1as3GoUGLZAyUkjEAMHYyhgr0N0CTZAyUkjEAMHYyhgr0
N0CTZAyUkjEAMHYyhgr0N0CTZAyUkjEAMHYyhgr0N41S85HWyRgoJWMAYOxk
DBXobxolY6B1MgZKyRgAGDsZQwX6m0bJGGidjIFSMgYAxk7GUIH+plHrNmwe
GrRIxkApGQMAYydjqEB/AzRJxkApGQMAYydjqEB/AzRJxkApGQMAYydjqEB/
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
    "], {{0, 778.}, {1049., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{72., 72.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{718.9567708333343, Automatic},
  ImageSizeRaw->{1049., 778.},
  PlotRange->{{0, 1049.}, {0, 778.}}]], "Input",
 Evaluatable->False,ExpressionUUID->"0d0449a7-4407-4206-8b46-58a30d203181"],

Cell[TextData[{
 StyleBox["L1bitsPerBank", "Input"],
 " 4K columns are divided into 2K left (red) and 2K right (green). Implement \
that division in accessor functions."
}], "Text",
 CellChangeTimes->{{3.913645334437247*^9, 3.913645386721456*^9}, {
  3.913646034831551*^9, 
  3.913646052843143*^9}},ExpressionUUID->"faa1447d-93db-47ba-946b-\
268a4215ec60"],

Cell["\<\
The doc implies the following 4\[NoBreak]-\[NoBreak]index model for L1 \
memory. This model does not introduce a 16\[NoBreak]-\[NoBreak]bit \
\[OpenCurlyDoubleQuote]row\[CloseCurlyDoubleQuote] concept and it makes \
groups explicit.\
\>", "Text",
 CellChangeTimes->{{3.9136477673009872`*^9, 3.913647877103188*^9}, {
  3.913749007894505*^9, 
  3.9137490467161293`*^9}},ExpressionUUID->"5eb90d68-6334-4dfe-bf69-\
c8dd9aab86f9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "L1", ",", "L1store", ",", "L1wordLinesPerGroup", ",", "L1groupsPerBank", 
    ",", "L1colsPerWordLine", ",", "L1dims"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L1wordLinesPerGroup", "=", 
   RowBox[{"3", "*", "1024"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L1groupsPerBank", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L1colsPerWordLine", "=", "bitLinesPerWordLine"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L1dims", "=", 
   RowBox[{"{", 
    RowBox[{
    "banksPerCore", ",", "L1groupsPerBank", ",", "L1wordLinesPerGroup", ",", 
     "L1colsPerWordLine"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L1store", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "L1dims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"L1", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "L1dims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
     
     "Quantity"]}], ",", "\"\<Mib\>\""}], "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQB2IQ3SO6xjxU461jiq6EBYj+VGa9NhxIq5je2A+iWfqz
T4Dohjle90B0YLnNIxBtsl/wMYiuZDtYHgWkX36wqgDRFnf+1oHoL+cjG0F0
gv/HpeuAdPaOtytBdNKc5L3rgfTTmTfOgujP/G6XQLTPhW/3QHTYjf3PQHRa
9S8wvWDzxncg+uK6yo8g+pWhyzcQrZM2F0wz+y35D6I3OvqxbgDS140WCIPo
ukJ/BRDt9PqzCog+9uCeOoj2MzM1BdERQt/BdMOJMGsQnXLS0g5ER0X7OoNo
lWo2NxC953pBNIjOD98Ephe9MewE0SYtMstAdO6u6+tA9Crue2C61Mv1/0Mg
fePkHqZHIHOLczP/awHdVdEMpgHMH7tk
  "],
 CellLabel->
  "In[515]:=",ExpressionUUID->"63fccaa4-7d0e-4b51-9770-2918871d063e"],

Cell[BoxData[
 TemplateBox[{"192", "\"Mib\"", "mebibits", "\"Mebibits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.913647398972289*^9, 3.913647409374524*^9}, {
   3.913647470237835*^9, 3.913647480144869*^9}, 3.913647510535163*^9, 
   3.913741376384939*^9, 3.9137485272234993`*^9, 3.9137488617412148`*^9, 
   3.913749124420918*^9, 3.913751431846036*^9, 3.9137521140874767`*^9, 
   3.913753548088585*^9, 3.9148572935230713`*^9, 3.914858313819187*^9, 
   3.915030582551981*^9},
 CellLabel->
  "Out[522]=",ExpressionUUID->"ff7a26e7-20a4-41aa-9c92-a77b964fd359"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["MMB (NYI)", "Subsubsection",
 CellChangeTimes->{{3.913466325340633*^9, 3.913466326113264*^9}, {
  3.914857334317769*^9, 3.9148573363593683`*^9}},
 FontWeight->"Bold",ExpressionUUID->"c0c5aa46-2bf3-4200-bced-550c3809895d"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3VmQFNee53m6ZsZsXrCq7hceBqvq5oEHzQxTJptWM8UwxciwoWgMKygK
jJFJBiUaCtESLaBAoBarkEBiNVYhtgvoAgMJBRKFxGXfGrGIS7IXyb5e1oRk
SfYz/M69x+uEZ0SkZ2ZkuJP+/ciOCPfw8C2SIPyXfz/n373/X/6mzx81atRo
0P/46n9/83ef/N8DB/7dsC5/8mqia/9BH/x9/97/qX3/f+j9970Htnz/v3s1
849f/a/7/9Co0X//6rEBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
6klpaalZtmyZ2bNnT9y7AgAAAAAAAACvlU6dOplGjRqZFi1axL0rAAAAAAAA
QGI8fvzYfPnll2bAgAFm6NChZufOnXVe54EDB8wnn3xi1zlmzBjz5MmTrMtd
vHjRDBs2zC43evRoc+bMmTpvu6SkxAwcONCuc+HChTmX87cdbp9++qmZMGGC
2bBhg3n48GGd9ymX58+f2/PUtWtX07dvX1NeXl5v26qrjh07FixfXbp0qXnj
jTfMm2++aa5cuVKAvQMAAAAAAADioQxRuZnf9u7dW+v1Xbt2rcr6tm3blnVZ
5Zj+ck2aNDEVFRW13vaPP/5YZdvKj6NsO1fTPn333XfmxYsXtd6vXDZv3pyx
rVmzZhV8G4VSyHy1TZs2wTGvW7euAHsHAAAAAAAAxOOHH36okimqnrK2RowY
UWV9ynCzGTx4cJVl65IxtmrVqsr6Hjx4UO229brWrVvbpprKxo0bV1nPuHHj
ar1fufTs2TNjG2+99VbBt1EohcxXu3fvHhzzjh07si4zZMgQ07JlSzN27Ng6
b69Yjhw5EvwcnTt3Lu7dAQAAAAAAQBFky1fVLl++XON16V76bNlkTfLV5s2b
m5cvX9Z42/v37896HFHy1Wz9F6gOt3///hnrOn78eI33KxfV6Wbb30Juo5AK
ma+qT4BFixbZn4tnz55lXUZZs7bXvn37Om+vWPz6acYBAwAAAAAASAc/X/Xr
CtUfak2pv1P3evUnWpN81d/21q1ba7ztHj16BK/360Jrm686H3zwQbDcV199
VeP9ymXJkiXBeqdNmxY8/uyzzwq2jUIqZL4aBfkqAAAAAAAAXgd+vqrHrv5U
/Y4+ffo08npUc6oxi/TaZs2amfXr19coX92+fXvwuFu3bjU6BtVDutf27t07
o2/Vuuarp06dCpZ77733arRf+bRt29auU+dMfbs2bdo0OO8a9yppyFerR74K
AAAAAACQPn6+qrpRP3csKSmJvJ4tW7YEr5sxY0bGuFlR8lWNQ6W+T910TcaV
V62te11paWlB81Xtl1tO/WoWwsWLF4N1jh8/3s7z+63VuFfV0XHNnTvXfPvt
t8ExnjhxwowcOdL06tXLDBo0yKxatSprXwu6J3/fvn223njgwIGmX79+tp9T
vf+57tfPlq/euXPHfP/993Zbn3zyiVm2bJnNo6tz9uxZM3v2bLN48eKMccP0
3q1cudI2ZfRue26ea4cPH8657kePHtljmzdvnvnoo4/M0KFDzYoVK8zJkydr
lFurfwiNvaX3R5m9jk/rvHTpUsZy+tnRedZ+DRs2LHgPdT79fdYy/u8r9L6o
hln9DZeVlVW7PxpjTecs17I6Rq3rzJkzdvrmzZtm8uTJto78ww8/tD8nucaO
0/uo937KlCl2ee27jj18rAAAAAAAAKgqnK8qh3LTGuc9qk6dOgWvu3fvXo3z
VeVUCxYsCKY///zzSNtVnuZqbt3+FjJfvXDhQq3ranP5+uuvg3WePn3azjt2
7FhG/wbVOXDgQLC8HitrzdafaziPU/6WbRww11ztcZifryob1HhfudahPg7y
ZZnK8dyyt2/fDua3a9cu5zr9lqumVT+/qv/N9Trl41evXs17XpX36vcD+bbf
p08f+zMuqlONss/hmlb1Vezmf/HFF3n3yc/4c/29cM/r3P78889Z+0FWnu7T
+1jdsSqj1vYBAAAAAACQXThfFXfvutrRo0erXYcyPLe86iGlNvnq/fv3a9w/
gWog3TrWrl1r5xUyX50wYUKwnB4Xgsbw0vpatmyZMd+v39W5yMfPV3XO/UxM
Gah77I9jv2nTpir5mTJp5Y7hPG7nzp0Z23P5qvox8PvKVR6rfhPCma1qJnPJ
la+q9lbrc7Wr/jb8lq1vYOWO/mv086PMX8fnH5vmq042G2XCym7D2+7QoUPw
nrmmvyOiGk/18RDeZ23H32ct49dk+/nql19+mfe9rkm+quzXP17tt5tWvay/
ff93Im7Zrl27Zvwcup/Tu3fv5t1HAAAAAACAtMqWr65ZsyaY179//2rXofvD
3fKuXrI2+aoMGDAgmKd7qqvjskTlfu7e9kLlq8oY/ZxJ94zX1f79+4P1zZw5
M+O5qVOnBs/5WVg2fr7qZ6Uuw1N+pnpJV0eqY/QzwFGjRmX0BaDndf+7y+K+
+eabjO25fNVvc+bMyVjH7t27M7K9y5cvZ933XPmqryb9r2q7bn3a/saNGzOe
17lQHwj+ecrGz+p1rtTfgk/TnTt3DrYTVpP+V+srX/Xz3b1799rn9DNw8OBB
2w+A49cfK091ddSO6raVu1e3XQAAAAAAgLTLlq+qbtS/zzpXv42i+6TdcqqH
c2qbrx4/fjyY9/bbb+fdd39MLGWTTk3zVeW46kdUbfXq1WbixInmnXfeycir
NL8QPv7445x5rT9Ol6uPzCWcryojy/c+TZ8+PVJWpnrMDz74oEofp+F8NVzf
6vh9POS6772Q+arucfdrZ/P1Zap+F9xy6i/Yp58T9zOvP69fv55zPcq+1V9u
WFLyVWW/6m8ilxs3bgTLqq5WfWxk42fyWqefzwIAAAAAAOD3suWrojFu/DrF
XPz+G/1xmWqbr4pyVTc/X07UpUuXYDk/+6lpvlpde/fdd+14QXWlY3T1nepr
NBu/D1KNg5VLOF+tbowk1fe6ZV3foTXh56vKEXPxc8P3338/6zKFzFf1M+fW
NXz48LzLalwtt6xybp8y07rWaiYlX9U4Y/modtktG671DdO4WoX+HQMAAAAA
AEBDkitf9WspVeOWbRx63Xfs6tvCy9QlXy0pKcmZgzl+Vhbuw6DQ+aqr36su
M6uO6mPd+nQvejZ+zqdxsHLx89Xq+oX1s7x8/aLm449vVR3XV2muDLmQ+aq/
rlOnTlW7by5nVp+qPvX96tbj95NaE0nIV6P0p+DeS9XpVsf/ezZp0qRqlwcA
AAAAAEibXPmqdOvWLXgu2/3g69atC56fP39+xnN1yVf1uLr+CT755JPg+ZMn
T2Y8V9N8tbKy0mbDaho/XrWqhw4dsuOth8ctqq5ONB+NHeTWU15ennUZv78F
5ZS5+Pmqctt81G+oW3b27Nm12vea5Kuu/jjXsoXMV5UXu3Upl1eNZb7m6ofD
59b1B5GtX9WokpCvqi/k6rj8W3/HqjtfqoWtazYPAAAAAADQkOXLV9VHpXtO
+VOY+gh1mZTyIl9d8lXRGPHuuW+//TbjOeWtLicL1yFKoca3EvVF6+fMykhr
49atW5HXof4I3LIaDyubmuSr69evD5Zdu3Ztrfa/JvmqGwNKNc3ZFDJfdT+D
NW3h2k31Xxv1+HJ5HfJVjUdWm/Ol1qNHj7zrBgAAAAAASKN8+arqOV2tm9rV
q1eD544cORLM/+yzz6qst675qvoedc+FczqNbZ9v3YXMV+Xu3bsZ9bS5xgPK
x99nNY3JlKv528rVP0JN8lXV4bplw+M6RZXUfFX749alx1GbPx6auHPeunXr
ao8vl9chX/Vz/pqcM70fyukBAAAAAACQKV++Kv74VX4O1Ldv32B+tnGY6pqv
isvp1Hbt2mXn6f59l/nqT02HFTpfFb+m9PDhw9UuH+bywpo21elm27+a5Kt+
Pw7Lly+v8b5LUvNVf9ytbH0ER+XqV9UfRG3VNl/VWHL5FDJf1Tlyy2ar/QYA
AAAAAEDNVJev3rlzJ3heNX66v1j9k7p53bt3z7reQuSrGtvcPe/6J/AzrDlz
5mRdb33kqxpDyy2/d+/eapf3qX9Y91r1TTpt2rRqm7KvfPlpTfJV5cFu2YkT
J9Zo352k5qsDBw4M1qWfy9ry+8bNltlHUZN81b9Pf8CAAXmXLXT/q67mN9f7
AwAAAAAAgOiqy1elT58+wTJr1qyx49q76d27d2d9TSHyVeVc/vhS165ds3mb
q+u8f/9+1vXWR77q19KGx9Oqjj82vTLjKNTvqntNtv5aa5Kvaiwtt6xy0tqI
K19VHp2PX19d275lxR8vTee2Nvx8dceOHdUu7/okUP+++dy4caOg+WqXLl0y
/k4BAAAAAACg9qLkq7/88kuwjPqndLmQ7qnOpRD5qqifTLeMP86U8rBcCp2v
nj59OlhWrbKyMu/yvufPn5umTZsGmbDqFqPy+75Vv5m+muSr4ufUx48fz7us
Mrdwdl3sfNWNW1VdjeW+ffuCdbVs2bLafctl2bJlVWqlc1Huf+bMmSrz9bsG
t47Vq1dXu03XJ4H+PmkctWz0s9amTZuC5quTJk0Kls/WdzIAAAAAAACii5Kv
Srb+Q7/77rucyxcqXw2Px+PauXPncm67kPmqslV/DKUo+ZVP59S9Vn0M1IT6
u3Wv1fhYvprmq/4YV8ouNWZXmPrmnD17tl1GfRT4ip2vvv/++8Ey169fj7Q9
lz8q085F+fbZs2er5Jmadjl4vlrYCxcu2DHItEyYMlf3+uru+Rct45ZfvHhx
lefv3bsX1GsXMl9V36/+GGrqnzefioqKrH0sAwAAAAAAIHq+umTJkoycR/mM
+oXMpVD5qvTq1Stj27q/OZ+a5qs6NtUvurZ06VLz1Vdfmffeey9ju6onVX+0
NeHve66+FHLx62aVb/tqmq+G80MdS0lJiSkrK7Nt5cqVGRl63Pnq9OnTM97v
S5cu2ax90aJFVcbo8vu3VWvXrp2tH9X8R48ematXr5rt27fbWk2XK2a7f3/B
ggUZ6xk6dKh9z65cuWL7Ux02bFjG82H6+6AaZf99UR2w6r/HjBlj7/P3heui
laGrD1mtR38v/frlQuar4uftLvvX31PlqMpfz58/bzPm3r17B8vUpPYaAAAA
AAAgLaLmq8pc/OwoV87jFDJf1XhSfhakrCyfKPnqkCFDstbF5mq6R1u1izWh
bft5dG3GTXK1kmp+v681zVeltLQ0o5+AXE256OXLlzNeW+x8VbWb/s9bdfm6
+j71azKra4cOHaqyDuWH4Qw1V5s8eXLW/fZrjsNN5z9s7Nix1W5r/fr1wbko
VL6qGl+/n4Dqmrafry4YAAAAAAAgrfwctLr6Sj97qm5cHP+++G3btmVdRvWE
UWvjXG1lvj5fndGjRwfrzdVXqn/cufIk1Q/27NnT5lu1yUaVp7n1jRo1qsav
F7/OcMWKFcH8w4cPV5tfZ6N+AVRTmy2L1PGqblQ1n2EaY0vLhOtos1H/pfmW
nTVrVrBN5ai56Bj9vhlcGz9+fNblldVqLDa/TtdvOua+ffvaPlvz0f3yrm/U
cFMfwNmyWUc/x/7Pn7/tcP2qo/c1nHvr508/e64fDPd+qa46G5e/6ncLNXH0
6FHToUOHnFm2MnKNz1bT3y0AAAAAAACkie67jnLfu/rnVF+YqmWNQnlXvvWq
Hk45bZT16f52LZtrHCCfslDtZ67a1WLS8eue77rQ+6NsTuc/vO5c9Z9R6L75
I0eO2Hvfdf99Pu785+sTIrxsrmxbx6HjUb+eUWhdJ06csHXM4XG+clFuu3//
fptxKw+t7vcB2ehY9Xo1nadsuXO+1+o1x44ds+OJRbm3vry83G5LdcrhPF9/
R/QznSvnd8/XpcZU5+jgwYPm559/tvudrY9eAAAAAAAAAAAAAADQQKgOhVa8
BgAAAAAAAKBhUN73R/+KVuwGAAAAAAAA4PXn8lUUD+cbAAAAAAAAaBjIV4uP
8w0AAAAAAAA0DOSrxcf5BgAAAAAAABoG8tXi43yjiM6cOWPKy8vj3o06Wb9+
vdm/f799/PTpU3Py5Enz+PHjetlWfa8/iiNHjpjVq1fHtn0AAAAAAFAD5KvF
x/lu0C5dumRWrFhhNm3alDG/tLTUrFq1yrx48SKY9/DhQ1NSUmIOHz5cL/tS
WVlpGjVqZAYNGlQv6y+Gc+fO2WOYOHGind68ebOd/v7773O+Rsc9fPhw88MP
P9R4e+H1nz592gwePNgcO3asdgdQC4sXL7b7cOLEiaJtEwAAAAAA1BL5avFx
vhus58+fmzfffNNmY40bN8547oMPPrDzKyoq7PTLV3/3unfvbucpT6sPDSFf
HTp0qD2Gs2fP2uko+WpZWZldRufXUQ3s/Pnzq91eeP0LFy600998800djyS6
O3fu2G0OGzasaNsEAAAAAAC1RL5afJzvBmvevHlBtporX71//76dVj2mpvv1
61dv+/O656uq9W3SpIlp2bJlMC9KvqrseteuXebatWvBvK5du9p1VSe8/gcP
Hpjt27fbWuNi6tSpk91f9VcAAAAAAAASjHy1+DjfDdLt27dtpvree++ZLl26
5M1X1XeAHrdt27ba/Oz69etmyZIl5osvvjDLly83jx49ynhe/Q7MnTvXfPXV
V2bt2rUZz4fz1WfPnplFixbZ1/jWrVtnNmzYEEzr8Y4dO2wdpZbXun/55Rf7
nObNnj3bTJ48ucp63OvU3+vSpUvNhAkTzO7du6sck+YpX/7666/Nzz//nPPY
Dx48aPd/6tSpwTw//9R6dF5U/+tnqcpldc70emWt6q/hrbfesu/JsmXLbMuV
l4bz1Rs3btga1itXrthpvR+avnfvntm3b589Rm1f5yVMNbdaVudP51jn36e+
B2bNmmXGjh1rt+c//91339n92Lp1a87zAwAAAAAAEoB8tfg43w3Shx9+aPMw
5XD58lVlknquWbNmWTM5n7JHLavXuaac0HH3zruaWf3ZvHlzc/HiRft8OF91
952rb1JfixYtTKtWrYJpPX7jjTdM06ZNM7Y9adIkW1Ppz/P7mXWv07H5y8yZ
MydYRlmj20+3nJ+N+lw9sJ/9uvxT2/G3of1SvwDh41be7C/nmsb9yiacr+aa
Vn2pvz4di6tNFmW6fi2zHuv8uPxbObTbb51/PVb/vI7ybM379ttvs+4nAAAA
AABICPLV4uN8NziHDh0K8kfJl6+6zFJj1OejvlyVu2k9blwsbadPnz72eVcD
+84779jMTnWablwk1dBKXfJVt2695sCBA0GOqPvsVaurnFjTHTt2rPI6LXPz
5k2bNSs/9O/L1+P27dsH08qQc9XwDhw40K7vyJEjwTyXb+q86LGOW7Wqmvf+
++9nPW7/PdHyarlEzVfV1Ker3qfRo0fbadX6io5d21J9supkdXz62dAyM2fO
tMv07NnTLuPqaFXL6mpkRZmzlleGDgAAAAAAEox8tfg43w2KsjrliqrHfPLk
iZ2XL1919Z/VjUd/7ty5IKvMplevXllrP1XfqvlSl3xVObB/v7rG7dK+u2MU
9Yuq4873Onfcrm5Ty2s9+/fvz3v80qNHD/ta5bmOyzddlum49WY7bgn3v6q8
+tKlSxnNX391+aru+3cuX75s540cOdJOqx8Hl7/quNXUz4DLrOWjjz6y0+pH
QfsSptw23/sPAAAAAAASgny1+DjfDYr68lQOtnHjxmBevnxV/Wm6++M1dlIu
W7ZssctNnz496/PKMrON1+RyV/WBWpd8VfN8qsX0s1RRHary1Hyv07a0TdcX
gs6Tu1++devW9jhzUbao5XQcTq7xrdz9+soqo+Sr6js13GeA6kej5qv+9lWD
qnlDhgyx0+oTNlufBGqudvfChQv2fLq+BdSHbjhn1Xl6++23c54fAAAAAACQ
ADHlq8qYVNul+2hzqaiosMsoj/Hv59W9whor5tSpUzlfq5xCuY2W0zg0jsa7
0Tw3ns/hw4erjDlT78hXGxTVI+bK0tS++eYbu5w/vtW0adPsY90jnovrn9Pv
u9SnvDOc4fr7o3vSc+Wrn3zyScZr6jNfHTFiREa+6vZDY1a5Wt5cY1z17t3b
Pn/+/PlgXq58VfvizkeUfPXx48d2fCzX9uzZYz83CpGvauwvTavfAvWj4DfV
sTp6j9RPq2qD/f4lRNm76+cVAAAAAAAkWAz56tWrV4PsSblCLupD0i3nxq0R
V/OlprG8s1mwYEGwjH8fb3jcHVc7Vt292gVFvtqgbN++3Y4B7zc3XpEeHz9+
3C7n56v6fYH6LQ3/fPo0RlW2+8M1Jr248bT8++yV8yljdBlnOGd095x37tw5
eI36gdVripmvOm4MJ+WR2bjXKv90XL758ccfB/P0uxjNU38F2Y5bunXrZudV
9/uUQuSres69/1Eo69V74Pdlq888rUM/NwAAAAAAIMFiyFddX4Wu6T7dMD+D
VfPHAvIzUr/ey+ePLT5//vyM16p/SvXnqP4WVRuoZdq1a1f4A82FfLXBy9c/
gBtj/tatW0H9pj9+k69Dhw72+cGDB5vVq1cHmaqo9lqPlW+qTnLNmjWmTZs2
dl5JSYldJlvO6Mag0t8djbXk9qEY+aruv9cyqtlUtjpgwICstajOypUr7fNa
3vHHl1Ktrvo61b5pWuN75TpunUPXN4J+/5It7/XXX5d8VXmp+5yaMWOGrY1V
Lb76XFXtvDuf6vtB+bj7fZC/v9u2bctbvwwAAAAAABIixnxV90brTzceus/1
X9ivX7+s+apyJP2pFu6zcOfOnfY1LosK56t+jiTKYrPdZ11vyFcbPNVKhn+m
3M+jGy9eXB8Ark/OMP2eQdm/yxO1Tr/WU1md8k33vLJSZa2Ocr5wfwDKZf3f
Ueg51bOqL1RHf7/CteXaD/1d8aneUuvK97rRo0fb7dy9e9ceu8t3/e37/X/4
9DsQLdO3b99gnuu/9uuvvw76cVVTjus+C7Idt+pB/XOl+uBsXK7pctDqpkXj
V2ne0KFDg3nqv8Tl3a4pn3Z9Iaj+1n9OWbr6zHVGjRpl56tPAQAAAAAAkGAx
5qvKUJUruezFUZ+Eyon0nOunMpyvasyXCRMm2OfC4+Oopk25i8tZ8+Wruq9Y
y6qmtWjIVxs83YP+5MmTjHm6N1+5X5iWq+6edfXFqT5Icy2nemy/X0+fajm1
7TDVkrpxo7Re/b3z99+fzjfPP85sy7jxpnyqHT137lzW8xGme/71d9Rfr/JM
0bZ1XsLblGzHrWlltq6GOBc/A48ynWt7bl/Vp4Ofnfrr0XP6HApzvz8CAAAA
AAAJF3O+umrVqir3wOo+aM374Ycf8uaryof0XPfu3YPn3DzdC6yxrLLlq8pu
P//8c1tr5vpyVRZbNOSrQGTqn1Z/RzXOXVocOnQoqNEFAAAAAAAJF3O+6sZ1
8ftsVHaqDFS1cPnyVdF9zf44V2PHjg2Wz5Wvuvt0/XuFNZZWthq4ekG+CkSm
ulD9vVW/qWmhzz19BubqIxYAAAAAACRIzPmqqI9ETe/du9ccO3bMPlZOKtXl
q+oDUc9PnDgx6FfAPZcrX/X7B9B9wspW843jXnDkqwAAAAAAAEDDkIB81WWq
Gueqf//+9rHu85fq8lXVuCpT1Tw31rj+lCj5qhw/fjwYS6soyFeRYntP37IN
AAAAAACgQUhAvir+mOJdu3YN5leXr4rGDXdjq6u58Xai5qvq51XLffrppwU/
1qzIV5FiU/7ppG0AAAAAAAANQkLy1UWLFgX5qj+OTZR8taysLHitslYnV76q
Nm/ePDN37lybqSqT1XInTpyor0PORL6KFPtq7XHbAAAAAAAAGoQY8tWrV6/a
PHP8+PHBPPWDqpxT2eeLFy+C+TNmzLDLKkN1NDZVu3btMtbZtm1bu9y5c+eC
eaWlpVX6VW3dunWQxbqa144dO5oDBw4U/kBzIV9Fio0pOWIbAAAAAABAgxBD
vioaE/yltu3R+FTqT9WnZbRsdcs9f/7cPH78uMp2Hj16VGU7sSNfRYr91+Wl
tgEAAAAAADQIMeWrqcb5RooN/u63tgEAAAAAADQI5KvFx/lGiv39t3tN37n7
4t4NAAAAAACAwiBfLT7ON1Ks84Qd5m8m7oh7NwAAAAAAAAqDfLX4ON9IsVbD
f2NajfhN3LsBAAAAAABQGOSrxcf5RkpVPn1p/tfB620DAAAAAABoEMhXi4/z
jZS6cPOhzVb/4/ht5vLtR3HvDgAAAAAAQN2RrxYf5xsp9XPZLdP+y612jKt9
p2/HvTsAAAAAAAB1R75afJxvpNTiHedM37n7zNT1J813O8/FvTsAAAAAAAB1
9xrnq5cvXzYPHz7Mu8y1a9fMlStXirRHEb2m5xuoq39YctBM/+mU2Xz0d+aT
Xx+Ke3cAAAAAAADq7jXNV2/dumUaNWpkRo4cmXe5Vq1amRYtWgTT3377rZk0
aVI97101XsPzDRRCqxG/Mf98tcLcr3xm2o7dEvfuAAAAAAAA1F3K8tUmTZqY
xo0b1/PeVcM73wfO3DazNpyi0Rp8G/zdb02/+fuDn/0v/vGo+eTXv419v2i0
YrSD5+7E8a8NAAAAAKAYUpavHjlyxBw/frye964afzjf18orTbsvtsR+3U+j
FaMt2n7WVFQ+C/4aPHj8zPzq1by494tGK0b7qy+3muv3Hsf1rw4AAAAAoD7V
Il9dtWqV2bBhQ8Y8Tf/www8Z8/bs2WOWLl0aTL948cJs2bLFTJ061UybNs1s
3bo1Y/nr16+bhQsXmjt37pglS5aYsWPHmjNnzgSv/fHHH8348ePNihUrzKVL
l2qVr27cuNGsW7cumC4tLTXLly83z549M+vXrzfjxo0zq1evttNh+/btMzNm
zLD7rmML2717t5k4caL5+uuvzc8//5x7p/5wvqf/+M92vB8AQMO2cOsZm7MC
AAAAABqgWuSrrVu3ttnmkydP7LSySN1zr3n3798PllOu2axZM/v43r17pl27
dnYZt6xa586dgyxz8+bNdt6bb74ZPD9v3jybrXbp0iWYp9a0adNa5avh6VGj
Rtn1dOjQIWP93bt3z1jPgAED7Hz1L+CWGTx4cPD8V199Zec1b97cHrMea2yt
rP5wvjtN3GHO33hQzdkGALzuTv/uvvnbyTvj3g0AAAAAQH2oRb46efJkmx9u
27bNTqtW02WOrjb0ypUrdnro0KF2WjmopqdPn27zUmWzffv2tfMWLFhgl3H5
qluP6llv375tH2ter1697OtOnjxp3njjDTtvxIgRefc1ar6qXPTEiRPm8ePH
QQ58+vRpu4xqXjX92Wef2WnV1yp/1TzVv4py1/bt2wfr1Tl5+vRp9p16db4r
n740fzH8N5HPOQDg9fYf/usG8+jp87h3AwAAAABQaLXIV5VvKlv85JNP7PSX
X34Z5KIffvihnaf7/DWte+ZF9abKRH3KKV0Nq7h8VX0A+D744AM7/+rVq8E8
9Rvg56vl5eW2zwDXVC8rUfPVsrKyYJ76C9C8TZs2ZWxfWe+jR49sW7NmjZ33
7bff2mWUzypj3b//X8bvyenV+dZYJ383O08fAgCABqXnrD3mt+fL494NAAAA
AECh1XJ8K+WJaqL+Arp27WpzUmWML1+tU9PqB0D3/iuPVBbZo0ePKutR7qr+
AMTlq99//33GMqoL1bp84fGtwvf3u5w3ar6q7NRx9aquFvftt9/OWLff1Neq
e43r90DnQ/3M5vTqfP/TwStm2NJD+U4xAKAB0Wf++t9eiXs3AAAAAACFVst8
9dNPP7VZ4sGDB4M6zvnz59vHBw4csH/27t3bLquMVdPdunWrsh5lksovJVe+
2rFjRzvfF85XVX+qWlnXLl68aOcXIl9121dfAOH28OHD4HWqx9XYXa6P1pxj
XL063/O3nDHT1p/Me44BAA2HPvMXbD0T924AAAAAAAqtlvnqnj17bIbYtm3b
4P56ZZr+PJdPimpdlaX6eaTLYQcNGmSnc+WrbmypX375JZi3atWqgo5vlS9f
1f5p+vDhw5HOjfZTy6uf2qxene8v/vGo+f/+24VI6wMAvP70mT9uzbG4dwMA
AAAAUGi1zFefP38e3A+ve/wdN+6Ump+lfvPNN3aealXVd+mSJUuCOk9Xa5or
X3XjZ2ndJSUlGf29Fmp8q3z5qutvtlmzZmblypVm7969ZsWKFeadd96xfb1q
LC+tV/OUrbo8OHwcgVfn+6MFB8y249erOcsAgIZCn/kf/+qX6hcEAAAAALxe
apmvSr9+/TL6OhWXV6r/VZ/6CNC4VS6TVVPOqRpWZ9u2bVXqXp2ZM2cGr1Uu
6/LZ0aNH593HNm3aBP27ZpseM2aMXafu7XfUd6rmrV+/Ppi3YcMGm6/6fa9q
XXqdcmTlq/5zGvtL/dBm9ep8d52y05ReYJwTAEgLfeb/v1N3x70bAAAAAIBC
q0O+qvxQ2WI4R9S8Fy9e5HyN6j3v37+f9Xm/5jVMNbOXL18Otvf48WM7Lx/l
uk+fPs05rf2srKyMvB/l5eXm3LlzWZ9X1qrntF95vTrf7b7YYv75akX+5QAA
DcbJKxWm/bitce8GAAAAAKDQ6pCvopZene82ozeZCzdzZ8kAgIbl/I0Hpu3Y
LXHvBgAAAACg0MhXi+/V+W414jfm+t2qdbMAgIbpWnml+ctRm+LeDQAAAABA
oZGvFt+r8/3Wpz+Ze4+eVr8sAKBBuPPgifmL4b+JezcAAAAAvGb+6ONtNBqN
RqPRaDSvAWhYRv54Lvj7/cfDdpk2Mw7Z1nPpSTPqp/Nm2+m7ce8igJBRU9eY
Rv+2p/mTFv1Mk3//sfl3/+c/mP+57afmzQ4jTau/HWs69Jxsev7DPPPp1yVm
Uckuc7zsSty7DCDF4r5+odFoNBqNRktaA9Cw+PlqrvZnY342v9r7u7h3FcAf
jJzyjzZfrUn7N//bfzZ/22+m2bD9SNy7DyBl4r5+odFoNBqNRktaA9CwRMlX
XdtaVh737iKFRv903vybT3eZ5mP3mv9j6kHT8dsjpsevT5hBa06bb//bVXPj
fvr6LatNvuq3//TJgrgPAUCKcC2RfC9fvqD/1WJ7db7/aE2nuPcCAFBEfCcC
0uO3l+/bHHXh3ms2e/3T0XuCv/+aBootyu8A/uqbw+bsrXSNv3v/QaX53c17
5syFG+bwiUtmz8HT5jc7jpqFK3eaL2b8YP7z8MWmc59p5t//9SjT+H/pWyVj
Xfubg3EfAoCU4Foi+chXY0C+CgCpw3ciIL38bIt8FXGIWmP95xMOxL2riab8
9S86jw3yVdXAAkAxcC2RfOSrMSBfRUot3nAxaEDa8J0ISC/yVSSB+gA4du2R
2X76rll56IaZveuKGbH+nK1b5d+o6Px+BchXARQLn9PJR74aA/JVpFTbgbuC
BqQN34mA9CJfRdLxb1R05KsA4sDndPKRr8aAfBUpRb6KNOM7EZBe5KtIOv6N
io58FUAc+JxOPvLVGJCvIqUGzjgcNCBt+E4EpBf5KpKOf6OiI18FEAc+p5OP
fDUG5KsAkDq1/U404kSlabTmrm3NflNh/nLXA/PXex+aqWeemHMPX9TT3gIo
JPJVJB3X7dGRrwKIA5/TyUe+GgPyVQBInULkq9nawgtP6mmPARQK+SqSjuv2
6MhXAcSBz+nkK1a+evToUbNixQrz8OHDjPlPnz41JSUlZv/+/VVec/78efua
iooKO71x40azffv2nNs4efKkWbNmTTCt5Q8ePJixzM2bN826devMrFmzzK5d
u8zjx4/rcli1Q74KAKlTX/nqH//TvXraYwCFQr6KpOO6PTryVQBx4HM6+YqV
r06aNMk0atQoI/+Ubdu22fnNmjWr8poPP/zQPqecVbTMW2+9lXMbAwYMME2a
NAmmGzdubIYNGxZM79ixw67Pb61btzb37hX52pR8FSnF+FZIs0J8J1J/AFtv
PrM1q37GCiDZyFeRdFy3R0e+CiAOfE4nX7Hy1dLSUptnKjP1jR49Osg6z549
m/Gc8tTmzZtnTOfLVzt27GjzUrl7965d55w5c+y06maVtzZt2tQcP37cPH/+
3IwbN84uo30oKvJVpBT5KtKs0N+JyFeB1wf5KpKO6/boyFcBxIHP6eQrVr76
8uVLW1sarlNVHury1fnz5wfzVbOqeUOGDAnm5cpXb9++bfsRUHbasmVL+3jK
lCn29YMGDTJlZWV2nqaXLVsWvO7FixdZ96neka8ipchXkWbkq0B6ka8i6bhu
j458FUAc+JxOvmKOb9W3b9+MOtX79+/bad3Drz+7du0aLLt48WI7b/PmzcG8
XPmq+lFVbarLacOPp02bZnNaTV++fDnjtd26dbPzi9oPK/kqUmrRTxeCBqQN
+SqQXuSrSDqu26MjXwUQBz6nk6+Y+erq1attlrlgwQI7rfGnNK18tH379jYL
ffbsmX2uR48e9rnKysrg9fn6B9C4VVpeuayoXwBNu75V33vvPTv95EnmOMvq
s1Xzr127VvDjzYl8FQBSh3wVSC/yVSQd1+3Rka8CiAOf08lXzHy1vLzcZpnd
u3e308OHDw9qR1Vjqsd79uwJ+hLo3Llzxuvz5asHDx60r9+yZYudVk2s8lqn
U6dO9nn1CeAbPHiwnX/hQhHr6chXASB1yFeB9CJfRdJx3R4d+SqAOPA5nXzF
zFelTZs2NvfU+FLqK7Vdu3Z2/tGjR23OOXbs2ODx3LlzM16bK1/dsGGD6d+/
v33NZ599ZubNm2fXre0sXLjQ5rU9e/bMqGd1PvroIztf42EVDfkqUqr09L2g
AWlDvgqkF/kqko7r9ujIVwHEgc/p5Ct2vjpx4kSbZ27atMn+OWHChD/sx+9r
Vlu1amVmzpxpn9MYV75c+er7778f9LeqZdTcdPPmzc3Dhw+DOtVjx45lvFb9
Emh+UZGvIqUY3wppRr4KpBf5KpKO6/boyFcBxIHP6eQrdr5aWlpq80zVl+rP
vXv3Bs/16dPHzlPGqlw0LF//AKpfVT7rqHZ16NChwfSaNWsy8ly5fv16Rn8F
RUO+ipQiX0Waka8C6UW+iqTjuj068lUAceBzOvmKna+6OlVXX+rGs5KSkpJg
vp+NOspXlZuqBta1yZMn23V07NjRtG7d2i5XUVFh1zF79uzgtY8ePQq2O336
dJu3uox3586d9X/gPvJVpBT5KtKMfBVIL/JVJB3X7dGRrwKIA5/TyVfsfFVc
n6ddunTJmH/79u0gX921q2r+ovzUPe835aktWrSw/QTIqVOn7Pz169dnvP7k
yZPmzTffzOhLYO3atfV3oLmQrwJA6rzO+ar661myZIkdi3LdunWmsrKy3reZ
FPruoN/JOhs3brRjaobpO8x3331nl2+I1NfS9u3bbR9O+n51586dom1bY5Pq
d+GzZs0y8+fPt/dChel37Vu3brX7p/77s71HcSJfRdJx3R4d+SqAOPA5nXxx
5KuqYdX3dH1fDnv69Kl5/Phxjdf55MmTjFpYrT8XjXF18+bNGm+jYMhXASB1
Xtd8VeNEhn+vqd9VNiRHjhyx98Po97VhAwYMqNL/0LBhwzKWWbFihZ2vc/PV
V1/V+/4W25UrV2y/Tf7PgM7J8ePHc75GGayy0Lpyv0MP/wxqPFTn/v375o03
3qiyzOjRo+u8/UIhX0XScd0eHfkqgDjwOZ18ceSrqUe+CgCpU5/56q8uPjXb
bj035x5W/b1lXahvHeVUyq4uXbpkf4+pGkb1ed6QuHE1s9We+v0P3b171y43
Z86c4PlevXoFfcc31Hy1Xbt29thUu6yfgc2bN9tpd16y6dq1a0YuXVsXL160
ef4PP/xgbt26FWxbTbmv6E/t4+7du83z58/NiRMngrxbv1NPAvJVJB3X7dGR
rwKIA5/TyUe+GgPyVaTUoJlHggakTaG/E/3rdXczMtZwG3Gi7vfwHzt2zGZU
gwYNyruc7hVXDeeXX35pli9fbu+V9ynzUjb39ddfmxkzZphly5bZdvjwYfv8
hg0bzI4dO+x6Fi1aZDPKX375JVi3+lNXfWmu+8JVK6nXqF6yrKws43m37vLy
crN06VI7zqVyOEf3lPfs2dMe56RJk+x+qT8EHYOOqWnTpra/dj2eMmVKcD7c
dvRY9667c1Uf+aqOW+dVxzB16lS7n+4+Hd0LtGXLFjtf/TfoeBwto/pj/7zp
vVi8eLE5cOBAxjZWr16d8Vrn8uXL9rj69u2bMf+9996z85W7+3SPks6VxiNV
xunea/++Iu2P7uHXuVI/Tcrxa0L9QVXXf36PHj3sMuozKgnIV5F0XLdHR74K
IA58Ticf+WoM/pCv0mhpa/74VnHvC41W9Fbg70Q9f3lY7/mq7rtWRqWcLFd/
lrq3XhmklnN/qm7R1YIqz2vfvr2dH77H/NNPP7XLqPZTNbLu9a4pR/THxFTb
tGlTsG3VJrZp0yboU90ts2rVqmAZt27/eb8G1b3eb+prVv3AuxpIdw78x8oy
ffWZr44aNSrol8Htg86vjt/Vlvr717lzZ5s7u/evQ4cOwbqUq7p6W0d1oZrX
r1+/KttWLq7nlO/6lHlrvrJdn6t5DrczZ87Y5zV+afic6udCdapRqTZWr9PP
XjY6bv0saf1J6SuYfBVJx3V7dOSrAOLA53Tyka/GgPONlPLzVSBtCv2d6M82
3Kv3fFWUcbo8THWe/j30qlVUTqcM9Ny5c3aeagq1rDIwUU2kpr/55hs7rXu3
Nf3hhx8G63H31r/zzju2XtVlgG49qiVVzaOmdb++M2LECDvvxx9/tNPK8JTV
aX9cX+5u3VqP+l7XveR63r93XTW1LrPUMTlaXvNV7ynKZHPdc16MfFWZofbx
7Nmztr/6kSNH2vnTp0+3dazqi151ppq3YMEC+1qdL027+lHV77pz6+qMVW+a
bVxQ0Xr0XLi2VfWuml9SUpJ1nzWGqfJNnU93TpWNu/dZOazm69xqnupho7h2
7VpwLvx+/JXPTpw40faN67J07WNSkK8i6bhuj458FUAc+JxOPvLVGHC+kVKL
froQNCBt6rP/1YUXnpitN58VvP9VR7mbP36QMjpx946rDlV5mWu6n17Zmuh+
fy2zb9++YH3KxvyaSmWgmuePU6laTWWgygwdrVf5qaMcTa/1tz148GC7PTf2
UrZ1f/DBB3YZd196rv5XVbPr12gqu3PHFRYlX503b57p3r173rZnz54qr3P5
qt+vgTuPel98yqddDauozwQ/O23btm1QN6pcVVz/CNnu01e/A3pO9bw+9Yeq
+epzIZts/a+6vmqVkfrUl4DmV0d5bLdu3bJmp9o/V7PqamP1Xvh5eZzIV5F0
XLdHR74KIA58Ticf+WoMON8AkDr1ma8Wg3IqZVouv1Ke5WpVczXVF7qMUnmb
+lvVvfeaVmboKAPVGPE+5YB+lirqZ0AZmigvzbdtl1NmW/fw4cPtMsoiJVu+
qn5bNY6X5n/22Wc2G3W5sfo0Ded2UfJV9SH79ttv523Z+hR1+arfr627D1/9
jIbpHCmfFtXrunph1bDqsfo20HEoV1X/DXrs6o3DXD4erm1V3WqumlfJlq+6
Wucwl7uqf9l81L9vrn4MfOpzVe+V6+shCchXkXRct0dHvgogDnxOJx/5agw4
3wCQOq97vuq4e8mVI+7fv98+HjBggL1/32+6h138e/1dU06qPjKd2uSrym5d
P6LhbSvrdPeOZ1u361cgX77qxlByfbv6/bdqv/zxmqQY/QP4+arLl1XPGaa8
VFmto/pQnbeNGzcGtb26H1/LKYfWvO+++y7rtl2dquuv1tFYZZofHifLyZav
utrZMPUXoHWpz4NclGlrmU6dOmXUIueiWl/Xp0USkK8i6bhuj458FUAc+JxO
PvLVGHC+ASB1Xsd89caNG6aioiJjnstXVc/pxkXKVfsoqv3UMlevXrX1q/oz
rDb5qug1fl+r2UTJV9U3rF/z6qh+1c8IlQ1qfKZsip2vis6P9snPel2ePWjQ
oGCe9knzdE51PKq9XbZsWTBPf+q9zOb69etBJu4ou1Zmq3Xlyjrdffz+86qh
1Tzl8o72XccQfo98K1eutK9TZhzOtUW1vKrD9a1du9a+ZsiQITnXW0zkq0g6
rtujI18FEAc+p5OPfDUGnG+kFONbIc1ex3xV97Mr+9L99Mq4pkyZYqfVLl26
ZJdxfXeq39MdO3aYbdu2mc8//9yMGzfOPu/GQXJ1oMrRVIOofM+pbb7q7l1X
X666n1/5qLJSf6ykKPmqq9FUn6XLly+3NbCisaFat25tHytn1jKzZ8/OWJf6
ZlXtp47Z1ZNqevPmzTU/4TnkylddLqzccc2aNfZeeGWemqfxnpwjR44E74Hu
xRdl526eX+uajc6Llvv444/NunXrgtre8ePH53yN6wdXPzsaI0vnWvm6G5tK
+6p9btOmTd5xsty4Zmpjx461Y5G5pn0R1R/rZ0U/r+qvQO+ROw+56muLjXwV
Scd1e3TkqwDiwOd08pGvxoDzjZQiX0WavY75qu7xV6bp39uvusW9e/cGy9y9
e9f07t07YxnlrxpXSVy9q/rMVP6lelZlYX7fncrYXH+hTrt27aqM3aS8Uxmt
o5pFl/n62+/bt2+wTLZ1jx492i6nfRfVvypHda934z4pl1WWKOrTM1t/oy4f
DDfNL5QxY8Zk5MGOakOVcfrHr33Olim6/g2UkzvKnjVv1qxZebevvhxcxure
X53DfGNHlZWV2RzVvcblvcpE/fnKQfP1karlc/Wx62pq1a9D+H3Qz1iuvmHj
QL6KpOO6PTryVQBx4HM6+chXY8D5RkqRryLNXsd81Xnw4IHNWsN9BfiU9V24
cMGODe/nbsr7wvWjbswrV+Oq14b73sw178mTJ1m3r34HVFMbvl8923p0f3tl
ZWWVdWjfb968GUxrW/76st2bXgy59tfR+dY4Vn6ftmE6Dt1H71M+XZNj0vm4
fPly5OW1fr0n2fZLtbiqoS0k93N67969gq63EMhXkXRct0dHvgogDnxOJx/5
agw430ip0rK7QQPS5nXOV+vC1Ujqnm3VVe7cudPWoWqexiAC0oB8FUnHdXt0
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
cfDgwWbHjh1m27Zt5vPPPzfjxo2zz9+/fz+oAZoxY4bNZ3V/vuszVfmpnlNd
qZ5bt26dnR/OV7/55hs7rVpVjU+lfl1d7enFixftMlHyVWW7mla/BaI+ATR9
5MiR4DWuNkn1rcqHFy9ebLel5vanUMhXY8D5BoDUqfV3onMjjdn2r37ffv63
xhxqY8zRTsZcnmpM5bn62FUABUa+iqQjX42OfBVAHOr6Oa17/Nu3b5/Rp6r6
Jd27d2+wjPqX6927d8YyylP9+/21vGpG/fvyN27cGDw/dOjQ4LmPPvrIzhsz
ZoyddnVAuj9//PjxGX3b6f5L1bA6ynY132W04vpu1TbEjYm1aNEiO62xSbL1
k6cM1+W37rhPnjxZq/OYD/lqDDjfSKnS0/eCBqRNQfLVbO3awvrYXQAFRL6K
pCNfjY58FUAcCvU5/eDBA5u1hvsK8Cn/vHDhgrl27VrOMZNv3rxprly5kvU5
5ZuXL18OXqu+T3VvZpie1zpUF5tNtvs1tZ7nz58H08pcq9uOo+PR8dcX8tUY
cL6RUoxvhTSrt3x115/Uy/4CKBzyVSQd+Wp05KsA4sDndPKRr8aA842UIl9F
mhXkO5H6Ayjf+vuaVT9jBZBo5KtIOq7boyNfBRAHPqeTj3w1BpxvpBT5KtKs
4N+JyFeB1wb5KpKO6/boyFcBxIHP6eQjX40B5xsAUod8FUgv8lUkHdft0ZGv
AogDn9PJR74aA843AKQO+SqQXuSrSDqu26MjXwUQBz6nk498NQacbwBIHfJV
IL3IV5F0XLdHR74KIA58Ticf+WoMXp3vl/zHfyn8b9DMI0GLe1/4j/+K/R/5
KpBe5KtIOq7boyNfBRAHPqeTj3w1Bq/O9x+t6USjpa7541vFvS80WtEb+SqQ
WuSrSDqu26MjXwUQBz6nk498NQZ/yFeBtPHzVSBtyFeB9CJfRdJx3R4d+SqA
OPA5nXzkqzEgX0VKLfrpQtCAtHmd89Xz58+bJUuWmGnTppl169aZysrKet9m
Upw8edKsWbMmmN64caM5ePBgMP3ixQuzc+dOM2vWLDN//nxTWloax27Wu+PH
j9vjmzlzptmyZcur748vcy576dIls2LFCrNp06Yi7uG/0PuzfPnyjPdC+6Sf
3Wxt+/bt9b5P5KtIOq7boyNfBRAHPqeTj3w1BuSrAJA6r2u+unDhQtOoUaOM
9uabb9brNovtyJEjZvLkyaaioqLKcwMGDDBNmjQJphs3bmyGDRtmH2v5Fi1a
VDk/Y8eOLdq+F0OvXr2qHGO7du3Ms2fPqiz7/Plz+/OhZXSu8lm/fr3NbAvp
8uXLwT527949mK/3N3wMrlW3n4VAvoqk47o9OvJVAHHgczr5yFdjQL4KAKnz
Ouarjx49svnTG2+8Yev/lKep1q9///71ts04qCZTx6la1bCOHTua1q1b28d3
7961y82ZM8dOX7x40WaJP/zwg7l165bZvHlzkNlduXKlqMdQn1q1amVmz55t
rl69ak6cOBFkyiUlJVWWnTdvXpBZVpdbdu3aNSO7LoR3333Xbjecrz548MDu
u9+2bdtml2vfvn1B9yEb8lUkHdft0ZGvAogDn9PJR74aA/JVAEid1zFfPXbs
mM2fBg0alHe5O3fu2PvBv/zyS3tf9u3btzOeV02j7sP++uuvzYwZM8yyZcts
O3z4sH1+w4YNZseOHXY9ixYtMl999ZX55ZdfgnUr21P9YbZ775X5qg5Sr1Et
ZFlZWcbzbt3l5eVm6dKlZsKECWb37t3B81u3bjU9e/a0xzlp0iS7X+oPQceg
Y2ratKlp2bKlfTxlypTgfIS347z//vt2GfUZUCg6bp1XHcPUqVPtfj58+NA+
p/4JdL++5qv/Bh2Po2VUf+yfN70XixcvNgcOHMjYxurVqzNem49er2P84osv
MubrnCnbfO+990yXLl1y5qvqW0Dn86233rLLuJ8Hd0zumOfOnWvf17Vr19qs
vzp6n7VfCxYsqJKvZvP555/b5fTzU9/IV5F0XLdHR74KIA58Ticf+WoMyFeR
UoxvhTSr13z1d78y5u6r9VaeK8y6/+D+/ftBLaLf56hP99Yrg9Ry7k/VJLpa
UOV5qg/U/ObNm2fcl/3pp5/aZVQfqRpZ93rXlCNqXf48v0/Pe/fumTZt2tj5
zZo1C5ZZtWpVsIxbt/+8X4PqXu839TW7a9euoA7SnQP/sbLMbFSTqWV0Xgpl
1KhRQb8Mbh90fnX8uk8/vH+dO3e2ubN7/zp06BCsS7mq5um8OKq91bx+/fpF
2h9X76vc2/fhhx8Gtbv58lVXFx1uZ86csc8PHTq0ynnXz47qhXPR8aquVpmt
fuaqy1e1D1q3fi60fH0jX0XScd0eHfkqgDjwOZ185KsxIF9FSpGvIs0K/p1o
Z+PMjDXczo0syGaUcbqsS3We/j30qkNUTqcM9Ny5c7/frZ077bLKGUU1kZr+
5ptv7LTuy9a0sjhH69C8d955x9arugzQrUd1kapn1LTu13dGjBhh5/344492
Wvmccjjtz+PHjzPWrfXcvHnTZn963r8vXTW1LrP0x23S8pqvek1RJqtp5ZrZ
XLt2LciZVVdaKC5f1Xq1j2fPnjVPnz41I0eOtPOnT59ut/fkyRPTt2/foIZT
dL407WpDVb/rzq2rM1YtadQ6Tm1HGaafh8qhQ4eCTFzy5auOW0bn3J135efu
Z0EZqOa7elnVxebi3sO9e/fa6eryVdevsLLiYiBfRdJx3R4d+SqAOPA5nXzk
qzEgX0VKka8izQr+nehEj6Lkq6LcTTWgLpdTRiduLCHVoSoLc03307tsTff7
a5l9+/YF61NO6NdUKgPVPH+8JNVqKgNVZuhovcpPHdUe6rX+tgcPHmy3p/Hu
c637gw8+sMu4e85z9b+qml3N1/33onGt8t3z3q1bN7u87rXPRn2TKvPL1/bs
2VPldS5f9fs1cOdR74tP+bSrYRX1meBnp23btg1qQpWriusfIco9+KpZ1bIa
98s/dp1nvTfu/YqSr2brf9WNpaWs2ucy3WyuX79ut9W7d+9gXr58VRmx+3nO
lZUXGvkqko7r9ujIVwHEgc/p5CNfjQH5KlKqtOxu0IC0Kfh3oj1/WrR8VZSh
KTd02Zzun3e1qrmaciyXUSpLU3+ruvde08oMHWVzurfbpxzQz1JF/QwoUxTl
pfm27XLKbOsePny4XUZZpGTLV9Vvq8bx0vzPPvvMZqMuN1bto1/nKup7trp7
7NWH7Ntvv523Zeu31eWrfr+27h77Hj16VFle50j5tKhe19ULq4ZVj9W3gY5D
uarujddjV2+cjxsPSuvWeFGO+k7V/I0bNwbzapuvunroMJe7qg/aMNXsalvK
WZ18+areWz1fXb/ChUS+iqTjuj068lUAceBzOvmKla8ePXrU1kn4YxeI7m/T
+LP79++v8hqNL6HXVFRU2Gl9b9e4xbnoumjNmjXBtJbP1V+c5musCH/MB42N
rPE3srV8260x8lUASJ167X/12kJjyrcWvP/VbNy95Bp3SP92u1pG/XvqN93D
Lv69/q4pJ1XfoE5t8lVlt64f0fC2NS6Xuz8/27pdvwL58lU3TpXr29Xvv1X7
5X+fcfead+rUKaNOtlCy5asuX1bNbJiyRmW1jmo/dd70vcjV9upeey2nHFrz
vvvuu7z7oO9NWl7rCdeW6l7+fFm36xsiLFu+6uprw9w29L0x2/Hm274bR81x
fdaePn067zEXEvkqko7r9ujIVwHEgc/p5CtWvur6b/PzT3G1ELpuCXPjJChn
FS2ja4RcdH3nf0/X923dyxfm7mcM1zaoriTXd/PqajBqhHwVAFKnXvPVenLj
xo3gd5yOy1dVz+nGRcpX+6jaTy1z9epVm3Ppz7Da5Kui1/h9rWYTJV9V/ufX
vDqqXw1/r9DYS76VK1fa1yrPDP8OuVCy5aui86N98rfr8my/NlNZuObpnOp4
VHvrak41T3/qvcxFfeZqO3pttkxSv4OeNWtWRtM513r12PXVEOb6U/Azaffd
z/+9u45P2w+/j87SpUurbN/V2erx3bv/cs+EfgZdFl5M5KtIOq7boyNfBRAH
PqeTr1j5qhuXwh/PQkaPHh1kmK7WxVGeGu5nLV++qjEcWrdubR/ru7TW6cYH
9r377rtBrYOfr+peN11D+M3lv7qmKxjyVaTU4g0XgwakzeuYr+r3jvr3UvfT
K0ecMmWKnVbTPR/i+u5Uv6c7duyw/25+/vnnZty4cfZ59Sng14EqI1O2pXzP
qW2+6vp2VV+uuudb+aiyUn8cpCj56g8//BD0Werf2+J/r1DOrGXU/6jjvtuo
jR071o6x5JrufSmUXPmqy4WV7er31+p7QRmo5l28+C+fs0eOHAn2U/fZi7Jz
N8+vdQ2rrKwM1tmnT5+MY8z2HcuJ0j+A6ytXP18aj0vvh8s/9T7reHRcbdq0
sfN0v1NUufoHcP0MuD51i4V8FUnHdXt05KsA4sDndPIVK19VrYS+n4frVHXd
4r7fawwGRzWrmjdkyJBgXq58VdcbqqfRd3H1jabHugZ09RtlZWXBsrr203x9
j8/XN5eja0QtF2VM3cjIV5FSjG+FNHsd81X93lOZpn8/h/4ddmO0i36fqXGF
wvd8uH/TXb2r+iVVXqt6VuWm/r+tys9cf6GO7uEOj92kvNP/HqG+Q13m629f
/XE62dbtfrfr6hpV/+p/H3HjPimXVT8BcurUqSrfB5Sh5rrvpZC/lx0zZkxG
Huyo7nP8+PEZx699Vg1rmOvfQDm5o+zZ1Zjm4mqUc7Vc/SGoNrW6fFXfz/Td
za3LZcI6r/58fX9U1loT2rZ+n+7T79HdOQr3n1vfyFeRdFy3R0e+CiAOfE4n
XzHHt9L1jl+nqr7XNK17+MP3Fy5evNjO27x5czAvV76qMTb8a4vwY43jILoG
0HdqrUPXZNXlqxo7Qq/XdrV8wZCvIqXIV5Fmr2O+6iiX0r/d4b4CfPo39sKF
C7ZvTj+70r+74fpRN+aVq3HVa8P9auaa58anD1O/A6qpDed92dajvllVlxmm
fb9582YwrW3566uv+/+rk2t/HZ1vjWPl92kbpuPQ9xqfvtvU1zHle6/C+6D3
Ldu+6/fnqrOtDWXm2bJfnceCfqeLiHwVScd1e3TkqwDiwOd08hUzX3X3CKp2
VNw4C8pHVeehLNN9F9Z4uHrOv57I1z+Aroe0vHJZ0T1rmr53716wjO5l0zxX
d1NdvurGq9C4FwVFvoqUGjjjcNCAtHmd89W6cDWSuq9edZU7d+60daiat3v3
7rh3DygK8lUkHdft0ZGvAogDn9PJV8x8tby8PCPTVH9bmlaNgWpM3dgSri8B
9YPmy5evuloY15+WamL9+9KuX79up3UPo5MvX1WtiO5LDGe0BUG+CgCpk9Z8
VX1/+vfeu35YqxuvHmhIyFeRdFy3R0e+CiAOfE4nXzHzVVE/aMo5dW+W+kpV
/2py9OjRYHwI93ju3LkZr82Vr2pMC43xq9eoXzeNaax1azuqQVVeq74JNK2c
1cmXr2qd4fF3C4Z8FQBSJ635qqP7v3UfeFz32ANxIl9F0nHdHh35KoA48Dmd
fMXOVydOnGhzy02bNtk/J0yY8If9+H3Nqu4j1P34ek5jXPly5asae8KviXFj
OKhpDA1dy4XHvgg3jVfrU+6r+adPny78SSBfBYDUSXu+CqQZ+SqSjuv26MhX
AcSBz+nkK3a+WlpaanNL1Zf6faFKnz597DxlrMpFw/L1D6D6VeWzjvLUoUOH
BtNLly614+P6TdvSmMJ67MYQFmWteq5Tp3rKQMlXkVKMb4U0I18F0ot8FUnH
dXt05KsA4sDndPIVO191daqubtQf27WkpCSY72ejjvJV5aaqgXVt8uTJdh0a
K0P9u4nGN3ZjaeSTq3+AXr16ZfTlWnDkq0gp8lWkGfkqkF7kq0g6rtujI18F
EAc+p5Ov2PmqfPTRRza/7NKlS8b827dvB/nqrl1V85fw+BiuKU9t0aKF7SdA
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
hT7z5mPZJw6VadyeYX412i9927Ztbt6iRYsytnfhwgU3f/DgwW66Ln7VPLJB
n3/zuvSPt3jeYcOGuVyv5C/gWDkGXDB+NhrPavTt29fNZzysuOgeFR/5VSFE
Euh7Ov3IryaArrcQQniHnomE8Bff/Kp50aVLlzrXicu02NCX+dW6rJvLr8Ls
2bPdfGIjsyEmNhrnSmEf0XGqcvlVcgIwj21HOXnypJv/5ZdfuukNGza46Y0b
N4Z14vrVCRMmuPnEbXbv3j08PvIXRHPFcrzEflqcajSfArRp08bNrwu6R8VH
flUIkQSF+p7mvSC5V3inxz2Le1KxoR8GOcPv379flO3b+1IgZ86qVavcWIoG
90zOlXNmTMjoskIiv5oAut5CCOEdarsK4S+++dXbt29njMk0c+bMsO7L/Gpd
1s3nV807RseYMphn8aW40bNnz4b5To1cftXGvKcfe5QpU6a4+evXr3fTtO+i
+QKi55jtV4lHjbY1ySMbjTslfjV6vlyTIUOGhNPr1q2rMb4WeWqZ17lz5xrn
Xhu6R8VHflUIkQSF+J6m/0P2uIr0GykUjFdI/h3ur1G6du3q9hV9l1lIeB/L
PoB3lOyL/D1Arp3s3N75nhFeFfnVBND1Fp6yZPOlsAjhG2q7CuEvvvlVsL7r
lOj48C/zq3VZ1/xq27ZtXf95Ykt79OgRxniSCyCb8+fPh+0sxpJijPpWrVoF
48aNC2N4cvlVeP/99938jz76yMWn4jWZpl1njtb8MMe5bNmyYPjw4eG5fP75
565OdHwrxscijujjjz9208StGrhcnCtYLtpo/Cw5FCwWl3yz+Facbfb1jIPu
UfGRXxVCJMGrfk9zz7B71uXLl93Yirt27XLv8gpFeXm528eCBQsy5nO/3rdv
X4184YWAPi7sc+TIkW6a+3O0bwd9WTp06BCUlZW5/iRTp04NnxMKfyzyqyVH
11t4isa3Ej6jtqsQ/vKm+1X64WWPB2X96Xv37p1Rt2PHjhmO9FXWJc4zOx6F
5az3008/5TxWcrLiV3GqtLHGjBnjPkdzqDK2UrbbBaY//PDDjP3hfK9du5ZR
j7acLWdf9EXkp7X9zK8ylhN+1+rS/ovmTGWZ+VbGvMrOO2DnQ+xRNJfAt99+
m/Pca0P3qPjIrwohkuBVv6fxjbly02TDvY772NixY9070Ox3jUB8Kvl8xo8f
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
woULa/jVXIwePdrV27hxY31PvSbyq0II4R16JhLCX+RXRdrRPSo+8qtCiCTQ
93T6KeX4Vr17986IU62qqnLT9OHnZ6dOncK6S5YscfO2bdsWzsvnV/fu3RvG
o1pf/ujnadOmuXpPnz4NGjdu7Lbx7Nmzl/rVhw8fuvXZL/ULhvyqEEJ4h56J
hPAX+VWRdnSPio/8qhAiCfQ9nX5K6VfXrl0bxo4C408xjR+l/z0uEwcKXbt2
dcsePXoUrl9bfoCbN2+6+nhZIC8A03fv3g3rzJgxw80rKytz0y/zq4sWLXJ1
Zs6c+Wonno38qvCUJZsvhUUI39AzkRD+Ir9aWB48eR6s/MON4ONVp4PhG88H
e86+PO8Q68zfdy3o9Y//4srv/vmn4OnzF7H3uenUrWD81kvBV9suBeVX78da
Z33Fz8HQDeeCrr8/GYzefCH413tPYu+v1OgeFR/5VSFEEuh7Ov2U0q/evn07
w2kOHz7cTT9+/NjFmPJ53759YS6BDh06ZKxfm189cuSIW3/79u1umpjY6JhU
169fd9M9e/YM59XmV58/fx68++67NRxtQZBfFZ6i8a2Ez+iZSAh/kV8tHDjK
d4b9kPGdSumx4lTedfaeuxP82YBdNdb5t5/tDe4+enkftSNXqjLW+4+zy2s/
xvvVwZ+P3F9jf50X/1jn8y0VukfFR35VCJEE+p5OP6X0q9CyZUvnOelvT67U
1q1bu/kVFRXOZY4ZMyb8PG/evIx18/nVzZs3B/369XPrDBs2LJg/f77bNvsh
BhVfS24CpvGsRm1+lW1a/taCI78qPEV+VfiMnomE8Bf51cLRYvofwmv5N3OO
Bf/d8H8Op/GouSB21NUZsKuGm/3kn868dJ9/MfZAnfzquxP+VP+9mUeDPmsq
g/8w9Ugw5v+7WK9zLgW6R8VHflUIkQT6nk4/pfarX3/9tfOWW7dudT8nTpz4
23H8GrPavHlz1x+fZYxxFSWfX+3evXuYb5U6FJtu1KhR8ODBg4ycrLnKsWPH
MraJ92X+mTMvf+aqM/KrwlMGzDgWFiF8Q89EQviL/GphINb0rf6/XscuS0+6
ecSz2rX9YMmJnOvtv3A3mLDtUpgPoN/aygz/WRvkITA3+18O2v1Sv3rw0r1w
21N2Xq7nmZYe3aPiI78qhEgCfU+nn1L71fLycuctiS+N5kKFXr16uXk4Vrxo
NrXlByB+FT9r4FOHDBkSTi9btiyYNWtWRmFfTZo0cZ/v3PnT+25cK8vaty+S
A5VfFUII79AzkRD+Ir9aGLadvh1ex3XHb4bz6efPvL+aeCjWdsijatv5vxfn
drKAj/1vhvy67WH/+Vzw3/4W+1qbXx383dnQx1Y9fhb8cO5u8IcrVcGzOuR6
TQLdo+IjvyqESAJ9T6efUvtVi1O1uFEbzwpWr14dzo+6UQO/ijclBtbK5MmT
3TbatWsXtGjRwtW7d++e28bs2bNrPZZ8+QF69OiRkcu14MivCiGEd+iZSAh/
kV8tDP9Q9q/hdSRO1PgfxpS5eeQ8jcO/+2JfuJ2dZ27nrff5b783HCuuNY5f
/du5x8JtW6yt+dYVR27EP9kSo3tUfORXhRBJoO/p9FNqvwp9+/Z1/rJjx44Z
82/duhX61b17a+ZnxJ/m6tuPT23cuLHLEwCnT5928zdu3FjrceBqu3TpkjHv
/v37bl22hwsuCvKrQgjhHXomEsJf5FcLw+Sdl8PreOyn++H8/3Hsr371vx/x
zy/dxpDvzoXbaDkjf26AWw+ehmNikSMA4vjV/23aHzKcKsdk0//FwF3Bo6fP
63DGpUP3qPjIrwohkkDf0+knCb+KtyQn6vPnNZ8vqqurg8ePH9d5m0+ePMmI
hWX7L4P9RNcxHj165MbfKhryq8JTNL6V8Bk9EwnhL/KrhWHJwT/Fr+45+6fc
Xv9+1H43j3GlamNh2bVwfca5Ip9rPj5d/2s/f3Ku/u6ff3LF8q8SL/ufT9zK
uR7Oljr/5u93Bw+rf43VGPn9hZxxt2lC96j4yK8KIZJA39PpJwm/6j3yq8JT
5FeFz+iZSAh/kV8tDJtP/RJex/n7roXzzXvWNlbVPx27Ga77Xw3e48bFqo2/
W/Rjxvd2dsGf1rregF3hvG+P/5zTC6cJ3aPiI78qhEgCfU+nH/nVBJBfFZ4i
vyp8Rs9EQviL/GphePDkeZjT9H+edNjNW1/xJ3dJjCmsPnoj+MsJB53rhP0X
7obr4UUrrt1326JE++vT7/8vvzrgxtFiW38x9kBGiW7j/5x33K0zdMM5t68J
2y656a+2/WnsLLwqdF78J1dbW8xskugeFR/5VSFEEuh7Ov3IryaA/KrwlMXf
XwyLEL6hZyIh/EV+tXAQoxrNZ2qfiWF9+uzX/vi4z+j37f8Rmc5V6Md/8351
OP3xqtM5950r/+q//Wyvm9do7K+5CcjbGh3XirGx7HNteVuTRveo+MivCiGS
QN/T6Ud+NQHkV4UQwjv0TCSEv8ivFg7iTf968uGM71TGkDr386OwjuVAJQ8A
dFl68qV+lfVtesaeqzn3bWNVWewqWG6Cv5lzLJy3pvymi3GN7uNv5x4Lqh6n
M3YVdI+Kj/yqECIJot/TDMWukr7CGFMv3vqzxI/Dq/LH6/3WP3VI/jhUVFRU
VEpW1HYVwh/+cKUq2HnmTvAPZf8afPH9hXD8JfnVwvHk2Yug7OK9Gv3t7z1+
FsaPTt55Ofb2ev3jv4RO9slvcbDZPH3+wu3vxW+LN564Ff5ey6/ez6j77I91
yUNw+HJVGFebZnSPio/8qhAiCT75q39QUVFRUVFRUVGJFCHEm8Wgv98R/v/+
6H9ZEvxdyxWu/Me/WR38dft1wb/rtjl0Vzsqbyd9uG805EPlOv/VxEOx18Gn
Wq6BXWfijz/FPliHfb7uyK/GR35VCJEESbdfVFRUVFRUVFTSVoQQbxZRv5qv
9Ppffx9Mmno46UN945m/71rQ8x//JbhRVR17HXKvdv39SRdvXBcGrjvzRrhV
kF+Nj/yqECIJkm6/qKioqKioqKikrQgh3izi+FUrZw5eS/pwhaiB/Gp85FeF
EEmgtkT60fhWCaDxrYSntBqwNyxC+IaeiYTwhyunbjmPWvZtZbBp9h+CkX+7
Kvz/z7QQaUN+NT7yq0KIJFBbIv3IryaA/KoQQniHnomE8BecqvyqSDPyq/GR
XxVCJIHaEulHfjUB5FeFEMI79EwkhL/Ir9aNGzdu/LGN8iLpw/AK+dX4yK8K
IZJAbYn0I7+aAPKrQgjhHXomEsJffPKrZ8+eDYYPHx6WqVOn1nkbb7/9dnDh
woUiHN3rxahRo4LNmzeXZF/yq/GRXxVCJIHaEulHfjUB5FeFpwyceTwsQviG
nomE8Bef/Or69euDhg0bBosXL3Zl3bp1dd6GD36Vc7x2rfaxzlauXBkcO3as
JMcjvxof+VUhRBKoLZF+5FcTQH5VeIrGtxI+o2ciIfzFN7/avHnzGvMPHDgQ
9O3bN+jWrVvwzTffhPMvX74cDB48OOjevXsYq4l7XL58edCrV6/gyy+/DB4/
flxje2yDbbHNQYMGBVeuXAkWLlwYrFmzxs3fvXt38PTp02DWrFluetiwYaHP
3Llzp3OXxsCBA4N79+655dOmTXNeuGvXrsH8+fNr7Je8BcuWLXPH+/nnnwe3
b9928zds2BD07t076NevX3D48GE3j+1NnjzZnQv17bzHjx8fvPXWW64+x/vw
4UMX59ulS5egf//+7prAokWLgkOHDrnPQ4cOdeeUfU2OHDnitkOprKys42/r
T8ivxkd+VQiRBGpLpB/51QSQXxWeIr8qfEbPREL4i29+tUGDBmH86smTJ918
+rqvXbs22Lhxo/OnxGVWV1cHjRo1Cnr27OmW4Q6B5Y0bNw5Wr14dvPvuu8GM
GTMy9rF9+3a3Hr6xTZs2Qfv27Z0fff/99523nDdvXnD06NHgk08+CVq1auW8
Lf6RbT579sy5zD59+oTbY52ffvopOH78uPuMW+V43nnnnWDVqlUZ+166dKk7
P1zpyJEjgy1btri6zCNWd/r06W4bOFLb3gcffOAcK5/Ly8uDHTt2uM8LFixw
dZjHtsyfdurUye2L82F/dk2aNGlS45qwX7a9adOm0MXWB/nV+MivCiGSQG2J
9CO/mgDyq8JTFn9/MSxC+IaeiYTwF9/8Kl4SX0gpKytz84n7PHHihPOReE7i
PfGKeMbs+FRc4qlTp9znSZMmBR9//HHGcuJUO3To4D7jSnGngI/Ebxps2/rX
sw+mifGsza9y7M+fP3fziU+1bRu4z7Fjx2bM69ixo4uTNXC6xJ5mb69t27Zh
3Cz7vHr1argOcbA//PCDi23Fo9r5RP1qrmvCteTzpUuXcv9CYiK/Gh/5VSFE
EqgtkX5K5VcrKirc88SDBw8y5vPemvewBw8erLEOeZdYh/fRwPPYrl278u6D
Z45ojifq02cmys2bN93zHM9Ae/fuzdnfqOjIrwohhHfomUgIf/HNr+bKD0Df
9xYtWrg4VvKzfvfdd+65ns/ZRPOv8sxuca3G1q1bnZ/EQ+Iv9+/f7+ZHfSRt
jGyHyXZxnlEnC1G/SjyoMXHixKBHjx4Z+27ZsmVGboFc8ziO2bNn19gebpbc
ArZPOzbaK5wHuQE4V5xp9vnkuybkICA/AsvJNVBf5FfjI78qhEgCtSXST6n8
Ku9ZeY7IznFP/iPm53q24r0yy+xZgjpNmzbNuw+eSXg2MXjOIFeRQZ8bthct
POfdvXv3VU+vbsivCiGEd+iZSAh/8d2v0ief525iIaqqqlzffvwqfpH55BCg
DjEQ8DK/Onr06KBz587OaZLrFJcKUR8J9KO3uFL65LNdYj3o29+sWTMXV/rt
t9/WyA9guVtpJ+Bio9A+IX8A8bhnz54NfvzxR9cGYd/Mu379utsP+WZr86vU
IYcBELOKfwbiXuP6VY7x4sWL4TbIs1Bf5FfjI78qhEgCtSXST6n8qvX/ifbF
AfoNmes8d+5cxjJ8Ks9f0ena/Gq7du3ccxDcuXPHbXPu3Llummcpnkt4xqFv
Es9w48aNc3U4hpIivyqEEN6hZyIh/MUnv0r/sWgsgz3L4wN5Fmca72ku1cZ6
YhnjUAGfzRsSB5rdR598ozzTUx+XyzZ51se5mr8E+qoRe0FdfpL7FX755Re3
Dvtp3bq1+0kcqPlVW0a7gjZFFBwnx89ytkkfPDwxvpZp5o8ZM8bVxb1G/Sq+
lGMH4mLZ15AhQ1w7ya4N+7T8ANHzyXVNcNVsHx/Lvvfs2VPv35v8anzkV4UQ
SaC2RPoplV/lfS73/ew4VZ4h7PmLHO8Gzy7Mo7+Lkc+v3rp1y72/5vmCZxs+
T5kyxa3PeKDkWWIe0/ZMA7yzznVMRUd+VXiKxrcSPqNnIiH8xSe/Whu4SmIc
KLQNDPJ1RfuTEZdp8LxO/SjEVMyZM8d9xjHyjH/+/Hm3XnS7Bj41F7ZP25/F
m7I/8qHWBtvMPi62Fz327HPJPj7q2zZYln080fr5rgmfyX+WfSx1RX41PvKr
QogkUFsi/ZRyfCves0bjVO15iD78/LSxMmHJkiVu3rZt28J5+fwq76Z5p2ue
NvvztGnTnKdl+sqVKxnr2jijJc3DKr8qPEV+VfiMnomE8Bf51cKyYsUKFyNB
nCc+NJoP7FVgvIhovKlPyK/GR35VCJEEakukn1L61bVr1zqXyZifYP2H8KNt
2rRxLtTezZLXiGWPHj0K168tPwDvbamPlwXyAjBt74E//PBDN/3kyZOM9ciX
xHz6BJUM+VXhKfKrwmf0TCSEv8ivFh7iNYkhJX6zUBArauPq+ob8anzkV4UQ
SaC2RPoppV+lnw0uk1xCMHz48DB2lBhTPu/bty/MJdChQ4eM9Wvzq4y7yfrb
t29307zHxtca7du3d8uzn8E+/fRTN9/yGZUE+VXhKeWVd8IihG/omUgIf5Ff
FWlHfjU+8qtCiCRQWyL9lNKvQsuWLZ335J0zuVLJKQ/0x8Fzkg/ePs+bNy9j
3Xx+dfPmzUG/fv3cOsOGDQvmz5/vts1+GIMTX0v++2g8q9G3b183Pzt3fVGR
XxVCCO/QM5EQ/iK/KtKO/Gp85FeFEEmgtkT6KbVf/frrr53P3Lp1q/s5ceLE
347j15hVxgCdOXOmW8YYV1Hy+dXu3buH+VapQ4mOWcp4ohanyjieUchLwPyS
Ir8qhBDeoWciIfxFflWkHfnV+MivCiGSQG2J9FNqv1peXu58JvGl/CwrKwuX
9erVy83DseJFs6ktPwDxq/hZg9jVIUOGhNPr1q3L8Llw/fr1jHwFJUN+VXjK
ks2XwiKEb+iZSAh/kV8tDsRkTJo0qaj7OH36tBvH4U1HfjU+8qtCiCRQWyL9
lNqvWpyqxZfaeFawevXqcH7UjRr4VbwpMbBWJk+e7LbRrl27oEWLFq4eeenZ
xuzZs8N1Hz58GO53+vTpzrea492zZ0/xTzyK/KrwFI1vJXxGz0RC+Iv8auHZ
vXt32Het0HTq1MmNywuMgTtjxoyC7yNtyK/GR35VCJEEakukn1L7VbCcpx07
dsyYf+vWrdCv7t1b07/gT215tOBTGzdu7PIEAO+Zmb9x48aM9U+dOhU0adIk
I5fAt99+W7wTzYf8qvAU+VXhM3omEsJf5FcLC7EVPPsTu5rLr9JHbfDgwUHX
rl2DLVu2hPMYp6FHjx4upsO4fPmyq0s7gjEd1qxZEzRo0CBo27ZtMGHCBOdX
R44cGdbfsGFD0Lt3b9d37vDhw24edYj5WL58udvON998E9Zne4wDwT7IWZZW
5FfjI78qhEgCtSXSTxJ+lRhWni+eP39eY1l1dXXw+PHjOm/zyZMnGbGwtT2/
MMbVzZs367yPgiG/KjxlwIxjYRHCN/RMJIS/yK8WFuJJ6bOP38zlV3GoAwcO
DPbt2+diKRhXFx87duxYN02fNlwq7Q5ykvXs2dPFq5Kr7Pjx4y4f2YABA4Kd
O3e6aXwrUIfP9IOjPxzxGvhZ6vD5gw8+cI6Vz+REO3funOt7x3HgXH/++edS
X6rYyK/GR35VCJEEakuknyT8qvfIrwohhHfomUgIf5FfLRzEoeJHr169mtev
Mq5ty5Ytg0OHDrnpiooK5zxXrlwZrFq1KnjvvfeCzz77LBwXIju2o3379q4u
RP0qfe9mzZoV1mvVqlWwaNEiV4djstgRYl9Zn7hWto8Ppr9dmpFfjY/8qhAi
CdSWSD/yqwkgvyqEEN6hZyIh/EV+tXCMHz/euUz64TP+Av5y0KBBGXXwpdOm
TXNelDjUH374wcWRMs/K/v37g127duX0s/n8Ks7W5sP777/vxnuI1gHyty5b
tsx9PnLkiKvH/isrKwt+PQqF/Gp85FeFEEmgtkT6kV9NgN/8qoqKioqKP0XP
REL4i/xq4aDPPTlVKfTRx7XiT6OcOXPG/WQ+3vPGjRvOw544ccLNf/TokYsn
JQaW+SdPnnQ5BMitCvhRG9Mq6k779+/vXCm5zoijxZkeOHAgr18lHwB5yaB1
69ahc00j8qvxkV9ND3fu3Kk17wbLiCN/EyG/yaVLl9z3WaGpqqpyuU9y5XMU
yaG2RPqRX00AXW/hKRrfSviMnomE8Bf51eJAbGiu+NMOHTq4vKq4VxwszJs3
z/lQ8rAyn9hVIB4Wx8oyxqGCJUuWuHmMrfvjjz+G7hQf26xZM7c+9ceMGePm
R+sADpY8rORdpS77fPfdd52TTSvyq/F5Hf0q40jzf4BY71GjRrm/zSi4tKlT
p7q8xV9++aUbFzob3mlMmTIlmDNnTr3GSykG/P/i/+rDhw9zLuf/KctxkLw/
4XuB438T4PfJuX3xxRcF3za5pNn2tm3bCr5tUX/Ulkg/8qsJoOstPEV+VfiM
nomE8Bf51eIRHd82yi+//FIjrosYVeLZ+BkFV2RxpgZj5ZpDyt4HdbPnRaf5
TIwrMAYvbivtyK/G53Xzq/wtmmeMFsZ6A+K6s5dRjh49Gm6DuPHoMt41pAHz
q/nGtrbzxr9OmjTJfcYhvwn87ne/c+czYsSIgm/b/OrWrVsLvm1Rf9SWSD/y
qwmg6y08RX5V+IyeiYTwF/lVkXbkV+PzOvpVfNmePXuCixcvujzCuLMPP/zQ
LWesN6bJVUyf848++shNW3w2EJP9Mr9KX/379++H07zf4D2HwXsN3jVE30Ww
P2Jls/vwU5d1Ofbz589n7I++66dPn3Z16uJXeddBzDv7hOh7ldu3b7u8Irn6
wxPbyzFkL2M75FSm5FrPzgHIR4LHtn1H4djJUZI9Bh7rcq14J8T5ZhP1q5xH
ru3b9SXGPhrjG72+XAfqRGOSs/0qx8g1EsmitkT6kV9NAF1v4SmLv78YFiF8
Q89EQviL/KpIO/Kr8Xnd/Go2PXr0cO6sT58+btr8KvPxeeTXYHrx4sVu+d69
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
kycHCxcudOXQoUNuPvFmW7dudeuZM2eOcwP79u0L101edeJLC/ULJ+6NZYiX
PHXqVM58W/ft27eDBQsWuPEu8XAGfco7d+7sjnPcuHFuv8iHwDFwTPgc8rbz
esKECeH5sO3wmr7rdq7K4Vc5bs4rx/D111+7/bT+OvQJ2rhxo6snfwPHY9CG
+OPoeeO9mDt3bq34v2XLluUsa1y6dMkdV48ePXLqP/jgA1ePd49CXyXOFeOS
4nrsvY72L2J/6MPPuSJfEx7/RSAvVF159Dt16uTakDsqTXzyq3xGzW3y3ud7
X/mcRWOgS7GsfUY//vhj93fL3yafV+pGjRpVnoOtMGV9ziO/mhj5VSFEGsiv
Zh/51RSQXxVCCO8o1zVR530Pyu5X6XdtvqNQPkv61ltMWTS2zGJB8XktWrRw
9fE+5p9++qlrgxMgRtaWt4JHjI6NSaEfsEFsYtOmTcPc6tZm6dKlYRtbd3R+
1E3Y8tFCrlnywVssmJ2D6GtcZpRy+tXPP/88zMtg+8D55fgttjS6f23atHHe
2d6/li1bhuvCq5qHMYgLpe7DDz+stW28OPPwX1Fw3tTjdqNYzHO8nDlzxs1n
HNP4OeVzQZxqUoiNZTk+e/nguPkssf60cwX76FfN9fE8I06zZs3ce4MvzOdX
X2ZZ86tDhgwJ68gHRt37779fdJ937drlnk3w3MWeBdD3Hoo91yBvxcqVK52/
nTFjRnDkyJGc9RJTO2vWrODatWthHbnQeH5kzzt4NsKzDv42KDxD4vlT9HNd
kec88quJkV8VQqSB/Gr2kV9NAflV4Sn9phwOixC+Ua5roj9de6fsfhVwCubD
iPOM9qEnVhFPh+s4d+6cq+Men7Y4MCAmkulvvvnGTdN3m+mePXuG67GYK1wI
8armAG09OAacBNO4FeOzzz5zdWvWrHHTOApcHftjORxt3awH54L3YH7Uz+A0
zFlyTIY5GhwI4GQL9TmvhF/FsbCPZ8+eda4Gn0T9pEmTnKshJ73F7eF2gPPF
tHkhPJKdW4szxtkwHR8fFFgP8+KxrRZLuGTJkrz7zFim+E3Op51T3Li9z3hY
6jm31BEPm4SrV6+G5yKazx8/O3bsWNdn2lw6+5g2PvpV/h557+P5I8jXy3w+
g61bt87rV19m2Xx+dceOHa4u3oc+CvH28WczFDwmFHquwd+6LRN9rsG+GeSz
oI74ecOeY9h+4v6ZxhvHn0fYZ7ciz3nkVxMjvyqESAP51ewjv5oC8qvCUzS+
lfCZSuRfnV39JNh046eS51818G7R8YPMI5jXIA4VX2YFP8G9PxCvRZvdu3eH
68ONRWMqcaDURcerxGngUHCGBuvFnxo4DpaNbps+wmzPxl7Kt+5f/epXro31
QS6Uf5WY3WiMJq7GjitOEq9BnFuHDh2KFrxQHPM80bwGdh55X6Lgpy2GFciZ
EHWn5KQ0R4NXBcuPkK9PNnF7zMPzRDF/lC/OEPLlX7XYRBxpFHIJUF8X+Nj2
7dvndafsn8WsmnvivYj68jTw0a/yjIUczbyOjjP10UcfuTpiOgv51ZdZ1v4P
4WSHDx/u2vL+8/8h/lkzeN5grh9PT8wz7aP/Xwo917BnNvY3cf369fAzbP9D
7O/DYmGhkF+lELvK/yjiYNl3tknsP5T9OY/8amLkV4UQaSC/mn3kV1PgD35V
RcW3EvWrae+LikrFSwX8aiXAU+G0zF/hFixWtVDBW5ijxLeRb5W+90zjLgx8
BWPER8EDRl0HkGcA7wC4iGLbNk+Zb92DBw92bXCRkM+vEndmnmfQoEHOjZo3
Jqdp3Nsl8Ro4FGLVipV8OUXN80Tz2lo/fPKMxuEc4afBxv4hXticEjFvHAde
FYfDa4s3jmN+PB7bStxqoZhXyOdXLdY5jnlX+mEXw+IN8+UxiELOVd4r2vJ5
SxNf/ar93VvuZvrTM92xY0c3Xcyvvuiy5lf5HFv8uv0fILY7H6dPn3bzic83
unfv7ursbzvfcw0cK3U43CjE3VJPLDy8iF/l7zAKf6vUW+7gUj/nqYX8amLk
V4UQaSC/mn3kV1NA51t4ypwfqsMihG+8KX7VsL7k3L/v2bPHvWZsa/rvRwse
AqJ9/a3gSYkXM17Gr+JuWRfLxreNY7C+4/nWbXkFivlVG0PJ+g9H+xCzX9Hx
mqAS+QGiftX8MvGccXAvuFqD2DrOG67HYnvpj08760c9f/78vNs2TxQdSwcY
q4z6+DhZRj6/arGzcYghZF3EBhYCp00b3Fo0FrkQOLF87qrS+OpXAcdvY1VZ
zCVjzUExv/qiy+bLD1BdXR3G3Mfj0oH8IeZj2SafF6ajeYnz/d1t2LDB1fF5
jMKYeNQPGDDATb+IX42PH8jzD/O65XjOUwv51cTIrwoh0kB+NfvIr6aAzrcQ
QnjH6+xX6fdK7FgU86vc55svKBT7CDgB2ly5csXFr/I7zsv4VWCZaK7VfCTx
q+SGjca8GniNqMfBaTA+Uz4q7VeB88M+RV2v+eyos2GfqOOccjw4GcbxsTp+
817mg/7Y5sQN3DXOlnUVcp3Wjz863+Ly8PIG+84xxN+jKIsXL3bL4YzjXhtw
cNaX2lixYoVbpn///gXXWwl89qvmRXH3uE4+r+YD6/KrL7JsPr8KNgab5cGI
wv+1+Nh5bCM6TlW+vzvi9qlj3VEsr/QXX3zhpm1cuGh8d1K/an+v/L+syHMe
+dXEyK8KIdJAfjX7yK+mgM63EEJ4x+vsV+nPjvuiPz2Oi3GrmaZcvHjRtbHc
neQ9Jb5s8+bNLgfiyJEj3XwbB8n8AB4NP4LfM17Wr1rfdXK5EueFH8WVRsdK
SuJXLdaMnKV4Hhvfm7GhbJwd66Mc9yr02cUBccwWT8o0cW6lopBfNS+Md1y+
fLnrC2/OiPGeDMYjt/eAvviAO7e6aKxrPjgv1icab2TOh7HTC2F5cPnsMEYW
5xpfRB3vIfvKPjdt2tTVFRony8Y1o4wYMcL1v7bCvgDxx3xW+Lzis3iP7DwU
iq+tFD77VfI9WL99fvM+GXX51RdZtpBftc9gdIwpgzqLL8WNMjZe3NHn+7uz
fBvRcfaA/43Ur1y50k1b/LTlC4geY9yvEo96//79sB3/c6ivqfn5f3vZn/PI
ryZGflUIkQbyq9lHfjUFdL6FEMI7Xme/Sh9/nGY0xou4xV27doVtcADdunXL
acP9P+MqgcW7kjMT/0U8Ky4sGtuFY7N8oUbz5s1rjd2E08DRGvgQc77R7ffo
0SNsk2/dQ4cOzfEXxL+a04jGu+FlcYlALsR4PJqtP57/gEJ9qRg2bFiODzaI
DcVxRo+ffc7nFC3uDU9u2Dg9U6dOLbp9cjmYY7X3l3NYbOyoU6dOOY9qy5jv
xYlG6/FGxXKkWhxgvmIxtfT/jr8PfMYK5YatJD77VbDnL/HPb11+9UWWNb/K
cxbi6vHrltOXz0G++PZz586Ffzd8Hvm74ZkOz4XwnlDouYbFZjNOHp8xxvtj
mv9X5mjND7OfjAFnOZ8pPN+B6PhW/F/l74D/k0zb/x0o+3Me+dXEyK8KIdJA
fjX7yK+mgM638JTo+FZC+Mbr7FcNYqtwrfFcAVFwfeQ8ZLzuqHfDW8TjR228
FotxZdl47s1CdU+ePMm7ffIOEFMb76+ebz30bzeHEoV9Z6xug21F15evb3ol
KLS/BuebuLpoTts4HAf96KPggl7kmDgfuKyksH7ek3z7hbMihraU2Oc037jq
aeGTX7U8DtHxoKw/ffSZB7Rt2zbHkb7Ksjwnibt35rNcvnwkgJPHr+JUv/76
axcbbbkyLIdqoecaTBMjH90ezpf/H1Hs2ZI9kyBm355NgPlVniXxP9La8izD
nv1A2Z/zyK8mRn5VCJEG8qvZR341BXS+hafIrwqfeRP86qtgMZLEWxFXSXwa
8VhxlyLEm4hPfhXiDh/wiDbenJHvucerLPui9O3bt1ZsKus15wp1PdewZ0rF
9sWeMdgxEEtrr6P5V3lGwrqieQKMsj/nkV9NjPyqECIN5Fezj/xqCuh8C0+R
XxU+47tfJfdntO89hb7qhcarF+JNwje/+rpADlT+F5HblDjZffv2uZymL5y7
9BUoNL5VxZFfTYz8qhAiDeRXs4/8agrofAtPOXiqJixC+IbvftWgjzhxXGn1
sRciDeRXswn97zt27Fgrb/Snn35aK8dIuTC/yjhcqSK/mhj5VSFEGsivZh/5
1RTQ+RZCCO+QXxXCX+RXs43lFI7nWK0U5GxN/ZmT/Gpi5FeFEGlQqnuJ8+fP
u7EUJ06c6MYPLZYDp1Qw/mL//v3z5r8pBeQds3xjfKeTz50xCfKxdu1alxu9
0PxXQX41BXS+hRDCO+RXhfAX+VWReeRXEyO/KoRIg1LcS8yePbvWGIgNGzYs
2T7ynHLcuHHB8ePHc+o7derktnXkyJGSbStK/fr13Tbg0KFDbltr1qyp1W7l
ypXhcX/77bcl3w/51RTQ+RaeMnfthbAI4Rul9KvnHjwPNt98Fvz6wlP5VSFe
A+RXReaRX02M/KoQIg1e9V6C8SPxirhIcnWRB2fLli0uB3mpOHjwoNvGzJkz
c+rpI7Jjx45aY1WWAsaGZJtDhw5106tXr3bTR48ezWnH8b/99tsuD5D86huE
zrfwFI1vJXzmVa+JPjv+KMelxsufrr1T4j0WQpQK+VWReeRXEyO/KoRIg1e9
l8A3JhlPkRhU+s9/+eWXwaJFi4Jbt27VakN8Kn5y1KhRwfr1653jZP1Ms41u
3boFCxcuDHbv3u3aE1M6Z86cnNzmuFbyBnz99dcuV8GmTZtytnHt2jUXb3vn
zh23njFjxgRz587NyeVz4sSJYNasWeE22e8ePXq46RkzZgS3b98O244YMcLV
L1iwQH71TULnW3iK/KrwmXL61X+0qiaYXf2kxHsshCgV8qsi88ivJkZ+VQiR
Bq96L8EYszaO4/79+/O2OXz4sIvxpJ39fuutt5zHNPCS8RwDjAs5bNiwWvVd
u3Z1y3z++edu2lwtzrR58+bh/lj7Nm3ahA52w4YNrq5169Y563znnXfcscBX
X30VLs/v6Lp4vWvXLteOnLPUDRgwIIyxlV99Q9D5Fp7Sd/KhsAjhG6X0q3+2
8W7QdNu94KNDD4MJpx8HP/70uxLvrRCilET9aucFJ+peQIhKI7+aGPlVIUQa
lCLXGLlRzT927tw5x5sSg9q4cWPnU8+dO+fqGDeKtu3atXPT5BVgukGDBsGe
PXvcMsuWLQvGjh3r5pu7JHaUeUbcrw4ZMsRNT5o0ycWxMiaVxZ0SjwrmVyn0
+X/27JnLAcA0sbDG8uXLXd2ZM2fcdIcOHYJGjRrlHHfbtm3dceF15VffMHS+
hRDCO8o1vpUQIvtM2Hwx538A5U+H7QyaTj4QtJ55JPj8h/Nh2XTqdt0rFKLU
yK8mRn5VCJEGpbqXwFWSg9XcJf3ugRypFotKrlIr7777rosFhXnz5rk2U6dO
zbvuQvlX436V2Fj2IQr9/i2GFcyvkiPAsH3EzxrkFqDu8ePHbhq32r59+3D+
unXr3Pz58+fn7KP86huCzrcQQniH/KoQ/nL74U/BnwzdUcux5ivKH1AY+vdx
b8e91KpVq4JHjx6VfZvkhuvfv39w//79sm8rVeRXEyO/KoRIg1LeS1jcqfWn
r6qqCmNVCxXiTC1+tFB+gSR+1cbZ6tSpU63l8a4NGzZ0r82vrly5Mpz/4MED
V8f3MuBeLc8AMbMUjok43DVr1rhcA/Xq1XPTFk/rs1/luoncucQLx8Fvnzp1
qlY97zv1NTUZHUs5w+fbB97Iz5R4I9Fn9c1CflUIf8GvEq8qv/rycA8Vv9ez
e7BSwb0WcS5RuP9jW0eOHCnptjKH/Gpi5FeFEGlQjnsJxoPiO2706NGuvz+v
+/Tp4xxktJw9e9a1tzGiGMsqH0n8Ks6T19EYUwM32qxZM/e6Lr/KeqJxuORl
JQeA5Yxl/dxLF3PGFpdbKrLsV4nvNZ8ed9s7d+4Mz4nlZzBatmwZntNozofM
kNHz7QNv7GfqNUHjWyVHn9U3D/lVIfwlX34A4ln/9aTfBv9uxmHnVK0oP0Bt
LNaF+yhyv3FPtWXLlqB3794l3Q7fux988EFOHX0Rd+zY4Z5fvtHIryZGflUI
kQavei9x/fr14O7duzl15leJ+7x582ZOrtV8LFy40LWZMmVKWMc9J/1LgGeR
5mujxPMDEFPKdy6+1Ni7d69r069fPzedJH7V1kUuWcD7Wr5WoO/JtGnTXD4D
K5988knod6N5XEtBlv1q1DXHn09Pnz49nMcYYFGiY4ZlMoYro+fbB97Yz9Rr
gvxqcvRZffOQXxXCX6LjW3X6q+Np785rh90v2T1XIfCu3FNxX0fsTL5+Hteu
XXM5Br744otg0aJFzt3euHEjvGekDyGvyT8Ahw4dcvdfNp4x4FrJG/D111+7
XAWbNm2qtQ3ibRlHY/fu3S633dy5c13fkyi3b9927YYPH+62ker3tvxqYuRX
hRBp8Kr3EuPHj3f3ioMHDw4WL14cTJgwwU1TeHYJeEq+Cz/++ONg69atwebN
m9131MiRI938e/fuhfebkydPdn6W/vmWMxV/as9DmWffpXG/+s0337hpYlUZ
n4rvZYs9vXDhgmuTxK/idpkmbwGQE4Dpw4cPFzwPvuYHePr0afje9e3bN2fe
vn37QoewdOnSnHmMF2ZjmmWSjJ5vH3hjP1OvCfKrydFn9c1DflUIf4n6VfX/
f3G4n7N+fIVyvuEymzZtGvYRzPc9Sf+P6HNICuNgcP8Y7zNIDjiI3xOyHcv1
Fl0X95bmYO2esHXr1jnrZL84FiCOyO4l2Qd+lzoe94WQX02M/KoQIg1e9V6C
Pv4tWrSo9R24a9eusA3P+bp161arD320vz/tiRmNfrdFc+sMHDgwnNerVy9X
N2zYMDdtzxn5vhw1alTO9yj3r8SwGvbdbI4WrD8L2wAbE8viUOnbWVecEe7V
YnZLTZb9KpB/MP6s1+D6JhpPHKXQMpkgw+fbB97Iz9RrwpwfqsMi6kaf1TeL
V/ar54b8/kLjf/m57PwnQXCgaRAcaR0El77+/YflXCl3VQhRYuRXX51x48aF
92DE15w4cSJn/meffebmEbsCZ86ccfd/OExy7jx79szdu3Evh3MlBvXAgQNB
9+7dXXtiYJjXsWPHnPw6cb/KmMVMT5o0ya2DHOk9evTIydljftX6KLJtGxPE
7gEtnyy5B4BY1mLxNmVHfjUx8qtCiDQoVawGfeZxrfFcAVHwn9XV1cHVq1cL
5pyj78fly5fzzsNvkl/HluX7Mt+YlMxnHfbsMU6++13Ww/eqgXOtaztxosuU
kqz71TcSnW8hhPCOkvrVfOXq7FLurhCihMivlgZcZXQsC/rdG8TP0LefeyYr
9G+k3bFjx4Jz587VmVcuX/7VuF8lrpV9iGLxM9Y/0vwqDtXgPpM6/CwsWbLE
TTOOSKHnpRVFfjUx8qtCiDRQX7jsI7+aAjrfQgjhHWX3q1X/sKT7K4QoHfKr
pYN4k2XLloV9CquqqsKxiAsVYkTJl2pxp4Woy69av8T4uJOAd7V86UlyxpEH
yPIHsF3G2ygWS1R25FcTI78qhEgD+dXsI7+aAjrfwlMOnr4TFiF8o6TXROQD
uL3p55jVqGMVQmQS+dXSY2MeM5YV/QFtbCrGrYgWxsZiPuN01DWeRV1+1Twu
Yw7nW5ZxOiDpmMewbdu2oG3btm5ey5YtX+WUvBryq4mRXxVCpIH8avaRX00B
nW/hKRrfSvhM2a6J5FeFyDzyq68GY0HFYzvNr9r4FORWtVyr+WA84nz5AchB
Z+BIGbsqSjw/ADldaRft0894HLTp16+fm34Rv2pYLGtqyK8mRn5VCJEG8qvZ
R341BXS+hafIrwqfkV8Vwl/kV1+N8ePHO6c5ePDgYPHixcGECRPcNOXixYuu
DeNGWQzo2rVrXU6Ab775JicelXm0IS8rOQZ69uyZ4zRxtEwzTrKNVRX3q6yT
aWJVly9fHsybN895XepwuJDErzL2Ma+3b9/u9pd1sP3UkF9NjPyqECIN5Fez
j/xqCuh8C0+RXxU+I78qhL/Ir74axJi2aNEiJ6dqo0aNgl27doVtGEvYvGu0
XY8ePcI2V65ccfGpNo+2uFsDX2rziFOFYcOGuWnGsAJyBIwaNSpnO3hRYliN
zZs3u/pVq1aFdZa7Fa8K8+fPz1kHY2YdOHCgPCcwCfKriZFfFUKkgfxq9pFf
TQGdbyGE8A75VSH8RX61NNy/f9+51rrGgcKjEteKCy20nvPnz+ed/+jRo6C6
ujp48uSJmyZ3K3VxGGfr8uXLwb179/JuI5o/ILpuPLDB9tkP8h+kjvxqYuRX
hRBpIL+afeRXU0DnWwghvEN+VQh/kV8VmUd+NTHyq0KINJBfzT7yqymg8y2E
EN4hvyqEv8iviswjv5oY+VUhRBrIr2Yf+dUU0PkWntJvyuGwCOEb8qtC+Iv8
qsg88quJkV8VQqSB/Gr2kV9Ngd+f79/pRz8e/kTHt0p7X/Sjn0r/vAl+lTyB
jJU9ceJEN25LvpyEbyonTpxwY98Y69atC/bv3x9Ok6Nx27ZtwdSpU93Y4wcP
HkxjN8vOsWPH3PFNmTIl2Lhxo8tBWQjyX3733XfB+vXrK7iHf4T3Z9GiRTnv
BfvEZzdf2bJlS9n2RX5VZB751cTIrwoh0kB+NfvIr6bA78/331veWkXFuxL1
q2nvi4pKxctr7ldnz56dMyY3pWHDhmXdZqU5fPiwG0s839g5ffr0Cd56661w
mnG/P/nkE/ea9owfHj8/I0aMqNi+V4KuXbvWOkbGYs83RhBj+PD5sDHai7F6
9WrnbEvJpUuXwn3s0KFDWM/7Gz+G6Fjy5UJ+VWQe+dXEyK8KIdJAfjX7yK+m
wB/8qhC+MeeH6rAI4Ruvs199+PCh80/169cPx+Qm1q93795l22YaEJPJcRKr
GqdVq1ZBkyZN3OuamhrX7ttvv3XTFy5ccC7x+++/D27evBls2LAhdHaML/6m
0Lhx42DatGlubPbjx4+HTnnJkiW12s6YMSN0lnV5y3bt2uW461LQsWNHt924
X2XcePY9WjZv3uzatWjRoqT7EEV+VWQe+dXEyK8KIdJAfjX7yK+mgPyqEEJ4
x+vsV48ePer8U79+/Yq2+/HHH11/8C+//NL1y75161bOfGIa6Yf91VdfBZMn
Tw4WLlzoyqFDh9z8tWvXBlu3bnXrmTNnTjB69Ohg37594bpxe8Qf5ut7j/Ml
DpJliIU8depUznxb9+3bt4MFCxYEY8aMCbZv3x7O37RpU9C5c2d3nOPGjXP7
RT4EjoFjevvtt4N3333XvZ4wYUJ4PuLbMbp06eLakDOgVHDcnFeO4euvv3b7
+eDBAzeP/AT016ee/A0cj0Eb4o+j5433Yu7cucHevXtztrFs2bKcZYvB8hzj
F198kVPPOcNtfvDBB0Hbtm0L+lVyC3A+GzVq5NrY58GOyY55+vTp7n1dsWKF
c/11wfvMfs2aNauWX83H8OHDXTs+P+VCflVkHvnVxMivCiHSQH41+8ivpoD8
qhBCeEdF/Orf/ToIan6//kfnSrqJe/fuhbGI0ZyjUehbj4Oknf0mJtFiQfF5
xAdSX69evZx+2Z9++qlrQ3wkMbK2vBU8IuuK1kVzet65cydo2rSpq3/nnXfC
NkuXLg3b2Lqj86MxqLZ8tJBrtqqqKoyDtHMQfY3LzAcxmbThvJSKzz//PMzL
YPvA+eX46acf3782bdo472zvX8uWLcN14VWp47wYxN5S9+GHHybaH4v3xXtH
6dmzZxi7W8yvWlx0vJw5c8bNHzhwYK3zzmeHeOFCcLzE1eJs+czV5VfZB9bN
54L25UJ+VWQe+dXEyK8KIdJAfjX7yK+mgPyqEEJ4R9muibb9Mtexxsu5ISXZ
DI7TXBdxntE+9MQh4ulwoOfOnft5t7Ztc23xjEBMJNPffPONm6ZfNtO4OIN1
UPf++++7eFVzgLYe4iKJZ2Sa/vrGZ5995urWrFnjpvFzeDj25/HjxznrZj03
btxw7o/50X7pxNSas4yO20R76onXBJws03jNfFy9ejX0zMSVlgrzq6yXfTx7
9mzw9OnTYMiQIa5+0qRJbntPnjwJevToEcZwAueLaYsNJX7Xzq3FGRNLmjSO
k+3gMKM+FA4cOBA6cSjmVw1rwzm3844/t88CDpR6i5clLrYQ9h7u2rXLTdfl
Vy2vMK64nMivlpdHD34KNs4+HKyZ9tvg1uV7dbe//zSo+u5E8NfDfhP89fDf
BL9Z/D+D588Kj9UG18/fCbYvOlGrnPhN4RwgF47ezLsMZdfK0y98nGVFfjUx
8qtCiDSQX80+8qspIL8qPCU6vpUQvlG2a6LjnSriVwHvRgyoeTkcHdhYQsSh
4sKs0J/e3Br9/Wmze/fucH14wmhMJQ6Uuuh4ScRq4kBxhgbrxZ8axB6ybHTb
H3/8sdse490XWvevfvUr18b6nBfKv0rMLvX0vwfGtSrW5719+/auPX3t80Fu
UpxfsbJjx45ay5lfjeY1sPPI+xIFP20xrEDOhKg7fe+998KYULwqWH6EJH3w
iVmlLeN+RY+d88x7Y+9XEr+aL/+qjaWFq45iTjcf165dc9vq1q1bWFfMr+KI
7fNcyJWXCvnV8nFoU3XQ/1/ODz76s1+7suNvThZtf/a314K+/2xO2N7KoP97
UfDkUe2x2oxv/8u6Wsu45ZotKrjMhA9W5V3GCl44M8ivJkZ+VQiRBvKr2adS
fvXIkSPu+j2aUwuIu2BchD179tRahrxnLGPj+K5bt86Np1EI7oeWL18eTtO+
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
V4XwF/nVdCAfKr5zzH9YmXgZPKiNd0Xf/qSwjSRjXWUW+dXEyK8KIdJAfjX7
pOFX8ZbkXXv+vPZz3KdPnwaPHz9+4XU+efIkJxY2SV43thNdxnj06JEbf6ts
yK8KT9H4VsJn5FeF8Bf51XRgrKu/Hvab4N6PjxIvQ+5V8g7sWvliYzAsH7fn
9XWrIL+aGPlVIUQayK9mnzT8qvfIrwpPkV8VPlPSa6JH54Kg5vfr+btfy68K
8Rogvyoyj/xqYuRXhRBpIL+afeRXU0B+VXiK/KrwmVe+Jjo3JNelxsuOPynp
/gohSof8qsg88quJkV8VQqSB/Gr2kV9NAflV4SlzfqgOixC+UVa/uu2XQXB1
dil3VwhRQuRXReaRX02M/KoQIg3kV7OP/GoKyK8KIYR3lNSv7mkQBL/9v4Lg
1H8NgosTguCn2yXdVyFEaZFffXmuX79evjFnxR+RX02M/KoQIg3kV7OP/GoK
yK8KIYR36JpICH/47aV7webTNcGvd/1d8PkP54M/HbbTS7965syZYPDgwWH5
+uuvX3gdv/zlL4Pz58+XYe9eL4YNGxasXbu2fBuQX02M/KoQIg2i9xIqKioq
KioqKiryq0K8aUTjU+sqm075E2++cuXK4J133gnmzJnjyvLly194HT74VY7x
6tWrRdt89913waFDh8q3E/KriZFfFUKkwUd/9msVFRUVFRUVFZVIEUK8WfT/
i03h3/ev/tnc4N83XeTKv/nzJcG/aL08+Med1wZ/MnRHMHtXcYf2poFfbdy4
ca363bt3B7169Qo6d+4czJs3L6y/ePFiMGDAgKBLly5hrCbuceHChUH37t2D
L774Inj8+HGt9bEO1sU6+/fvH1y6dCmYNWtWsHTpUle/devW4KeffgqmTp3q
pgcNGhT6zM2bNzt3afTr1y+4e/eumz9x4kTnhTt16hTMmDGj1nbJW7BgwQK3
v5999llw+/bP7nzVqlVBjx49gt69ewf79u1zdaxv/Pjx7lhob8c9atSo4Be/
+IVrz/4+fPjQxfl27Ngx6NOnjzsnMHv27GDv3r3u9SeffOKOKX5O9u/f79ZD
OXXq1Iu9WfKriZFfFUKkQdr3LyoqKioqKioqWStCiDeLqF8tVIa1WBLsWnk6
7V2tKPjVt99+O4xfPX78uKunr/uyZcuC1atXO39KXObTp0+DevXqBd26dXPz
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
ESOCVq1ahfO2b99ekf15EeRXhRBpoHuJ7CO/mgI630II4R26JhLCX+RXReap
sF99++23g1/+8pfBgQMH8s4/dOiQm0+7Z8+eVWSfkiK/KoRIA91LZB/51RTQ
+RaeMnfthbAI4Ru6JhLCX+RXReapoF+9ceOGi00dM2ZM0XZz5sxx7U6dOlX2
fXoR5FeFEGmge4nsI7+aAjrfwlM0vpXwGV0TCeEv8qsi81TQrzKGFd507dq1
RdsdP37ctVuxYkXZ9+lFkF8VQqSB7iWyj/xqCuh8C0+RXxU+o2siIfxFflVk
ngr61UuXLjlvOnPmzKLtqqqqXLsNGzaUfZ9eBPlVIUQa6F4i+8ivpoDOt/CU
vpMPhUUI39A1kRD+Ir8qMk+F86+SW7VRo0bBgwcPCrbp0qWL86uXL1+uyD4l
RX5VCJEGupfIPvKrKaDzLYQQ3qFrIiH8RX5VZJ4K+9Vp06Y5d9q4cePg+++/
D27duhU8f/48uHPnTrBjx46gY8eObn6bNm0qsj8vgvyqECINdC+RfeRXU0Dn
WwghvEPXREL4i/yqyDwV9qu/+93vgn79+jmHWqjUr1/fjYWVNeRXhRBpoHuJ
7CO/mgI630II4R26JhLCX+RXReapsF81Tp8+HYwYMcLlAmjWrFnQtm1b510Z
04p41iwivyqESAPdS2Qf+dUU+P35/nvLW6uoeFei41ulvS8qKpUuuiYSwl/k
V0XmScmvvo7Irwoh0kD3EtlHfjUF/uBXhfCNqF8Vwjd0TSSEv8iviswjv5oY
+VUhRBroXiL7yK+mgPyq8BT5VeEzuiYSwl/kV0XmkV9NjPyqECINdC+RfeRX
U0B+VXjKnB+qwyKEb+iaSAh/kV8VmUd+NTHyq0KINNC9RPaRX00B+VUhhPAO
XRMJ4S/yqyLzVMivnj17Njh58mRZt1Fu5FeFEGmge4nsI7+aAvKrQgjhHbom
EsJf5FdF5qmAXx0+fHjwi1/8wpXOnTsH7733XvD2228HQ4cODXr37u2m+X3p
0qWy7UMpkF8VQqSB7iWyT6X86pEjR4LvvvsuePDgQU7906dPgyVLlgR79uyp
tcz58+fdMnfv3nXT69atC7Zs2VJwGydOnAiWL18eTtN+//79edtSv2jRouDg
wYNh3cWLF4NVq1blLcW2+8LIrwpPOXj6TliE8A1dEwnhL/KrIvOU2a9yD4hX
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
Bc4l/Jepvrpu3Tr7v1Em9k9x9uxZu3/UqFFJj5k3b569TTqrkPuMGTMm5Wss
XLjQjBgxItyWv5uXLFkSbsvf0/J8iSM3N9c8ePDgZX+950NfhVJ7j98MB6AN
x0SAXvRVeC/D6wN8n9FXAbjAuYT/MtVXa2pqbM+UZpqoqKgobJ2y1nki6alZ
WVmR7YH6al5enu2lorW11T7n9u3b7bbMm5XeOnLkSPPrX//aPHnyxKxatcre
R95DRtFXAUAdjokAveir8B59NTb6KgAXOJfwX6b66tOnT+3c0r7zVKWHBn11
165d4X6Zsyr7CgsLw32p+mpLS4tdR0DaqayTLj9v2LDBPr6goMA0NDTYfbK9
f//+8HG9vb39vqdBR18FAHU4JgL0oq/Ce4PcV2VNgPz8/Njj6tWrg/I+0oG+
CsAFziX8l8nrW82dOzcyT1WuFynb8h1++XPKlCnhfUtKSuy+U6dOhftS9VVZ
R1Xmpgadtu/PGzdutJ1WtpuamiKPlfXTZX9G12Glr0KpmusPwgFowzERoBd9
Fd4b5L5aW1ubtE5bqiFzZj777LNBeR/pQF8F4ALnEv7LZF89fPiw/Ttz9+7d
dluuPyXb0kcnTpxoW+jjx4/tbTNmzLC3dXZ2ho8faH0AuW6V3F+6rJB1AWQ7
WFv1tddes9vd3d2Rx8marbL/zp07af99U6KvQimubwXNOCYC9KKvwnsZXh9A
5rjIuZ9cAzkg52OjR482r7zyiv2eoa/oqwBc4FzCf5nsq/fv37ctc9q0aXZ7
6dKl4dxRmWMqP1+4cCFcS2Dy5MmRxw/UV6urq+3jT58+bbdlTqz8nR2YNGmS
vb3v39VvvPGG3X/zZgavt0NfhVL0VWjGMRGgF30V3stgX7127VpkXkyiy5cv
29vOnDkz6O/jRdFXAbjAuYT/MtlXxfjx4233lOtLyVqpEyZMsPvlf7uUv0tX
rlwZ/rxjx47IY1P11RMnTpgFCxbYx7z99ttm586d9rnldfbs2WN77cyZMyPz
WQPz58+3++V6WBlDX4VS9FVoxjERoBd9Fd7LYF8N5sUcPXo06bbf/OY39jY5
h/MVfRWAC5xL+C/TfXXt2rX278yTJ0/aP9esWfPd+/jtnNVx48aZ4uJie5tc
4ypRqr46a9ascL0euY+MYDsrK8t0dHSE81SvXLkSeaysSyD7M4q+CgDqcEwE
6EVfhfcy2Fdl/Tc5/5Jzv48//th88803dq7LxYsX7doActvnn38+6O/jRdFX
AbjAuYT/Mt1Xa2pq7N+ZMr9U/qyqqgpvmzNnjt0njVW6aF8DrQ8g81fl7+iA
zF1dvHhxuF1WVhbpueLu3buR9Qoyhr4KAOpwTAToRV+F9zK8/upHH32U8vpW
+fn5du6Nr+irAFzgXMJ/me6rwTzV4O/P4HpWorS0NNyf2EYD0lelm8oc2GCs
X7/ePkdeXp7Jzc2192tra7PPsXXr1vCxjx49Cl9306ZNtrcGjff8+fOD/4sn
oq8CgDocEwF60VfhvQz3VXH79m2zYcMGu16brOUm1+aoqKjwuq0K+ioAFziX
8F+m+6oI1jx99dVXI/tbWlrCvlpZmbw+o/TT/v43Tump2dnZdp0AEayZ3ndN
n/r6epOTkxNZS0C+k5Jx9FUoVVBcGw5AG46JAL3oq/Ceg776fUVfBeAC5xL+
c9FX5X+TlDVRe3t7k27r6ekxXV1dz/2c3d3dkbmw8vypyDWumpubn/s10oa+
CqW4vhU045gI0Iu+Cu/RV2OjrwJwgXMJ/7noq+rRV6EUfRWacUwE6EVfhffo
q7HRVwG4wLmE/+irDnzXVxkMbWPUP70fDtfvhcHI+OCYCFCLvgrv0Vdjo68C
cIFzCf/RVx3g8wYAdTgmAvSir8J79NXY6KsAXOBcwn/0VQf4vAFAHY6JAL3o
q/BehvvqjRs3ItfO6KuhocF8++23GXkvz4u+CsAFziX8R191gM8bANThmAjQ
i74K72Wwr969e9cMGzbMnDp1KuV9Jk+ebHJycgZssK7QVwG4wLmE/+irDvB5
QymubwXNOCYC9KKvwnsZ7Kt37tx5Zl+tr6+391mzZs2gv5/nRV8F4ALnEv6j
rzrA5w2l6KvQjGMiQC/6KrznoK9OnTrVLFu2LOUYOXKkvd/NmzcH/T09D/oq
ABc4l/AffdUBPm8oRV+FZhwTAXrRV+E9B3017hhonqsL9FUALnAu4T/6qgN8
3lCqpqE1HIA2HBMBetFX4T0HfXXfvn32OlfPGt3d3YP+np4HfRWAC5xL+I++
6gCfNwCowzERoBd9Fd7zbP1Vn9FXAbjAuYT/6KsO8HkDgDocEwF60VfhvQz2
VZmPunXrVttZv4/oqwBc4FzCf/RVB/i8oVTJia/DAWjDMRGgF30V3stgX/2+
o68CcIFzCf/RVx3g84ZSXN8KmnFMBOhFX4X36Kux0VcBuMC5hP/oqw7weUMp
+io045gI0Iu+Cu/RV2OjrwJwgXMJ/9FXHeDzhlKLNl8OB6ANx0SAXvRVeI++
Ght9FYAL6TqXaGxsNPv27TMbN240R44cMZ2dnWl6h6mdPn3aFBYWmvb29kF5
/vPnz5tPP/3U/ixrfB86dMjcvn076X4XL140e/bsMZs3bzbl5eXmyZMnaX0f
9FUH+LwBQB36KqBXYl+d+WG967cDJKOvxkZfBeBCOs4lpC0OGzYsMnJyctL2
Hr/99luzbt06c/Xq1cj+GTNm2Neqq6tL22slGj16tH0NcfnyZftax44dC29v
aWkx48ePT/rdpcumE33VAT5vAFCHvgroteHsrcj/D5DxB8svmvGbf2Um7aoz
y443huNMw33Xbxca0Vdjo68CcOFlzyUePXpkm6K0yFu3bpnHjx+bc+fOmQUL
FqTtPdbU1NjX2LVrV2R/U1OTuXDhgunt7U3bawWePn1qX7OoqMhuHz161G5f
uXIlvM+Pf/xju2/Hjh2mo6PDPqa2tta0tbWl+b3QVzOOzxsA1KGvAnp91dJp
fm/x+aTG2t9g/QA4QV+Njb4KwIWXPZeQ3iiNsaCgYMD7yRzUgwcPmnfffdcc
OHDAzv3sS+anbt++3axevdqcPHnS9kp5ftmW18jPzzf79+83n332mb2/zCnd
u3evbboBaa2ybsAHH3xg1yo4c+ZM5DXu3r1r59s+ePDAPs+aNWtMSUmJfX+B
+vp6s3v37vA15X3PnTvXbu/cudPcv38/bL5vvvnmC31uz4O+6gCfN5Ti+lbQ
jL4K6HX/0WM7X5W+Cm/RV2OjrwJw4WXPJR4+fGg74/Dhw011dXW/95E5nSNH
jrT3C/4cMWKE7ZgB6ap9v2f/1ltvmeXLlyftnz17tn3MsmXL7HbQaqWZTpgw
IXw/wf0nT54cNthTp07ZfZMmTYo856hRo+zvIt5///3w8fJn4nPJz1VVVbbd
yrY0XpHYeNPN974qa+1KG5c1avuSbt3Q0JC0Xzq47G9tbc3EW3x+Hn/ewGCi
r0Iz+iqgV3/rA8h81v+86Zfmr3fW2qYaDNYHgBP01djoqwBcSMe5hKyNGvTH
mTNnRrqpzEEdN26c7alfffWV3Sfrk8p9p0yZYrdlXQHZzs7ONpcuXbKPOXz4
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
hWbEiBHh9vDhw82SJUvC7YqKCvt8iSM3N9c8ePDgZX+950NfBQB1OCYC9KKv
wnv01djoqwBc4FzCf5nqqzU1NbZnSjNNVFRUFLbOGzduRG6TnpqVlRXZHqiv
5uXl2V4qWltb7XNu377dbsu8WemtI0eONL/+9a/NkydPzKpVq+x95D1kFH0V
SnF9K2jGMRGgF30V3qOvxkZfBeAC5xL+y1Rfffr0qZ1b2neeqvTQoK/u2rUr
3C9zVmVfYWFhuC9VX21pabHrCEg7HTt2rP15w4YN9vEFBQWmoaHB7pPt/fv3
h4/r7e3t9z0NOvoqlKKvQjOOiQC96KvwHn01NvoqABc4l/BfJq9vNXfu3Mg8
1YcPH9pt+Q6//DllypTwviUlJXbfqVOnwn2p+qqsoypzU4NO2/fnjRs32k4r
201NTZHHTp061e7P6Dqs9FUoRV+FZhwTAXrRV+E9+mps9FUALnAu4b9M9tXD
hw/blrl79267Ldefkm3poxMnTrQt9PHjx/a2GTNm2Ns6OzvDxw+0PoBct0ru
L11WyLoAsh2srfraa6/Z7e7u7sjjZM1W2X/nzp20/74p0VehVE1DazgAbTgm
AvSir8J79NXY6KsAXOBcwn+Z7Kv379+3LXPatGl2e+nSpeHcUZljKj9fuHAh
XEtg8uTJkccP1Ferq6vt40+fPm23ZU6s9NrApEmT7O2yJkCiN954w+6/efNm
On/VgdFXAUAdjokAveir8B59NTb6KgAXOJfwXyb7qhg/frztnnJ9KVkrdcKE
CXZ/XV2d7ZwrV64Mf96xY0fksan66okTJ8yCBQvsY95++22zc+dO+9zyOnv2
7LG9dubMmZH5rIH58+fb/XI9rIyhrwKAOhwTAXrRV+E9+mps9FUALnAu4b9M
99W1a9fannny5En755o1a757H7+dszpu3DhTXFxsb5NrXCVK1VdnzZoVrrcq
95ERbGdlZZmOjo5wnuqVK1cij5V1CWR/RtFXoVTJia/DAWjDMRGgF30V3qOv
xkZfBeAC5xL+y3RframpsT1T5pfKn1VVVeFtc+bMsfuksUoX7Wug9QFk/qr0
2YDMXV28eHG4XVZWFum54u7du5H1CjKGvgqluL4VNOOYCNCLvgrv0Vdjo68C
cIFzCf9luq8G81SD+aXB9axEaWlpuD+xjQakr0o3lTmwwVi/fr19jry8PJOb
m2vv19bWZp9j69at4WMfPXoUvu6mTZtsbw0a7/nz5wf/F09EX4VS9FVoxjER
oBd9Fd6jr8ZGXwXgAucS/st0XxXBmqevvvpqZH9LS0vYVysrk/uL9NPg9sQh
PTU7O9uuEyCuXbtm9x89ejTy+Pr6epOTkxNZS+Djjz8evF80FfoqlFq0+XI4
AG04JgL0oq/Ce/TV2OirAFzgXMJ/LvqqzGGVNVF7e3uTbuvp6TFdXV3P/Zzd
3d2RubDy/KnINa6am5uf+zXShr4KAOpwTAToRV+F9+irsdFXAbjAuYT/XPRV
9eirAKAOx0SAXvRVeI++Ght9FYALnEv4j77qAH0VANThmAjQi74K79FXY6Ov
AnCBcwn/0Vcd+K6vMhjaRuL1rVy/FwYj04NjIkAv+iq8R1+Njb4KwAXOJfxH
X3WAzxtKJfZVQBuOiQC96KvwHn01NvoqABc4l/AffdUBPm8oRV+FZhwTAXrR
V+E9+mps9FUALnAu4T/6qgN83lBq7/Gb4QC04ZgI0Iu+Cu/RV2OjrwJwgXMJ
/9FXHeDzBgB1OCYC9KKvwnv01djoqwBc4FzCf/RVB/i8AUAdjokAveir8B59
NTb6KgAXOJfwH33VAT5vKFVz/UE4AG04JgL0oq/Ce/TV2OirAFzgXMJ/9FUH
+LyhFNe3gmYcEwF60VfhPfpqbPRVAC5wLuE/+qoDfN5Qir4KzTgmAvSir8J7
9NXY6KsAXOBcwn/0VQf4vKEUfRWacUwE6EVfhffoq7HRVwG4kK5zicbGRrNv
3z6zceNGc+TIEdPZ2Zmmd5ja6dOnTWFhoWlvbx+U5z9//rz59NNP7c/d3d3m
0KFD5vbt23b7V7/6lf09+xu1tbVpfR/0VQf4vAFAHfoqoBd9Fd6jr8ZGXwXg
QjrOJfbs2WOGDRsWGTk5OWl7j99++61Zt26duXr1amT/jBkz7GvV1dWl7bUS
jR492r6GuHz5sn2tY8eO2e28vLyk3zkY06ZNS+v7oK86wOcNAOrQVwG96Kvw
Hn01NvoqABde9lzi0aNHtilKi7x165Z5/PixOXfunFmwYEHa3mNNTY19jV27
dkX2NzU1mQsXLpje3t60vVbg6dOn9jWLiors9tGjR+32lStX7Pbdu3dt700c
a9eutfd5//330/xe6KsZx+cNAOrQVwG96KvwHn01NvoqABde9lxCeqM0xYKC
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
F30V3qOvxkZfBeAC5xL+o686wOcNAOpwTAToRV+F9+irsdFXAbjAuYT/6KsO
8HkDgDocEwF60VfhPfpqbPRVAC5wLuE/+qoD//p5/07ZJAZD3Ui8vpXr98Jg
ZHpwTAToRV+F9+irsdFXAbjAuYT/6KsOfNdXAW0S+yqgDcdEgF70VXiPvhob
fRWAC5xL+I++6gB9FUrRV6EZx0SAXvRVeI++Ght9FYALnEv4j77qAH0VSu09
fjMcgDYcEwF60VfhPfpqbPRVAC5wLuE/+qoD9FUAUIdjIkAv+iq8R1+Njb4K
wAXOJfxHX3WAvgoA6nBMBOhFX4X36Kux0VcBuMC5hP8y1Vfr6urMwYMHTUdH
R2R/T0+PKS0tNZcuXUp6TGNjo31MW1ub3S4vLzfnzp1L+Rr19fWmrKws3Jb7
V1dX93tf2X/gwAFTU1MT7rt165Y5cuRIv2Og131u9FUoVXP9QTgAbTgmAvSi
r8J79NXY6KsAXOBcwn+Z6qvr1q0zw4YNi/RPcfbsWbt/1KhRSY+ZN2+evU06
q5D7jBkzJuVrLFy40IwYMSLcHj58uFmyZEnS/Zqamuzzypg2bVq4f/369eH+
vkOeK23oq1CK61tBM46JAL3oq/AefTU2+ioAFziX8F+m+qrME5VOKc00UVFR
Udgwb9y4EblNempWVlZke6C+mpeXZ3Jzc+3Pra2t9jm3b9+edL/p06fbXtq3
r7a3t5urV69GRtB/J06c+EK/d7/oq1CKvgrNOCYC9KKvwnv01djoqwBc4FzC
f5nqq0+fPrVzS/vOU5UeGvTVXbt2hftlzqrsKywsDPel6qstLS12HYGRI0ea
sWPH2p83bNhgH19QUGAaGhrC+1ZUVNj9u3fvTuqr/VmxYoW939GjR1/0V09G
X4VS9FVoxjERoBd9Fd6jr8ZGXwXgAucS/svk9a3mzp0bmaf68OFDuy3f4Zc/
p0yZEt63pKTE7jt16lS4L1VfraysDOejBt/lT/x548aN9n6PHz822dnZ9jme
PHnyzL766NEj+3h5Xbl/2tBXAUAdjokAveir8B59NTb6KgAXOJfwXyb76uHD
h8O5o0KuPyXb0kfl+/fSMqWBihkzZtjbOjs7w8cPtD5Ac3Ozvb90WSHrAsj2
gwf//zo6mzdvtvuqqqrs9rP66p49e+x9iouLX+4X74u+CgDqcEwE6EVfhffo
q7HRVwG4wLmE/zLZV+/fvx9pmkuXLrXbXV1ddo6p/HzhwoVwLYHJkydHHj9Q
X62urraPP336tN2WObGJ16S6e/eu3c7Pzw/3DdRXe3t7zejRo5MabVrQVwFA
HY6JAL3oq/AefTU2+ioAFziX8F8m+6oYP3687ZzyfXtZK3XChAl2f11dnW2Z
K1euDH/esWNH5LGp+uqJEyfMggUL7GPefvtts3PnTvvc8joyB1V6raxNINvS
WQMD9VV5zmD91rSjr0KpguLacADacEwE6EVfhffoq7HRVwG4wLmE/zLdV9eu
XWu75cmTJ+2fa9as+e59/HbO6rhx4+z38eU2ucZVolR9ddasWeF6q3IfGcF2
VlaW6ejoiKzJ2t+4fPly5Dml+8r+69evp/9DoK9CKa5vBc04JgL0oq/Ce/TV
2OirAFzgXMJ/me6rNTU1tlvK/NLEtVDFnDlz7D5prNJF+xpofQCZvyp9NiA9
dfHixeH2hx9+aLZs2RIZ8lo5OTn259bW1vC+0lrltkmTBqmB0lehFH0VmnFM
BOhFX4X36Kux0VcBuMC5hP8y3VeDearBvNHgelaitLQ03J/YRgPSV6WbyhzY
YKxfv94+R15ensnNzbX3a2trs8+xdevWAd9LqvUBZs+eHVnLNe3oq1Bq7/Gb
4QC04ZgI0Iu+Cu/RV2OjrwJwgXMJ/2W6r4r58+fbfvnqq69G9re0tIR9tbIy
eX6b9NP+vtsvPTU7O9uuEyCuXbtm9x89enTA9yGtdvr06ZF97e3t9rHyfNKC
BwV9FQDU4ZgI0Iu+Cu/RV2OjrwJwgXMJ/7noq9ItZU3U3t7epNt6enpMV1fX
cz9nd3d3ZC6sPP+zyOskPibQ2dlpr781aOirAKAOx0SAXvRVeI++Ght9FYAL
nEv4z0VfVY++CgDqcEwE6EVfhffoq7HRVwG4wLmE/+irDtBXoRTXt4JmHBMB
etFX4T36amz0VQAucC7hP/qqA/RVKEVfhWYcEwF60VfhPfpqbPRVAC5wLuE/
+qoD9FUoRV+FZhwTAXrRV+E9+mps9FUALnAu4T/6qgP0VShV09AaDkAbjokA
PZrqW8yXl/7FVH1y3Rzf9iuzfGIpfRXu3Ws2pr7emE8/NebnPzdm2zZjVqww
5p136KvPgb4KwIXEcwkGg8FgMBgMBn0VGGoS56c+a1y/dMf124VGfRtqqvGf
/sj1O/UefRWAC67PXxgMBoPBYDB8GwCGljh9tehHh0zVxw2u3yq0itNXf/AD
Y27ccP1OvXah+rp5Zdpq+iqAjHN9/sJgMBgMBoPh2wAwtCT2VemoG//umB0/
W3renP3pFeaswr2iImN+73eNGfUfjPnjPzHmryYY89prxixaZMyaNcYcP+76
HTrxsL3T/EvzA3Pj63umtv6WufjLL83/ragz/1xaad4t/oX5h6UlZvKcjeZP
/3qZGf6Hc8OuGoyfn/jC9a8AAAAAZbi+FQAAAHyQ+D3/Fxn5i/e4/hUAAACg
ENe3AgAAgA9epK/++z993fztP24zlZeuuX77AAAAAAAAAODMsg/KzL/Jyjf/
Lmee+YO/WGj+439ZYv74v75jxk9bbab+Q7H5x6KfmdVb/49dK6D8fJ25902b
67cMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPjO/wMB8Ogw
    "], {{0, 783.}, {1368., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{72., 72.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{718.5322916666661, Automatic},
  ImageSizeRaw->{1368., 783.},
  PlotRange->{{0, 1368.}, {0, 783.}}]], "Input",
 Evaluatable->False,ExpressionUUID->"e7275adc-6734-4243-ae6c-4b838fb2e2c4"],

Cell["\<\
Leaving \[OpenCurlyDoubleQuote]groups\[CloseCurlyDoubleQuote] to a semantic \
level, i.e., accessor functions, because they are not contiguous, but \
interleaved even and odd.\
\>", "Text",
 CellChangeTimes->{{3.913648650888393*^9, 
  3.913648685928679*^9}},ExpressionUUID->"0218c080-c1f9-4f92-8318-\
d65ab9434752"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "MMB", ",", "MMBstore", ",", "MMBsectionsPerBank", ",", 
    "MMBsegmentsPerSection", ",", "MMBwordLinesPerSegment", ",", 
    "MMBcolsPerWordLine", ",", "MMBbanks", ",", "MMBdims"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MMBsectionsPerBank", "=", "sectionsPerBank"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MMBsegmentsPerSection", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MMBwordLinesPerSegment", "=", "24"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MMBcolsPerWordLine", "=", "bitLinesPerWordLine"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MMBbanks", "=", "banksPerCore"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MMBdims", "=", 
   RowBox[{"{", 
    RowBox[{
    "MMBbanks", ",", "MMBsectionsPerBank", ",", "MMBsegmentsPerSection", ",", 
     "MMBwordLinesPerSegment", ",", "MMBcolsPerWordLine"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MMBstore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "MMBdims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MMB", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "MMBdims"}], " ", 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
     
     "Quantity"]}], ",", "\"\<Mib\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.913647974171695*^9, 3.913647982868064*^9}, {
  3.913648019257586*^9, 3.913648047737266*^9}, {3.913648310660051*^9, 
  3.91364863966917*^9}, {3.913748540317141*^9, 3.91374857312465*^9}, {
  3.913748616284842*^9, 3.9137486179009657`*^9}, {3.913748691058878*^9, 
  3.9137487283987427`*^9}, {3.9148573495305233`*^9, 3.914857351723826*^9}},
 CellLabel->
  "In[523]:=",ExpressionUUID->"36baf6c3-55da-43f0-9af1-f5b803d12771"],

Cell[BoxData[
 TemplateBox[{"12", "\"Mib\"", "mebibits", "\"Mebibits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{
  3.9136486059123983`*^9, 3.913648640862202*^9, 3.913741376398696*^9, 
   3.9137486187364*^9, 3.913748861755398*^9, 3.913749124435604*^9, 
   3.913751431861837*^9, 3.913752114102201*^9, 3.9137535481059446`*^9, {
   3.9148573418360577`*^9, 3.914857352431671*^9}, 3.9148583138340063`*^9, 
   3.915030582567965*^9},
 CellLabel->
  "Out[532]=",ExpressionUUID->"c3b8125c-1934-4716-b82a-7cd39ba93a38"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["IMEM (NYI)", "Subsubsection",
 CellChangeTimes->{{3.9134710722523537`*^9, 3.913471073203197*^9}, {
  3.9148573602240334`*^9, 3.914857361749239*^9}},
 FontWeight->"Bold",ExpressionUUID->"9135dd45-1914-4a20-8359-fb305fce6ea0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantityMagnitude", "[", 
  RowBox[{
   TemplateBox[{"8", "\"Kib\"", "kibibits", "\"Kibibits\""},
    "Quantity"], ",", 
   TemplateBox[{
     InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
    "Quantity"]}], "]"}]], "Input",
 CellChangeTimes->{{3.914857702070429*^9, 3.914857788735756*^9}, {
  3.91485785417943*^9, 3.914857865429923*^9}},
 CellLabel->
  "In[533]:=",ExpressionUUID->"044dda7d-fb63-47c9-a4ee-1c636c4692b7"],

Cell[BoxData["8192"], "Output",
 CellChangeTimes->{{3.914857756494128*^9, 3.914857795527904*^9}, 
   3.914857890330656*^9, 3.914858313837427*^9, 3.915030582572461*^9},
 CellLabel->
  "Out[533]=",ExpressionUUID->"aa642d39-1c25-400c-b24c-d569937499f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "IMEM", ",", "IMEMstore", ",", "IMEMentries", ",", "IMEMbitsPerEntry", ",",
     "IMEMdims"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IMEMentries", "=", 
   RowBox[{"QuantityMagnitude", "[", 
    RowBox[{
     TemplateBox[{"8", "\"Kib\"", "kibibits", "\"Kibibits\""},
      "Quantity"], ",", 
     TemplateBox[{
       InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
      "Quantity"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IMEMbitsPerEntry", "=", 
   RowBox[{"QuantityMagnitude", "[", 
    RowBox[{
     TemplateBox[{"160", "\"b\"", "bits", "\"Bits\""},
      "Quantity"], ",", 
     TemplateBox[{
       InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
      "Quantity"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IMEMdims", "=", 
   RowBox[{"{", 
    RowBox[{"IMEMentries", ",", "IMEMbitsPerEntry"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IMEMstore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "IMEMdims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IMEM", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", 
  RowBox[{"UnitConvert", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Times", "@@", "IMEMdims"}], " ", 
     TemplateBox[{
       InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
      "Quantity"]}], ",", "\"\<Mib\>\""}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.913471077833111*^9, 3.9134712705482273`*^9}, {
   3.913472613498118*^9, 3.913472616121573*^9}, {3.9136434093887987`*^9, 
   3.91364343912277*^9}, {3.914857377405406*^9, 3.914857427474984*^9}, {
   3.91485747563909*^9, 3.9148575380199003`*^9}, {3.914857592340169*^9, 
   3.914857599622711*^9}, 3.914857637028389*^9, {3.914857816367887*^9, 
   3.9148578378427763`*^9}, {3.914857906775764*^9, 3.914857974924883*^9}},
 CellLabel->
  "In[534]:=",ExpressionUUID->"8cdc09f3-4219-4f79-90a0-26848aeebc9d"],

Cell[BoxData[
 TemplateBox[{"1.25`", "\"Mib\"", "mebibits", "\"Mebibits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{
  3.913471143356596*^9, {3.913471177773625*^9, 3.913471187240036*^9}, {
   3.913471260227599*^9, 3.913471270965575*^9}, 3.913472633029443*^9, 
   3.913472692158616*^9, 3.913640846162819*^9, 3.913642099214669*^9, 
   3.9136443885909758`*^9, 3.913646600318596*^9, 3.91364683414108*^9, 
   3.913646894958873*^9, 3.9136475124037943`*^9, 3.913741378054549*^9, 
   3.913748862970391*^9, 3.913749125787287*^9, 3.913751431868256*^9, 
   3.913752115301571*^9, 3.9137535493992434`*^9, 3.914857365636177*^9, {
   3.914857408380043*^9, 3.914857439980266*^9}, {3.91485748962626*^9, 
   3.914857534744667*^9}, 3.91485768143517*^9, {3.914857830638199*^9, 
   3.9148578480090847`*^9}, 3.914857908795074*^9, {3.914857968083603*^9, 
   3.9148579825258427`*^9}, 3.9148583138493767`*^9, 3.915030582580323*^9},
 CellLabel->
  "Out[540]=",ExpressionUUID->"65073cd8-b4b0-406d-9c2f-e9accdc0f418"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["RSPCT (NYI)", "Subsubsection",
 CellChangeTimes->{{3.913471283085474*^9, 3.913471285602816*^9}, {
  3.914858008725849*^9, 3.914858010479841*^9}},
 FontWeight->"Bold",ExpressionUUID->"83b7cc3b-1446-4df4-af8a-bcf1180764b0"],

Cell["Why am I thinking about Aretha Franklin?", "Text",
 CellChangeTimes->{{3.913472405582502*^9, 
  3.91347241500336*^9}},ExpressionUUID->"79fb0cd0-56a2-448a-9148-\
d1ff4b330294"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "RSPCT", ",", "RSPCTstore", ",", "RSPCTbanks", ",", "RSPCTsections", ",", 
    "RSPCTbitsPerSectionBank", ",", "RSPCTdims"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RSPCTbanks", "=", "banksPerCore"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RSPCTsections", "=", "sectionsPerBank"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RSPCTbitsPerSectionBank", "=", 
   RowBox[{"QuantityMagnitude", "[", 
    RowBox[{"\"\<32 bits\>\"", ",", "\"\<bit\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RSPCTdims", "=", 
   RowBox[{"{", 
    RowBox[{
    "RSPCTbanks", ",", "RSPCTsections", ",", "RSPCTbitsPerSectionBank"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RSPCTstore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "RSPCTdims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RSPCT", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "RSPCTdims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
     
     "Quantity"]}], ",", "\"\<Kibibits\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.913471289966653*^9, 3.9134712946467943`*^9}, {
  3.913471330049831*^9, 3.913471587776901*^9}, {3.913471648646655*^9, 
  3.913471674003388*^9}, {3.913472601523063*^9, 3.9134726059419394`*^9}, {
  3.913643445857399*^9, 3.913643471628869*^9}, {3.913646801436737*^9, 
  3.913646804920133*^9}, {3.913646863642712*^9, 3.9136468676311693`*^9}, {
  3.913748789695757*^9, 3.913748795994255*^9}, {3.91374909953189*^9, 
  3.913749101155946*^9}, {3.913749133983876*^9, 3.913749136273854*^9}},
 CellLabel->
  "In[541]:=",ExpressionUUID->"167182c3-5b56-46d4-999f-74969901837f"],

Cell[BoxData[
 TemplateBox[{"2", "\"Kib\"", "kibibits", "\"Kibibits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{
  3.913471414028864*^9, 3.9134714689008102`*^9, 3.913471554785774*^9, 
   3.913471589415944*^9, {3.913471653254526*^9, 3.913471677171729*^9}, 
   3.913472633038765*^9, 3.913472692176902*^9, 3.91364084669783*^9, 
   3.913642104525462*^9, 3.913644389115491*^9, 3.91364660083998*^9, 
   3.913646834716557*^9, {3.913646872477449*^9, 3.913646895491132*^9}, 
   3.9136475129087677`*^9, 3.913741378606927*^9, 3.913748863443036*^9, 
   3.91374912617489*^9, 3.9137514318801394`*^9, 3.913752115689709*^9, 
   3.913753549898031*^9, 3.914858014672662*^9, 3.914858315276737*^9, 
   3.91503058745053*^9},
 CellLabel->
  "Out[548]=",ExpressionUUID->"123420d3-0220-40ed-b14c-1288d748813f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["RSP (NYI)", "Subsubsection",
 CellChangeTimes->{{3.913472435047572*^9, 3.9134724356079073`*^9}, {
  3.9148580242404346`*^9, 3.9148580263168697`*^9}},
 FontWeight->"Bold",ExpressionUUID->"57b53ba3-94aa-46c8-802a-ab0b7c678f45"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "RSP", ",", "RSPstore", ",", "RSPbanks", ",", "RSPsections", ",", 
    "RSPbitsPerSectionBank", ",", "RSPdims"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RSPbanks", "=", "banksPerCore"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RSPsections", "=", "sectionsPerBank"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RSPbitsPerSectionBank", "=", 
   RowBox[{"QuantityMagnitude", "[", 
    RowBox[{"\"\<16 bits\>\"", ",", "\"\<bit\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RSPdims", "=", 
   RowBox[{"{", 
    RowBox[{"RSPbanks", ",", "RSPsections", ",", "RSPbitsPerSectionBank"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RSPstore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "RSPdims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RSP", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "RSPdims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
     
     "Quantity"]}], ",", "\"\<Kibibits\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.913472420368954*^9, 3.913472496053787*^9}, {
  3.913472595430521*^9, 3.913472596769524*^9}, {3.913643479864273*^9, 
  3.913643502735965*^9}, {3.913646806427103*^9, 3.913646807957553*^9}, {
  3.913749102351979*^9, 3.913749103868314*^9}, {3.913749141406018*^9, 
  3.913749149207716*^9}},
 CellLabel->
  "In[549]:=",ExpressionUUID->"9d199b59-448b-48d0-8b6e-89356ed36979"],

Cell[BoxData[
 TemplateBox[{"1", "\"Kib\"", "kibibit", "\"Kibibits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.913472497619735*^9, 3.913472633042345*^9, 
  3.9134726921801*^9, 3.913640847214912*^9, 3.91364210708185*^9, 
  3.91364438966199*^9, 3.913646601367801*^9, 3.913646835206642*^9, 
  3.913646896077841*^9, 3.913647513629302*^9, 3.913741379138754*^9, 
  3.913748863835525*^9, 3.913749126645553*^9, 3.913749160910446*^9, 
  3.913751431883691*^9, 3.913752116157034*^9, 3.913753550375092*^9, 
  3.914858019276108*^9, 3.914858315875938*^9, 3.915030587866486*^9},
 CellLabel->
  "Out[556]=",ExpressionUUID->"3195a254-aac7-4634-9740-127cd8143532"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["L3S (NYI)", "Subsubsection",
 CellChangeTimes->{{3.913472536046197*^9, 3.913472537789537*^9}, {
  3.914858036387621*^9, 3.914858038181744*^9}},
 FontWeight->"Bold",ExpressionUUID->"0669b92a-0f52-4151-a1c3-c0c45b2bd32f"],

Cell["Aka DCCM", "Text",
 CellChangeTimes->{{3.91347256928167*^9, 
  3.9134725725161943`*^9}},ExpressionUUID->"4330b4ce-7a29-45cf-9426-\
8a9bd3c427f6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"L3S", ",", "L3Sstore", ",", "L3Sbits", ",", "L3Sdims"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L3Sbits", "=", 
   RowBox[{"QuantityMagnitude", "[", 
    RowBox[{"\"\<32 Kibibit\>\"", ",", "\"\<bit\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L3Sdims", "=", 
   RowBox[{"{", "L3Sbits", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L3Sstore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "L3Sdims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"L3S", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "L3Sdims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
     
     "Quantity"]}], ",", "\"\<Kib\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.913472548012991*^9, 3.91347255067642*^9}, {
  3.913472583699513*^9, 3.913472591858973*^9}, {3.913472641091196*^9, 
  3.913472795654522*^9}, {3.913643513200753*^9, 3.913643534514774*^9}, {
  3.91485805068495*^9, 3.9148580513438597`*^9}},
 CellLabel->
  "In[557]:=",ExpressionUUID->"d7d670bf-24f0-401f-a3d4-ad7cf95b0cf8"],

Cell[BoxData[
 TemplateBox[{"32", "\"Kib\"", "kibibits", "\"Kibibits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{
  3.913472804889265*^9, 3.913640847732725*^9, 3.913642110232898*^9, 
   3.913644390120376*^9, 3.913646601890162*^9, 3.913646835742853*^9, 
   3.913646896554964*^9, 3.913647514162908*^9, 3.913741379673827*^9, 
   3.913748864273354*^9, 3.913749127031973*^9, 3.913751431894315*^9, 
   3.913752116513072*^9, 3.913753550781898*^9, {3.9148580429836607`*^9, 
   3.914858052042672*^9}, 3.914858316371203*^9, 3.915030588262269*^9},
 CellLabel->
  "Out[562]=",ExpressionUUID->"f7531b12-0d7e-48c4-a8e4-6a9ca2629fe0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["L4G", "Subsubsection",
 CellChangeTimes->{{3.913472824840042*^9, 3.91347282595865*^9}},
 FontWeight->"Bold",ExpressionUUID->"ba42def2-3b56-433a-a787-43ed7ea1261d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "L4G", ",", "L4Gstore", ",", "L4GbitsPerUnit", ",", "L4GnUnits", ",", 
    "L4Gdims"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L4GbitsPerUnit", "=", 
   RowBox[{"QuantityMagnitude", "[", 
    RowBox[{"\"\<128 bit\>\"", ",", "\"\<bit\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L4GnUnits", "=", 
   RowBox[{"128", "*", "1024"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L4Gdims", "=", 
   RowBox[{"{", 
    RowBox[{"L4GnUnits", ",", "L4GbitsPerUnit"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L4Gstore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "L4Gdims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"L4G", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "L4Gdims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
     
     "Quantity"]}], ",", "\"\<Mib\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.913472812008269*^9, 3.913473057209009*^9}, {
  3.913473087460472*^9, 3.913473087650268*^9}, {3.913643542849517*^9, 
  3.913643567652*^9}, {3.914858059007785*^9, 3.914858067119899*^9}},
 CellLabel->
  "In[563]:=",ExpressionUUID->"0382f539-fca7-420b-94d2-f9e819c08c8b"],

Cell[BoxData[
 TemplateBox[{"16", "\"Mib\"", "mebibits", "\"Mebibits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{
  3.913472908529194*^9, 3.913473045560535*^9, {3.913473075809412*^9, 
   3.913473088598841*^9}, 3.913640848784275*^9, 3.913642112737529*^9, 
   3.913644391183864*^9, 3.913646602934712*^9, 3.913646836672763*^9, 
   3.913646897579322*^9, 3.913647515111328*^9, 3.913741380752287*^9, 
   3.9137488651351843`*^9, 3.913749127989756*^9, 3.913751431912095*^9, 
   3.9137521173429117`*^9, 3.913753551560847*^9, 3.9148580676987457`*^9, 
   3.914858316941547*^9, 3.915030588767276*^9},
 CellLabel->
  "Out[569]=",ExpressionUUID->"7a1f49ae-2335-4315-b258-fae15035150c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Per Chip, SCC(ARC)", "Subsection",
 CellChangeTimes->{{3.9134725176753674`*^9, 3.913472519437031*^9}, {
  3.91347397477073*^9, 3.913473978316224*^9}},
 FontWeight->"Bold",ExpressionUUID->"b771c3e3-5dcb-477a-a93c-52ce0ebc6bed"],

Cell[TextData[StyleBox["Per-chip quantities are measured in bytes rather than \
bits.",
 Background->RGBColor[1, 1, 0]]], "Text",
 CellChangeTimes->{{3.913473314190733*^9, 
  3.913473326870172*^9}},ExpressionUUID->"e60b27ab-3b37-4a08-b308-\
53321816fc81"],

Cell[CellGroupData[{

Cell["L4S (NYI)", "Subsubsection",
 CellChangeTimes->{{3.913473111614354*^9, 3.913473113488413*^9}, {
  3.914858093241387*^9, 3.914858100869678*^9}},
 FontWeight->"Bold",ExpressionUUID->"75444226-7dc4-460b-8ab0-5fcfcd9465b2"],

Cell[TextData[StyleBox["BYTES!",
 FontWeight->"Bold",
 FontSlant->"Plain"]], "Text",
 CellChangeTimes->{{3.913644200407174*^9, 3.9136442052202063`*^9}},
 FontWeight->"Plain",
 FontSlant->"Italic",ExpressionUUID->"2ae51aed-fd90-4d0f-85cd-894e4903a6f1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"L4S", ",", "L4Sstore", ",", "L4Sbytes", ",", "L4Sdims"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L4Sbytes", "=", 
   RowBox[{"QuantityMagnitude", "[", 
    RowBox[{
     RowBox[{"64", 
      TemplateBox[{
        InterpretationBox["\[InvisibleSpace]", 1], "\"KiB\"", "kibibytes", 
        "\"Kibibytes\""},
       "Quantity"]}], ",", "\"\<bytes\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L4Sdims", "=", 
   RowBox[{"{", "L4Sbytes", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L4Sstore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "L4Sdims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"L4S", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "L4Sdims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"B\"", "bytes", 
      "\"Bytes\""},
     "Quantity"]}], ",", "\"\<bytes\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", 
  RowBox[{"UnitConvert", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Times", "@@", "L4Sdims"}], 
     TemplateBox[{
       InterpretationBox["\[InvisibleSpace]", 1], "\"B\"", "bytes", 
       "\"Bytes\""},
      "Quantity"]}], ",", "\"\<Mib\>\""}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.91347315623449*^9, 3.9134732914434013`*^9}, {
  3.9134733832947392`*^9, 3.913473524080141*^9}, {3.913473590488282*^9, 
  3.913473598832087*^9}, {3.913643575410132*^9, 3.913643598947961*^9}, {
  3.914858111596952*^9, 3.914858116452855*^9}},
 CellLabel->
  "In[570]:=",ExpressionUUID->"7bd2c41e-6785-4547-b85b-04d043003071"],

Cell[BoxData[
 TemplateBox[{"65536", "\"B\"", "bytes", "\"Bytes\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.913473218837879*^9, 3.9134732400973396`*^9}, 
   3.913473277683382*^9, 3.913473498593977*^9, 3.913473539339156*^9, {
   3.913473593292222*^9, 3.913473599289337*^9}, 3.913640849302265*^9, 
   3.913642117848342*^9, 3.913644391711848*^9, 3.913646603457644*^9, 
   3.913646837185759*^9, 3.913646898102977*^9, 3.913647515606739*^9, 
   3.913741381277638*^9, 3.9137488655400953`*^9, 3.913749128471527*^9, 
   3.913751431916687*^9, 3.913752117725885*^9, 3.913753551945148*^9, 
   3.914858117955768*^9, 3.9148583174266663`*^9, 3.915030589155718*^9},
 CellLabel->
  "Out[575]=",ExpressionUUID->"dc4f7243-6ee5-45c0-84c1-614ee842bca3"],

Cell[BoxData[
 TemplateBox[{"0.5`", "\"Mib\"", "mebibits", "\"Mebibits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.913473218837879*^9, 3.9134732400973396`*^9}, 
   3.913473277683382*^9, 3.913473498593977*^9, 3.913473539339156*^9, {
   3.913473593292222*^9, 3.913473599289337*^9}, 3.913640849302265*^9, 
   3.913642117848342*^9, 3.913644391711848*^9, 3.913646603457644*^9, 
   3.913646837185759*^9, 3.913646898102977*^9, 3.913647515606739*^9, 
   3.913741381277638*^9, 3.9137488655400953`*^9, 3.913749128471527*^9, 
   3.913751431916687*^9, 3.913752117725885*^9, 3.913753551945148*^9, 
   3.914858117955768*^9, 3.9148583174266663`*^9, 3.9150305891575603`*^9},
 CellLabel->
  "Out[576]=",ExpressionUUID->"3d4f2384-89fc-4f67-a899-ee8479884eab"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["L4i (NYI)", "Subsubsection",
 CellChangeTimes->{{3.913473124550192*^9, 3.913473127492374*^9}, {
  3.914858127947081*^9, 3.914858133328225*^9}},
 FontWeight->"Bold",ExpressionUUID->"26044a37-6c67-43ea-843e-fe7d8dd8419f"],

Cell[TextData[StyleBox["BYTES!",
 FontWeight->"Bold",
 FontSlant->"Plain"]], "Text",
 CellChangeTimes->{{3.913644200407174*^9, 3.9136442052202063`*^9}},
 FontWeight->"Plain",
 FontSlant->"Italic",ExpressionUUID->"faba8137-ede7-4c85-94d3-5f6c789df3a2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"L4i", ",", "L4iStore", ",", "L4ibytes", ",", "L4idims"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L4ibytes", "=", 
   RowBox[{"QuantityMagnitude", "[", 
    RowBox[{
     RowBox[{"256", 
      TemplateBox[{
        InterpretationBox["\[InvisibleSpace]", 1], "\"KiB\"", "kibibytes", 
        "\"Kibibytes\""},
       "Quantity"]}], ",", "\"\<bytes\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L4idims", "=", 
   RowBox[{"{", "L4ibytes", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L4iStore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "L4idims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"L4i", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "L4idims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"B\"", "bytes", 
      "\"Bytes\""},
     "Quantity"]}], ",", "\"\<bytes\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "L4idims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"B\"", "bytes", 
      "\"Bytes\""},
     "Quantity"]}], ",", "\"\<Mib\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.91347315623449*^9, 3.9134732914434013`*^9}, {
  3.9134733832947392`*^9, 3.9134734976296387`*^9}, {3.9134735436801977`*^9, 
  3.913473610110694*^9}, {3.913644173884403*^9, 3.913644190551178*^9}, {
  3.913644239690915*^9, 3.913644253470228*^9}, {3.914858139056204*^9, 
  3.9148581415470123`*^9}},
 CellLabel->
  "In[577]:=",ExpressionUUID->"eeba1314-4287-4d33-8ae3-79c98aa3f48a"],

Cell[BoxData[
 TemplateBox[{"262144", "\"B\"", "bytes", "\"Bytes\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.913473581151573*^9, 3.913473610821094*^9}, 
   3.9136408493112493`*^9, 3.913642127082665*^9, 3.913644391720748*^9, 
   3.91364660346389*^9, 3.913646837199959*^9, 3.913646898111622*^9, 
   3.9136475156137*^9, 3.913741381289536*^9, 3.913748865568257*^9, 
   3.913749128497374*^9, 3.91375143193141*^9, 3.913752117754511*^9, 
   3.913753551997414*^9, 3.914858141991426*^9, 3.914858317448969*^9, 
   3.915030589163767*^9},
 CellLabel->
  "Out[582]=",ExpressionUUID->"1ec3b77f-81cf-47bc-be9f-f8ef050af97e"],

Cell[BoxData[
 TemplateBox[{"2", "\"Mib\"", "mebibits", "\"Mebibits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.913473581151573*^9, 3.913473610821094*^9}, 
   3.9136408493112493`*^9, 3.913642127082665*^9, 3.913644391720748*^9, 
   3.91364660346389*^9, 3.913646837199959*^9, 3.913646898111622*^9, 
   3.9136475156137*^9, 3.913741381289536*^9, 3.913748865568257*^9, 
   3.913749128497374*^9, 3.91375143193141*^9, 3.913752117754511*^9, 
   3.913753551997414*^9, 3.914858141991426*^9, 3.914858317448969*^9, 
   3.91503058916508*^9},
 CellLabel->
  "Out[583]=",ExpressionUUID->"21c73157-2d6d-429c-8121-305e94eba972"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Per Chip, HIC(ARC)", "Subsection",
 CellChangeTimes->{{3.913473991874604*^9, 3.9134740022100697`*^9}},
 FontWeight->"Bold",ExpressionUUID->"41884856-39f6-464e-ad99-23de7cbfd974"],

Cell[CellGroupData[{

Cell["L4HS (NYI)", "Subsubsection",
 CellChangeTimes->{{3.913473139270531*^9, 3.913473141062357*^9}, 
   3.913474020112449*^9, {3.914858148939433*^9, 3.914858150569667*^9}},
 FontWeight->"Bold",ExpressionUUID->"12f19ff0-b9d7-432c-8d95-567ddb7a62ee"],

Cell[TextData[StyleBox["BYTES!",
 FontWeight->"Bold",
 FontSlant->"Plain"]], "Text",
 CellChangeTimes->{{3.913644200407174*^9, 3.9136442052202063`*^9}},
 FontWeight->"Plain",
 FontSlant->"Italic",ExpressionUUID->"6a66c554-ab8f-4e7c-91b6-112588329df4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"L4HS", ",", "L4HSstore", ",", "L4HSbytes", ",", "L4HSdims"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L4HSbytes", "=", 
   RowBox[{"QuantityMagnitude", "[", 
    RowBox[{
     RowBox[{"64", 
      TemplateBox[{
        InterpretationBox["\[InvisibleSpace]", 1], "\"KiB\"", "kibibytes", 
        "\"Kibibytes\""},
       "Quantity"]}], ",", "\"\<bytes\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L4HSdims", "=", 
   RowBox[{"{", "L4HSbytes", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L4HSstore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "L4HSdims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"L4HS", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "L4HSdims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"B\"", "bytes", 
      "\"Bytes\""},
     "Quantity"]}], ",", "\"\<bytes\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", 
  RowBox[{"UnitConvert", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Times", "@@", "L4HSdims"}], 
     TemplateBox[{
       InterpretationBox["\[InvisibleSpace]", 1], "\"B\"", "bytes", 
       "\"Bytes\""},
      "Quantity"]}], ",", "\"\<Mib\>\""}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.91347315623449*^9, 3.9134732914434013`*^9}, {
  3.9134733832947392`*^9, 3.913473524080141*^9}, {3.913473590488282*^9, 
  3.913473598832087*^9}, {3.91347402780024*^9, 3.91347406025555*^9}, {
  3.913644261474552*^9, 3.9136443000070066`*^9}, {3.91485816006404*^9, 
  3.91485816052075*^9}},
 CellLabel->
  "In[584]:=",ExpressionUUID->"18ce82ca-6d41-4d46-8b93-cd357c5745b0"],

Cell[BoxData[
 TemplateBox[{"65536", "\"B\"", "bytes", "\"Bytes\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.913473218837879*^9, 3.9134732400973396`*^9}, 
   3.913473277683382*^9, 3.913473498593977*^9, 3.913473539339156*^9, {
   3.913473593292222*^9, 3.913473599289337*^9}, 3.913474062872205*^9, 
   3.913640849330256*^9, 3.913642136940607*^9, 3.913644391735669*^9, 
   3.913646603479723*^9, 3.913646837206052*^9, 3.913646898121857*^9, 
   3.91364751562208*^9, 3.9137413813026648`*^9, 3.913748865576845*^9, 
   3.9137491285039883`*^9, 3.91375143193929*^9, 3.913752117761602*^9, 
   3.913753552012775*^9, {3.914858155322811*^9, 3.914858161115519*^9}, 
   3.9148583174630413`*^9, 3.9150305891748743`*^9},
 CellLabel->
  "Out[589]=",ExpressionUUID->"e57c5443-3586-40a4-ba4a-ea904ef3c271"],

Cell[BoxData[
 TemplateBox[{"0.5`", "\"Mib\"", "mebibits", "\"Mebibits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.913473218837879*^9, 3.9134732400973396`*^9}, 
   3.913473277683382*^9, 3.913473498593977*^9, 3.913473539339156*^9, {
   3.913473593292222*^9, 3.913473599289337*^9}, 3.913474062872205*^9, 
   3.913640849330256*^9, 3.913642136940607*^9, 3.913644391735669*^9, 
   3.913646603479723*^9, 3.913646837206052*^9, 3.913646898121857*^9, 
   3.91364751562208*^9, 3.9137413813026648`*^9, 3.913748865576845*^9, 
   3.9137491285039883`*^9, 3.91375143193929*^9, 3.913752117761602*^9, 
   3.913753552012775*^9, {3.914858155322811*^9, 3.914858161115519*^9}, 
   3.9148583174630413`*^9, 3.9150305891756*^9},
 CellLabel->
  "Out[590]=",ExpressionUUID->"80dc597b-0f54-44ce-856f-349145b5e2ef"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["L4hi (NYI)", "Subsubsection",
 CellChangeTimes->{{3.9134731448205*^9, 3.913473151689881*^9}, {
  3.914858168970317*^9, 3.914858172402227*^9}},
 FontWeight->"Bold",ExpressionUUID->"a7df9d13-6dda-469c-b9c8-7855070275a6"],

Cell[TextData[StyleBox["BYTES!",
 FontWeight->"Bold",
 FontSlant->"Plain"]], "Text",
 CellChangeTimes->{{3.913644200407174*^9, 3.9136442052202063`*^9}},
 FontWeight->"Plain",
 FontSlant->"Italic",ExpressionUUID->"89db92bd-fd26-4e8c-8ca0-ba51f7771d2e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"L4hi", ",", "L4hiStore", ",", "L4hibytes", ",", "L4hidims"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L4hibytes", "=", 
   RowBox[{"QuantityMagnitude", "[", 
    RowBox[{
     RowBox[{"256", 
      TemplateBox[{
        InterpretationBox["\[InvisibleSpace]", 1], "\"KiB\"", "kibibytes", 
        "\"Kibibytes\""},
       "Quantity"]}], ",", "\"\<bytes\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L4hidims", "=", 
   RowBox[{"{", "L4hibytes", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L4hiStore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "L4hidims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"L4hi", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "L4hidims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"B\"", "bytes", 
      "\"Bytes\""},
     "Quantity"]}], ",", "\"\<bytes\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "L4hidims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"B\"", "bytes", 
      "\"Bytes\""},
     "Quantity"]}], ",", "\"\<Mib\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.91347315623449*^9, 3.9134732914434013`*^9}, {
  3.9134733832947392`*^9, 3.9134734976296387`*^9}, {3.9134735436801977`*^9, 
  3.913473610110694*^9}, {3.913474084612932*^9, 3.9134741259403677`*^9}, {
  3.9136443053553877`*^9, 3.913644333903876*^9}, {3.9148581768715477`*^9, 
  3.9148581774692373`*^9}},
 CellLabel->
  "In[591]:=",ExpressionUUID->"f424ca79-fa66-4326-b147-be423defcbb3"],

Cell[BoxData[
 TemplateBox[{"262144", "\"B\"", "bytes", "\"Bytes\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.913473581151573*^9, 3.913473610821094*^9}, {
   3.913474109751737*^9, 3.913474126464656*^9}, 3.913640849339532*^9, 
   3.913642139263133*^9, 3.913644391747927*^9, 3.913646603484593*^9, 
   3.913646837218059*^9, 3.9136468981268473`*^9, 3.913647515627447*^9, 
   3.91374138130799*^9, 3.913748865590102*^9, 3.913749128516259*^9, 
   3.91375143195249*^9, 3.913752117771896*^9, 3.913753552019958*^9, 
   3.914858178063665*^9, 3.914858317469088*^9, 3.915030589179777*^9},
 CellLabel->
  "Out[596]=",ExpressionUUID->"d7beba65-b74d-47b6-ba72-d109c49775c2"],

Cell[BoxData[
 TemplateBox[{"2", "\"Mib\"", "mebibits", "\"Mebibits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.913473581151573*^9, 3.913473610821094*^9}, {
   3.913474109751737*^9, 3.913474126464656*^9}, 3.913640849339532*^9, 
   3.913642139263133*^9, 3.913644391747927*^9, 3.913646603484593*^9, 
   3.913646837218059*^9, 3.9136468981268473`*^9, 3.913647515627447*^9, 
   3.91374138130799*^9, 3.913748865590102*^9, 3.913749128516259*^9, 
   3.91375143195249*^9, 3.913752117771896*^9, 3.913753552019958*^9, 
   3.914858178063665*^9, 3.914858317469088*^9, 3.9150305891804533`*^9},
 CellLabel->
  "Out[597]=",ExpressionUUID->"f531c9cb-c13c-482f-a6de-b750765494a6"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["L5 DRAM", "Subsection",
 CellChangeTimes->{{3.913474177353653*^9, 3.913474180832963*^9}},
 FontWeight->"Bold",ExpressionUUID->"2ca05eb3-741f-4f5a-8d18-de6df6dfad62"],

Cell["\<\
Big. The doc doesn\[CloseCurlyQuote]t state how big. Let\[CloseCurlyQuote]s \
do it in units of L2T.\
\>", "Text",
 CellChangeTimes->{{3.91347419286972*^9, 3.913474193468351*^9}, {
  3.91364217147365*^9, 3.913642181253599*^9}, {3.913642214227516*^9, 
  3.913642231072289*^9}, {3.913642276515705*^9, 
  3.91364228420453*^9}},ExpressionUUID->"015f1f65-2b71-4ec1-b699-\
7ddd6cc237fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["L2T", "Subsection",
 CellChangeTimes->{{3.9136424396150084`*^9, 3.913642440972548*^9}},
 FontWeight->"Bold",ExpressionUUID->"9b16f03f-9407-4acc-a6fc-582a1bc7dfde"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
mj1p1Aq+dv+kAW8TSZJklZT3kSRJsh07zfvmn/yrAd93kiTJVUF5H0mSJNtR
3keSJDm4lfeRJEmyHTtezzv8h8Vz5531+/T2+TukueOPSTNemT3g7SFJkqya
8j6SJEm2Y97rdfxDenPMIQPeJpIkySop7yNJkmQ7tpX3jdimV9fnnXPLxQPe
LpIkyaoo7yNJkmQ7tpP3zXr0wfTWpXulN684PL1xzSlp7hVHpHln/W6FvC+u
3TvQ7SJJkqyK8j6SJEm2Yzt5X3fOnnTpCpnfQLeLJEmyKsr7SJIk2Y458r4w
zt1Xv53p098Y8LaRJElWQXkfSZIk2zFH3jfj5VdXuG7HQLeLJEmyKsr7SJIk
2Y6Ned/sSaPTrMemdXHGC9PTjJdfT++cvEF647rT0/TXFtSeH/e9c+J6Xc/f
d9w6A94ukiTJqijvI0mSZDs25n3NfHf4P6fX7r2p621H/aiw6fV5bzpvwNtF
kiRZFeV9JEmSbMfe5H3vHfmP6bUHbmv9uKW+PXLbAW8TSZJklZT3kSRJsh3n
XnFE6/l9R6+VXnn9/TT/1A17eMza6fXbLhvw9pAkSVZNeR9JkiRXqrM/TK/d
PynNmTgyvXHtacU63+kz3x74/SJJkqyo8j6SJEmSJEmyOsr7SJIkSZIkyeoo
7yNJkiRJkiSro7yPJEmSJEmSrI7yPpIkSZIkSbI6yvtIkiRJkiTJ6ijvI0mS
JEmSJKujvI8kSZIkSZKsjvI+kiRJkiRJsjrK+0iSJEmSJMnqKO8jSZIkSZIk
q6O8jyRJkiRJkqyO8j6SJEmSJEmyOsr7SJIkSZIkyeoo7yNJkiRJkiSro7yP
JEmSJEmSrI7yPpIkSZIkSbI6yvtIkiRJkiTJ6ijvI0mSJEmSJKujvI8kSZIk
SZKsjqtK3keSJEmSJEmuKgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAqsBH
iz5Nh59zexp70xMDvSsAAAAAAAAY4vxg0zP6XXzNI8/OSWtteW7tvdn28Alp
7rwPB3q3AAAAAAAAMEQp8rd/97/1m/K+ZcScvpNH3VO8H/99+2PTX4zdPP3l
2cPS6pufmn70xxHm+gEAAAAAAKAj5H39z4uz5qdN9768eC/+7+F7pX93w8Y1
//2E36a/2fPQ4r7f7j2meCwAAAAAAADQW+R9/UvM24v34H/+6aT0n87ftkvW
V2851y8ee95VDw30bgMAAAAAAGCIIO/rH+KcfHFuvmj/X+93YDGPr7usr36u
3/976L7m+gEAAAAAAKDXyPtWPpOnzSjOyRfz9WLeXqucr9GYB/j9bU4y1w8A
AAAAAAAtkfetPOKaHIefc1vR5m/vcmRxTY52s776uX7fOuTruX5xXV8AAAAA
AACgEXnfyiHyuPV2vLBo7385YbeOc75mc/3i3H+x3bi+b2SKAAAAAAAAQIm8
Lz+x5jba+T92OC79x0u3zJb11c/1i+v6xmv8bMeLzfUDAAAAAABADXlfPuKa
HJvufXnRxlh725trcvTFyBK/u/1x5voBAAAAAACghrwvD2NveiKt+cdz0vd/
f0qx5nZl5nyNlnP91t/JXD8AAAAAAIBVHXlf34g5dXuccGPRrr/Z89CVPqev
N3P99jpxorl+AAAAAAAAqyjyvs6JuXQ/+uOItPrmp2a9Jkdf5/r9/R9OT2tt
eW6aPG3GQL9FAAAAAAAA6Gfkfe0Tc+dOunRK0ZbvbHdM+ouxmw94zldv7M9/
3/Voc/0AAAAAAABWQeR97fHirPlp071GF+2IuXQDne31ZMw5/Lvfn2auHwAA
AAAAwCqEvK/3nHfVQ8X+/88/nVicL2+g87zezvX7zq5HFfu9/RFXF9cQBgAA
AAAAQHWR97UmMrJtDruq2Pe/3u/AAbsmR1/n+v39H05LP9ry3OJawgAAAAAA
AKgm8r6eiXWwa/7xnOKaHH959rABz+36YuSUf7vX4eb6AQAAAAAAVBh5X3Pi
GhdxrYvY3+///pT0V+dsn/7igq175V+dunO/ZXjxWn+348nFfrbrj7ccaa4f
AAAAAADAICQym7W2HNFR5jMQeV8nRvv6K5t65Nk5aYOdLul4X+N8ef2V98U1
Q+I1R45/qC1j3mK0M3T9XgAAAAAAgMFHrM3cbu9Rafuf7Z/m/sf/3K8Z3soy
2hHtiXb119rTyL7KHKxd47nbHT4hfffPx/R73gcAAAAAAIBqMvKKB9KPNz0t
jf2v6wx4XtcXY/+jHdGeocSeJ9wo7wMAAEC3TB3/Urp79HPps0+WrHDfJ4s+
S1MnvFw85oEJL6XHbpmZPpi3uOl2vvziqzTjsbfT7Rc+nW466/H03D2z01df
rZx9fuOVBenOS55Jrzz85sp5gQ654bRH0/ijpvZ5O4/ePDNd8Oc708cffZZh
r5oT7118ruGDV79c/LyyPq8q8NaM99O9V76Qrj/1kfTQ9a+kTxd9PtC7BAAD
zouz5qfNdrogbf+z/dJH/8d/GPDsrh1jf2O/Y/+jHUONWCv7vT8fK+8DAADA
CkTGs9cPLiu846KnV7j/7lHP1u6vd/SB93R53PzXP0xHrnf1Co876MdXpoUL
Psm+38dvfH2x/f1+OGZQZVT7/OPotPcao9t6zg2nPZIevmF6l9tO2Xxi0b7I
T1cWB/xo7Aqf14H/Mja9/uw7K+01hyKRg4/c6fYV3qv4rF96cO5A7x4ADArO
G3t/MUdu8v/z/QHP8Xpj7Gfsb+z3UCXyvu//6WR5HwAAAFbgoj0n1/KLo35x
zQr3xxy6uO/Oi59J78z+KD15x6tFJhS3xby/YMlnX9Syo1H7TUmzn383zXv1
g3TzOY8XmciMR9/Kus8fvvNxl9zl2XtmZ91+X5j56Ntp1pPz2npO5IOn/H5i
l9vi/Xt2yuz05ZcrL8yMrDTy2PfmLkxvvPheGnPgvbWMFl9zxlY3F+/LcRtd
V+R78X49eM3L6ZC1r0zXnfzwQO8eAAwairl+w85Pe/3kz4N2rl/sV+xf7OdQ
nNNXT+R9kb/J+wAAAFBPrL+NPO7YDa9NJ212Y5FpRKZXT5n3xfrFkidum1Xc
FnOegpifFj9HdtjIJ4uXZJ9/d9NZjxWvN2nkk8V/R+xw2wqPmfPCu0UWExnW
feNeSF988WWv7ot8LdbSTjj2wXT1cQ8V65ebMeupeUW7rzjs/vTwxBm1NsY8
vVj3XPLF518Wt115xAPF68V60HjfgwVvLSpy1GjDYT8ZX/w71tYGkZHeeu6T
xfMjY7plxOPF2up6Yr30bec/Vfs5ctCYjzn20PuKz627ddclkfdFZlXP4ete
VexP7FsQn/sTt71aZLiXH3xfmnTek7XHvj3rg2JOaNwe/2387gSRjcU+xmNi
nxrXwD5/35x07YnTivf6mSmvr/D8p+96LY0fPrV4/xpz3Z7uW/TBp8VnG59P
fF8a50nGvNbYn4/e/bj4rGMNduP7G8Tzys+n/NxK4uf6NfCt3o+e3st2PzsA
GMyMHHNf+vGmpw66uX7L5vSdWuxfFZD3AQAAoBmRaxVz9y55pshG4t/XnDCt
y2Oa5X1lBnLezncUPw//+bJ1vJHt9AeHrTu+yKqCA9e6opgf9/mnX9Tuj0yl
XG8Z98e/p1z+fMv7Yt1x2ZbYZjl/MOZ1Re5WUuab9V68POuMXCi2W9vXpT/H
/fv+0+XFa8a/Yy1y8PitM1fYTjwuiHmS8XPkPhPPWJZvxnkR64k5leXjY15h
/LvcRtnG157pfu5Cs7zvxE1uKJ77/tuLa/sfjyvfj3Ktcrxn5T7X3xfZZ0lk
cPXvY1j/euUa2fJ9Cc/f9c7a/Vccfn9xW7Qz9iH+/e4bC1veN/OJebXb6l9/
3PCvz6tYvr8xl7G8v9l7Vb7OPWOe7/Z97O370d172clnBwCDnbiG7M+3HpH2
+tddB3yuXzGnb+l+xP7EflUFeR8AAACacfqWy9YpLv7gs2IeXuQPjWs5G/O+
mP92znaTupzvr8yy+oM3Xnqvy/kDY15W/Fw/p+60P9xUtKWcrxXz+eL8gq3u
G7XvlFrmGe2MDPGsrW8tbrv57MeLx8QcruI8d2tdkV68f04xry+yoPHLs6TG
vG/sofcX+VMQ88HKeZSxnSCeH/tz8tLb6+dB1ud9Mdcu/n3Mr66t3R/z/+K2
S5c+Lp4XrxufQVzHJIh11/XZYjMa876Yd1aeE7GkzCuP3uCaYj/iMfHf2OdY
1x3rjoMXp75R3BbfhXjfoq1lFhtZWLyfL097M535p1uKxz984/RlOeley3LS
mN924m+WZY3lNViiPfVrzCM/jLXjre4r9zneg2DBmwuLdtZneuX7G/sbt8X3
qnx+PeXvSLS7O3rzfnT3Xnb62QHAUOCjRZ+mk0beVsype+S//NcByfrideP1
Yz9if6qEvA8AAACNRN4VmULkTyVltlXmU0GZ9x35swnFOebKc/fFz5HpRF5R
5l+9JdZhRrbTk3F932ZEfhavV54jL66ZGj/Hc0rOGXZbbT5c4/nverovsplo
Xz3luQJjjl8Qa1Pj5+7O29aY9zUSazjj+c/VrT9tdv6++rwviDXX9T9fdsA9
tc8qMqZyjmGsly099N/G9XjtkHKuWWRakUGV89Mii6tvTzwm1r02tqFxzlt5
LsjI9SK76imzOmubW2vtKff33iuWzTGNaxwHMXcvcrDIVRvp7r4yDz53x9u7
3B7n24vbY+1w/fsb38WeKOd7xvegO3rzfgTN3stOPzsAGEoUc/3+dE46+Yeb
99tcv3ideL143SrN6aunv/O+vzx7mLwPAABgkFNedzdykZi7F166PAOJ/5aU
eV/kYJHxxbUL4rx59ecyi5ysnWzi0ZtnFNfy7cnrTmqep0XOE69V7nNYroEs
c5TIAMvrh0SmFethy2yvu/siY4nb4rq4jcT2y3mPZc7W3XVZG/O+uNZtzCks
97t2jZEp7eV9ky9b9nnFNVCC8lobQTkfrDu7u+ZHueY1ztkXeWbkUzHfsaf2
1O9b45y32y54qjbXslwr3rg+vKTZtZxL43x8QZz3sHzPYg13bLOku/viu1X/
PpXMXZ4/XrDbXU3f3+4o5/f1dA2W3rwfQbP3stPPDgCGGsVcvxG3pp9vcsJK
n+sX24/Xider2py+evo77/tP528r7wMAABjkxNrQ7jKGyLfKnKHZ+fsaKedA
xTUsViYvPPBGj9lIXNOiJNZmRqZZnp8t1v32dF+cn6+YJ7jJDSu8buRKkU8F
5TVs6+dA1lOf6cQ66ZiDFkauGNf+KDPVdvO+cj5mZK4xXyz+Hde4CGKOW/wc
58OLtbD1xny37mh2/r6e2lMS15Qo3oNHu14DozzPYGRY5XkS41yHzSi/f437
G35Sd02PmFcX19Moz/FXf12OZveV+dn1p3R93fhuxu1xnYxm7293xPU+4nHR
tu7ozfsRNHsvO/3sAGCoEnPt/uX3Z66UuX7lnL7YflXn9NUzUHnfUL+uMQAA
QFWJ62qU2VZkJvWW6ywjrwl6k/eV18mNNaf1180IYr1kee2HvhLXB4nXiWu6
1u/za8+8sywLW57J1RPXT408rf7cd93dV87Bq8+byozxvF2WXZskzllYrOet
m38Ya5rnLj/3Wn2mU2ZP9Y8try3cmPdFZlpPszyqnGsW8wXjv+V5B+P97eR8
b53mfeXc0PoMNSgzvPh+leusG/epzLDi/Yz74zyEvSHOhxePv+roB3u8L96T
+Hfj533VMQ8Wt8d1aYLe5n3lOQ0jA39nTtfr7UZbYv97834Ezd7LTj87ABjK
xJy7PYdPSBtsfHy2uX6xndhebLfKc/rqGai8b1XIUgEAAIYice65yBjifGmN
RD4X98W5/ILe5H2xtre8HkL8N9ZjxnnSyryj2fnX2iXm35XXRGhGOccwcqaY
AxfrSON14zob9XldT/ddf+ojtdww3ps4L1s5dyy2G8ScvXIdabRx8qXPFq9d
nt+vPtMpc8h4T2JuX7n9xryvvE5wnLOwvC5IszwqrvVaPr8xHywzwLi+bWS1
ce3f0QfeW5zvsDs6zfti7XP5vsR1Sh68+uXauR/j/Igl5TkBY5/i3HbldV7q
35vYh1irHOczjPcyzicZ1zKZ/9qHxWvHbZHnldfyjbyup/uC8hrDkV3HvsV1
eePn+O6U69B7m/cFsQY4HhttjvmZMWexbG9kjL19P7o7t2Mnnx0AVIHJ02ak
tX53Rjpv9Q37lPXF82M7sb1VCXkfAAAA6onrmjbOYyuJdbz15+MrzxtXfw2H
ZkTmEblZmXuUc6JiXlX9uf46JfKx2Oa44VOb3l9eRyPWUMY5CevX+UbuVJ7b
r6f7vvjiy2L9Zv159iKfiTl+9UQ2VZ4DsMysyvcnzoVXf43jWD9aPi62G5lO
OUexpLxORRjbDeL6w/Fz/XUiYv/KcxXeefEzXfZp4XufFOdWrG9bvF531z0J
4rUig+qJxvaUxPnsyuvNlq8VuVj9/M53Zn9Uy2HLx9TPz4sMuTyHYGm8XrQ5
1i/Xbz+M7cdcyp7uC+L5sT66/v6Ye/ruGwtrr93s/e2JmJdZv6/RlhE73FZ7
fm/ej+7ey04+OwCoCsVcvyPGp99tdGR68f/8Vls5Xzw+nhfPX1Xm9NUj7wMA
AEA9cf66sDtiLl2sdS35tEku2BML3lrU6xylHZrlk433l+cdjEwo1lsu+mDF
+r+n+4LIjWIOWczl64loZzyunnjvGt/beP9ifmC5b83ez08WLykeU+ZD8di4
rZHI/Hr6POL+2E5kW1+1iFljP2N/e6JZe7rs99L3Mubj9fRaH3/0WbHeubvX
irw1rufb7PON71HcV/997M195b7He9Fs/7t7f1sR34l4b7vLsHt6P1q9l+18
dgBQNSY/NL2tuX61OX0P9Xw8ssrI+wAAAAAAADCYiTl62+07Ov3uV0d0O9ev
mNO39P543Ko4p68eeR8AAAAAAACGAmMmPp7W2uz0dN73f9F1Tt/Sn+P2uB/L
rnUs7wMAAAAAAMBQYO68D4s5fNtvcGBx7d34b/wct2MZZd73FxdsvYJ/dc72
abWj9+jIv9nz0PTtXY5cwb/d/hh5HwAAAAAAAPrE2JueSD/f6uziv+hKmffl
8n/teEH6w8Fj0xZL/eMhV6StDrmycOtDx6dtDrsqbXf4hMIXZ80f6KYDAAAA
AAAAlSPOXxiZX6MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAUOKrr74iSZIk
SZIkVxmrzje+8Q2SJEmSJElylbLKVL19AAAAAAAAQD1Vz8Oq3j4AAAAAAACg
nqrnYVVvHwAAAAAAAFBP1fOwqrcPAAAAAAAAqKfqeVjV2wcAAAAAAADUU/U8
rOrtAwAAAAAAAOqpeh5W9fYBAAAAAAAA9VQ9D6t6+wAAAAAAAIB6qp6HVb19
AAAAAAAAQD1Vz8Oq3j4AAAAAAACgnqrnYVVvHwAAAAAAAFBP1fOwqrcPAAAA
AAAAqKfqeVjV2wcAAAAAAADUU/U8rOrtAwAA6C0ff/JZmvfuh+nzJV/2eVtf
ffVVWrT407T4488y7Fnv+fLLr9Ks2fPTq3PeSZ98+nm/vjYAAMBQoep5WNXb
BwAA0IrIyC4ad0/65vd2Tt/4/7ZJux85ts/bXP9PpxbbCo8/9+YeH/v+h4vT
t/55r9rjS2N/1vrtsWnE6LuK7LA7Ilu8ePy9ab0tT6m1oTT2Y9KUp/vcHgAA
gCpR9Tys6u0DAADoiZdmvpXW3uz4LhnZLoeN7tM2Y25d/fYiy4tMsTuenz53
hayv0e+ud0ia8+Z7Kzx3wQeL0m92GdHy+adddFuf2gQAAFAlqp6HVb19AAAA
3RHz5pplY33N+04875YVtnnvwy91+/j6vO+CK6ekma/PTy8sve2GO57okkX+
arszujwvMsR/2uio2v1r/OrINP6mh9P01+alV159O1096dFifmDct/nu5/Wp
TQAAAFWi6nlY1dsHAADQHav9wx5FFrblXhekuW+/X/u5r3nff/vJQcV2tj/g
kloWt/Oh3W+zPu+74c4nutwX5/+rz/Ti3HwlE255pHb7htufmRY3WfMba33H
XP9gGrtUAAAALKPqeVjV2wcAANAdJ4y8Od3/8Mu1n3PkfY8982otg5v25Mxi
Xl15Lr64Hkgzesr7gjMvvaN2/+33PVvc9tnnS9K3/22/2u1xnREAAAD0jqrn
YVVvHwAAQG/Jkffte9z42jn7Ym5d5HdlJnftpMeaPqdV3nfljdNq99/1wPPF
bU+9MLt2215HX9nx/gIAAKyKVD0Pq3r7AAAAektf874lX3xZuz7u4addV9z2
yaef12779bCzmj6vVd534AkTaveX1+yI7LC87abJT3W0vwAAAKsqVc/Dqt4+
AACA3tLXvC/W2pYZ3NMvzq7dvuPBl9Vun79g4QrP6ynve+DRV2r3xfrdmDMY
nHTB19cEibl+AAAA6D1Vz8Oq3j4AAIDe0te8b6u9LyyeH9frqGfy1Be6XH+3
kfq8b7sDL01nX3ZnOvKM64v5gPXX+H3oiRm158T1P8rb35r/QUf7CwAAsKpS
9Tys6u0DAADoLX3J+z5a9Ektfzv+3Ju73BfrfMttr7nxMSs8tz7va2bM62tc
s3vAiV+v8X1h6fMBAADQe6qeh1W9fQAAAL2lL3nf2OsfrOVvewy/Io0YfVcX
66+lO/21eV2eW5/3rbP5iWmb/S5Oux0xJp1xye1FzhfnAGzk4vH3rnDNXgAA
APSOqudhVW8fAABAb+lL3rf+n07tcY5evceeM7HLc1tdr6MZcZ3e8jlHn31j
2/sLAOg9L7zwQpo6dWp6//33B3pXAGSi6nlY1dsHAADQWzrN++a+/X4te1t7
s+PTrodf3tTyOr31190IOsn74px95XNiu4sWf9rWPgNAK5YsWZLmzZuXFi9e
3KvHf/jhh+n5558v/OSTT3r9OvG8Z555pnjexx9/3OnurlS++c1vFmPnk046
aaB3BUAmqp6HVb19AAAAvaXTvO/MS++oZW/PvfxGt4+rP+fetCdn1m7vJO8L
9jl2XJfrfHz2+ZKmj4s1wedfMaXX2wWAe+65J337298uxovf+c53enzsdddd
l9Zee+3isfWus8466dlnm59v4PPPP08XXnhh+ta3vrXC8zbYYIP09NNPr4xm
dUyZ95144okDvSsAMlH1PKzq7QMAAOiOxR9/lt57f1HNMu/bYs/za7d9uLD1
XJPVf3548bzvrndIj4974rnXupzjr6TTvG/+goVd1gmv9dtj04RbHkkvzXwr
vfLq2+m62x5L6215SnHfhtuf2evtAlh1WbBgQdp555275G+R+3XHaaedtkJe
1+iLL764wvN23333Lo9ZbbXVapla6fTp01dmU9tC3gdUj6rnYVVvHwB0h/Ow
AIh8rDfn24tcsDueffmN2uNOGHlzt48r+W8/Oai2Brecj9dp3hc89MSM9K1/
3qvtcwYCQCP33ntvkbs15nU95X277bZb8Zhtttkm3X///emtt95K06ZNS2uu
uWbt+RtuuGGX58TcvfK+n/70p8Va3jjHwZdffpkuuuii2n3Dhg1b2U3uNfI+
oHpUPQ+revsAdMV5WL7GeVgArLvFSX3O+0ZdfX+3191txskX3Fp7fOR8QTyv
L9fa/eCjj4v5gjG/sHHffz3srDR56gttbxPAqsd2221X1EY//OEP06OPPlr7
uae876mnnipsJHK/MreLmque+kwvMsZG1lprreK+NdZYo++NyoS8D6geVc/D
qt4+AF/jPCxdUbcByEHMSYm87ZNPP+/1c2KNcOP1NSJTzHHNjdhO5Ihz3nyv
2/P5AUAzrr766jRmzJj0xRdfFD/3Ju/ricgNy1qw/rjxGWecUbt99uzZXZ4T
c/zKWnLddddt6/Uef/zxdMQRR6SNN964eG6sS77zzjubPvb1119PI0aMKOYQ
Rr64xRZbpOOPP744Xt2M7urGUaNGFa8zbty4ps87+eSTm+7HUUcdlXbdddf0
2muvpXfffTedffbZ6Ze//GVaf/3102GHHZbefPPN2mPjuZtvvnmxn7vssku6
+ebmc8nrtxnrV0aOHJk222yz2jabrasOoh+L2n/HHXcs6v947/bdd99BV7sD
ual6Hlb19gFwHpbukPcBAAB0T1/zvji+XNaA9cQx6PL2rbbaqpYvBjfeeGPt
vqhJe0PkVcOHD++2bo0MrJ4JEyasUKPWGxld/TXUg+7qxjimHbdHrtaM8lj7
QQcd1HR7kX2Wj2msoyMLLddLNxrZZCPlNiM7rH/v650yZcoK711kid29F59+
6trvqC5Vz8Oq3j5gVcd5WLpH3gcAANA9fcn7Zs6cWav/Yt5aIzHnrLw//v3S
Sy+lU045pXZbzA3s7flnrr322trzvvvd7xbz9kaPHp223HLLWnZWcvfdd3fJ
1CI3i/zv6KOP7lIzx3y3elZW3lcac+oip6t/X+rXQ++9997FOWjqn1c/B7DZ
NqN2jzwx5gSWt62++updssxbb721dl/MAXziiSeK8cMee+xR3DZYz8sD5KDq
eVjV2wes6jgPS/fI+wAAALqnL3lf/by08ePHr3D/woULixyw2Zyy3/zmN8X6
lN4Q55Mp1//GnLYPPvigy/0PPPBAOu6444p/x3Hoco1xZHuxpreeGTNm1OrD
2Fac97pkZeZ9sQa5JF4zMsv6TDKy0JJYy1ved+mll3a7zQMOOKDLfbE+t7wv
rllXUs6LbPYZ18+7BKpI1fOwqrcPWNVxHhbnYXEeFgAA0Amd1o0PP/xwrS6M
Wqe73Kg+X6s3apyPPvqoV68VtVB3+VcjcR258rHdrRU+/PDDa4+JOYolKyvv
i/U0jRxzzDG1fWis3eK9LO+LOYnNtrn11luvsM2Yt1c+b/LkybXbzzzzzNrt
Dz30UNM2AFWl6nlY1dsHoCvOw/I1zsMCAADQPZ3UjbEepP7abfVzyeqJ46r1
60ZiPlr9etqY4xbHO1tRP9+tfh5cq8d2dww01qk0y8VWVt3YbJ1JHHsu96HZ
muZym3Est7fbrF+nE/MBSuI9q68T4zN/5JFHmrYFqBpVz8Oq3j4AXXEelq9x
HhYAAIDuabdujDqvfi1IY+1VMmnSpNpjou4q1+5GjRL1UXlfnAemfk1tM6JG
LB/fag3wOeecU3vs/Pnzmz6m/pzU9euQ+zPvGzt2bI95X3kMuJ28L9Y5l9uM
OrmeqB0ba86Yl/nss882bRNQFaqeh1W9fQC64jwszsMCAADQG9qpGz/77LPi
em5lbRI5XHfEscqyNqs/P0zJXnvt1e06hkYuvPDC2mPnzJnT42Mvvvji2mO7
mztYvxb59ttvr93eqm7cZJNNmm5vKOR9QayfPvfcc1dYTzJr1qym7QKqQNXz
sKq3D0BXnIfFeVgAAAB6Q2/rxji2GedNLuuPQw45pNvHRn5VPi5qtGY89thj
tcfE+o6eiEyufOx9993X42PvuuuupllePfF65WNeeeWV2u3d1Y1xTLusj5tR
HsMe7HlfSRxLP//882uPjRoWqCpVz8Oq3j4AXXEeFudhAQAA6A29qRvjnCJx
fbCy7oi5eT0R5xEuH9vsGGkQ1zUrH9PdddpK4lhzT9uL+YNl/RfrQMrHNqvz
IuuKNcTleoxYc1LSXU22++6712rfRYsWdbkvzjFTvt5QyfsaXyPaB1SVqudh
VW8fgK44D4vzsAAAADQjarT33nuvZjlnL7Kv+tvrqb++WtSMzzzzTHruuedW
cN68ebXnRE1SPueSSy7pUhtG3Va/pvTdd99tud/155M54YQTijUlkdVFzhdr
h6MmKonrypWPjWPT5fbjHMq/+93vavfF2t96uqvJ6o/pDhs2rKjz4vps9edd
Gcx1Y1zj7cgjj+zy+cT6kPKxPa3LBoY6Vc/Dqt4+AF1xHhbnYXEeFgAA0Iz6
7K4n41ppJfVrOXrypz/9ae05jz76aJf7ot6JdSCN2xozZkyv9vupp57q8bXr
696ogxpfp/EY6cYbb7zC8enuarKo67p7D+I5g309b1nDl3V84zmnYz0JUFWq
nodVvX0AuuI8LM7D4jwsAACgGXE9tN5kd/X1Wbn+tZVxDLmexx9/vFhL0eyx
UYPFOVvaYfr06WnttddeYVtRz7766qtdHhtzFGOeX2POF/XxyJEjizXKjZSZ
3hlnnLHCfZEhrrnmmivkm3EsOtYYx88xh66324u6rtxOrH9upMzoGuvznrYZ
a43Lbd54442122NNSH3GV/95dXcOH6AqVD0Pq3r7AHTFeVich8V5WAAAwGAh
1pNELhZz/uK6as3yrXaIOjHWBMc5TJrVXPVEzRtrb+MaaK2uKxf7FbVXsyyw
JO6PbS1cuLB2WxxDf//994uatJ3tffjhh03XzARRz3ayzTjPTmy3GTGPL/Y9
3rfeXmMPGOpUPQ+revuAVR3nYXEelsB5WAAAAADga6qeh1W9fcCqjvOwOA+L
87AAAAAAQFeqnodVvX3Aqo7zsDgPS/3n5TwsAAAAAFD9PKzq7QPQ/zgPi/Ow
AAAAAMBgpup5WNXbBwAAAAAAANRT9Tys6u0DAAAAAAAA6ql6Hlb19gEAAAAA
AAD1VD0Pq3r7AAAAAAAAgHqqnodVvX0AAAAAAABAPVXPw6rePgAAAAAAAKCe
qudhVW8fAAAAMBi449F56YXXPhro3QAAAKn6eVjV2wcAAAAMJJMefjtteeyj
6af7PJCmPvfeQO8OAACDmkWffNEvr1P1PKzq7RsIHLsFAABYtflsyZfpuvvm
ps2PeqTI+UrlfQAA9Ez0nZfe+lpa+PHKzf2qnodVvX39iWO3AAD0nv46dgv0
J4s//SKNmzwn/faIh7vkfPI+AAB6x68PeajoM+O/l98+O3386cqpGaueh1W9
fSsbx24BAOiM/jp2C/QXby/4NG1xzKNNc77S48a8lEbf9jrbMMZ64Zg7ljk2
vHN2uuLOOenKu+akcaWT56Txk99IV939Rpow5Wuvvmduumap1977tVG/X3/f
m+n6+99MNzzwZrpxuROnvlV404NvpZuXestDX3vrtLeL4/u3PTwv3fbIMm9f
aqztCe96bH7Nux+fnyY/MT9NeeKdwnueXO5T76R7n3o33ff0u+n+0mfeTQ88
+16aGi4dQzy43Ieefy9Ne35BmvbigvTwCwvSIy8u89GX3i987OX30+NLfeKV
D2o+Of2D9HQ448P09MxlPrPUZ2ct87lXPyp8fqmxHil88fWF6aXZy3w5nLMw
vTJnUZpR79xFaeZSZ725OM16a3F6dbmvvb04vf72x+n1eR+n2UudM3+Zb8z/
pHDuu5+kN8P3Pq0ZvyfzwveXOf/9z9I7H3ye3v3ws8L3Pvq8cMFS31+4zA8W
LUkfLnfh4iXpo4+XFH1HHDcqjaw9MoFPPvuy8NPPvyqM8RqAoUWZ95Vucui0
4u97/G7npOp5WNXbt7Jw7BYAgL7RX8dugf4kcoiLb34t/eKAB5vWiJFLPV1m
Mmxp5FdllhXZVmRcZd4VPrI8C4tMrPD5BUVOFnlZ1ONTl+dokadFrhb5WmRt
kbmFkb9FDlfmcpHRhZHXldldmeeFty/P+SLzi+wvjBywzAQjI7xpuWV2GDli
ZIqRLRbe92aRN5bZ4zXL88jIJcuMMjLLGNuGMeaI701km5FxRtZZuDz/LPPQ
MPLRyya9nkaFt75eHFO55JbX0sWlS7+bF938arrwplfTBRPrvGFWOu/GWWnk
DV977vWz0ojrZ6YR181M51w7M5293LOumVF45tUz0hlLPX3C9JqnXTU9nTp+
ejpl/CvplHHLPHmpJ125zBOvfDmdMHaZx4djXi4y8GMvfykdUzr6pXT06BfT
UZe9mIaXjnoxHXnpC+mI8JIX0uHLPeziF9IhFz+fDr3o+XTwUg+6cJkHX/Bc
4QHnL3P/856tud/IZ9O+4bnPpn1GPFO4d4N7nbPMlXl7423d3T4YX7N83+I9
jPcy3tP697h838vPISw+l4uWfVbxmYXx+cXnGJ9pfLZHLjc+7/jc4zsQ34X4
ThRevuy7Et+Z+O4cv/x7FN+n+G6V37OTl3/viu/g0u9ifCfjuxmW39X47sZ3
uPw+h/H9ju96fOeL7/5S4/eg/J2I35H4XSlc/rsTv0vxOxW/W4W3LPudi9+9
+B0ctfz3sdnxi7HdHb+Y3Pz4xdXL/07UH7+IvyXNjl+Uf396e/zi9m6OX8Tf
wqbHL55qcvzimebHL+JvcrPjF/V/yxuPX3TXh0b+Eu3PRdXzsKq3b2Xg2K1j
t47dOnYLoO/017FbYCCIfi3Ghj8/YGqX73n09QBQdaI2jxq9rNnDqOGjli/r
+qjzw6LmX7xsDBDjgXJsEC5YPmYoxxBhjClibFGMM5aPOWLsURuLvLtsfBKW
45UYu8Q45vXSpWObGOPEWCfGPcX4Z6kxFooxUTk+emW5MXZ6eflYKsZV5Rgr
fH752Ksci4XPLB+jFeO15WO3+vFcy+MXzzc/fvFAN8cvyvyt8fhFmdc1Hr8o
87364xcxDm52/KI+O+xy/OK+5scvru7m+EWZY65w/OKOFY9f9JS1/H74I0X7
c1D1PKzq7VtZOHbr2K1jt47dOnbr2K1jt0Pj2C0wkMR4Nf7mbLD/stwvfj8A
AED3/OqgFWvErY9/tKhrv/jyq2yvU/U8rOrtW9k4dgtgVcaxW8duh8KxW2Aw
EH/T4jhE/E0AAADdU5/3DTv5iaLmzRjz1ah6Hlb19vUXjt0CANAe/XXsFgAA
AEOHXx74YPrzGU8Vx8FXJlXPw6revv7GsVsAAHpHfx27BQAAwNAh1sn0B1XP
w6rePgAAMDjpr2O3AAAAQCNVz8Oq3j4AADA46a9jtwAAAEAjVc/Dqt4+AAAA
oD/4waZnkCTJfrKvVD0Pq3r7AAAAgP6gGHt89FifnfvypHTXxJFZtkWSZBWV
97Wm6u0bzMydOzfdddddA70bAAAAleHN9z4dsNfOlfc9cs/l6dD9t82yLdkh
SXIwmLs/kve1pgrt68+6Lufc07/9yd5ptf+23oDPgSVJcrAKtMOiT75Imx35
cPHfgaD4zmYYwzw8ZXS2vC9ndkiSZKfm7o9y1IlVyMN6Yqi3r7/rulx1XJiz
lgvfeGlSuuPGcwf895gkuWqbqz+S96FdRt/2evrpPg+kyya9PiCvn6tOnHb3
ZemwA7bPsq3c9SZJkp2Yuz+S97VmqLevv+u6nHlfzloudPyWJDkYzNUfyfvQ
DnHs91cHPVjUhfHfgZjjl6tOfGjyqHT4gTtk2VbuepMkyU7M3R/J+1ozlNs3
EHVdzrwvZy0XOn5LkhwM5uqP5H1ohzj2GzVh6ahb+3+OX6468cG7Lk1HHDQs
y7Zy15skSXZi7v5I3teaody+gajrcuZ9OWu50PFbkuRgMFd/JO9Db6k/Blya
41jw5MmT03HHHZdGjhyZZs6c2fLxuerEqXeOSkcevGOWbeWuN0mS7MTc/ZG8
rzVDtX0rq65rRc68L2ctFzp+S5IcDObqj+R96C2jGo4Bl15yy2sdb/Owww4r
6uRNNtkkrb766umb3/xmeu6553p8Ts68b3imGjF3vUmSZCfm7o/kfa0Zqu1b
GXVdb8id9+Wq5ULHb0mSg8Fc/ZG8D70hjvVuePBDTevCOBa88OP2jwXPnTu3
qJEvv/zy4udPP/00ffvb304777xzj8/LVSfef/vF6ahDdsqyrdz1JkmSnZi7
P5L3tWYoti9HXdfu+oySnHlfzlqu/P1x/JYkOdDm6o/kfegNcT6XZjVh6cU3
t38seNSoUUWNvHjx4tpt+++/f5H59USuOvG+2y5KRx+6c5Zt5a43SZLsxNz9
kbyvNUOxfX2t6zpZn1GSM+/LWcuFD9xxieO3JMkBN1d/JO9Db3h59sL09PQP
au5y2pNdfn5p6f3tcsIJJ6TVVluty20jRoxoWTfnzPuOOWyXbNvKWW+SJNmJ
ufsjeV9rhmL7+lLXdbo+oyR33perlgsdvyVJDgZz9UfyPnTC/uc92+dtxLHh
b33rW11uO//88/st77vn1gvTsYfvmmVbuetNkiQ7MXd/JO9rTRXa105d1+n6
jJKceV/OWq78/XH8liQ50Obqj+R96IQced+pp55arP+o55RTTllhzl8jOfO+
447IUyPmrjdJkuzE3P2RvK81VWhfO3Vdp+szSnLnfblqudDxW5LkYDBXfyTv
QyfkyPsmTJhQ1Iavvvpq7bbNN988rb/++j0+L1edOOWWC7LmfTnrTZIkOzF3
fyTva00V2tdOXdfp+oySnHlfzlqu/P1x/JYkOdDm6o/kfeiEHHnfhx9+WNSG
W2yxRZo9e3a64YYbip+vvPLKHp+Xq068++bz0/FH/jnLtnLXmyRJdmLu/kje
15oqtK+duq7T9RklOfO+nLVc6PgtSXIwmKs/kvehE3LkfcHtt99e1IdRK0ft
OHz48JbPyVUnTr7pvHTiUbtn2VbuepMkyU7M3R/J+1pThfa1U9d1uj6jJGfe
l7OWCx2/JUkOBnP1R/I+dEKuvK/kvffeS19++WWvHpurTrxr4shsNWLuepMk
yU7M3R/J+1pThfa1U9d1uj6jJGfel7OWK39/Thi+24D/HpMkV21z9UfyPnRC
7ryvHXLViXfeODKddPQeWbaVu94kSbITc/dH8r7WVKF97dZ1nazPKMmZ9+Ws
5ULHb0mSg8Fc/ZG8D51QhbzvjhvPTaccu2eWbeWuN0mS7MTc/ZG8rzVVaF+n
dV076zNKcuZ9OWu50PFbkuRgMFd/JO9DJ1Qh77v9hhHZasTc9SZJkp2Yuz+S
97WmCu3rz7ouZ96Xs5YLHb8lSQ4Gc/VH8j50QhXyvtuuPyedetxeWbaVu94k
SbITc/dH8r7WVKF9A5H3jb7w6PSzdddM6/+vH6Wf/3SZv1jvR2mD9f8l/fJn
P06/+vnaacMN/rVwo1/8a/r1L/8tbfyrddImG66bNt3oJ+k3v143/fhHP0jf
/9530m83/Wn63Sbrpd9v+rO0+W+X+Yffrp/++LsNCrf8/S/SVpsv809/+GXa
eosN0zZ/3Chtu+VGafutNko7/OnXhfH6//yP30vDtt007bT9pmnn7X5TuMsO
v01/3vF3hbstdfedfl+4x86bp7123aJw7z9vkfbZ7Y9p3923LNxvj63S/ntu
nQ7Y60/pwL23SQfts3Xhwftukw7df9vCww7YPh1+4A6FRxw0LA0/eMfCow7Z
KR196M7pmMN2KYxztodxLZ44n1PM+QhjLBi/72HUtKcdv3fh6Sfsk848ad/C
s07eL519yv7pnFMPKDz3tAMLR55+UDrvjIPT+WceUnjh2Yemi0YcVnjxiMPT
JeceUXjpyCPSqPOHF152wVHF5xaOuejodMUlxxZeeelxadylx6fxo5Y5YfSJ
hVdfflK6ZszJ6dqxJxVef+Wp6YZxpxXeOP70NPGq5U44I91yzVmFt157dpp0
3dlFnR7GMYwwxr4x3yXWuIVxLvu4fmXhpAvTfbddVPjAHZekqXeOKnzwrkvT
Q5NHpWl3X1b4yD2XFz5671LvG5Mev39s4ZMPXJmemrrMpx8cl555aHzhcw9P
SM+XPjohvfjY1emlx69NLz9xXXrlyWVOf+r6NOPpG9LMZ24sfPW5iem1528q
fP2Fm9PsF24pfOOlSWnuy8t8c/pt6a3pt6e3ZtyR5s28I82fdWfhO6/eld59
bXJ67/W704I54ZT0wRv3FH4499700Zv3FS56+/60eN4DhR/Pm5o+mf9g+vSd
B9Nn7z6UPn9vWuGSBQ+nL95/JH35wSPpqw8fHfC+iWR75jp+K+9DJwxk3vfX
//jHPteH4dr/8oP0d9//2yz14c+jPvzh99WH6kP1IckBNeexrFDe15oqtG+g
5vdFPxP9TRh9T/RB0RdFvxT9Uxh9VfRZ0XdFP7bwrftq/dp1V5xc1DnR70X/
F/1gGH1i9I3RR0Z/Gf1m4dI+NPrS6FOjf53z4q21/jb63qhRDtlvmzTr2Ym1
/jn66uizo++Ofjz68zD69ujjo6+Pfv/ZaVfV6oCoCaI2iDrh8fuvqNUNUUNE
LRE1xcNTRtfqjKg5ovaIGiTqkftvv7hWn0StEjVL1C9x/e2ynonaJmqcqHUi
5y/rn6iFoiaK2uimq88saqWybooaKmqpqKvivSvrrKi5yhrsqstOqNVlUaNF
rRY129iLjynen7Kei9quqPPOO7Ko+cr6L2rBqAmjPrzgrENq9WLUjmUtOWJ5
bRlGrRk1Z9SeZ5y4T1GLlnVp/C2LWvXkY/Yoateyjo2atqxxjz1811rdGzVw
WRMfudSokct6OWrnqKEP2W/boqYu6+uotaPuDqMGL+vxqM3LWn3PXf5Q1O5l
HV/W9rsO26yo9cu6P8YAO2yzSeH2W29cGyfEmCHGD2GMJWJMUY4vyjHHFpv9
vBiDlOORGJ9Ejl248bq18UuMZWJcE8YYJ8Y65bgnxkFhjIlibFSOk2LctN5P
/rmwfgxVP35qHEOV46fGMVTsS7lf9WOo2PdoQ+MYqn781DiGKt6j5e9X/Rgq
3tN4bxvHUPEZxGfRbAxVjp8ax1DxWcdn3jiGiu/Gkcu/K41jqPhONRtDxXcw
vouNY6j4zsZ3t9kYakQ3Y6j43Wg2hirGT0t/pxrHUPG7F7+DzcZQ8TvbbAwV
v+NNx1BL/ybE34b6MVT59yP+ljQbQ8XfnmZjqPhb1TiGKv+uxd+4+jFU+Xcw
/iY2G0PF39DGMVT597ZxDFX+fY6/1fVjqPLvefxtX2EMtbwfaBxDlf1G4xiq
7Geiz6kfQ5Xjp2ZjqLI/yzGGynX8Vt6HThjo+X19rQ8jA7l6TFkj9r0+HH3h
UUUfoj5UH6oP1YfqQ/XhQNaH8XnE90ve139UoX1DdT1v/B2Kv6WDNS8nB5v1
Y6hy/NRsDFX2XY1jqLKva8zYy/FT4xiqHD81jqFi/FT2wdEf14+hyvFT4xiq
HD81jqHK8VPjGKp+/NQ4hirHT41jqHL81DiGqh8/1Y+h6sdPjWOocvzUOIaK
eivqrsYxVP34qXEMVRs/NYyhyvFT4xgq6saoHxvHUPXjp8YxVDl+ahxDRT0b
dW3jGCrq36iDm42hyvFT4xgq6uyotxvHUFGXR33ebAy12/K6vnEMFfV/jAMa
x1AxXohxQ7MxVIwzmo2hYlzSbAwV45gYz9SPocoxT4x/mo2hYrzUOIZqNkcp
bDZHKYzXjfnrq//P/7rCGKp+jlL9GKrZHKXwexsd12/9O6rDQOd9Ofq7+Jsc
f+NybCt3vUkONtWH6kP14dCoD9da8++WrW/sY30Yv6fxuy/va00V2jdU876c
tVwYf5tz5uUkyVXbcgxVP0epfgxVP0epHEPV5q8vraObjaHq5yh1GUPVzVEq
x1Crb3Jav/XvqA5Vyfti3JprWznrTZLkqm2n9WHkwpG19rU+jNeN/ZD3taYK
7RvKeV+uWi50/JYkORjM1R9Zz4tOyFkXfvXVV2nChAlp3LhxvXp8rjox5tLE
fJUc28pdb5Ik2Ym5+yN5X2uq0L6hmvflrOXK3x/Hb0mSA22u/kjeh07IVRdO
nz49rbvuukWtvNZaa/XqOdnyvqtOL9aoZdlW5nqTJMlOzN0fyftaU4X2Ddm8
L2MtFzp+S5IcDObqj+R96IRcdeEPf/jDtPfee6fNN998QPK+OC9Vrm3lrDdJ
kuzE3P2RvK81VWjfUM77ctVyxfYcvyVJDgJz9UfyPnRCrrpw0aJFxX932223
fs/74pz4OfO+nPUmSZKdmLs/kve1pgrtG6p5X85arvz9cfyWJDnQ5uqP5H3o
hNx14UDkfXHty7j+ZI5t5a43SZLsxNz9kbyvNVVoXyd1XbvnXy7JmfflrOVC
x29JkoPBXP2RvA+dUIW87/orT81WI+auN0mS7MTc/ZG8rzVVaF+7dV0n518u
yZn35azlyt+fEfI+kuQAm6s/kvehE6qQ9113xclp5OkHZdlW7nqTJMlOzN0f
yftaU4X2tVvXdXL+5ZKceV/OWi50/JYkORjM1R/J+9AJVcj7rh17Ujr/zEOy
bCt3vUmSZCfm7o/kfa2pQvvares6Of9ySc68L2ctFzp+y1XV5x+dkJ6ddlXT
n5cseDg9cs/l6Y2XJg34fpKrirn6I3kfOiFX3vfWW28Va0K23HLLtMYaaxT/
nj9/fo/PyVUnXjPm5Gw1Yu56k1xVVW+SfTN3fyTva00V2tdpXTfQeV/OWi50
/Jarom/NuKP4OxZ+Mv/BFX6O34v497r/9k8Dvq/kqmKu/kjeh07Ilfets846
tf6kNNaG9ESuOvHqy09KF5yVp0bMXW+Sq6LqTbLv5u6P5H2tqUL7hmrel7OW
Cx2/5aroB2/cU/wdW+3/+s/FsdXGn++8cWTx8+82WW/A95VcVczVH8n70Am5
1/O2Q646ccLoE9OFZx+aZVu5601yVVS9Sfbd3P2RvK81VWjfUM37ctZyoeO3
XFVdPO+Botbq7ucP59474PtIrkrm6o/kfeiEKuR9V112QrpoxGFZtpW73iRX
VdWbZN/M3R/J+1pThfYN1bwvZy0XOn5LkhwM5uqP5H3ohCrkfeNHHZ8uHnF4
lm3lrjdJkuzE3P2RvK81VWhfu3VdJ+dfLsmZ9+Ws5ULHb0mSg8Fc/ZG8D50w
0HnfmIuOTuv/rx+ln627ZlrvJ/9cGP/++U9/VPiL9X6UNlj/X9Ivf/bjwg03
+NfCjX7xr+nXv/y3tPGv1kn/tMZ30xp/9z/Sb369buFvN17qpj8t/P2mP0ub
/3aZf/jt+mmLzX6e/vi7DdKWv/9F2mrzZf7pD79MW2+xYdrmjxulddZeI/34
Rz9IO/zp14Xbb71x2mGbTdKwbTdNO22/adp5u98U7rLDb9OuwzZLf97xd2m3
pe6+0+8L99h587TnLn9Ie+26Rdr7z1ukfXb7Y9p39y0L99tjq7T/nlunA/b6
Uzpw723SQftsXXjwvtukQ/fftvCwA7ZPhx+4Q+ERBw1Lww/esfCoQ3ZKRx+6
czrmsF0Kjzti18Ljj/xzOmH4bunEo3YvPPmYPdIpx+5ZeOpxe6XTjt+78IwT
90lnnrRv4Vkn75fOPmX/dM6pB6QRS43rBYVxHtHzzji4mG8cxyDi71KMNcOo
wS8594h06cgj0qjzjkyjzh9eeNkFR6XRFx5dfI5jLz4mXXHJsYVXXnpcGnfp
8UX9HmPW+DsXxvGNmNMc5zGIc7jF9YriGuXhxKtOX+aEM9JNV5+ZbrnmrMJJ
152dbrv+nMLbbxiR7rjx3MK7Jo5Mk286r/Dum89PU265IN1z64XpnkkXpvtu
u6jw/tsvTg/ccUmaeueo9OBdl6aHJo9K0+6+rPDhKaOLa0Y8eu9S7xuTHr9/
7HKvSE8+cGV6auqV6ekHx6VnHhpfGNeaeO7hCen58NEJ6cXHrk4vPX5t4ctP
XJdeefK6NP2p69OMp29IM5+5sXDWsxPTa8/fVPj6Czen2S/cUjjnxVvT3Jcn
Fb45/bb01vTbi3PchfNn3Vn4zqt3pXdfm5zee/3uwgVzphTrYsOYG/fRm/cV
Lnr7/mLuXPjxvKnF+fE+fefB9Nm7D6XP35tWGPPqvnj/kfTlB4+krz58dMD7
PZKtzZ1/yPtaU4X2tVvXdXL+5ZLceV/UGbm25/gtSXIwmKs/kvehEwY672v2
XY48InKJyCcipygzi8gvIseIPCNyjTLjiPxp5BkHFdlH5CBlJhL5SJmVRG4S
+UmZpZTZSuQskbeU2UtkXpGVRSYT+UyZ1URuU2Y4kedErhP5TuQ8ZeYT+U/k
QJEHRS4U+VCZFUVuFPlR5EiRJ5XZUuRMkTdF7hT5U5lFRS4V+VTkVJFXRW5V
ZliRZ0WuFflW5Fxl5hX5V5mFRS5WZmSRl5XZWeRokaeV2VqZtUXuFvlb5HBh
5HJlRhd/o6IODyPHKzO9yPci54u8L3K/MgOMzyNywajbY6xaZoaRH0aOGHli
5IrxXpdZY+SOkT9GDhl5ZJlNRk5ZZpaRX5ZZZuSaZcYZeWfknmUGWmaikY9G
TlpmppGflllq5Kplxhp5a5m9Rg4beWzkspHPlllt5LaR30aOG3lu5Lplxht5
b+S+kf9GDlxmwpEPR04ceXGRG5cZ8lYbpW233KjIlyNnjry5zJ4jh448OnLp
yKfLrDpy6zLDjjy7zLY33egnReYdRv4dOXiZiZcZeeTlkZuXGXpjth55e7Ns
/Vc/X3uFbD3cZMNlr9uYrce5+Mp8vT5br8/X67P1MN6Lxmw9XJnZ+iH7Nc/W
j+wmWz/28ObZ+klHN8/WTz+hebZ+TjfZetgsWw+bZethX7P1G8c3z9Zvvfbs
Wr5en63H+RbLfL1Ltl6Xr9dn62W+3pitl/n6ysrWX31uYtNsPa4D3Sxbnzfz
jm6y9bubZusL37qvabYeNsvWw77UdbnzD3lfa6rQvv6s63LmffG3LGqHXNvL
nZeTJNmJufojeR86YTDmfe0aY94YF+fYVu56kxzMltl62CxbD+uz9ZhLGJlH
s2w9MpJm2XpkKs2y9chgykymPluPzKZZth42y9af7yZbD1dmth4ZWLNsPTKz
Ztl6ZGzNsvXI5Jpl65HhNcvWw2bZetgsWw+bZethY7YeWWWzbD2yzWbZemSh
zbL1I+vy9fpsPbLWMl+vz9bDZtl62CxbD1dmth7ZdbNsPbLuZtl6ZOPNsvXI
0ptl62GzbD2sz9br5673NVuP3095X2uq0L6ByPtyrNX4h7//H4U51mrE732s
11j7X/7eWg1rNazVIDmg5jp+K+9DJ1Qm71tar2TbVqbskCTJsD5bj/Fas2w9
xnf12XrUhjFuj7Fgs2w9bJqtL7UxW4/XlPe1pgrtGyzz+9pdqxEZVGRUOdZq
RA5zzikHFFmZtRrWalirYa2GtRrWagzUWo0w13wieR86oQp5X/y9zJr3ZdoW
SZKdmrs/kve1pgrtGyx5X7vmrOVqvz+O33IV0FoNazWs1Ri8azXi9f5pje8V
89f7mq1/b6Pj+q1/R3WoQt5X/t3Msa3c9SZJkp2Yuz+S97WmCu0bqnlfzlou
dPyWJJnTTtZqRLYeOW5ktn1dq7H6Jqf1W/+O6iDvW3nbIkmyU3P3R/K+1lSh
ffK+ZTp+S5IcDObqj6znRSdUIe+LcyHE/Ogc25L3kSQHg/K+/qcK7RuqeV/O
Wm5l/P6QJNmJufojeR86oQp5X+TlsW4jx7Zy15skSXZi7v5I3teaKrRvqOZ9
OWu5UN5HkhwMyvswkFQi7zvvyGw1Yu56kyTJTszdH8n7WlOF9g3ZvC9jLRc6
fkuSHAzm6o/kfeiEKuR9cU2juM51jm3lrjdJkuzE3P2RvK81VWjfUM37ctZy
xe+P47ckyUFgrv5I3odOqELeF9e8ieud59hW7nqTJMlOzN0fyftaU4X2DdW8
L2ctFzp+S5IcDObqj+R96IQq5H0Xjzg8jR+Vp0bMXW+SJNmJufsjeV9rqtC+
oZr35azlQsdvSZKDwVz9kbwPnVCFvO+iEYelqy47Icu2ctebJEl2Yu7+SN7X
miq0b6jmfTlrudDxW5LkYDBXfyTvQydUJe+bMPrEbNvKWW+SJNmJufsjeV9r
qtC+oZz35arlQsdvSZKDwVz9kbwPnVCFvO+Csw5JV19+UpZt5a43SZLsxNz9
kbyvNVVo31DN+3LWcuXvj+O3JMmBNld/JO9DJ1Qh7zv/zEPSNWNOzrKt3PUm
SZKdmLs/kve1pgrtG6p5X85aLnT8liQ5GMzVH8n70AlVyfuuHZtnTJS73iRJ
shNz90fyvtZUoX1DOe/LVcuFjt+SJAeDufojeR86oQp533lnHJw178tZb5Ik
2Ym5+yN5X2uq0L6hmvflrOXK3x/Hb0mSA22u/kjeh06oQt537mkHpuuvPDXL
tnLXmyRJdmLu/kje15oqtG+o5n05a7nQ8VuS5GAwV38k70MnVCXvu2Hcadm2
lbPeJEmyE3P3R/K+1lShfUM578tVy4WO35IkB4O5+iN5HzqhCnnfiFMPyJr3
5aw3SZLsxNz9kbyvNVVo31DN+3LWcuXvj+O3JMmBNld/JO9DJ1Qh7ztnaY04
8arTs2wrd71JkmQn5u6P5H2tqUL7hmrel7OWCx2/JUkOBnP1R/I+dEIV8r6z
T9k/W42Yu94kSbITc/dH8r7WVKF9QzXvy1nLhY7fkiQHg7n6I3kfOqEKed9Z
J++XJk4YfNkhSZKdmrs/kve1pgrtG6p5X85aLnT8liQ5GMzVH8n70AlVyPvO
PGnfdNPVZ2bZVu56kyTJTszdH8n7WlOF9g3VvC9nLRc6fkuSHAzm6o/kfeiE
KuR9Z5y4T7rlmrOybCt3vUmSZCfm7o/kfa2pQvuGat6Xs5YLHb8lSQ4Gc/VH
8j50QhXyvtNP2Cfdeu3ZWbaVu94kSbITc/dH8r7WVKF9QzXvy1nLhY7fkiQH
g7n6I3kfOqEKed9px++dJl2Xp0bMXW+SJNmJufsjeV9rqtC+oZr35azlQsdv
SZKDwVz9kbwPnVCFvO/U4/ZKt11/TpZt5a43SZLsxNz9kbyvNVVo31DN+3LW
cqHjtyTJwWCu/kjeh06oQt53yrF7pttvGJFlW7nrTZIkOzF3fyTva00V2jdU
876ctVzo+C1JcjCYqz+S96ETqpL33XHjudm2lbPeJEmyE3P3R/K+1lShfUM5
78tVy4WO35IkB4O5+iN5Hzphv5FDP+87+Zg9suZ9OetNkiQ7MXd/JO9rTRXa
1591Xc68L2ctV/7+OH5Lkhxoc/VH8j50QhXm95141O7prokjs2wrd71JkmQn
5u6P5H2tqUL7hur8vpy1XOj4LUlyMJirP5L3oROqkvdNvum8bNvKWW+SJNmJ
ufsjeV9rqtC+oZz35arlQsdvSZKDwVz9kbwPnXDA+c+lr74amNfOVSeeMHy3
rHlfznqTJMlOzN0fyftaU4X29WddlzPvy1nLlb8/jt+SJAfaXP2RvA+dUIW8
77gjdk1Tbrkgy7Zy15skSXZi7v5I3teaKrRvqOZ9OWu50PFbkuRgMFd/JO9D
J0Rd+GUF8r57br0w27Zy1pskSXZi7v5I3teaKrSvP+u63HlfrloudPyWJDkY
zNUfyfvQCVXI+449PG/el7PeJEmyE3P3R/K+1lShfUM178tZy5W/P47fkiQH
2lz9kbwPnXDwBUvrwi8H5rVz1YnHHLZLumdSnhoxd71JkmQn5u6P5H2tqUL7
+rOuy5n35azlQsdvSZKDwVz9kbwPnVCFvO/oQ3dO9912UZZt5a43SZLsxNz9
kbyvNVVo31DN+3LWcqHjtyTJwWCu/kjeh06IuvCLAVrQm6tOPOqQndL9t1+c
ZVu5602SJDsxd38k72tNFdrXn3VdzrwvZy0XOn5LkhwM5uqP5H3ohCrkfcMP
3jE9cMclWbaVu94kSbITc/dH8r7WVKF9QzXvy1nLhY7fkiQHg7n6I3kfOuGg
C59PS74Y2nnfkUtrxKl3jsqyrdz1JkmSnZi7P5L3taYK7evPui5n3pezlgsd
vyVJDgZz9UfyPnRCFfK+Iw4alh6869Is28pdb5Ik2Ym5+yN5X2uq0L6hmvfl
rOVCx29JkoPBXP2RvA+dcPBFQz/vO/zAHdJDk0dl2VbuepMkyU7M3R/J+1pT
hfb1Z12XM+/LWcuFjt+SJAeDufojeR86oSp537S7L8u2rZz1JkmSnZi7P5L3
taYK7RvKeV+uWi50/JYkORjM1R/J+9AJhy6tCz9fMrTzvkP33zY9PGV0lm3l
rjdJkuzE3P2RvK81VWhff9Z1OfO+nLVc+fvj+C1JcqDN1R/J+9AJVcn7Hrnn
8mzbyllvkvz/2bsToKnKPM/3dSdu3LjTM8btmDsz3LljzPQlZugIupvb14mm
rKHttmgspCwscEGKAkEQBQQK3BBkVUBAUEoWQUFkKaFAUVxABAQRREApdpB9
lWJfX3Z4Lr/z8hxO5nvyzcyTz5vLeb+fiF/Am8vJczLzfc8//08+5xBCosT1
/oh+X3px2L5S7ve5quUUxm8JIYQUQ1ztj+j3IYpeEzaZS1euFeSxXdWJvZ51
2+9zWW8SQgghUeJ6f0S/L704bF8+6zqX/T6XtZz9/WH8lhBCSKHjan9Evw9R
xKHf98LTrc3qpVOdLMt1vUkIIYREiev9Ef2+9OKwfaXa73NZyymM3xLyndn2
p9lm3TfTC74ehFTnuNof0e9DFL0nbDYXL5f2fF7ViN9/Pc3ZslzWm4QQQkiU
uN4f0e9LLw7bl8+6znW/z1UtpzB+S6p7juxa4P1NUw7+MK/g60NIdY2r/RH9
PkQRh35fj+5tnPb7XNabhBBCSJS43h/R70svDttXqv0+l7Wc/f1h/JZU55Qd
XmZuu+0vTI3/8O/Mif2LC74+hFTXuNof0e9DFH0mbjYXLpX2fN7nuz16o0b8
g5Nlua43CanuYS4JIdHien9Evy+9OGxfPus6l/0+l7WcwvgtIYSQYoir/RH9
PkQRh37fc79rbdYuf8/JslzXm4RU5zCXhJDocb0/ot+XXhy2r1T7fS5rOYXx
W0IYcyWkGOJqf0S/D1H0jUG/79murZzViK7rTUKqc5hLQkj0uN4f0e9LLw7b
l8+6zmW/z2UtpzB+S6p7GHMlpDjian9Evw9RxKHf90yXls7GrlzXm4QQQkiU
uN4f0e9LLw7bV6r9Ppe1nML4LanuYcyVkOKIq/0R/T5E0fedzeb8xasFeWxX
deLTnX9r1q+Y4WRZrutNQqp7mEtCSLS43h/R70svDtuXz7rOZb/PZS2nMH5L
CCGkGOJqf0S/D1HEod/X/akWZsO3f3SyLNf1JiHVOcwlISR6XO+P6PelF4ft
K9V+n8taTmH8lpDvzKQ3+5kxI3qY66dXF3xdCKmucbU/ot+HKOLQ7+vWqYXZ
uHKmk2W5rjcJqc5hLgkh0eN6f0S/L704bF+p9vtc1nIK47ekumf/lrn+mOuO
dR8VfH0Iqa5xtT+i34co+t2oC8ti0O/b5KhGdF1vEkIIIVHien9Evy+9OGxf
Pus61/0+V7Wcwvgtqe65cmKladb0HtO6RWNz6diKgq8PIdU1rvZH9PsQRRz6
fV07NDebVrvr97msNwmp7mEuCSHR4np/RL8vvThsX6n2+1zWcvb3h/FbQggh
hY6r/RH9PkTRf9IWc+5Caff7ujz5iNny3Swny3JdbxJSncNcEkKix/X+iH5f
enHYvnzWdS77fS5rOYXxW0IIIcUQV/sj+n2IIi79vq3ff+BsWS7rTUKqc5hL
Qkj0uN4f0e9LLw7bV8r9Ple1nML4LSGEkGKIq/0R/T5E0f/d0u/3PfVEM/PD
mtlOluW63iSEEEKixPX+iH5fenHYvnzWdS77fS5rOfv7w/gtIYSQQsfV/oh+
H6KIS79v25/c1Iiu601CCCEkSlzvj+j3pReH7Svlfp+rWk5h/JYQQkgxxNX+
iH4fohhwoy48e760+32d2j/stN/nst4khBBCosT1/oh+X3px2L581nUu+30u
azn7+8P4LSGEkELH1f6Ifh+iiEO/r+PjD5ntaz90sizX9SYhhBASJa73R/T7
0ovD9pVqv89lLacwfksIIaQY4mp/RL8PUbw0eYs5c/5KQR7bVZ3Yoe2DZuf6
OU6W5breJIQQQqLE9f6Ifl96cdi+fNZ1Lvt9Lms5hfFbQgghxRBX+yP6fYgi
Dv2+J9s94KxGdF1vEkIIIVHien9Evy+9OGxfqfb7XNZyCuO3hBBCiiGu9kf0
+xDFy5O3mrNlpd3va//YA2bXho+dLMt1vUkIIYREiev9Ef2+9OKwffms61z2
+1zWcgrjt4QQQoohrvZH9PsQRRz6fY+3aWr2bPrEybJc15uEEEJIlLjeH9Hv
Sy8O21eq/T6XtZzC+C0hhJBiiKv9Ef0+RPHylK3m9LnS7ve1a93EWY3out4k
hBBCosT1/oh+X3px2L581nUu+30uazmF8VtCCCHFEFf7I/p9iCIO/b7HH/21
2bv5UyfLcl1vEkIIIVHien9Evy+9OGxfqfb7XNZy3vIYvyWEEFIEcbU/ot+H
KAbeqAtPxaDft2/zZ86W5bLeJIQQQqLE9f6Ifl96cdi+fNZ1rvt9rmo5hfFb
QgghxRBX+yP6fYgiDv2+x1reb/ZvmetkWa7rTUIIISRKXO+P6PelF4ftK9V+
n8tazv7+MH5LCCGk0HG1P6LfhygGTd1qTp69XJDHdlUntvnt/ebA1nlOluW6
3iSEEEKixPX+iH5fenHYvnzWdS77fS5rOYXxW0IIIcUQV/sj+n2IIi79voM/
uKkRXdebhBBCSJS43h/R70svDttXyv0+V7WcwvgtIYSQYoir/RH9PkQxeOoP
Jd/ve/Q395kft3/uZFmu601CCCEkSlzvj+j3pReH7ctnXeey3+eylrO/P4zf
EkIIKXRc7Y/o9yGKOPT7WjX/pTm0fb6TZbmuNwkhhJAocb0/ot+XXhy2r1T7
fS5rOYXxW0IIIcUQV/sj+n2IYvC0H8yJMzHo9+34wt2yHNabhBBCSJS43h/R
70svDtuXz7rOeb/PUS2nMH5LCCGkGOJqf0S/D1HEod/X8hHH/T6H9SYhhBAS
Ja73R/T70ovD9pVqv89lLef//jB+SwghpMBxtT+i34coXrlRFx4v8X7fb5s1
Mkd2LXCyLNf1JiGEEBIlrvdH9PvSi8P25bOuc9nvc1nLKYzfEkIIKYa42h/R
70MUcej3tXj4Xmc1out6kxBCCIkS1/sj+n3pxWH7SrXf57KWUxi/JYQQUgxx
tT+i34cohrz3gzl2+lJBHttVnfibhxqao7sXOlmW63qTEEIIiRLX+yP6fenF
YfvyWde57Pe5rOUUxm8JIYQUQ1ztj+j3IYo49PuaP/QLc3zvl06W5breJIQQ
QqLE9f6Ifl96cdi+Uu33uazlFMZvCSGEFENc7Y/o9yGKoe9tK/l+3yMPuKsR
XdebhBBCSJS43h/R70svDtuXz7rOZb/PZS2nMH5LCCGkGOJqf0S/D1HEod/X
rOk95sR+NzWi63qTEEIIiRLX+yP6fenFYftKtd/nspZTGL8lhBBSDHG1P6Lf
hyhUFx49Vdrn63jogQY3asTFTpblut4khBBCosT1/oh+X3px2L581nUu+30u
azmF8VtCCCHFEFf7I/p9iCIW/b4m9c2pA0vcLMtxvUkIIYREiev9Ef2+9OKw
fSXb73NYyymM3xJCCCmGuNof0e9DFMOmbzNHThZ2Pu/Ut18yDf/lZ+YX9e80
9/z8p170/3sb/MzLL+/5mWnU8H+a+37xj14aN/onL/f/8p/Mr+/7Z/Of/9N/
ML+69x/NA/f/3Dz46/peVDfqs5Kinrq+R6to/ryOmanz5Ojc2K2al+fR39xn
WrdobP7qv/wn89tHGpl2re43jz/6ay/tWjcxj7dpato/9oB5st0DpkPbB710
fPwh06n9w+apJ5qZzjfS5clHvHTt0Nz8ruNvTLdOLUz3p1qYpzv/1jzTpaWX
Z7u2Ms/9rrV5vtujpkf3NuaFp1t76flMG/Pic4956f18O9Onx+Ne+r7Q3vTv
+YSXAb2eNC+92MG83Lujl0F9O3kZ3O8p80r/zmbIgC5ehr3c1bw68Hdehg/q
ZkYM7u7l9SFPm5FDn/Hy+2HPmjdefc6MGv68GX0jY0b08DL2tRfMm6/3NONG
9jLjf9/LvPXGi+bt0b29TBjdx0wc09e8M7avmfRmPzNpXH8v744fYCa/9ZL3
Ok6b8LL5w8SBXt57Z5CZ/s5gM2PSYPPHd18xMycP8TJrylDz/tRh5oNpQ83s
PwwzH7433Hw0fYSXj//4Wnlmvm4+mTXSfPb+773Mm/2G+fzDUV7mfzTafDFn
jJeFH481iz5508uXn44ziz8bb5bMfcssmfeWWfr5216+nj/BLPtiolm+YJL5
ZuE7ZsWiSebbL9/1snLxZLNqyRSz+qsbWTrVfP/1tJv5g/nTsvfM2uXvmXXf
TDfrV8zwsuHbP5qNK2eaTcrqmWbLd7PM1u8/8PLDmtlm259mm+1rPzQ71n1k
dq6f42XXho/Nnk2feNm7+VOzb/NnXvZvmWsO/jDPy4/bPzeHts/3ztWu6Jiu
io71cGzPIm9MSNFnf30eUk4f/Mqc+XGpl3N//tqUHV7m5fzh5ebCkW/MxaPf
mEvHVpjLx7/1cuXESnP15Cpz7dQqc/306oLv+wghlcd1/4N+X3px2L581nUu
+32q3bRfc/b7w/gtIYSQIoir/RH9PkRRDP2+sKgfob6E+hPqU9iehfoX6mOo
n6G+hvobTX51tzm0Y77f+1C9aHsi+t2yvRL1TdQ/sb0U21tRn0X9FvVd1E/c
snqW35NRf8b2atS3sT0c9XPU11F/R30e2/NR/0d9IPWD1BdSf8j2itQ3Uv9I
fST1k2xvSX0m9ZvUd1L/yfai1JdSf0p9KvWr1LeyPSz1s9TXUn9LfS7b81L/
y/bC1BezPTL1y2zvTH009dNsb8322tR3U/9NfThFfTnbo1O/Tn07RX0829NT
f099PvX71PezPUD1A9UXVH9QfULbM1T/UH1E9RPVV1R/0fYa1XdU/1F9SPUj
bW9SfUrbs1T/0vYy1de0PU71O9X3tD1Q2xNVf1R9UtszVf/U9lLVV7U9VvVb
be9VfVj1Y9WXVX/W9mrVt1X/Vn1c9XPV17U9XvV71fdV/1d9YNsTVn9YfWL1
i72+se0ht7rfPNbyftPmt/d7fWb1m23vWX1o9aPVl1Z/2vaq1be2PWz1AWxv
W31u/Q4o6n+rD2574rZHrn65+ua2h57cW1e/Pay3/qt770rordvHadq4vt9f
D/bWNX5l++vB3nqwv25769p2Jay3rlRlb73Xs+G99X4peusD+4T31oe+FN5b
f+2V8N76qBS9dSWst66E9daVXHvrc2aE99bnfvCG318P9tYXzBnr99cTeuuB
/nqwt27768m9ddtfr6re+u6NH4f21g9sDe+tH975RYre+pehvfWzh5aG9taV
sN66ErWuc93/oN+XXhy2r5T7ffodc/b5ynG/nBBCCIkSV/sj+n2Iolj7fdlE
vQd9BnOxLNf1JiHFHttbV8J664rtrSv6LqF+38J66+qRhPXW1VNJ7q0r6sGE
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
GXq8k0WLFqU9JrKic6IFde/evUKdF/y5fv36CT1CALnTPNp8zPGN69zdMPT7
ACA7HDcGAAAgv3r16uXXP/Y7d5Z6b3Xq1PGvv3btmnf5119/nVG/b9CgQQnL
0/FShg0bVqHPp2Oq6HLNKwbgnjfHd+iHptGDQ6tkjq+WqWXrMeI2dzdMvvt9
//aN9vT7AJQsjhsDAACQf6rBTp48aS5eDP+Mbq9Pns+bC/X99L3C7777zpvP
CyA/vDm+T4437e593mz5P27Puc+nZWhZWmZc5+6GyXe/79+Me4x+H4CSxXFj
AAAAAKDqeXN8m71uhv7DI5Hm+Oo+uq+WEfe5u2EK1e+rTj1VAPHAcWMAAAAA
IH+8Ob7DPjL/+MBwM+e//kPGvT7dVvfRfavD3N0w9PsAIDMcNwYAAAAA8s+f
49uoR6VzfL25uzduU93m7oah3wcAmeG4MQAAAABQOB8t2ujNzx1Wt3nCHF/9
X5fpOt0G9PsAAAAAAABQGjQ/d+iYef4cXzt3V5dV17m7Yej3AQAAAAAAoJRs
2XXEtP3dRC/6PxLZfl+Nl7qa/+d3L5qaHftlnb9+fKC3jGxCvw8AAAAAAABw
T323+u3Hmwd7TDIP9XjXNOs5xTziZar5Tc9ppsWN/LbXH0yrXu+ZR1+cblq/
OMO06f1H07bPTC/qF0bJwcOnC73pAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAKqZ69evE0IIIYQQQgghhBBSbRJ3P/nJTwghhBBC
CCGEEEIIqVaJs7hvHwAAAAAAABAU935Y3LcPAAAAAAAACIp7Pyzu2wcAAAAA
AAAExb0fFvftAwAAAAAAAILi3g+L+/YBAAAAAAAAQXHvh8V9+wAAAAAAAICg
uPfD4r59AAAAAAAAQFDc+2Fx3z4AAAAAAAAgKO79sLhvHwAAAAAAABAU935Y
3LcPAAAAAAAACIp7Pyzu2weg+rp69apZtWqVWbFihbly5UqhVwcAAAAFRn0I
wIp7Pyzu2weUqtOnT5tNmzZ5uXDhQsb3Uw2zZcsWs2/fvkiPW1ZWZs6ePZvR
bQ8fPmzWrFljdu7cWZT1kp4H/Y1TVNMBAACUMurD3FEfArDi3g+L+/YBpWb2
7Nnmrrvu8usQm7vvvtts2LAh5f2+/fZbc99995nbbrvNv0+NGjVMq1atzKlT
p9I+7rVr10zDhg39+9apUyf0didOnDAvvPBCwuPYdO7c2Rw6dCjytru2efNm
f92WL19e6NUBAACIhPrQHepDAFbc+2Fx3z6glIwYMaJCjZQcjUkmW7p0aaX3
qVu3rjl27Filjz116tSE+6gWTHbx4kVzxx13JNzu9ttvT/hZdWA2481ViXoO
AACUOupDt6gPAVhx74fFffuAUqLxT/1OtmnTxnz99dfeWKjGZe+8806/Lmnc
uHHCfTSvI1iDLViwwKunzp07Z55++mn/Ov0/FY3v6r7p6rnRo0f71z/zzDPm
wIED3uV6rCeeeMK/btq0aW6fmIio5wAAQKmjPnSL+hCAFfd+WNy3Dygla9eu
9ZJMdZ2tSzRPImjy5Mn+dV9++WXCdZqDUa9ePb8+S3UMleeee84fi+3SpUvK
eq5Fixb+Y505cybhuvPnz/vX9ejRI9tNrxLUcwAAoNRRH7pFfQjAins/LO7b
B8SF5lzY2iQ4H0LHbdFltWrVCr3fpEmT/Pt99dVXFa7X8Z7t9R988IHp1atX
ynpOY8e6rmbNmhWu2717t7+cQYMGZbVtc+bM8caXGzRo4B0jRvWg1ivZ9evX
zccff2z69OnjHYtGt+/evbtX016+fLnC7VPVcz/++KM3Vq7a9fjx4xXut3Hj
RtOpUydvjDpYA+vYNLqP1lXHvdby+/fv770GTZo08ca37Wuj+02YMMFbz/r1
63vbtG7dugqPlbzM7du3m8GDB3vPw8MPP2yGDh3q3SaMamg9ZsuWLb26XY+l
+xbTMXIAAEDVoT6kPkxGfQhkLu79sLhvHxAXqtdsbRJkL+vatWvo/VRD2Nuo
7kmmWkPXqTaSyuq5AQMG+Mt66623Eq4Lzg1ZtWpVRtt08uRJ07Rp05THlZk+
fbp/26NHj/r1ZFh03Jht27YlLD9VPadzsdnLw2osPa69XvNhwpanOSlh66E6
TOels+PmyVm4cGHKdZwxY0boffTaHzx4MOF+qvGC74lg9JoCAID4oz6kPgyi
PgSyE/d+WNy3D4iDnTt3+vtqjdFZZ8+e9S8fNWpU6H2Dx2/R8Z6DZs2a5V+n
ukIqq+d0TOfgcVw0drp3715v/DBdXRlGt7X3U62mseY333zTr4V0nBoreE46
jWvqthMnTkyoB3UsaI2BWlVZz9no/HZvvPGGN6adfJ0u01i2nqfgOmocurJl
Pvjgg964bPB8eFpGkMaD7XVTpkzxtuOTTz7xxpE1ngwAAOKN+pD6kPoQyE3c
+2Fx3z4gDuxxmu0Yn7Vr1y7/ctU3YXSMFnsb1WqWjqFsa7Pg8VQqq+dk69at
obWLovFdPV4mtBx7v9atWyfcT/WOtuf999/3fv7000/92/bt27fCsp5//nn/
+uCYb1XXc3PnzvWvU10bvE41qeptK1h/BceZk5c5e/Zs/zrN+bDzdJKPy2Nr
3g4dOlRY/2BNCwAA4on6kPqQ+hDITdz7YXHfPqDUrVy5MqFGCO6r16xZE1rH
JLO30fFGLNVFtm4L1izp6jmZN29eaD2nGizTeu7tt9/276farjLNmzf3a5qy
srIK12vugl1W27Zt/cursp4Lq5/tsXJ0XOvg/URzWOx9lyxZErrMd955p8Iy
NTZsrw8el0fjtHaMmOOxAABQvVAfUh9SHwK5i3s/LO7bB5Qy7adVG9j9uZ1T
YWkc0F6n+igVe5t+/fp5P+uYv/YyHWckqLJ6TrVk8DgstWvXNt26dUuo6Zo1
a+YdJzgdO56ZPC4ZRsde0W01TyMVW0up5rWqsp4LO5+bxqGT18Hat2+ff18d
UzrTZWoM216v40hbU6dO9S/Xc6jXds+ePSmfHwAAEA/Uh+WoD6kPgVzFvR8W
9+0DSpXGKYPnXAt+j9/S8VLs9cOHDw9djuZl2NvomB9ij2miuiN4rBCprJ7r
2bOnv6zevXv75yY7cOCAf1xnJflYImHsOuh4Jelksly7vOC54fJdz7Vv3z5l
PadaLEo9pzkh9vrkYzLr2C/JY+g6po3eFwAAIH6oD2+hPqQ+BHIV935Y3LcP
KEWXLl1KONeYrcOSqZ6yt9G4aphgvTBz5syE+2QSjQ1qvFfnFLOXtWvXLnSd
7Tirkm4Mt0WLFhXqr1S0Drqt6qVUdJxq3UY1cNi2p6rnNOclWanUc6JxYdXW
9jlS9Dro9QAAAPFBfZiI+pD6EMhV3Pthcd8+oNSo3rK1jhI8hnIYe2zkWrVq
hV4fPA7Kli1bsq7nlA0bNpiFCxf6Py9YsCD0sV577TX/Njt27Kh0vVWDZFr7
2WMP33nnnaHX65gwdl6LzodmpaqVNGZrL9d2JdMcllKp5yyN06vOtrf96quv
Ut4WAACUFurDiqgPqQ+BXMW9Hxb37QNKieZOPPHEE/4+Wcc+SadPnz7+7ZPn
Hqh2s2OqwXHN/fv3e8dADot9fM3X0M+2Lvv666/9x5k8eXLouthjPCuqLyqj
Zdjbhh3bWMem+f77773/6xxjqbZRgudnGzdunH95qlpJy7aXDxkyJGFZGg8N
nl+uVOq55Mew564DAACljfrwFurDctSHgBtx74fFffuAUtK/f39/f6z6a/36
9Wbjxo0VorkTVnAsUmOYa9eu9cYzdU6y4Hje+PHjM1qHVMdnOXPmjL8sXaf6
zlId+tFHHyWsezpnz5715xjoX9U4mmOgOlD1nS7TOLZo3Dn42JpvoVpVt1ct
Z5ej7b948aL/GKlqJR1XWsuxj63rLl++bObPn59w/Otiref0HKlO1/na7Ni3
XoORI0dWWvcCAIDSQ31IfZiM+hBwI+79sLhvH1BKbI2RLg0aNEi438svv1zp
7TX+qRomE5Udj3nMmDEJy9VtdDzl4LFBlE2bNmX0WBMnTky73lZwfkdYtA7J
cy8qq5V0zJtUywoeB7sY67njx48nrK9qu2Ad2rBhw4xfbwBwQX9z9Dk7VQBE
R31IfZiM+hBwI+79sLhvH1BKgsczriw6VnOysWPHmtq1ayfcTrXW4MGDK5xj
rTIDBgzw7pvqOMk6D1yw3glG460ac86GxkyD8yNsbaa6MnnOh8aIdRyasOdj
z549FZat40jb23z33XcJ1+k50TnrkuvTN954I+F+wXWobHnSuXNn7zqdiy7Z
0aNH/ftqmzNdZvC4OEeOHPEvHzZsWGj9rzk+GrsHgKqk745ofpz2B8mf6cOi
+X8AoqE+pD5MRn0IuBH3fljctw+objTeqHOKnTp1KtL9Ndfj5MmT3vyFyqjO
0ec31SAaV8x1vFCPqWVpmem+C1JWVubNR9i5c6e3vunWU3NDUtH9VVNt27Yt
4XLdR4+TzfL0HGg7Uq2/lqd5L9muo+4Tti6qSXft2mVWrVrlbUNwrgoAVBX9
3Xz44Ycz6j/Y2ONtASgM6sOK60l9CCDu/bBcto+5GwAAII7OX7hkDh87bS5f
qfwzYyb02etc2UVTdv6SgzXL3LVrNz7z7Ttidu8/ai5crPwzejaC88j0fZvu
3bt7333RMaPComNupTvPJgAAQL7R77uFuRsAACDO1CN7e/oSc9vfdjA/+as2
pku/aTkvs+Gjw71lKYPHfFrpbU+eLjO3/7Sbf3sbrU+9hwaa0ZMXer3DVNRb
nDDjK3NPy1f9bbDResxbnPux2u28Ph0XKnh+AAAAgFJCv68cczcAAECcbd15
yNz18OCEHlnH3pNzWqa+Wxdcnnp56immsmn7wQq9vuTUvqeX2f/j8Qr3PXHq
nHmw4+i09x/x9uc5bZM9FlWXLl1yWg4AAEAh0e8rx9wNAAAQV/reXFhvLNd+
35A3P6uwzK9Wpp7/EOz3jX9vsdm594jZfOOyj75Yk9CL/FXb1xPupx7iP9w/
wL/+jl/1MzM+WWm27zlstu3+s5k1b7X3/UBd17zLmzlt0/Tp0716UOcQAAAA
KFX0+8oxdwMAAMRVjf/R1euFtew23hz880n/51z7fX/98xe85bR7fqLfi+vw
YuplBvt9Hy1Yk3Cdjv8X7Onp2HzWzM9W+Zc3bjfSlIXM+dVc36kffmOm3Ugu
dC5Ie1yXqVOn5rQsAACAQqHfV465GwAAIK5eGfup+XrlD/7PLvp9363f7ffg
vv3TTu97dfZYfDofSJjK+n0y8p0v/OvnL93gXXbp8hVT85+f9S/XeUaq2tdf
f+3P+5g4caLZsWNHyuhcmeo1AgAAFBP6feWYuwEAAKoLF/2+ZwbN8I/Zp36X
+ne2J/fBvO9C75Ou3/fenG/96xcu2+RdtnbzPv+ybi+9F3l9M6Xv9GVy3rZg
1q9fX+XrBQAAkA36feWYuwEAAKqLXPt9V65e88+P22fEbO+yCxcv+5f9uv3v
Q++Xrt/X45WZ/vX2nB3qHdrLPlm0NtL6ZmPUqFFZ9fqUtWurfr0AAACyQb/v
FuZuAPlz7tw5c+jQoUKvBqrIsWPHzKlTpwq9GgBSyLXfp7m2tge3bss+//In
er7rX37kxNkK96us37ds9Tb/Os3ftXXW0PG3zgmi7/pVNf39Wrx4ccZZsmSJ
uXLlSpWvF1AdUB/GG/UhkF/0+8oxdwO50ueSL7/80rz00ktm8ODBZtWqVRVu
s2jRIjNo0CAzduxYr2cc5tNPPzUjR45MqHUuX75sZs6cafr372+GDh1qNm7c
mPP6lpWVmffee8/06dPHvPbaa2b37t0J12/atMkMHz7ce8w5c+Y472+/+uqr
platWk6XiURnzpwxU6ZMMf369TMjRowwBw4cqHCbsPebC40aNfKOiwqgOOXa
72vV/S3v/jpfR9Ci5ZsTzr+bLNjva9vjHfPGuwtMv9c/9L4PGDzH74o1O/z7
6Pwf9vJDR/iciNJCfZgd6sOqR30IVB/0+8oxdwO5Ug2n90WDBg288zzr/7Nn
z/av7927t3dZ06ZNTZ06dbz+cnJdpp/t+0vfGbC0b9Tt27RpY+6++27v+hUr
VuS0vlrPmjVrmlatWpkaNWp4y9y3r/x7E0uXLvV+vvPOO71jWur/3bt3z+nx
klHPVS19XtDrqvdiu3btvPeQvrcclOr95gL1HFDccun3nTl3we+/DR7zacJ1
mudrl31nk5cr3DfY7wuLvteXPGf3+SG35vhuvnF/oJRQH2aH+rBqUR8C1Qv9
vnLM3UCuVF/9+OOP3v/Pnj3r1V9NmjTxfj548KD3XtRYmly8eNGrpTp06JCw
jPr165vGjRsn7F/tfTXWKlevXvX206oPc6Gazb6HN2/e7D3GpEmTvJ/37Nlj
1qwpn2elcVu7TpWN4WqM+cSJE6HX6fLk35fkeu7atWsJ1yf/bB9bY5J6/iz9
fOHChdDbysmTJzMaez5+/Li3DWHroMfQaxqk24bNRwhb7+Dj2+vPnz/vLTeZ
nqfDhw+nXOd0z5OleqpevXreOH0qYe+3VDS/RglbHz13YY8frOcqW+/gtmpZ
eo9b+tsc/Dl4X90v1XtOr3vY+iYvI9XrIHottJxU99W6Jb9ngvL1nrL/132D
vxtAZXLp90378Bu//9a1/x/M6MkLExI8l+72PYcT7hvs993dfIhp8+wE07nv
VPP6xPlen0/HAEw2YcZXFc7Zmy/6O7J9+3azcuXKlNH3tZL/TgEW9SH1Yar1
pj6kPky+L/UhXKPfB1QNjdHed9993v9VJ+m9GNy3Pvfcc15NZ82aNcurATVP
Irh/1f5KP/ft29f7edu2bd7PkydX/Iym79xv2LChQk6fPl3puqp2Sx5vDnrm
mWdS1nOqpZ544gl/HFDjvfa7/5pjYseGFdWv9jkI1nP22JnBfbPGHceNG+f9
X/NJVJu0aNHCX5bOqf3000/7Pw8ZMsS/r2oUrVPdunW96/S86jHCLFiwIGEd
7Ri86P+qSfSvbiNHjx41Dz74oH9bvYbq/4v2/7pMcyAsjZ02a9bM+//q1au9
6zWnx95f7xFbT4wePdq/XI+XXCfpZ12nOTSi+RfaNvs5wdI6Jq9HslTvt2R7
9+71vzOg6DXQ+0Dbar+TYJ9jrb8VrOc0Ryl47vNdu3Z597HfX9Dr1b59e/+7
Atr2r776yjRs2NBf9sKFC/372+fAvm66n/0spX/t664MGzaswjalex1UV+n3
016n9+l3332XcN8uXbp4/+r7D8ny+Z7S74ZeH/1s79+zZ8+Urztg5dLva/jo
8Eq/oxfMwFEfJ9w33fk6wug8vfY+L70xJ+v1jULfgXn44YcznvOxbt26vKwX
Sh/1IfWhUB9SH1IfIh/02sdZ3LcPxUnfBdB7T8fEkFdeecX/223ZfbdonEnX
jxkzxhsTSt6/6nguuiw4byPs+6V2P5Gc5P29aNxKNaH2d6qdtL8JG/vRvk37
F1ubJtP99RiaC6DPR9oP6nOPYveZGoPWMV70s+a1SLCe075L1wXrF/t82Nva
fafGmrUu+lk1nmrR559/3vtZ+0XR82RrvK1bt3rzTrSPD6PH6dGjh1fzduvW
zbufrQ3s86c61+5f9flPz4f276pLNP9Gr4nG+fRc6fYff3zr861eK91Hvv32
W7/+0PEA5s6d6z8nqnP1f9X+Wo6uCxt/tM+3tkvL1bKS3wvLly/3btO2bVvv
OdJtNN/GjkWme78F6bnU66QaReusek7jqfY9qedGr+/AgQO9n5ctW+bfz9Zz
eg/o841lfz/s52P7eun3RZfZWkj1/5YtW7x6JXj/4Oui79bo+e/Vq5d33YAB
A7zXR2Oj+/fv976nkKyy10G0bVqmajcdt0j1ppapcVR7Xz0n2tbvv/++oO+p
4O+GziWl93zwdQBSidrvO/jnk37v7a6HB5tOfaaExp6nN3jeDYnS79Mx++x9
tNxzZVX7PQX1FvQ7mWmvj34fMkV9SH1oUR9SH1IfIh/i3g+Lsn3M3UAutG/V
uJNqJLs/1jiXfg7S2KR9f2psVvsr3Tds/6qaRfe355TRfjJ5jkK2VPuoLlKt
o2Vqn5l8TGZ5+eWXK/0so/trf5fMbnPwu+baD9m6Ktt6Tsuyv3PaF+r2mtcg
tj6wY2yqD1q3bu0v6+233w79W6DnUJd/9NFH3s+qWfSzHcfT/zU+Zun11GU6
v4+lfagumzdvXsb1nNbX0nV67vXa6/XVOJzqo1T0GLVr1/aPAWTn1QRpXXSd
lvX+++97269lq76TdO83y9aYwefA0uuucURLr7PWyY4dZlvPBV8v1Z7aRtsj
sN9/sGzda6nG1PinvP766/5rmupvdGWvg9x1113ez/ZziepM3V7j5fa+qvXC
5Ps9lfy7oX/1Wuv3FqhM1H7fyHe+8HtvG3+oeIx3K3jMvW//dOv8A1H6ffL0
wOkJ5/m4dDn8mCqaEzzuD4szXm4Y/T7az17an+v7Lqr99PkvLPo7kWruHGBR
H5ajPry1zdSH1IfUh6hq9PtuYe4GXLDjNcH9rM5jpr+xQfo7rJrFHn9FY5Aa
R5oxY4b3s/4e6++6/duu8SDtf7V/0LKSj+0i2te88847FRLcb4XRmFHweDKW
agE99oQJE1LeV9ug/XUyjSfZ76hbGluzdW229VzwWC52H2nrZfscavsl+dgg
9jkNozE8LVuvkf6vfbml++hznmXnymh81LL7W+2PM63n7FieqHaxtY7O36d1
0W00f+HSpUuh6/zWW2/549dhtJzkekXvHz336d5vQXZ77ThjkF4ffS8hSM+d
rfGyreeCr5fOCah60dK8n+R6Lvi6dOzY0f9+gb6X0KlTJ+822t6wdU/3OtjP
TvrZxs5DCrtvsny+p8KOa65aWHOsgKCy85fM8ZPn/Nh+X4vfjfMvO332fNrl
1Lm3j3e/2vf0qvR2azbuSTjGnxW133fkxNmEecL1HhpoZn62ymzdechs2/1n
M/vz78w9LV/1rmvcbmTGyw1j9+P63WVsF65QH5ajPixHfUh9SH2IfKDfV465
G3BB9YreG6o3guz+KDg+2rx5c2+cV8fH0HvPxo7LaX+psSg7ryO4b9e+L3hs
F2vkyJHeMXaTo3GgdLQ/DO5zbc2kbaqM7hN2nq3k48+I9kO2Bgnuh+z8Ah0L
ROxYpqt6LrkesOzYpWodjR9qzkHwGDHJ+157rBwdG8aytcmiRYu8MUz93x47
W7TfTa7nNLZgqYbW+loas9S+O3k5lrZZ7xF7DJL58+dXuI3mciRfp9dDz2G6
91uQPR5M8Dmw9LoHP1No27UMe+yY4GugOQTB7y/YuTyu6jnVb8nziTS2r+8V
JH9vQtK9DnrsVOeOS1fP5fs9Zcdv7fckVP/pd0eXA0Hqj2VyvD31BVPZ8MMB
/3avjE19/Cfrr3/+gj8H134fL2q/T1as2WFu/2m3rI8ZmC19vtPvXfA7KkAu
qA9voT4sR31IfUh9iHyg31eOuRvIlZ1/oXkKGru1UW2i4zToOn2vfN++fd53
uVPtr5O/P2/nJmgsSPsofU9cf791DIeodOwKfY7ROeO0TLs++owjOuaEftb3
14PbEnYuKu23tP/QvkfjwFqG6jMdP1fL0H5F4172MTT2KMEazdZjOsaGxrPs
sWWrup7T9+91ufblet1Ud6j2tb/bYbWM6lGty/r1673609YMdv6MrtO4tZ4L
He9Dywg7PoueT3vMGm2nlqU5CHpt7Jh92PtDz7fqJp1rS+utmiz5HGtaf12u
10/HKNGxOvQahR2nN93xWbSuqt1UB2qd9Zja1n79+nn30xiwXl/7WcYeYzn4
GtjvAWh79f61Y9RVUc/pWEQ6Brk+/+i9WFk9F/Y6iI4fredL4+DaVr2Wtt5K
V8/l+z1lj8+iz0r63VE9zXgUwtRvMTTnft+kWV+nPO9umGHj5/q3V59PdL9c
zrV76sx57/uC+n5h8rr/uv3vzaLlm7NeZjJ7zCb9HUh1jkcgU9SH1IdCfUh9
SH2IQqDfV465G8iVPUZwcvQ3VjSWZo8zq32FHedKZsdzdP4p0fvRftfARu9T
O9YZhcZ4tL8JLlNjTfYYEvZ4FMnR3I+w9Q1uu8YV7fFF7LGDbbR/s8cO1mME
a7TgubC0LqohdFzcsNvaWtHWMdq36mcdV9O+Fl27dvVvr/1n2N8Crbv2m3ou
VCfZOtKey03//+CDDxLuo7E1e0wbResZ3HfaY6PY50I1fHI9p1rc3kbzWrTf
1utpx1JtPaC5B0H2u/22trDnMRs6dGiFbVNNHTwHmI7NEnZ85+T3WzLVGLb+
Ulq2bOnVJqo7te72cj2W6i4r+BroON/B94g9drOWHfZ6qVYMzkWx9aCV/Lqo
FrTHCLJ1pv09CzsHXWWvg+h9pc87wfeuXkfRe0w/23MMhj2f+XxPqZ7Tdupv
gr1N8jg84Iq+X6J+24WLlzO+j+YIJ59fQz1FF+fc0HLUR9z/4/GUx/OLQtup
vyn2c1/yuTCBbFAfUh8K9aGp8BpQH1IfouqF/Y2Lk0y3j7kbyBd9bkj33dCw
86CpDlKdlDxWlwvVC1pm2LncsqVa0J7/LEjbqn1fch9dl6uuTF4fjXWLrrPP
U9htk49dEnzOtD3Bx9Nnt7Bjndjj/Abvq7FEu6/UfYLnlUzeXo2hhtHj2++E
aD3s8xsc+9P1yfWVHuvIkSP+cxAm+b2h5yXVGIV97pOfu3TLDKP1VQ2XTM+R
1jlZ8msg2i77OgRfj+Tbar2D78nk1y/5dQk+x6LnVd9LSHc85lSvg6XnTb8f
ycc+r+z5yvd7KvjdBr3WLn6XAZT/vbLHedG/dp5UWPS5LezvIJAN6sNbl1Mf
Uh+G3Zb6sCLqQ6RDv68cczeA6sceF0bjh/qOvh2zs+fOci2TY/mi6lXl65Dv
91TY8ZgB5M7Ofco09vyfAEof9WH1RH2IOKLfV465G0D1pOOF6HOd5vTrO/XB
8+a5pmOl6LvEYeOgyJ+qfh3y+Z7S+eXsXBAAbuiYVsFenuZg6dwG+pyWKqnm
cAEoTdSH1Q/1IeKIft8tzN0AAACo3nRuANvr0/yPVHOsAAAAihn9vluYuwEA
AFC9dejQwavz9C8AAECpot9XjrkbAAAAsMdV13kNAQAAShX9vnLM3QAAAIDG
c3X+NtWEs2bNKvTqAAAAREK/rxxzNwAAACCLFy/2x4H1fb8dO3akzM6dOxkn
BgAARYd+XznmbgAAAGDq1Kn+9/syzfr16wu92gAAAAno95Vj7gYAAABGjRqV
Va9PWbt2baFXGwAAIAH9vluYuwEAAFC9HTt2zKsJM82SJUvMlStXCr3aAAAA
Cej3lWPuBgAAAAAAAOKAfl855m4AAAAAAAAgDuj3lWPuBgAAAM6cOWPWrFmT
Va5evVro1QYAAEhAvw8AAAAoN2bMmKznfKxbt67Qqw0AAJAg7v2wuG8fAAAA
3Bk9enTW/b4tW7YUerUBAAASxL0flun2MXcDAAAAp06dMqtXr640LVq08GrM
mjVrmqNHjxZ6lQEAACqg31eOuRsAAADIhI7h3KxZM68ebNy4caFXBwAAoAL6
feWYuwEAAIBMHTp0yK8J9X8AAIBiQr+vHHM3AAAAkI1atWp5teHs2bMLvSoA
AAAJ6PdljrkbAAAAkLVr1/rf71u0aFGhVwcAACAB/b7sMHcDAAAgvg4ePGg+
+OCD0Lz//vvm7bffNt26dUs4xsuxY8cKvdoAAAAJ6Pdlj7kbAAAA8TRq1Kis
juc8aNCgQq8yAABABfT7ssPcDQAAgPgaP358Rn2+unXrmqlTp5rr168XepWL
zherD5vNe84UejUAAKjW6PeVY+4GAAAAdLxmnZctVU6fPl3oVSxa81b+2bQc
uNo0eHqZWb7xeKFXBwCAonbuwtUqXT79vnLM3cgeY7cAAADV26Ur18zspQdN
8wGrvD6fDf0+AAAqp33nO3P3mLPnq6bvR7+vHHM3MsfYLQAAmavqsVugEMou
XjXTF+03D/VdmdDno98HAEBmft1rhbfP1L9T5u8z5y+6rRnp95Vj7kblGLsF
ACCaqh67RXR79+41O3bsyCk7d+6sduPAfz5x0bR4eXVon89m0NStZvLne0kW
0Wc9ZeoX5ZmmLNhn/rBgv3lv4X4z3WbRfjNj0QHzxy8PmJmLb2XWkoPm/Rv5
4KtbUf3+4dIfzYdf/2g+WvajmXMzHy8/5OWTbw6ZT2/ksxW3MvfbP3vj+5+v
PGw+X1We+TeiuT3Kwu+O+Pny+yNm0ZojZvGao16W/Olm1h41X609ZpauO2a+
tll/zCzbcNwsV258hvjmZlZsOm6+3XTCfLvlhFm5+YRZtaU8q7ee9PLdDyfN
9zeyZtspP3/afsqsU3acNut2lmf9jWzYVZ6Nu8942XQjmo+kbNl71mzdV54f
lP1nzbb958yOYA6eMztvZNePZWbXoTKz+2b2/LnM7P3zebP38Hmz70b2HynP
gSMXvBw8dsH8qBy/6Ee/J4eVk+U5cvKSOXrqsjl2+pKX42cuezlxIyfPlufU
uSvm9M2cLbtizpy/4u07NG5ko167egIXLl3zcvHydS/6vAagtNh+n03TF7/1
/r7rd9sF+n2oDGO3AADkpqrHbhHNiRMnsjqWS2VZv359oTcn79SHmPDpHvPL
578JrRHVl1pnezIkbdS/sr0s9bbU47L9LmXVzV6YemJeNp3w+mTql6keX36z
j6Z+mvpq6q+p16aem6L+m/pwti+nHp2ifp3t3dl+njL/Zp9PPT/1/hT1AW1P
UD3CT27G9g7VR1RPUb1FL0t/9PqNtvf4/s1+pPqStkepnqU+2yr6zKH3jXqb
6nGq1+nlZv/T9kMV9UffnbfXTFLm7vXGVCZ+tsdMsLnx3nz7093mrU92m/Ef
B/LRLvPmnF1m7Ee3MubDXWb0hzvN6Nk7zagPdpo3bub37+/wMnLWDvP6jbw2
c7ufEX/cbobP2G5enbHNvDq9PMNuZOh75Rny3g/mlWnlGaxM/cHrgQ+cstW8
bDN5q3lp8hYz4N0tpr/NpC2m3zubTV9l4mbT52Z6T9hsek3YZF58e5PpeSMv
vFWenuM3enl+XHmee3ODn2fHbjDPKGM2mKdHr/fSPSndRpWnKi9PvizV5cX4
mPZ503Oo51LPafA5ts+7fR0U73V5u/y10mum6PXT66jXVK9tv5vR663XXe8B
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
dPq+f/3j80r94f8z//fflfrDv99jqv+R/pD+kP4QANKL5lyWgO8LTtTOLxOu
75N6I3VH6o/UIVeTpD5JnZJ6JXXL1TCpZ9IXSG8jdc7VPKl/rhZKXZT66Gql
q51SR6WeutoqdXbSqB63eqtXbP11tVjqsqvRUq+lbkv9ljruarrUd6nzUu+l
7kv9d72A9AXSH0ifIP2C6x2kj5B+QvoK6S9cryF9h/Qf0odIPyJ9ietRpF+R
vkX6F+ljXE8j/Y3rdaTvcT2Q9EOuN5I+Sfol1zu5Xkr+/qS/kj5LkL7L9WDS
j0lfJkif5no26d+kj5N+Tvo61+NJvyd9n/R/0ge6nlD6Q+kTpV+UvlH6R9dL
Sl8p/aX0mdJvut5T+lDXk8pnmutVpW91Paz0s/Jv73pc1/NK/yt9sOuJpT92
vbL0za6Hln7a9dbSZ0u/LX239N+uF5e+XPpz6dOlX5e+3fXw0s9LXy/9vfT5
rueX/l/GATIesOOCW+MDO0Z4oXjcIOMHGUfIeMKNLWScIeMNGXfI+MONRWRc
4sYoMl6RcYvwZN37Y2MaGd/IOMeNedwYSMZDMi5yYyTv2EnGU35jp8ceruk7
dqr/ePH7esdODeo/GBs/xY+d4sdP8WMnQf4uYn8vv42dhIocO3V433/s1CVg
7PRRJ/+xk1xz5Td2GtDbf+w0JGDsJPiNnQS/sZNQ3rHT3On+Y6eFMwfHxk/x
Yye5xsyNn0qMneLGT/FjJzd+8o6d3PiposZOR7+d5zt2+nGf/9jp5OGlAWOn
Fb5jp/MnVvuOnQS/sZNQ3v5Lc/4W30eSTaZd3xemP5TPQPns1ugP5fO3U9tX
6Q/pD+kP6Q/pD+kP09ofyr+H/Fzh+yo+UTu/TPB96f6Z1/blAJmKGzsJfmMn
wTt2kpomtc07dpIa6Dd2kprpN3aSGutqbvzYSWqy39hJ8Bs77Q4YOwkVOXaS
Hsdv7CQ9kd/YSXoov7GT9Fx+Yyfp0fzGToLf2EnwGzsJfmMnwTt2kl7Ub+wk
vavf2El6Xb+xU5e48VP82El6aTd+ih87CX5jJ8Fv7CRU5NhJxiZ+YycZy/iN
nWTs4zd2krGS39hJ8Bs7Cd6xk7t2vbxjJ/n9xPeRZJNpvi8M8nksn28a+5LP
d/mcTHftBqho6A/pD+kPM70/lGvX71bpD+V3Ht8XnKidX7b6Ps0eTD6XNX05
AADc2cSPnWR+12/sJPPB3rGTu3bdb+wk+I6dbuEdO8l74vtIsomK75Mxq9a+
tNwhAABA2P5QfLC4Vo3+UI4D3xecqJ1ftvo+zX6O+VsAAMgENOsRvo8kG82e
sKioyOTm5ppp06Yl9HqtHlGuo5FrVTT2pdlrAgAAhEW7HuH7ghO188tW3yfX
RjN/CwAAUUKzHuH7MicLFy40NWvWNA888EC6D6XMaPWEBw8eNDk5ObZnlmfU
JRI13zdjgL1Plsq+FN0hAABAWLTrEb4vOFE7v2z1fczfAgBA1NCsR/i+zEmL
Fi1s/1i9evV0H0qZ0eoJ5TxbtWplGjZsmBbfJ/ej0tqXljsEAAAIi3Y9wvcF
J2rnl7W+j/lbAACIGJr1CN+XOWnZsmVS17qlK1o94YULF+x/5bxT7fvkPvhD
FX2fljsEAAAIi3Y9wvcFJ9Hzu9PWbiQSTd8nzzZi/hYAAKKEZj3C92VOvv76
a9s/CsOGDUv34QRGuydMl++TZ09q7UvLHQIAAIRFux7h+4KT6PlFee1Gsvdg
dtH0fczfAgBA1NCsR/i+zMrw4cNjzq9Zs2Zm37595tChQ74cPnzY9lqpThR8
nzzjWtP3ae0LAAAgLNr1CN8XnETPL6prN8Lcg9lF2/dp/cxrXisIAAAQFs16
hO/LnEyaNMlUqlQp5vsSYefOnSk/zij4vllT+pnPBnygsi9NdwgAABAW7XqE
7wtOoucX1bUbYe7B7KLp+zT7OeZvAQAgE9CsR/i+zMmQIUOScn3C9u3bU36c
UfB9Myf3NZ8P6qCyL81eEwAAICza9QjfF5xkzi+KazfC3IPZRdP3ST83fGB7
lX0xfwt3Krs355pdG2b4/vl64UazadVE8+O+RWk/ToA7Bc16hO/LnJw+fdqs
XLkyYVatWmWuX7+e8uPU8n0nTpyw60EaN25sqlWrZv+/oKCgzO/R6hG/mNRP
zfdpukOAOxn6TYDyoV2P8H3BSfT8or52IxN8H/O3AOE5cWhp7LPncsG6Un+W
3wv5/5z7/pT2YwW4U9CsR/g+kmy0fF+tWrVK9biyLqSsaPWIeRP7mhGf6vSH
mu4Q4E6FfhOg/GjXI3xfcBI9v6iv3Ui372P+FqB8nP1xlf3cqfxP/2jnVr1/
Xjb3M/vnBvUfTPuxAtwpaNYjfB9JNtrreZOJVo+YO6GPGTn4Q5V9abpDgDsV
+k2A8qNdj/B9wUn0/KK+diPdvk+zn2P+Fu5ULp5ca3utoD+fO/512o8R4E5C
sx7h+zIvZ86cMR999JGpXbu2qVKliqlcubJZu3Zt7Ot79uwxI0aMMAcOHEjL
8UXB980Y39uMGtpRZV+avSbAnQz9JkD50K5H+L7gRO38stn3afVzzN8CAEAm
oFmP8H2Zlc2bN/ve52Xo0KGx14wdO9Zuq1mzZlqOMQq+b/q4Xmb00E4q+9J0
hwAAAGHRrkf4vuBE7fyS7e3C3IPZRdP3MX8LAABRQ7Me4fsyJ2fPnjV33XVX
zPHJ/99zzz2lfN8vv/wSe438f6qTbt83YWR381DOPab23+81Dz9QzCMP3mvq
1P6LefShv5rHHq5pHq/zN0vdR/5mnnj0PlPvsVqm/uM55sm695unnsgxf/7j
v5v/+s//bZ5+8gG7PvDZJx8yDZ8u5rmna5vnG9SxNH72EfNCw2JefO5R06TR
46bp83XNS43rmldeqGteffEJk1Pzj6bmX/7TvNq0vmn20pPm9VeeNM1ffsrS
4tWnzZuvNbC0vMVbrz9rebt5Q/PuG40srd5sZFq3fN6891Zjy/tvv2DavNPE
tH33RdOuVVPzQesmlvbvNTUftnnJ0rHtK6ZTu1ctnT9oZrq2f83SrcPrpvuH
zU2Pji0sPTu/YenV5U3Tu2tL06fbW5a+3d82/T96x/Jxz3fNJ71aWQb0bm0G
9X3P8mm/983g/m3MkI/bWuQZQYLcO1SehSfXGAvyWSS9tiAOdcywzpaxn3U2
4z7vahk/opv9dxMmjepupoz5yDJ1bE8zbWwv618F+WwTZE5DrmOWexcI8owi
eS65MHf6ADNvxm/kDjQLvvjUsnDmYLNo1mCzePYQy9K5wyyyDvSreZ+Z5V8O
t6xcMMKsWjiymEUjzerFoyxrl44x+cvGWdZ9NdasXz7ObFgx3iLPiRA2f32L
1ZPMljWTLdvWTjXb84vZsW6a2bl+uuXbjblmt2Nzrtn7TZ7Zt2Wm2b91ljmw
rZiD22ebQzvmmMM751qOfjvPfLf7S8v3e+abH/YssMjzKY7vL+ang4vNiYNL
7L3tTh5eagqOLLOcOvqVOf3dcvPL9ytM4TFhpV0PK8g1cb/+tNpy4ec19po5
4dLJfHtfvCun1pmrp9eba79ssMj1dDfObDI3z24yRec2p73eAUDiaM5lCfi+
4CR7flFbuxHmHswumr6P+VsAAIgamvUI35c5mTNnju2X5Pq+b775xm4bN25c
Kd8nqV69ut0u93lJddLt++TnVjyE+AhB3IQ4CnEV4i3EXwjiMsRpiNsQz3H+
xOqY9xAfJe5KvIj4EfEkgjgTcSfiUMSniFexHFxiXYs4F/Evx/YujPmYobf2
06/H29bXHNk1L+ZvxOWI0xG3I55HfI8g7kcckLgg8ULy/FHnicQZiTsSj7Rl
zZSYVxLHJK5JnNPGlRNiHkqclLgpcVTiq9YsGR3zV+KyxGmJ31ox//OY7xL3
JQ5MXNiSOUNjfkxcmTgzcWdf5g2yLs15NXFs4trEu8lzE5yHEyfnHJ18Ljlv
Jw5PXJ44vcmje1jH53yfuD/rAYd3sU7Q+UHp1+VzTfyhXL/sfKK4Recah/7m
HgVxkeIkxU0O7NPaukrnLcVhisuUfxdxm85zivN0DvSjTm/EvKg4UudMu9xC
HKrzqeJWxbF2eP8l61ydfxUXK15WEEfrfK24W+dy32nxnHW7zvM69/tGs2es
C3ZeWByx+GLhlSb1rEcWxCmLXxbENYtzdv7ZOelGzzxsHbXz1eKvxWNb6uVY
vy2I6xbvLYgDFxfuvLh4ckGcubhz59HFqz94/58t8Y493q97Hbvz617HLsfi
jivescuxyzl4HXu8X/c6dvt39NvfV7xjl79T+bv1Onb5N5B/Cz/H7vy617HL
v7X8m3sdu/xsdPntZ8Xr2OVnys+xy8+g/Cx6Hbv8zMrPrp9jHxrg2OV3w8+x
W79+63fK69jld09+B/0cu/zO+jl2+R33dey3PhPksyHesbvPD/ks8XPs8tnj
59jls8rr2N3nmnzGxTt29zkon4l+jl0+Q72O3X3eeh27+3yWz+p4x+4+z+Wz
vZRj/60OeB27qxtex+7qjNSceMfu/LqfY3f1rLyOXf5d5edBq9/E9wUnmfNj
7UbJaPo++TzT+pnX9uUAAABh0KxH+L7MSbdu3WyvJ/O/LkG+r0GDBnZ7Xl5e
qg8zI3xfeZFxr4yNNfYl42cZa6f7cwGgIol37M6v+zl25za8jt25EK9jd37d
69idX/c6drn20Tkar2N3ft3r2J1f9zp259e9jj3er3sdu/PrXsfu/LrXscf7
9XjHHu/XvY7d+XWvYxcfJ17O69jj/brXscf8usexO7/udeziFcUveh17vF/3
Onbn172OXXyneE+vYxc/Kp7Uz7E7v+517OJhxcd6Hbt4W/G3fo695W/e1+vY
xQ+LJ/Y6dvHJ4pX9HLt4aD/HLt7az7GL5xbfHe/YnRMXP+7n2MWnex273zXs
gt817MIf/6v42nU/xx5/DXu8Y/e7hl2Q31N8X3ASPT/WbpSO1loNt17jT9Wq
lnuthl2vcd+fzN9q/CdrNVirwVoNAEgrmvO3+L7MSfPmzW2fN3HixNi2IN+X
k5Njt8+cOTPVhxkd33erd1Hbl5I7BAAAEJxjj7+GPd6xx1/D7hy79IYyhpex
oZ9jj7+GvYRjj7uG3Tl2eV98X3ASPT/WbpSO1loN+TkXPzVsQLtyr9UQNyNe
TOYsWKvBWg3WarBWg7UarNVI11oNQfN6Inzf7zl36pI5tPmEuXblRpmvO7Lt
pPn5yFn19x8yZIjt8+RZZy5+PeG5c+di60J27typfhy3SxR8n3xmqvo+pX0B
AACERbse4fuCk+j5sXajdDTX8zJ/C5A4rNVgrQZrNTJ/rYa8b/Xf1mukYq3G
iUNnzLalR83lC1fLfN2xPafN11P2mOXjd5n9G34yN28WKXYGZUeObW/+j2bF
uF32GH7YfbrM14uv27r4qPlxb8n1EsNbLDXv/sd4s3528L2Sz568aF/ToeZU
lWOPT35+fmwth+v1vD3h+fPn7f2Q3esuXryofhy3SxR8n5uf1NiXpjsEAAAI
i3Y9wvcFJ9HzY+1G6Wj6PhkPy1hYY1/M3wIAgCZh1mq4Zw0MH9Q+JWs1BjSe
b/1Wfu5+368fP1BoujyYZ18TT8ec6ebUsV8rok0okQVDt5hW1SaUen/xeX7Z
tfKH2Gva1ZhS4mvp9n0SN7cryP1d3D1epAd8+eWXS9zvuWfPnhVyDLcLvq/i
9gUAABAW7XqE7wtOoufH2o3S0fR9zN8CAEDU0KxH5fV9M7qvs1/vU3+Omf3x
JjO+7aqYT+v7zNyKaBNiWfTZtth7TWr3tdk475BZM32v9XaHN/9c6vU3bxSZ
D/469Xff95fJJb6eCb6vsLDQPpvN+ww3L7Vr1zbXrl2rkGO4XaLg+2QuWOaE
NfaF7wMAgEwA35e6JHp+rN0onUz1ffRzAACQCWjWo/L6viPbT5p9646X2LZo
eLGHk+vuiipoWa+s4XXX9e1Z+2NC3/Plp9/Y1w95eVHG+j5J0a2/NLm/c716
9UyVKlVi/d/dd99tty1cuLDC3juRRMH3iS+XdRsa+9J0hwAAAGHRrkf4vuAk
c36s3SgZTd/H/C0AAESNTPJ9fpH747lr6G7cuFnetsA3S0ftsPv/5LkvE3q9
eDrxg+/9aaI5efRswr5vVt+N1u3JdYtuP873yX0NO+XMsPv98L5p9lrHivCb
169fv/X3WPYzRFKZSPi+4V3UfJ+mOwQAAAiLdj3C9wUnmfNj7UbJaPo+5m8B
ACBqaNajivB9X0/dY79H3FpZWTxiu+n/7LxAnGPzy2evL7HvIc/nkOfpyjM6
vtt5yly/6u/F3DV9KyfuNr+evpSQ75N7A7rrFOUZJBLn+xyt/1js+tyfR7+7
POG/p2xNFHyfPNdInoGksS9NdwgAABAW7XqE7wtOsufH2o3fo+r7mL8FAICI
oVmPKsL3dX24+Pkdo98p2305ZxdEx/unB35vj8dmxq6z836fOLd47yeuTrZ3
eSjX/jkR35c/fV/M9cWvV473fX2emmMuXyieh908/3Bsu+y/vNm9e7cZMGCA
ad26tWnSpIlp0aKF6d27t31m25UrV8q9//IkCr5Pnnkjzz3X2JemOwQAAAiL
dj3C9wWnvOd3J6/d0PR9zN8CAEDU0KxH2r5v2Zidsevezp0qv/cKijz/1/k1
OcZZ/TZav+i25fVcb18n62vFG8o2WWcsuZ3vG/XbfryuT+J83/vVJ5W6ltAd
U1n3/7tdTp8+be/nUtZ6j8qVK5vRo0eHfo/yJgq+b/TQTmb6OB3fp+kOAQAA
wqJdj/B9wYna+WWr72P+FgAAooZmPdL0feLGnG9bl5f49YBhIvfNk/f5ZsHh
EttXTyteSyzP4ZXImmH584g3l8Veczvf55jeNb/U+5b1vA53veLCYdtCnZM8
j6169eql/N5dd91lHZ93+9SpFffMkLISBd83amhHM2N8b5V9abpDAACAsGjX
I3xfcMKcH2s3iqPp+5i/BQCAqKFZj7R8348HCu01ffLa2R9vSqjez+yzwV4T
F8SnTYLvZeLW826cc7DEdrmm0F2bJ2lXY4r9c696s83AF+Zb+j0zN/Ya+fPy
scU9jvN9/RvOi3392J7TJfafiO9b9Fk43zd//vyYy5Nr/PLz8+16Dxe53/OY
MWNKPMctHf1hVHxf7oQ+avvScocAAABh0a5H+L7gJHN+rN0oGU3fx/wtAABE
Dc16pOH7Tv3wq13fKq8b997KhOv9hHar7PcFIY4uKMObLy2xbtfl+IFCu73t
vcXX7sk1fGXdI1AY0mxx8T7j7t/n3J34QnePPonzfe76wfh0r/OF/drm+YcS
/juIT6dOnWzPV7Vq1TKfz7Zjx45Yf7hly5ZQ71WeRMH3jfi0g8mb2FdlX5ru
EAAAICza9QjfF5xEz4+1G6Wj7fuYvwUAgCihWY/K6/vO/Hwx5tTEwaUq8pzd
mI+7+Ps1cCNafmW3u2sDb94oMjeu3SxB4YkLsfW88me5x58k3vfJM3/dc3fl
78Al/nkdUzquiW2XewO67bL/MGnevLnt9dq2bXvb17pnu02bNi3Ue5UnUfB9
nw/qYL6Y1E9lX5ruEAAAICza9QjfF5xEz4+1G6Wj6ftGDv5Q1fcxfwsAAOlG
sx4l6vvkeja5fi2eQ9/8bAa9uCDmuXrWnWWvyYtH7p9XEbl6+XrsmkLxcnKt
oLy/O5YTh84Efm8iz+eVyD5kTa9smz+k+Dq6eN9nnyGcM91eC+jWMsv/h83Q
oUNtn1enTp0yXyfrQlxPuGLFitDvFzZR8X0zJ+uMiTTdIQAAQFi06xG+LziJ
nh9rN0pH0/cxfwsAAFFDsx7drpeb0O7rwHWw25YeNZ8892WZa2VHvf1VhfUL
3+86VeI5vYI8x+O7nafK/L7zhZd91+S6awM3zvt9Pa64P7fvGzduxu4PKNcP
Dn11cYn3HvbaklLP7E0mp06dis3vTp8+3fc1RUVF9v7O8hq5xq+s3rGiEgXf
N3xge1Xfp7UvAACAsGjXI3xfcBI9P9ZulI6272P+FgAAooRmPSpPL5cpEQcn
7k+u+Us0Vy5cK+Xmbt4sMpd+vVrqtbLf+DXDcj8/WScc/97l8XzxmTNnTmx+
d9y4cebQoUMlePfdd2NfnzRpUqmvFxQUqBxHWYmC7xv2STsze+rHKvvSdIcA
AABh0a5H+L7gJHp+rN0oHU3fx/wtAABEDc16FAXfF5Xk5uba+zeX9fy22yH3
hK7oRMX3zZn2idq+tNwhAABAWLTrEb4vOImeH2s3SkfT93024AMza4rONRDM
3wIAQCagWY/wfZmTIUOGlMv1CdWqVavw44yC7xv6cVtV36e1LwAAgLBo1yN8
X3CSOT/WbpSMpu9j/hYAAKKGZj3C92VOZA545cqV5WL37t0VfpxR8H1DPm5r
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
nm9QxxQcWaayL013CAAAEBbteoTvC47f+WXz2o1U9naavk9zTMT8LQAAZAKa
9Qjfl744ryfI9XryZ4n0fJUrV7bbd+zYUeJ7Tp8+bZ566qnY9x09ejTlxx0F
39fomYfVfJ+mOwQAAAiLdj3C9wUn6Pyyde1Gtvo+TcfN/C0AAGQCmvUI35fe
dOjQocS9mu+55x7TqlWrmO+rWbOm6dWrl13n8eijj5Z47TPPPJOWY+4zdb85
fe5qWt5bq0d87una5tTRr1T2pekOAQAAwqJdj/B9wQk6v2xdu5HK3k7T94nj
PnlYZ0zE/C0AAGQCmvUI35f+jBw5sszntfkhc8AFBQVpOd4o+L6GTz9kfvl+
hcq+NN0hAABAWLTrEb4vOEHnl61rN7LZ92mNiZi/BQCATECzHuH7MiNnz541
w4cPt+s8XD/oRbbLNX1z5861fWO60nfqgaz3fc8+qef7NN0hAABAWLTrEb4v
OGWdXzau3Uhlb6fp+zTHRMzfAgBAJqBZj/B9mRlZ1yHzvT/99JM5c+aMvQd0
piQKvq9B/QdN4TGdMZGmOwQAAAiLdj3C9wXndueXbWs3stX3ieM+/d1ytX3R
zwEAQLrRrEf4PpJspCc8dTa7n9fx9JMPmMJjK1X2pekOAQAAwqJdj/B9wUnk
/LJt7Uaqejtt36c1JmL+FgAAMgHNeoTvy84cOHDAbNmyJS3vHQnfVy/HnP1x
lc6+FN0hAABAWLTrEb4vOGHOL9PXbmSj79McEzF/CwAAmYBmPcL3ZWfcM9yO
HDmS8vfuN+2AKTiT/vW84z7vah7KucfU/vu95uEHinnkwXtNndp/MY8+9Ffz
2MM1zeN1/map+8jfzBOP3mfqPVbL1H88x/zLP/+Tqfvo38xTT+RY9ydjJPm9
kr5R5ooFWTcv94EW5JnYLzQs5sXnHjVNGj1umj5f17zUuK75t3/7n3b7qy8+
YV5pUs+82rS+afbSk+b1V540zV9+ytLi1afNm681sLS8xVuvP2t5u3lD8+4b
jSyt3mxkWrd83rz3VmPL+2+/YNq808S0ffdF065VU/NB6yaW9u81NR+2ecnS
se0rplO7Vy2dP2hmurZ/zdKtw+um+4fNTY+OLSw9O79h6dXlTdO7a0vTp9tb
lr7d3zb9P3rH8nHPd80nvVpZBvRubQb1fc/yab/3zeD+bcyQj9tahn3SzvLZ
gA/M8IHtzeeDOlhGDv7QjBra0TJ6aCczZlhny9jPOtt/K2H8iG5mwsjulkmj
upspYz6yTB3b00wb28tMH1dM7oQ+lryJfc0Xk/qZmZP7WmZP/djMmfaJZe70
AWbejGK+zBtkFnzxqWXhzMFm0azBZvHsIZalc4dZls39zHw17zOz/MvhlpUL
RphVC0cWs2ikWb14lGXt0jEmf9k4y7qvxpr1y8eZDSvGm40rJ5hNqyZaNn99
i9WTzJY1ky3b1k412/OL2bFumtm5frrl2425Zrdjc67Z+02e2bdlptm/dZY5
sK2Yg9tnm0M75pjDO+eaI7vmmaPfzjPf7f7S8v2e+eaHPQssP+5bZI7vL+an
g4vNiYNL7HPa5bmEcu8iQe7zIOuaZOwjNULG/eK1hXPHvza//rTanD+x2lz4
eY25eHKt5dLJfHO5YJ25cmqduXp6vbn2ywbL9cKN5saZTebm2U2m6NzmtNc9
ALg9mnNZAr4vOFE7v1T2dpq+T9NxM38LAACZgGY9wvdlZ5zvO3ToUMrfO1N8
nyAeQnyEIG5CHIW4CvEW4i8EcRniNMRtiOcQ3yHuT5yJOBAZG8nvk/gR8SSC
OBNxJ+JQxKeIV7EcXGK/T5yL+Jdjexdav7hnU551M+JoxNeItxF/I4jLEacj
bkc8j/geQdyPOCBxQeKFdm2YEfNE4ozEHYlH2rJmSswriWMS1yTOSfyTeChB
nJS4KXFU4qvWLBkd81fissRpid9aMf/zmO8S9yUOTFzYkjlDY35MXJk4M3Fn
4tHm5Q6MeTVxbOLaxLvNmvK7hxMn5xzdjPG9Y95OHJ64PHF6k0f3sI7P+T5x
f9YDDu9inaDzg+IKxRmKPxzxaYeYTxS36Fzj0N/coyAu0rnJgX1aW1fpvKU4
THGZ/Xq8bd2m85ziPJ0D/ajTGzEvKo7UOdMutxCH6nyqc6wd3n/JOlfnX8XF
ipcVxNE6Xyvu1rncd1o8Z92u87zO/b7R7Bnrgp0XFk8svliw7vjFJ4o98gt1
rV8WxDWLc3b+2TlpuWe5OGrnq8VfS62w1MuxblsQ3y3eW5DfA3HhzouLJxfk
Z1rcufPo4tUfvP/PlnjHHu/X4x17vF93jv3JuveX8Otexy7HLufgdezxft05
dvn7iPfrXscuf6fyd+t17PJvIP8Wfo7d+XWvY5d/a/k39zp2+dno8tvPitex
y8+Un2OXn0H5WfQ6dvmZlZ9dP8c+NMCxy++Gn2O3fv3W75TXscvvnvwO+jl2
+Z31c+zyO+7r2G99Jngdu/v8kM8SP8cunz1+jl0+q7yO3X2ueR27+xyUz8R4
x+4+N+Uz1OvY3eet17G7z2evY3d+XT7b4x278+t+jt3VDa9jF7/u59idX/c6
dufXy+PY5XdM6ppWv4nvC05FnF86125ks+9TW6+h7MsBAADCoFmP8H3ZGXxf
+RD/IGMwjX3J+ErGdOn+XABIBfGO3fl1r2N3fj3esTv34VyI17E7v+517M6v
xzt28THOr/s5dufXvY7d+XWvY3d+3evY4/2617E7v+517M6vex17vF+Pd+zx
ft3r2J1f9zp28XHi5byOPd6vex17zK97HLvz617HLl5R/KLXsYuHFB/p59id
X/c6dvGd4j29jl38qHhSP8cuXtXPsYuHFR/rdezibcXf+jn2lr95X69jFz/s
59jFJ4tXjnfszq+Lh/Zz7OKt/Ry7eG6vY3d+Xfx4vGN3fl18utex+13DLniv
YZdr12W/zq97Hbv3GvZ4x+53Dft//19/NoWFhaHqNb4v+dwpazdcLyefT+X5
eZffKfmZl23J/LwHrdn4t3/959h6jdut2XBzSt41G25OKR1rNvzmk4RsmE9y
88re+aT49Rrx80nx6zVKzCfFrdeIn0+KX68RP5/kXa8RP58Uv16jxHxS3HqN
+Pmk+PUabj7Jb72G9DF+6zUEv/UaxfNJpddrCKzXAIgmmvO3+L70pVGjRqZW
rVqhcPd5Tofv63+rJzx55krK31ei5fukR5QaqbEvTXcIAAAQj3Ps8dewxzv2
+GvYxYOIL3djQXcNu3Psftewl3DscdewC/+nTldz48aNUPUa35d80jmXm8re
rqxeLpmfd+GJx+6zP6vJ/Lz7rdkQxC3u3pxXak4pW9ZseOeT3JyS33yS4Def
JPjNJwnpmE/yrtdw80nx6zXi55Pi12vEzyfFr9eIn0/yrtdw80ne9RpuPsm7
XqNlwHqN+Pkk73oNN5/kXa/h5pO86zXEW/ut15B5nWxer+HWanjXa1SkW3fr
NbxuvUuAW3frNdJxPyQ/ty5U5FoN59dTvVZDw627tRpet+7WanjdulurUdqt
r/B16zLW93Prgp9bF8rT+2leT4TvS19cX1ceot4TeqPp++T3VWtfWu4QAAAg
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
    "], {{0, 781.}, {1276., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{72., 72.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{718.9614583333321, Automatic},
  ImageSizeRaw->{1276., 781.},
  PlotRange->{{0, 1276.}, {0, 781.}}]], "Input",
 Evaluatable->False,ExpressionUUID->"23cb15b6-53f4-4103-aeaa-4baec68bc503"],

Cell["Paraphrasing the document:", "Text",
 CellChangeTimes->{{3.913644530616937*^9, 
  3.913644539010272*^9}},ExpressionUUID->"b7da21af-eb59-43dc-b474-\
b77e20136d06"],

Cell[CellGroupData[{

Cell["\<\
The L2T module comes between L5 and L2. This module has 3 main functions:\
\>", "Subitem",
 CellChangeTimes->{{3.913644520582232*^9, 
  3.913644561971016*^9}},ExpressionUUID->"7992f1e4-1812-4b94-8914-\
843f7223a958"],

Cell["Buffer and transpose the data during SYSMEM \[LeftRightArrow] L2 \
transfers", "SubsubitemNumbered",
 CellChangeTimes->{
  3.913644520582232*^9, {3.913644550763614*^9, 3.913644554740034*^9}, {
   3.9136446008640347`*^9, 
   3.913644613457672*^9}},ExpressionUUID->"582af9d1-36e4-49d9-9e36-\
b2ec3d001512"],

Cell["\<\
Generate ECC parity bits for L2 (and ultimately L1) during SYSMEM \[Rule] L2 \
transfers (unidirectional)\
\>", "SubsubitemNumbered",
 CellChangeTimes->{
  3.913644520582232*^9, {3.913644550763614*^9, 3.913644554740034*^9}, {
   3.9136446008640347`*^9, 3.913644630725644*^9}, {3.914858207301108*^9, 
   3.9148582140216703`*^9}},ExpressionUUID->"34c0a9e8-54a1-493a-95c2-\
c433221ef3d7"],

Cell["\<\
Perform ECC correction during SYSMEM \[LeftArrow] L2 transfers  \
(unidirectional)\
\>", "SubsubitemNumbered",
 CellChangeTimes->{
  3.913644520582232*^9, {3.913644550763614*^9, 3.913644554740034*^9}, {
   3.9136446008640347`*^9, 3.913644647155037*^9}, {3.913749215284781*^9, 
   3.9137492298941293`*^9}, {3.914858220258008*^9, 
   3.91485822063455*^9}},ExpressionUUID->"3eaab60f-3540-4428-9b42-\
3440bac56ccf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
It takes 16 L2T transfers to load L2 with data from SYSMEM and vice versa.\
\>", "Subitem",
 CellChangeTimes->{
  3.913644520582232*^9, {3.913644550763614*^9, 3.913644554740034*^9}, {
   3.9136446008640347`*^9, 3.9136446553906193`*^9}, {3.913749250911392*^9, 
   3.913749253923565*^9}},ExpressionUUID->"ef926592-2340-4b5d-9bb2-\
9152f15240e7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "L2T", ",", "L2Tstore", ",", "L2Trows", ",", "L2Tcols", ",", "L2Tdims"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L2Trows", "=", "16"}], ";", 
  RowBox[{"L2Tcols", "=", "128"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L2Tdims", "=", 
   RowBox[{"{", 
    RowBox[{"L2Trows", ",", "L2Tcols"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L2Tstore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "L2Tdims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"L2T", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Times", "@@", "L2Tdims"}], 
  TemplateBox[{
    InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
   "Quantity"]}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "L2Tdims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
     
     "Quantity"]}], ",", "\"\<Kib\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.913459859943615*^9, 3.913459923890294*^9}, 
   3.913460148377887*^9, {3.9134601823532467`*^9, 3.913460185577817*^9}, {
   3.913464939966411*^9, 3.91346496489507*^9}, {3.913465396273439*^9, 
   3.913465402953084*^9}, {3.9134655987340603`*^9, 3.913465601458982*^9}, {
   3.913465633415092*^9, 3.913465661041072*^9}, {3.913470918167332*^9, 
   3.913470957735427*^9}, {3.9136423501003847`*^9, 3.91364239696066*^9}, {
   3.913642445081004*^9, 3.91364248367916*^9}, {3.913644343894159*^9, 
   3.913644371910788*^9}, {3.9148582307351503`*^9, 3.914858231424768*^9}},
 CellLabel->
  "In[598]:=",ExpressionUUID->"63860c21-8b68-4fe2-bbb1-3db4b6add24c"],

Cell[BoxData[
 TemplateBox[{"2048", "\"b\"", "bits", "\"Bits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.913642487714065*^9, 3.913644391753624*^9, 
  3.913646603495377*^9, 3.913646837223358*^9, 3.913646898134875*^9, 
  3.9136475156362047`*^9, 3.9137413813203497`*^9, 3.913748865596038*^9, 
  3.913749128521617*^9, 3.913751431960202*^9, 3.913752117779171*^9, 
  3.913753552032811*^9, 3.914858232197843*^9, 3.9148583174826803`*^9, 
  3.915030589190144*^9},
 CellLabel->
  "Out[603]=",ExpressionUUID->"dccfb221-80e6-4210-bc53-1918d4f4d9e5"],

Cell[BoxData[
 TemplateBox[{"2", "\"Kib\"", "kibibits", "\"Kibibits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.913642487714065*^9, 3.913644391753624*^9, 
  3.913646603495377*^9, 3.913646837223358*^9, 3.913646898134875*^9, 
  3.9136475156362047`*^9, 3.9137413813203497`*^9, 3.913748865596038*^9, 
  3.913749128521617*^9, 3.913751431960202*^9, 3.913752117779171*^9, 
  3.913753552032811*^9, 3.914858232197843*^9, 3.9148583174826803`*^9, 
  3.915030589191217*^9},
 CellLabel->
  "Out[604]=",ExpressionUUID->"01a402fd-e2c9-48e2-8cc7-513481a154f7"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["MMB Registers", "Section",
 CellChangeTimes->{{3.913741423693698*^9, 3.9137414277991743`*^9}},
 FontWeight->"Bold",ExpressionUUID->"61b83ca1-3038-4d47-859f-8605fed0246a"],

Cell["Per core.", "Text",
 CellChangeTimes->{{3.913748086752996*^9, 
  3.91374808867349*^9}},ExpressionUUID->"e17ad12d-d112-4324-9c19-\
3941233129c3"],

Cell[CellGroupData[{

Cell["RL", "Subsection",
 CellChangeTimes->{{3.913741608456571*^9, 3.913741608857535*^9}},
 FontWeight->"Bold",ExpressionUUID->"3cc9bebf-a96f-464f-8ba1-7ca365473a3f"],

Cell["Unlike Gemini I, there is one RL per section.", "Text",
 CellChangeTimes->{{3.913748298772831*^9, 
  3.913748311596793*^9}},ExpressionUUID->"5ba3534e-2ea0-4494-b269-\
36f1c9284140"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"RL", ",", "RLstore", ",", "wRL", ",", "RLdims"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wRL", "=", "bitLinesPerWordLine"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RLdims", "=", 
   RowBox[{"{", 
    RowBox[{"banksPerCore", ",", "sectionsPerBank", ",", "wRL"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RLstore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "RLdims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RL", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "RLdims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
     
     "Quantity"]}], ",", "\"\<Kebibit\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.913741611436167*^9, 3.913741614936266*^9}, {
  3.913741712083518*^9, 3.9137417755881863`*^9}, {3.913741903237987*^9, 
  3.9137419385692177`*^9}, {3.913742172126878*^9, 3.91374225494276*^9}, {
  3.91374670050987*^9, 3.913746710981305*^9}, {3.913748097464232*^9, 
  3.913748290010791*^9}, {3.913750818190588*^9, 3.913750850352983*^9}},
 CellLabel->
  "In[605]:=",ExpressionUUID->"cf07ba35-3b02-490a-99c7-51203c69c738"],

Cell[BoxData[
 TemplateBox[{"256", "\"Kib\"", "kibibits", "\"Kibibits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.913748270627619*^9, 3.913748281100815*^9}, 
   3.91374886164048*^9, 3.913749124314918*^9, 3.913750857773319*^9, 
   3.913751431973649*^9, 3.913752117788201*^9, 3.913753552038232*^9, 
   3.914858247973154*^9, 3.914858317957666*^9, 3.915030589549398*^9},
 CellLabel->
  "Out[610]=",ExpressionUUID->"19d42f46-de73-40c7-9967-0b83c8a6f133"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["L0", "Subsection",
 CellChangeTimes->{{3.913741608456571*^9, 3.913741608857535*^9}, {
  3.913746680104952*^9, 3.9137466810558863`*^9}},
 FontWeight->"Bold",ExpressionUUID->"66dd2c5a-f9a7-478a-a7f5-192183812bc9"],

Cell["One L0 per section", "Text",
 CellChangeTimes->{{3.913748318712799*^9, 3.913748324011509*^9}, 
   3.913749475367016*^9},ExpressionUUID->"c655a178-3084-4de7-9319-\
dae931c6ae2f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"L0", ",", "L0store", ",", "wL0", ",", "L0dims"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wL0", "=", "bitLinesPerWordLine"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L0dims", "=", 
   RowBox[{"{", 
    RowBox[{"banksPerCore", ",", "sectionsPerBank", ",", "wL0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L0store", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "L0dims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"L0", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "L0dims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
     
     "Quantity"]}], ",", "\"\<Kebibit\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.913741611436167*^9, 3.913741614936266*^9}, {
  3.913741712083518*^9, 3.9137417755881863`*^9}, {3.913741903237987*^9, 
  3.9137419385692177`*^9}, {3.913742172126878*^9, 3.91374225494276*^9}, {
  3.91374228974286*^9, 3.913742335218454*^9}, {3.913748102209127*^9, 
  3.913748103274579*^9}, {3.91374833987988*^9, 3.913748421878875*^9}, {
  3.9137508617801847`*^9, 3.913750870912255*^9}},
 CellLabel->
  "In[611]:=",ExpressionUUID->"3862b3f7-7f1a-4454-bd0b-644987f7d11d"],

Cell[BoxData[
 TemplateBox[{"256", "\"Kib\"", "kibibits", "\"Kibibits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.913748422355302*^9, 3.9137488616928883`*^9, 
  3.913749124372211*^9, 3.9137508734207478`*^9, 3.913751431978277*^9, 
  3.9137521177945766`*^9, 3.913753552053062*^9, 3.914858252714868*^9, 
  3.914858317963284*^9, 3.9150305895558558`*^9},
 CellLabel->
  "Out[616]=",ExpressionUUID->"9c29f949-1ea2-42c4-a8c0-563a70c9a7dd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["CARRY", "Subsection",
 CellChangeTimes->{{3.913741608456571*^9, 3.913741608857535*^9}, {
   3.913746680104952*^9, 3.9137466810558863`*^9}, 3.91374940742586*^9},
 FontWeight->"Bold",ExpressionUUID->"c3a541d8-9a0c-43f7-a168-c0da351b386d"],

Cell["One CARRY per section", "Text",
 CellChangeTimes->{{3.913748318712799*^9, 3.913748324011509*^9}, 
   3.913749407958374*^9, 
   3.913749477459705*^9},ExpressionUUID->"3c905753-efa7-4cf4-ba8e-\
e58cfd0b4b62"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"CARRY", ",", "CARRYstore", ",", "wCARRY", ",", "CARRYdims"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wCARRY", "=", "bitLinesPerWordLine"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CARRYdims", "=", 
   RowBox[{"{", 
    RowBox[{"banksPerCore", ",", "sectionsPerBank", ",", "wCARRY"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CARRYstore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "CARRYdims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CARRY", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "CARRYdims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
     
     "Quantity"]}], ",", "\"\<Kebibit\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.913741611436167*^9, 3.913741614936266*^9}, {
  3.913741712083518*^9, 3.9137417755881863`*^9}, {3.913741903237987*^9, 
  3.9137419385692177`*^9}, {3.913742172126878*^9, 3.91374225494276*^9}, {
  3.91374228974286*^9, 3.913742335218454*^9}, {3.913748102209127*^9, 
  3.913748103274579*^9}, {3.91374833987988*^9, 3.913748421878875*^9}, {
  3.913749408684325*^9, 3.91374941611482*^9}, {3.913750879924096*^9, 
  3.913750901000847*^9}},
 CellLabel->
  "In[617]:=",ExpressionUUID->"891a44ee-7745-433b-b06a-1856c233ead7"],

Cell[BoxData[
 TemplateBox[{"256", "\"Kib\"", "kibibits", "\"Kibibits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.913748422355302*^9, 3.9137488616928883`*^9, 
  3.913749124372211*^9, 3.913750901731034*^9, 3.913751431993504*^9, 
  3.9137521178022547`*^9, 3.9137535520642633`*^9, 3.914858258302599*^9, 
  3.914858317978498*^9, 3.915030589566558*^9},
 CellLabel->
  "Out[622]=",ExpressionUUID->"aaee6833-9dfc-48ba-aa8b-992b17a3142b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["GL",
 FontWeight->"Bold"]], "Subsection",
 CellChangeTimes->{{3.913749458130918*^9, 
  3.913749458366426*^9}},ExpressionUUID->"4a5680b8-5493-41f1-8e84-\
d14b63643c19"],

Cell[TextData[{
 "One GL ",
 StyleBox["per bank",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.913749463372284*^9, 
  3.913749480703843*^9}},ExpressionUUID->"87768409-27f5-4b4f-87ff-\
634a89145fb4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"GL", ",", "GLstore", ",", "wGL", ",", "GLdims"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wGL", "=", "bitLinesPerWordLine"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GLdims", "=", 
   RowBox[{"{", 
    RowBox[{"banksPerCore", ",", "wGL"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GLstore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "GLdims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GL", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "GLdims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
     
     "Quantity"]}], ",", "\"\<Kebibit\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.913741611436167*^9, 3.913741614936266*^9}, {
  3.913741712083518*^9, 3.9137417755881863`*^9}, {3.913741903237987*^9, 
  3.9137419385692177`*^9}, {3.913742172126878*^9, 3.91374225494276*^9}, {
  3.91374228974286*^9, 3.913742335218454*^9}, {3.913748102209127*^9, 
  3.913748103274579*^9}, {3.91374833987988*^9, 3.913748421878875*^9}, {
  3.913749408684325*^9, 3.91374941611482*^9}, {3.913749508565059*^9, 
  3.913749512402038*^9}, {3.913749578373741*^9, 3.913749578805412*^9}, {
  3.913750908982748*^9, 3.9137509193476048`*^9}},
 CellLabel->
  "In[623]:=",ExpressionUUID->"4ff2412a-3080-491c-b873-7281ca40b9e0"],

Cell[BoxData[
 TemplateBox[{"32", "\"Kib\"", "kibibits", "\"Kibibits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.913748422355302*^9, 3.9137488616928883`*^9, 
  3.913749124372211*^9, 3.913749585625926*^9, 3.913749897583374*^9, 
  3.913750921021254*^9, 3.9137514320002737`*^9, 3.9137521178060217`*^9, 
  3.913753552069284*^9, 3.9148582620597773`*^9, 3.914858317982603*^9, 
  3.9150305895716753`*^9},
 CellLabel->
  "Out[628]=",ExpressionUUID->"88ddfb75-3f2d-4095-98cb-88917386c8dd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["GGL",
 FontWeight->"Bold"]], "Subsection",
 CellChangeTimes->{{3.913749705505614*^9, 
  3.913749706351193*^9}},ExpressionUUID->"cc528d63-49ab-4e1e-ac5f-\
bc8622f64ece"],

Cell[TextData[{
 "One GGL ",
 StyleBox["per group",
  FontWeight->"Bold"],
 ", two groups per bank"
}], "Text",
 CellChangeTimes->{{3.913749712246636*^9, 
  3.913749726882257*^9}},ExpressionUUID->"b942bc81-819d-4dac-ba78-\
637e26c0a52b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"GGL", ",", "GGLstore", ",", "wGGL", ",", "GGLdims"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wGGL", "=", "bitLinesPerWordLine"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GGLdims", "=", 
   RowBox[{"{", 
    RowBox[{"banksPerCore", ",", "groupsPerBank", ",", "wGGL"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GGLstore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "GGLdims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GGL", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "GGLdims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
     
     "Quantity"]}], ",", "\"\<Kebibit\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.9137497385833807`*^9, 3.913749763126101*^9}, {
  3.913749817654933*^9, 3.913749890239004*^9}, {3.913750926235257*^9, 
  3.913750940063836*^9}},
 CellLabel->
  "In[629]:=",ExpressionUUID->"2b93b3dc-4942-4692-84a6-fc1fcb65dfdf"],

Cell[BoxData[
 TemplateBox[{"64", "\"Kib\"", "kibibits", "\"Kibibits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.9137498825283413`*^9, 3.913749897619835*^9}, 
   3.913750941652934*^9, 3.913751432012957*^9, 3.913752117815586*^9, 
   3.9137535520823603`*^9, 3.9148582648801527`*^9, 3.9148583179968243`*^9, 
   3.915030589580871*^9},
 CellLabel->
  "Out[634]=",ExpressionUUID->"fe1dee35-e635-47ee-9d6b-40c90c10f9e1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["RSP16", "Subsection",
 CellChangeTimes->{{3.913749917970212*^9, 3.9137499254250093`*^9}},
 FontWeight->"Bold",ExpressionUUID->"68c829cf-02fc-4546-9d4a-b1d9d56d17f4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"RSP16", ",", "RSP16store", ",", "wRSP16", ",", "RSP16dims"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wRSP16", "=", "256"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RSP16dims", "=", 
   RowBox[{"{", 
    RowBox[{"banksPerCore", ",", "wRSP16"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RSP16store", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "RSP16dims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RSP16", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "RSP16dims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
     
     "Quantity"]}], ",", "\"\<Kebibit\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.9137499294542007`*^9, 3.913750031799321*^9}, {
  3.9137509454048*^9, 3.9137509593377447`*^9}},
 CellLabel->
  "In[635]:=",ExpressionUUID->"872aa6e9-67eb-4caf-ae12-64246ef2fbaa"],

Cell[BoxData[
 TemplateBox[{"2", "\"Kib\"", "kibibits", "\"Kibibits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.913750032380187*^9, 3.913750962905147*^9, 
  3.9137514320183167`*^9, 3.913752117819728*^9, 3.913753552086658*^9, 
  3.914858267597612*^9, 3.914858318000177*^9, 3.915030589584826*^9},
 CellLabel->
  "Out[640]=",ExpressionUUID->"90f76662-e550-407e-a19b-7e12e8cd18db"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["RSP128", "Subsection",
 CellChangeTimes->{{3.913749917970212*^9, 3.9137499254250093`*^9}, 
   3.9137507899389877`*^9},
 FontWeight->"Bold",ExpressionUUID->"1558772a-880e-4a91-bd85-4bbf03eb3290"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"RSP128", ",", "RSP128store", ",", "wRSP128", ",", "RSP128dims"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wRSP128", "=", "32"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RSP128dims", "=", 
   RowBox[{"{", 
    RowBox[{"banksPerCore", ",", "wRSP128"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RSP128store", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "RSP128dims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RSP128", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "RSP128dims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
     
     "Quantity"]}], ",", "\"\<bit\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.9137499294542007`*^9, 3.913750031799321*^9}, {
  3.913750790380478*^9, 3.913750800249513*^9}, {3.913750969164741*^9, 
  3.913750998783189*^9}},
 CellLabel->
  "In[641]:=",ExpressionUUID->"4c76ae8c-4599-44ba-a4b2-2a0f6b205eb4"],

Cell[BoxData[
 TemplateBox[{"256", "\"b\"", "bits", "\"Bits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{
  3.913750032380187*^9, {3.913750985264888*^9, 3.9137509998646727`*^9}, 
   3.913751432030929*^9, 3.913752117826981*^9, 3.913753552097175*^9, 
   3.9148582695244627`*^9, 3.914858318003875*^9, 3.915030589594623*^9},
 CellLabel->
  "Out[646]=",ExpressionUUID->"29fc5aed-10d2-4994-ac50-4a8c84a655e1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["RSP4K", "Subsection",
 CellChangeTimes->{{3.913749917970212*^9, 3.9137499254250093`*^9}, 
   3.9137507899389877`*^9, 3.913751048938525*^9},
 FontWeight->"Bold",ExpressionUUID->"b59b5e3a-76dc-43fc-86af-76e2672a59ef"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"RSP4K", ",", "RSP4Kstore", ",", "wRSP4K", ",", "RSP4Kdims"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wRSP4K", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RSP4Kdims", "=", 
   RowBox[{"{", 
    RowBox[{"banksPerCore", ",", "wRSP4K"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RSP4Kstore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "RSP4Kdims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RSP4K", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "RSP4Kdims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
     
     "Quantity"]}], ",", "\"\<bit\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.9137499294542007`*^9, 3.913750031799321*^9}, {
  3.913750790380478*^9, 3.913750800249513*^9}, {3.913750969164741*^9, 
  3.913750998783189*^9}, {3.913751049251175*^9, 3.913751063840146*^9}},
 CellLabel->
  "In[647]:=",ExpressionUUID->"1bc2a73c-b858-4613-9805-7609ea489de8"],

Cell[BoxData[
 TemplateBox[{"8", "\"b\"", "bits", "\"Bits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{
  3.913750032380187*^9, {3.913750985264888*^9, 3.9137509998646727`*^9}, 
   3.913751065277715*^9, 3.91375143203444*^9, 3.913752117831006*^9, 
   3.913753552102631*^9, 3.9148582709450483`*^9, 3.914858318008012*^9, 
   3.9150305895983477`*^9},
 CellLabel->
  "Out[652]=",ExpressionUUID->"f158f3d4-d808-4f8c-9c40-41b8bfad8cea"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["RSPWEN", "Subsection",
 CellChangeTimes->{{3.913749917970212*^9, 3.9137499254250093`*^9}, 
   3.9137507899389877`*^9, 3.913751048938525*^9, 3.9137511099927607`*^9},
 FontWeight->"Bold",ExpressionUUID->"8803cd2d-9b7f-4a0b-8da9-6ad880d3b893"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"RSPWEN", ",", "RSPWENstore", ",", "wRSPWEN", ",", "RSPWENdims"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wRSPWEN", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RSPWENdims", "=", 
   RowBox[{"{", 
    RowBox[{"banksPerCore", ",", "wRSPWEN"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RSPWENstore", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "RSPWENdims"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RSPWEN", "[", "___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"nyi", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", "RSPWENdims"}], 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"b\"", "bits", "\"Bits\""},
     
     "Quantity"]}], ",", "\"\<bit\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.9137499294542007`*^9, 3.913750031799321*^9}, {
  3.913750790380478*^9, 3.913750800249513*^9}, {3.913750969164741*^9, 
  3.913750998783189*^9}, {3.913751049251175*^9, 3.913751063840146*^9}, {
  3.9137511104514236`*^9, 3.913751117650738*^9}},
 CellLabel->
  "In[653]:=",ExpressionUUID->"98108a39-d792-4b6a-b06e-6b8997650178"],

Cell[BoxData[
 TemplateBox[{"8", "\"b\"", "bits", "\"Bits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{
  3.913750032380187*^9, {3.913750985264888*^9, 3.9137509998646727`*^9}, 
   3.913751065277715*^9, 3.913751122974991*^9, 3.913751432037567*^9, 
   3.913752117839757*^9, 3.913753552114545*^9, 3.914858272465247*^9, 
   3.914858318024764*^9, 3.915030589601631*^9},
 CellLabel->
  "Out[658]=",ExpressionUUID->"6f5ccf95-7f9e-4ccc-a4f8-5a121c0b2cd8"]
}, Open  ]]
}, Open  ]],

Cell[TextData[StyleBox["L3S Memory (UNDONE)",
 FontWeight->"Bold"]], "Subsection",
 CellChangeTimes->{{3.9137533250201387`*^9, 
  3.913753334879646*^9}},ExpressionUUID->"0d2e775e-063d-4203-91cf-\
6ae85dd1e809"],

Cell[TextData[StyleBox["L4G Memory (UNONE)",
 FontWeight->"Bold"]], "Subsection",
 CellChangeTimes->{{3.9137533411018877`*^9, 
  3.913753351428997*^9}},ExpressionUUID->"1f71663e-d906-4589-a2ea-\
248ff0d484fe"],

Cell[TextData[StyleBox["L4s Memory (UNDONE)",
 FontWeight->"Bold"]], "Subsection",
 CellChangeTimes->{{3.9137533580666018`*^9, 
  3.913753366979466*^9}},ExpressionUUID->"c551c901-22b9-4110-9838-\
77823bf3b1a9"],

Cell[TextData[StyleBox["L4i Memory (UNDONE)",
 FontWeight->"Bold"]], "Subsection",
 CellChangeTimes->{{3.913753377493897*^9, 
  3.913753383021564*^9}},ExpressionUUID->"46145d69-055e-4801-bcbd-\
73c64d3c8612"],

Cell[TextData[StyleBox["L4hs Memory (UNDONE)",
 FontWeight->"Bold"]], "Subsection",
 CellChangeTimes->{{3.913753392180306*^9, 
  3.913753400128251*^9}},ExpressionUUID->"6d5bf3cf-73a9-4e78-acd8-\
ba5257ae9df1"],

Cell[TextData[StyleBox["L4hi Memory (UNDONE)",
 FontWeight->"Bold"]], "Subsection",
 CellChangeTimes->{{3.9137534145094357`*^9, 
  3.913753421162567*^9}},ExpressionUUID->"1d3c390e-89f2-4189-b422-\
f28f0f2b39c2"],

Cell[TextData[StyleBox["IMEM Memory (UNDONE)",
 FontWeight->"Bold"]], "Subsection",
 CellChangeTimes->{{3.913753431372534*^9, 
  3.913753437175022*^9}},ExpressionUUID->"3ffd6846-d8ab-4a8f-ac57-\
4a6f0cc9f8e8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["APL 2.0 Commands",
 FontWeight->"Bold"]], "Section",
 CellChangeTimes->{{3.913753962498131*^9, 
  3.9137539682286243`*^9}},ExpressionUUID->"72939af5-2d34-4186-9b83-\
df30f0fe8065"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "NOP", ",", "LOOP", ",", "LOOPOUT", ",", "LOOPIN", ",", "SETIMMEDIATE", 
    ",", "ADDIMMEDIATE", ",", "SUBIMMEDIATE", ",", "SHIFTLEFTIMMEDIATE", ",", 
    "SHIFTRIGHTIMMEDIATE", ",", "INC", ",", "SET", ",", "ADD", ",", "SUB", 
    ",", "SHIFTLEFT", ",", "SHIFTRIGHT", ",", "CR"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.91375397177641*^9, 3.91375397759064*^9}, {
  3.913754010476428*^9, 3.91375401911506*^9}, {3.9137556814058*^9, 
  3.913755684694816*^9}, {3.9137559979254103`*^9, 3.913756024858014*^9}, {
  3.913756127092317*^9, 3.9137561449421453`*^9}, {3.913756576790414*^9, 
  3.913756592367284*^9}, {3.9137566337793837`*^9, 3.913756665238746*^9}, {
  3.913756698593313*^9, 3.913756699320323*^9}},
 CellLabel->
  "In[659]:=",ExpressionUUID->"ef32843a-b31f-4ae0-bbc4-7c7cfab38ed1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FromDigits", "[", 
  RowBox[{"\"\<FBFF\>\"", ",", "16"}], "]"}]], "Input",
 CellChangeTimes->{{3.913756224710503*^9, 3.913756239300078*^9}},
 CellLabel->
  "In[660]:=",ExpressionUUID->"c930ff66-6713-479f-9e60-bd264087325e"],

Cell[BoxData["64511"], "Output",
 CellChangeTimes->{3.913756240103465*^9, 3.914858280327753*^9, 
  3.914858318043631*^9, 3.915030589611219*^9},
 CellLabel->
  "Out[660]=",ExpressionUUID->"719d4580-f335-4f14-bf44-b53d3b5a727c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Symbol List", "Section",
 CellChangeTimes->{{3.913751513005026*^9, 3.913751515029577*^9}, {
  3.9137515714366693`*^9, 3.913751575926068*^9}},
 FontWeight->"Bold",ExpressionUUID->"a416204a-1e85-4f5e-85cb-c051134b631c"],

Cell["We have defined this many symbols.", "Text",
 CellChangeTimes->{{3.913751518497084*^9, 
  3.913751533454017*^9}},ExpressionUUID->"7d9d8008-289d-443d-b29c-\
f36876c98183"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Names", "[", "\"\<Global`*\>\"", "]"}], "//", "Length"}]], "Input",\

 CellChangeTimes->{{3.913751490376041*^9, 3.9137515031155653`*^9}},
 CellLabel->
  "In[661]:=",ExpressionUUID->"c7768425-603c-4af8-a0bb-80a41e34700b"],

Cell[BoxData["169"], "Output",
 CellChangeTimes->{3.913751503824142*^9, 3.91375211790823*^9, 
  3.913753552126168*^9, 3.913756004652401*^9, 3.9148582839405603`*^9, 
  3.914858318052198*^9, 3.915030589619481*^9},
 CellLabel->
  "Out[661]=",ExpressionUUID->"d2690cca-81a3-4868-a8a8-815b27894152"]
}, Open  ]],

Cell["Open up this cell to see symbols defined so far.", "Text",
 CellChangeTimes->{{3.9137514700975313`*^9, 
  3.91375148497486*^9}},ExpressionUUID->"f8a41a81-9213-4a2d-b578-\
3dba88640e2b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Names", "[", "\"\<Global`*\>\"", "]"}], "//", 
  "gridExpression"}]], "Input",
 CellChangeTimes->{{3.913751130649131*^9, 3.913751144089697*^9}, {
  3.913751190214736*^9, 3.913751195361328*^9}, {3.913751259794888*^9, 
  3.9137512668255*^9}, {3.913751421941784*^9, 3.9137514266748667`*^9}},
 CellLabel->
  "In[662]:=",ExpressionUUID->"bcdf14ae-dc08-4ea1-ab22-c8c3e0972042"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"ADD\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"ADDIMMEDIATE\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"argMsg\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"banksPerCore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"bitLinesPerWordLine\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"CARRY\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"CARRYdims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"CARRYstore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"coresPerChip\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"CR\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"GGL\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"GGLdims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"GGLstore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"GL\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"GLdims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"GLstore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"GPstore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"groupsPerBank\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"GVMLmode\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"illegal\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"IMEM\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"IMEMbitsPerEntry\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"IMEMdims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"IMEMentries\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"IMEMstore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"INC\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L0\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L0dims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L0store\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L1\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L1colsPerWordLine\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L1dims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L1groupsPerBank\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L1Rstore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L1R$store\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L1store\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L1wordLinesPerGroup\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L2\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L2cols\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L2colsPerGroup\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L2dims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L2leftColGroups\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L2rightColGroups\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L2rows\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L2Rstore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L2R$store\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L2store\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L2T\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L2Tcols\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L2Tdims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L2Trows\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L2Tstore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L3S\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L3Sbits\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L3Sdims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L3Sstore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L4G\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L4GbitsPerUnit\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L4Gdims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L4GnUnits\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L4Gstore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L4hi\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L4hibytes\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L4hidims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L4hiStore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L4HS\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L4HSbytes\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L4HSdims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L4HSstore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L4i\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L4ibytes\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L4idims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L4iStore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L4S\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L4Sbytes\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L4Sdims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"L4Sstore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"LOOP\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"LOOPIN\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"LOOPOUT\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"LPstore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"MMB\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"MMBbanks\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"MMBcolsPerWordLine\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         StyleBox["List",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.94, 0.88, 0.94]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {
         StyleBox["\<\"MMBdims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"MMBsectionsPerBank\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"MMBsegmentsPerSection\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"MMBstore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"MMBwordLinesPerSegment\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"newVal\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"nGP\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"nL1R\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"nL1R$\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"nL2R\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"nL2R$\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"nLP\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"NOP\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"nRN\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"nRN$\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"nSM\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"nyi\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RL\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RLdims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RLstore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"rn\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RN\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RNillegal\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RNstore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RNZero\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RN$\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RN$store\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSP\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSP128\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSP128dims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSP128store\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSP16\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSP16dims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSP16store\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSP4K\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSP4Kdims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSP4Kstore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSPbanks\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSPbitsPerSectionBank\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSPCT\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSPCTbanks\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSPCTbitsPerSectionBank\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSPCTdims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSPCTsections\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSPCTstore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSPdims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSPsections\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSPstore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSPWEN\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSPWENdims\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"RSPWENstore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"sectionsPerBank\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"SET\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"SETIMMEDIATE\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"SHIFTLEFT\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"SHIFTLEFTIMMEDIATE\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"SHIFTRIGHT\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"SHIFTRIGHTIMMEDIATE\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"sm\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"SM\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"SM0X01\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"SM0X03\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"SM0X11\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"SM0X55\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"SM0XAA\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"SM0XFF\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"SMstore\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"SUB\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"SUBIMMEDIATE\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"undefined\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"wCARRY\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"wGGL\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"wGL\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"wGP\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"wL0\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"wL1R\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"wL2R\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"wLP\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"wRL\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"wRN\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"wRSP128\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"wRSP16\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"wRSP4K\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"wRSPWEN\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"wSM\"\>",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {
       RGBColor[1, 0.9, 0.8], {
        RGBColor[0.88, 1, 0.88]}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> False},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.913751140079931*^9, 3.913751144969522*^9}, {
   3.91375119086418*^9, 3.913751195975719*^9}, 3.913751267705907*^9, 
   3.913751432075317*^9, 3.91375211794748*^9, 3.913753552160543*^9, 
   3.914858318094002*^9, 3.915030589660647*^9},
 CellLabel->
  "Out[662]=",ExpressionUUID->"da9e53d5-7457-4b09-b3f2-a7bd67f873dc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Email from Bob", "Section",
 CellChangeTimes->{{3.914853758338629*^9, 
  3.9148537615512037`*^9}},ExpressionUUID->"c32db2b9-2c1b-4e9b-bd11-\
66f50e2d0086"],

Cell["\<\
more about RL=0, RL=1, and RL=GP APL instructions, and how the HW handles \
them. And also what RN_Zero is used for.\
\>", "Text",
 CellChangeTimes->{
  3.914853744574864*^9, {3.914853787249*^9, 
   3.9148538118513193`*^9}},ExpressionUUID->"9edf5f36-9b36-479e-8b6d-\
ff419b2ff82f"],

Cell[CellGroupData[{

Cell["RL=0 and RL=1 and RL = GPx", "Subsection",
 CellChangeTimes->{
  3.914853744574864*^9, {3.914853787249*^9, 
   3.914853832149169*^9}},ExpressionUUID->"65c9563c-7366-4855-a99a-\
b151eebfd4da"],

Cell["\<\
There are 2 different SEU instructions that can be used for RL = 0 and RL = 1 \
and RL = GPx commands:  CR (Copy Register) and RD (Read).\
\>", "Text",
 CellChangeTimes->{
  3.914853744574864*^9, {3.914853787249*^9, 
   3.914853876457903*^9}},ExpressionUUID->"d245de55-b926-4b4b-9902-\
5969d041ed71"],

Cell[CellGroupData[{

Cell["CR Usage.", "Subsubsection",
 CellChangeTimes->{
  3.914853744574864*^9, {3.914853787249*^9, 3.914853830014861*^9}, {
   3.91485386633491*^9, 
   3.914853868539963*^9}},ExpressionUUID->"0b283be4-3ec6-424b-84f5-\
c3fdca3018c8"],

Cell["\<\
APL Code:  CONVERT(SM_0XFF *= RL = 0)
APL Code:  CONVERT(SM_0XFF *= RL = 1)
APL Code:  CONVERT(SM_0XFF *= RL = GPx)\
\>", "Text",
 CellChangeTimes->{
  3.914853744574864*^9, {3.914853787249*^9, 3.914853830014861*^9}, {
   3.91485388730571*^9, 
   3.91485389178411*^9}},ExpressionUUID->"ac235d24-0ba5-41b5-adaf-\
6daacebe2b62"]
}, Open  ]],

Cell[CellGroupData[{

Cell["RD Usage", "Subsubsection",
 CellChangeTimes->{
  3.914853744574864*^9, {3.914853787249*^9, 3.914853830014861*^9}, {
   3.9148539005358677`*^9, 
   3.9148539140150948`*^9}},ExpressionUUID->"72d24fc2-6c2d-4523-a7b5-\
c058b3abf926"],

Cell["\<\
APL Code:  SM_0XFF *= RL = 0
APL Code:  SM_0XFF *= RL = 1
APL Code:  SM_0XFF *= RL = GPx\
\>", "Text",
 CellChangeTimes->{
  3.914853744574864*^9, {3.914853787249*^9, 3.914853830014861*^9}, {
   3.9148539005358677`*^9, 
   3.91485392834161*^9}},ExpressionUUID->"4b44858c-603b-4db1-84f3-\
de64d6765c9f"],

Cell["\<\
In all 3 cases, \[OpenCurlyDoubleQuote]CONVERT\[CloseCurlyDoubleQuote] causes \
the CR command to be used.  Otherwise, the RD command is used.  And in all 3 \
cases \[OpenCurlyDoubleQuote]L0\[CloseCurlyDoubleQuote] can be used instead \
of \[OpenCurlyDoubleQuote]RL\[CloseCurlyDoubleQuote], and everything I \
explain below regarding RL usage applies to L0 also.\
\>", "Text",
 CellChangeTimes->{
  3.914853744574864*^9, {3.914853787249*^9, 3.914853830014861*^9}, {
   3.9148539005358677`*^9, 
   3.914853961202162*^9}},ExpressionUUID->"2f9dbd34-12ff-4af6-8c11-\
ef09c9abb2bd"],

Cell["\<\
Note:  In Ilan\[CloseCurlyQuote]s APL Document, he doesn\[CloseCurlyQuote]t \
show CONVERT being used for RL = GPx or L0 = GPx commands when CR is used.  I \
think that\[CloseCurlyQuote]s a typo/oversight, because he shows RL = GPx and \
L0 = GPx commands without CONVERT in the RD section.\
\>", "Text",
 CellChangeTimes->{
  3.914853744574864*^9, {3.914853787249*^9, 3.914853830014861*^9}, {
   3.9148539005358677`*^9, 3.914853933591462*^9}, 
   3.91485417822499*^9},ExpressionUUID->"6ae98326-2b34-4aad-aca3-\
d5ab74cef37b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["When CR is used", "Subsubsection",
 CellChangeTimes->{
  3.914853744574864*^9, {3.914853787249*^9, 3.914853830014861*^9}, {
   3.9148539005358677`*^9, 3.914853933591462*^9}, {3.914854179615677*^9, 
   3.914854193892611*^9}},ExpressionUUID->"b96dd674-b39d-4c73-b7b7-\
feaf0e02feeb"],

Cell["\<\
RL = 0 involves the HW signals rop (000) and rlwe (1).  Basically, setting \
rop=000 causes the Read Mux to select \[OpenCurlyQuote]0\[CloseCurlyQuote] as \
the input to RL.\
\>", "Text",
 CellChangeTimes->{
  3.914853744574864*^9, {3.914853787249*^9, 3.914853830014861*^9}, {
   3.9148539005358677`*^9, 3.914853933591462*^9}, {3.914854179615677*^9, 
   3.9148542193605137`*^9}},ExpressionUUID->"ac39664b-5681-4720-b19e-\
06108a09e7d8"],

Cell["\<\
Since rop and rlwe are used, you can\[CloseCurlyQuote]t use a RD command to \
read data to RL simultaneously. You can, however, use a RD command to read \
data to L0 simultaneously. And you can use any WR command simultaneously.\
\>", "Text",
 CellChangeTimes->{
  3.914853744574864*^9, {3.914853787249*^9, 3.914853830014861*^9}, {
   3.9148539005358677`*^9, 3.914853933591462*^9}, {3.914854179615677*^9, 
   3.914854245495167*^9}},ExpressionUUID->"851cae76-33bc-4375-92cb-\
3f25e1a2413b"],

Cell["\<\
RL = 1 involves the HW signals wop (001), rop (100), and rlwe (1).  wop=001 \
causes the Write Mux to select \[OpenCurlyQuote]1\[CloseCurlyQuote] as its \
output; rop=100 causes the Read Mux to select the output of the Write Mux as \
the input to RL.\
\>", "Text",
 CellChangeTimes->{
  3.914853744574864*^9, {3.914853787249*^9, 3.914853830014861*^9}, {
   3.9148539005358677`*^9, 3.914853933591462*^9}, {3.914854179615677*^9, 
   3.91485426123604*^9}},ExpressionUUID->"cb1c375c-d76b-46d0-8d74-\
f08f5b895ac5"],

Cell["\<\
Since wop is used, you can\[CloseCurlyQuote]t issue a WR command \
simultaneously. Since rop and rlwe are used, you can\[CloseCurlyQuote]t use a \
RD command to read data to RL simultaneously.  You can, however, use a RD \
command to read data to L0 simultaneously.\
\>", "Text",
 CellChangeTimes->{
  3.914853744574864*^9, {3.914853787249*^9, 3.914853830014861*^9}, {
   3.9148539005358677`*^9, 3.914853933591462*^9}, {3.914854179615677*^9, 
   3.9148542745346622`*^9}},ExpressionUUID->"92b43039-25b0-4731-9034-\
9182da47a594"],

Cell["\<\
RL = GPx causes RL to be set to the value of Bit 0 of GPx. Like RL = 1, it \
involves the HW signals wop (000 or 001), rop (100), and rlwe (1). In this \
scenario, wop is set to 00y, where \[OpenCurlyDoubleQuote]y\
\[CloseCurlyDoubleQuote] is the value of Bit 0 of GPx; wop = 000 causes the \
Write Mux to select \[OpenCurlyQuote]0\[CloseCurlyQuote] as its output, and \
wop = 001 causes the Write Mux to select \[OpenCurlyDoubleQuote]1\
\[CloseCurlyDoubleQuote] as its output; and rop=100 cause the Read Mux to \
select the output of the Write Mux as the input to RL. In this way, the value \
of Bit 0 of GPx is loaded into RL.\
\>", "Text",
 CellChangeTimes->{
  3.914853744574864*^9, {3.914853787249*^9, 3.914853830014861*^9}, {
   3.9148539005358677`*^9, 3.914853933591462*^9}, {3.914854179615677*^9, 
   3.91485431726336*^9}},ExpressionUUID->"c5441623-7356-49ca-996e-\
1d482e4c95fc"],

Cell["\<\
Since wop is used, you can\[CloseCurlyQuote]t issue a WR command \
simultaneously.  Since rop and rlwe are used, you can\[CloseCurlyQuote]t use \
a RD command to read data to RL simultaneously.  You can, however, use a RD \
command to read data to L0 simultaneously. \
\>", "Text",
 CellChangeTimes->{
  3.914853744574864*^9, {3.914853787249*^9, 3.914853830014861*^9}, {
   3.9148539005358677`*^9, 3.914853933591462*^9}, {3.914854179615677*^9, 
   3.914854332825539*^9}},ExpressionUUID->"9eb12312-91dd-4bf6-aa20-\
edb93fafe193"],

Cell["\<\
Note: With regards to using CR for RL = GPx, Ilan had the following note that \
you asked a question about in a comment in Ilan\[CloseCurlyQuote]s APL doc:\
\>", "Text",
 CellChangeTimes->{
  3.914853744574864*^9, {3.914853787249*^9, 3.914853830014861*^9}, {
   3.9148539005358677`*^9, 3.914853933591462*^9}, {3.914854179615677*^9, 
   3.9148543355036087`*^9}, 
   3.914854613656226*^9},ExpressionUUID->"068ae827-a5af-4d96-885c-\
e432b279e447"],

Cell["\<\
Note: In order to set \[OpenCurlyQuote]0\[CloseCurlyQuote] to RL, the MMB row \
that is read by default is 23. It doesn\[CloseCurlyQuote]t matter which value \
is currently stored in this row, because both the bits\[CloseCurlyQuote] \
values and their inverted values are read together and \
AND\[CloseCurlyQuote]ed, therefore creating \[OpenCurlyQuote]0\
\[CloseCurlyQuote] (x & ~x = 0). Because row (word-line) 23 is read then no \
write can be done to this row at the same time RL = GPx!!!\
\>", "Text",
 CellChangeTimes->{
  3.914853744574864*^9, {3.914853787249*^9, 3.914853830014861*^9}, {
   3.9148539005358677`*^9, 3.914853933591462*^9}, {3.914854179615677*^9, 
   3.9148543355036087`*^9}, {3.914854615661273*^9, 3.914854617052215*^9}, 
   3.914854658775097*^9},ExpressionUUID->"b53dfd21-0a26-4759-af8f-\
df43bcc8bb94"],

Cell["\<\
This note is not accurate when CR is used for RL = GPx (as you can see from \
my explanation re what happens when CR is used for RL = GPx).  This note \
should be in the section that describes what happens when RD is used for RL = \
GPx.  More on that below.\
\>", "Text",
 CellChangeTimes->{
  3.914853744574864*^9, {3.914853787249*^9, 3.914853830014861*^9}, {
   3.9148539005358677`*^9, 3.914853933591462*^9}, {3.914854179615677*^9, 
   3.9148543355036087`*^9}, {3.914854615661273*^9, 3.914854617052215*^9}, {
   3.914854660500276*^9, 
   3.9148546809994383`*^9}},ExpressionUUID->"2d3137bf-93e8-4957-bb2f-\
07c80481e2b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["When RD is used:", "Subsubsection",
 CellChangeTimes->{
  3.914853744574864*^9, {3.914853787249*^9, 3.914853830014861*^9}, {
   3.9148539005358677`*^9, 3.914853933591462*^9}, {3.914854179615677*^9, 
   3.9148543355036087`*^9}, {3.914854615661273*^9, 3.914854617052215*^9}, {
   3.914854660500276*^9, 
   3.914854686959551*^9}},ExpressionUUID->"f58beac0-4eaa-4cb8-917b-\
c3960b90e7c8"],

Cell["\<\
RL = 0 cause the row pointed to by RN31 (RN31 is the default register used in \
this scenario) to be read. RN31 is \[OpenCurlyDoubleQuote]reserved\
\[CloseCurlyDoubleQuote] (cannot be written), and points to row 23 (in \
segment 1). In this scenario, both the positive and negative values of the \
row 23 mcell are read simultaneously. In the HW, the positive and negative \
values of row 23 mcell get logically ANDed together to generate the read \
result.  Consequently, regardless of the state of the row 23 mcell, the AND \
result is \[OpenCurlyQuote]0\[CloseCurlyQuote].  This is basically a tricky \
way to force a Read operation to return \[OpenCurlyQuote]0\[CloseCurlyQuote]. \
 And the \[OpenCurlyQuote]0\[CloseCurlyQuote] read result will be captured in \
RL.\
\>", "Text",
 CellChangeTimes->{
  3.914853744574864*^9, {3.914853787249*^9, 3.914853830014861*^9}, {
   3.9148539005358677`*^9, 3.914853933591462*^9}, {3.914854179615677*^9, 
   3.9148543355036087`*^9}, {3.914854615661273*^9, 3.914854617052215*^9}, {
   3.914854660500276*^9, 3.914854689326251*^9}, {3.914854809885139*^9, 
   3.914854841861931*^9}},ExpressionUUID->"cec4f423-eb0f-4144-a1b5-\
642196681244"],

Cell["\<\
You can cause the same thing to happen with the APL code RL = RN_Zero (in \
which case RN31 is used by default) or RL = RNx_Zero(RN31) (in which case \
RN31 is used expressly). If you were to (say) use the APL code RL = \
RNx_Zero(RN0), then whichever row is pointed to by RN0 will be read (from \
segment 1), which isn\[CloseCurlyQuote]t necessarily row 23.  Basically, you \
don\[CloseCurlyQuote]t HAVE to use RN31 for this functionality, and therefore \
you don\[CloseCurlyQuote]t HAVE to use row 23 (in segment 1) as the row that \
is read in this scenario.\
\>", "Text",
 CellChangeTimes->{
  3.914853744574864*^9, {3.914853787249*^9, 3.914853830014861*^9}, {
   3.9148539005358677`*^9, 3.914853933591462*^9}, {3.914854179615677*^9, 
   3.9148543355036087`*^9}, {3.914854615661273*^9, 3.914854617052215*^9}, {
   3.914854660500276*^9, 3.914854689326251*^9}, {3.914854809885139*^9, 
   3.914854877516563*^9}},ExpressionUUID->"cb26e900-8300-4255-a101-\
24205b198a86"],

Cell["\<\
Note:  In the scenarios above where both the positive and negative values of \
the row pointed to by the default or designated RN register are read, the row \
that is read is automatically read from segment 1. So for example, regardless \
whether RN31 is programmed to 23 or 47, row 23 from segment 1 will be read. \
Unlike other RN use cases where if it is set to 47 then row 23 from segment 2 \
will be read.  The reason for this has to do with other use cases for RN_Zero \
and RNx_Zero(RNx), which I discuss below.\
\>", "Text",
 CellChangeTimes->{
  3.914853744574864*^9, {3.914853787249*^9, 3.914853830014861*^9}, {
   3.9148539005358677`*^9, 3.914853933591462*^9}, {3.914854179615677*^9, 
   3.9148543355036087`*^9}, {3.914854615661273*^9, 3.914854617052215*^9}, {
   3.914854660500276*^9, 3.914854689326251*^9}, {3.914854809885139*^9, 
   3.9148549095035877`*^9}},ExpressionUUID->"d2a4be18-fcd0-4666-8332-\
f454a6524ba4"],

Cell["\<\
RL = 1 causes no row to be read. By not reading any row, a \[OpenCurlyQuote]1\
\[CloseCurlyQuote] will be captured in RL (because \[OpenCurlyQuote]1\
\[CloseCurlyQuote] is the default state of read data).\
\>", "Text",
 CellChangeTimes->{
  3.914853744574864*^9, {3.914853787249*^9, 3.914853830014861*^9}, {
   3.9148539005358677`*^9, 3.914853933591462*^9}, {3.914854179615677*^9, 
   3.9148543355036087`*^9}, {3.914854615661273*^9, 3.914854617052215*^9}, {
   3.914854660500276*^9, 3.914854689326251*^9}, {3.914854809885139*^9, 
   3.9148549277412167`*^9}},ExpressionUUID->"308b0a4d-1545-4db7-bf37-\
a941bd2fb954"],

Cell["\<\
RL = GPx causes RL to be set to Bit 0 of GPx.  If Bit 0 = 0, then row 23 in \
segment 1 is read, and both the positive and negative values of row 23 are \
read, like in the RL = 0 case.  If Bit 0 = 1, then no row is read, like in \
the RL = 1 case.\
\>", "Text",
 CellChangeTimes->{
  3.914853744574864*^9, {3.914853787249*^9, 3.914853830014861*^9}, {
   3.9148539005358677`*^9, 3.914853933591462*^9}, {3.914854179615677*^9, 
   3.9148543355036087`*^9}, {3.914854615661273*^9, 3.914854617052215*^9}, {
   3.914854660500276*^9, 3.914854689326251*^9}, {3.914854809885139*^9, 
   3.9148549250914583`*^9}, 
   3.914855272085628*^9},ExpressionUUID->"0bb81d5b-517d-41f1-b39f-\
459732cc3e77"],

Cell["\<\
Hopefully, that clarifies Ilan\[CloseCurlyQuote]s note (below) that I \
mentioned should be move to the RD section.\
\>", "Text",
 CellChangeTimes->{
  3.914853744574864*^9, {3.914853787249*^9, 3.914853830014861*^9}, {
   3.9148539005358677`*^9, 3.914853933591462*^9}, {3.914854179615677*^9, 
   3.9148543355036087`*^9}, {3.914854615661273*^9, 3.914854617052215*^9}, {
   3.914854660500276*^9, 3.914854689326251*^9}, {3.914854809885139*^9, 
   3.9148549250914583`*^9}, 
   3.914855466471922*^9},ExpressionUUID->"d1d2451a-af15-470e-b0f2-\
47a4c7d2ed42"],

Cell[TextData[StyleBox["Note: In order to set \[OpenCurlyQuote]0\
\[CloseCurlyQuote] to RL, the MMB row that is read by default is 23. It doesn\
\[CloseCurlyQuote]t matter which value is currently stored in this row, \
because both the bits\[CloseCurlyQuote] values and their inverted values are \
read together and AND\[CloseCurlyQuote]ed, therefore creating \
\[OpenCurlyQuote]0\[CloseCurlyQuote] (x & ~x = 0). Because row (word-line) 23 \
is read then no write can be done to this row at the same time RL = GPx!!!",
 Background->RGBColor[1, 1, 0.85]]], "Text",
 CellChangeTimes->{
  3.914853744574864*^9, {3.914853787249*^9, 3.914853830014861*^9}, {
   3.9148539005358677`*^9, 3.914853933591462*^9}, {3.914854179615677*^9, 
   3.9148543355036087`*^9}, {3.914854615661273*^9, 3.914854617052215*^9}, {
   3.914854660500276*^9, 3.914854689326251*^9}, {3.914854809885139*^9, 
   3.9148549250914583`*^9}, {3.9148554677184668`*^9, 3.914855468864156*^9}, 
   3.914855517481279*^9},ExpressionUUID->"7193a302-dd86-42eb-9943-\
a95018392701"],

Cell["\<\
Note that when RD is used for RL = 0 or RL = 1 or RL = GPx, then you can\
\[CloseCurlyQuote]t issue any other type of RD command simultaneously (e.g. \
you couldn\[CloseCurlyQuote]t do \[OpenCurlyDoubleQuote]L0 = RN5\
\[CloseCurlyDoubleQuote] simultaneously). You CAN issue WR commands \
simultaneously, but not to the row that is read in the RL = 0 or RL = RN_Zero \
or RL = RNx_Zero(RNy) scenarios. Since no rows are read in RL = 1 case, then \
you can write any row simultaneously. As for RL = GPx, assuming you don\
\[CloseCurlyQuote]t know the value of Bit 0 of GPx, then you have to assume \
it could be \[OpenCurlyQuote]0\[CloseCurlyQuote], and therefore row 23 will \
be read, and therefore you cannot write to row 23 simultaneously.\
\>", "Text",
 CellChangeTimes->{
  3.914853744574864*^9, {3.914853787249*^9, 3.914853830014861*^9}, {
   3.9148539005358677`*^9, 3.914853933591462*^9}, {3.914854179615677*^9, 
   3.9148543355036087`*^9}, {3.914854615661273*^9, 3.914854617052215*^9}, {
   3.914854660500276*^9, 3.914854689326251*^9}, {3.914854809885139*^9, 
   3.9148549250914583`*^9}, {3.9148554677184668`*^9, 3.914855468864156*^9}, {
   3.914855521880478*^9, 3.914855554542882*^9}, 
   3.91485560491746*^9},ExpressionUUID->"7fb13c65-c2f0-4d83-8ec1-\
f54f357cfa85"],

Cell["\<\
From a SW standpoint, whether you choose CR or RD for RL=0, RL=1, and RL=GPx \
commands depends on what other commands you want to issue simultaneously.  \
Using CR gives you some options, and using RD gives you other options.  That\
\[CloseCurlyQuote]s why both methods are supported by the HW.\
\>", "Text",
 CellChangeTimes->{
  3.914853744574864*^9, {3.914853787249*^9, 3.914853830014861*^9}, {
   3.9148539005358677`*^9, 3.914853933591462*^9}, {3.914854179615677*^9, 
   3.9148543355036087`*^9}, {3.914854615661273*^9, 3.914854617052215*^9}, {
   3.914854660500276*^9, 3.914854689326251*^9}, {3.914854809885139*^9, 
   3.9148549250914583`*^9}, {3.9148554677184668`*^9, 3.914855468864156*^9}, {
   3.914855521880478*^9, 3.914855554542882*^9}, {3.914855607634289*^9, 
   3.91485562938698*^9}},ExpressionUUID->"287ab62e-5320-4fac-b7d7-\
9554daf9689d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Other RN_Zero Usage", "Subsubsection",
 CellChangeTimes->{
  3.914853744574864*^9, {3.914853787249*^9, 3.914853830014861*^9}, {
   3.9148539005358677`*^9, 3.914853933591462*^9}, {3.914854179615677*^9, 
   3.9148543355036087`*^9}, {3.914854615661273*^9, 3.914854617052215*^9}, {
   3.914854660500276*^9, 3.914854689326251*^9}, {3.914854809885139*^9, 
   3.9148549250914583`*^9}, {3.9148554677184668`*^9, 3.914855468864156*^9}, {
   3.914855521880478*^9, 3.914855554542882*^9}, {3.914855607634289*^9, 
   3.914855635093478*^9}},ExpressionUUID->"2ed198ca-9851-4046-b4a9-\
06e8a31d081c"],

Cell["\<\
RN_Zero and RNx_Zero(RNy) can be used for other purposes besides what I \
described above. For example, you can use an ADD command like: RL = RNy + \
RNx_Zero(RN3) + Carry. The result of which is the same as RL = RNy + 0 + \
Carry. In this case, the segment that is read for the RNx_Zero(RN3) operand \
depends on which segment is read by the RNy operand. If RNy points to a \
segment-1 row, then RNx_Zero(RN3) will read from segment 2. For example, if \
RN3 = 11, then row 11 from segment 2 will be read. And if RN3 = 35, then row \
11 from segment 2 will be read. And if RNy points to a segment-2 row, then \
RNx_Zero(RNx) will read from segment 1. The reason for this is because for \
ADD ops, the \[OpenCurlyQuote]a\[CloseCurlyQuote] and \[OpenCurlyQuote]b\
\[CloseCurlyQuote] inputs must come from different segments. These other uses \
are described in the APL doc.\
\>", "Text",
 CellChangeTimes->{
  3.914853744574864*^9, {3.914853787249*^9, 3.914853830014861*^9}, {
   3.9148539005358677`*^9, 3.914853933591462*^9}, {3.914854179615677*^9, 
   3.9148543355036087`*^9}, {3.914854615661273*^9, 3.914854617052215*^9}, {
   3.914854660500276*^9, 3.914854689326251*^9}, {3.914854809885139*^9, 
   3.9148549250914583`*^9}, {3.9148554677184668`*^9, 3.914855468864156*^9}, {
   3.914855521880478*^9, 3.914855554542882*^9}, {3.914855607634289*^9, 
   3.914855713364848*^9}, 
   3.914855905398137*^9},ExpressionUUID->"616e65bd-9506-4b62-bbec-\
cdbf36af5914"],

Cell["\<\
The key point here is \[Ellipsis] when RN_Zero and RNx_Zero(RNy) are used, \
the segment that is read to produce a \[OpenCurlyQuote]0\[CloseCurlyQuote] \
result is NOT determined by the content of the RN register, it is determined \
by the particular RD command it is used in.\
\>", "Text",
 CellChangeTimes->{
  3.914853744574864*^9, {3.914853787249*^9, 3.914853830014861*^9}, {
   3.9148539005358677`*^9, 3.914853933591462*^9}, {3.914854179615677*^9, 
   3.9148543355036087`*^9}, {3.914854615661273*^9, 3.914854617052215*^9}, {
   3.914854660500276*^9, 3.914854689326251*^9}, {3.914854809885139*^9, 
   3.9148549250914583`*^9}, {3.9148554677184668`*^9, 3.914855468864156*^9}, {
   3.914855521880478*^9, 3.914855554542882*^9}, {3.914855607634289*^9, 
   3.9148557202716713`*^9}},ExpressionUUID->"1aa690f3-7547-429a-9adf-\
80c9b158f5fa"],

Cell["\<\
Lastly, if you were to use the command:  RL = GPx + RNy + Carry, and if Bit 0 \
of GPx = 0, then row 23 of segment 1 will be read if RNy points to a row \
segment 2, and row 23 of segment 2 will be read if RNy points to a row in \
segment 1.\
\>", "Text",
 CellChangeTimes->{
  3.914853744574864*^9, {3.914853787249*^9, 3.914853830014861*^9}, {
   3.9148539005358677`*^9, 3.914853933591462*^9}, {3.914854179615677*^9, 
   3.9148543355036087`*^9}, {3.914854615661273*^9, 3.914854617052215*^9}, {
   3.914854660500276*^9, 3.914854689326251*^9}, {3.914854809885139*^9, 
   3.9148549250914583`*^9}, {3.9148554677184668`*^9, 3.914855468864156*^9}, {
   3.914855521880478*^9, 3.914855554542882*^9}, {3.914855607634289*^9, 
   3.914855726989908*^9}},ExpressionUUID->"0f1dfe74-241d-4aa5-be09-\
08f9049154e5"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1707, 1387},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringDrop[LinterUIDockedCell`Private`previewString, -1] <> 
                 "\[Ellipsis]", 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{
             LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := ((
           "CodeInspector`LinterUI`Private`Vars`" <> "$$") <> 
          With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]) <> "$$", Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := ((
           CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]) <> "$$") <> 
         CodeInspector`LinterUI`Private`name, 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>1.5 Inherited,
FrontEndVersion->"14.0 for Mac OS X ARM (64-bit) (December 12, 2023)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"a9d5d1da-1c39-4b42-a726-365d7c837254"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 170, 2, 144, "Title",ExpressionUUID->"16778456-057a-439b-ac55-77ff6b95996b"],
Cell[753, 26, 741, 12, 87, "Text",ExpressionUUID->"bb44a52a-3340-48bd-8613-f25291fbd940"],
Cell[CellGroupData[{
Cell[1519, 42, 176, 2, 104, "Section",ExpressionUUID->"46aa0c78-f109-4a03-9859-cba679dbb122"],
Cell[1698, 46, 330, 10, 52, "Text",ExpressionUUID->"fcaa720b-2379-4cda-b331-877ab0e15be3"],
Cell[2031, 58, 511, 13, 87, "Text",ExpressionUUID->"9f6944e9-2232-4b51-a117-4fcd0de51546"],
Cell[2545, 73, 243, 5, 63, "Input",ExpressionUUID->"596e0ac3-24aa-4a16-9243-f7df7cc9153d",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[2825, 83, 259, 5, 104, "Section",ExpressionUUID->"275fc064-9f7b-4419-94fc-12b45d800c9d"],
Cell[3087, 90, 940, 19, 121, "Text",ExpressionUUID->"33053ebb-4258-47ab-8886-21fee119d1a9"],
Cell[4030, 111, 357, 7, 63, "Input",ExpressionUUID->"35a3dfce-032c-48b6-9c2f-24649b1f54d2",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[4412, 122, 117, 1, 51, "Subsection",ExpressionUUID->"00da3566-785a-4257-a2ce-f6167477458f"],
Cell[4532, 125, 116, 0, 52, "Text",ExpressionUUID->"603ef7d2-68da-433f-be48-b1eb2dbb602e"],
Cell[4651, 127, 173, 4, 121, "Text",ExpressionUUID->"b906b5b9-ca12-4bc6-b841-7ab7a37a5a5f"],
Cell[4827, 133, 710, 16, 466, "Text",ExpressionUUID->"a8734c96-c275-46db-a49c-f02d5fb57c5a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5574, 154, 114, 1, 51, "Subsection",ExpressionUUID->"0c2def3a-16a3-47d2-aacc-e474def23be1"],
Cell[CellGroupData[{
Cell[5713, 159, 9403, 249, 2015, "Code",ExpressionUUID->"f209d8cf-1294-47ce-be5e-0c5c5ab9bf40"],
Cell[15119, 410, 782, 11, 70, "Output",ExpressionUUID->"92f518c7-c241-4bd3-8d2a-6efc3c78eb02"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15938, 426, 286, 7, 101, "Code",ExpressionUUID->"1a9d9167-e341-436b-b203-3b691ecfd203"],
Cell[16227, 435, 787, 11, 70, "Output",ExpressionUUID->"97160242-a650-4442-80d6-22f7ec82f6fb"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17063, 452, 137, 1, 51, "Subsection",ExpressionUUID->"8dc42121-ae75-4d2a-ba62-a4f41b979400"],
Cell[CellGroupData[{
Cell[17225, 457, 119, 1, 49, "Subsubsection",ExpressionUUID->"565a04b9-d653-467e-82c5-2f795435f8d6"],
Cell[17347, 460, 184, 3, 52, "Text",ExpressionUUID->"6fe83b28-0392-48ff-a40d-e5b36626d66d"],
Cell[17534, 465, 14888, 476, 1667, "Code",ExpressionUUID->"92ea27d1-23fd-4cfc-a4f6-88a9c13a37c7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[32471, 947, 131, 1, 51, "Subsection",ExpressionUUID->"6c904ca5-ebdf-4c97-b74d-88daeb2d5bf2"],
Cell[32605, 950, 756, 20, 188, "Code",ExpressionUUID->"1d62defa-6659-41c5-8e12-508f744a34d8"],
Cell[33364, 972, 1836, 49, 362, "Code",ExpressionUUID->"6269d9eb-66fa-462c-84bf-8e3bd330de22"],
Cell[35203, 1023, 1150, 23, 420, "Code",ExpressionUUID->"5162c3fd-4512-4384-95ed-e3ee07610e72"],
Cell[36356, 1048, 663, 17, 188, "Code",ExpressionUUID->"cb8b6e5d-1264-4e6a-bca6-a1794465ea9a"],
Cell[37022, 1067, 666, 17, 188, "Code",ExpressionUUID->"58a34af5-e785-48e2-b1f5-de24ce45d191"],
Cell[37691, 1086, 667, 17, 188, "Code",ExpressionUUID->"c440acd6-10fc-4417-a0ba-51466233e4ba"],
Cell[38361, 1105, 512, 13, 188, "Code",ExpressionUUID->"bd85321d-dc77-4067-a615-ffa67c901d91"],
Cell[CellGroupData[{
Cell[38898, 1122, 123, 1, 49, "Subsubsection",ExpressionUUID->"109049a2-b6ed-4160-8c49-6b638bf68dcd"],
Cell[39024, 1125, 121, 0, 52, "Text",ExpressionUUID->"f650e8df-a47c-43e9-af80-be167fb02c2d"],
Cell[39148, 1127, 1014, 27, 159, "Code",ExpressionUUID->"86481609-d4e1-41c9-aae7-630a01a10633"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40199, 1159, 120, 1, 49, "Subsubsection",ExpressionUUID->"ea5ead3c-1661-4f1a-9330-06377153588a"],
Cell[40322, 1162, 145, 2, 52, "Text",ExpressionUUID->"42d804f0-1bb1-48f4-9043-42d97f7b437a"],
Cell[40470, 1166, 1400, 40, 275, "Code",ExpressionUUID->"cc822aa0-3944-40e0-ae24-c1ecc5f68d89"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41907, 1211, 109, 1, 49, "Subsubsection",ExpressionUUID->"feae17b0-b265-481e-bbfb-a7de52c05825"],
Cell[42019, 1214, 102, 0, 52, "Text",ExpressionUUID->"144277bb-a32c-4e9f-bdef-2c5ef0a8e5ce"],
Cell[42124, 1216, 1836, 50, 217, "Code",ExpressionUUID->"f7b4a485-eed7-445b-99e2-3d7c29eb78be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43997, 1271, 121, 1, 49, "Subsubsection",ExpressionUUID->"209db018-6df9-4045-8adf-1ed8954b090f"],
Cell[44121, 1274, 2296, 65, 362, "Code",ExpressionUUID->"1cf66d2f-ff54-46ce-9637-68d395088166"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46454, 1344, 119, 1, 49, "Subsubsection",ExpressionUUID->"5245bd02-98f3-4b51-863b-a360e656bd01"],
Cell[46576, 1347, 167, 3, 52, "Text",ExpressionUUID->"bf1df186-530c-459b-a7ea-435de8d350a0"],
Cell[46746, 1352, 4308, 110, 623, "Code",ExpressionUUID->"5e627712-3b23-453e-b3fb-7feedd764f0c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51091, 1467, 119, 1, 49, "Subsubsection",ExpressionUUID->"da4db3de-9a4e-4e7a-9533-fc8ed2b958e3"],
Cell[51213, 1470, 173, 3, 52, "Text",ExpressionUUID->"1d2bab46-c77a-40ec-906d-d45a3f4ea2de"],
Cell[51389, 1475, 6370, 160, 1000, "Code",ExpressionUUID->"e646eb3e-a30f-4022-96a4-5de40612e6e9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57796, 1640, 119, 1, 49, "Subsubsection",ExpressionUUID->"eba03a26-0ea9-494f-ab07-0ae491adc196"],
Cell[57918, 1643, 186, 3, 52, "Text",ExpressionUUID->"49fb295a-595e-464f-871a-9c1ecff9c840"],
Cell[58107, 1648, 1685, 48, 275, "Code",ExpressionUUID->"c71771b1-8632-495d-91d2-d044ef9e385d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[59841, 1702, 120, 1, 51, "Subsection",ExpressionUUID->"9c936527-4761-4c87-a523-014a06803d1b"],
Cell[CellGroupData[{
Cell[59986, 1707, 113, 1, 49, "Subsubsection",ExpressionUUID->"9ae2c10b-2ef4-4684-8013-1c05d0dd0861"],
Cell[60102, 1710, 217, 3, 52, "Text",ExpressionUUID->"8e5db420-409f-4ae5-a65a-37a69d109f93"],
Cell[60322, 1715, 537, 16, 101, "Code",ExpressionUUID->"1630b32c-bbee-426a-b4a7-2d2d62f96ba7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60896, 1736, 115, 1, 49, "Subsubsection",ExpressionUUID->"e2986885-94da-450e-9b95-1508c3ff7b03"],
Cell[61014, 1739, 152, 2, 52, "Text",ExpressionUUID->"385a54aa-cf0a-4e28-b836-116d12a6382a"],
Cell[61169, 1743, 413, 12, 101, "Code",ExpressionUUID->"ea6ba9d9-23c9-42d6-acd4-3c10f2815731"],
Cell[61585, 1757, 333, 5, 87, "Text",ExpressionUUID->"f2180c3c-10aa-43f5-abad-6471ecaa47f6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61955, 1767, 113, 1, 49, "Subsubsection",ExpressionUUID->"5f006df1-1bcf-4b0c-bcbd-2f695b3cfe12"],
Cell[62071, 1770, 324, 10, 71, "Code",ExpressionUUID->"f10217d0-3ba5-4ab6-8064-26fd2a1e24b7"],
Cell[62398, 1782, 509, 15, 101, "Code",ExpressionUUID->"834b77d6-e664-409f-a1cc-d42929ebab9a"],
Cell[62910, 1799, 170, 3, 52, "Text",ExpressionUUID->"cceeec7e-87b5-4ce0-871b-694f28bbfd64"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63117, 1807, 115, 1, 49, "Subsubsection",ExpressionUUID->"928ff4d6-1f58-4287-bf21-25d0484cc738"],
Cell[63235, 1810, 304, 9, 71, "Code",ExpressionUUID->"228b43b7-3236-4c18-b75f-6cb28075ec15"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63576, 1824, 114, 1, 49, "Subsubsection",ExpressionUUID->"5c8ebedc-fabb-41fd-8154-5a28af7c23f5"],
Cell[63693, 1827, 369, 11, 101, "Code",ExpressionUUID->"5081ce6e-e5b2-4378-9366-a404c818bfe1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64099, 1843, 118, 1, 49, "Subsubsection",ExpressionUUID->"7b10b057-92ee-4c9e-9cd7-70e287fc7899"],
Cell[64220, 1846, 314, 10, 101, "Code",ExpressionUUID->"d1cded5f-5f11-41ee-992d-4d322e854c52"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64571, 1861, 115, 1, 49, "Subsubsection",ExpressionUUID->"5e68b14b-354b-4a9f-857d-6d99b7045c8b"],
Cell[64689, 1864, 586, 18, 101, "Code",ExpressionUUID->"1abf3285-17d9-4ad4-9131-0431366e29e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65312, 1887, 117, 1, 49, "Subsubsection",ExpressionUUID->"f12a704c-4b0a-4fe9-be46-a456de3e10b4"],
Cell[65432, 1890, 415, 12, 101, "Code",ExpressionUUID->"a54c7165-7ddf-4257-90e1-3c633ef265c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65884, 1907, 113, 1, 49, "Subsubsection",ExpressionUUID->"50c4a083-ba6f-4684-9047-a4e950af419f"],
Cell[66000, 1910, 256, 7, 71, "Code",ExpressionUUID->"275feff0-2b2d-445e-92f0-5c3d7f3bf4b6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[66305, 1923, 105, 1, 51, "Subsection",ExpressionUUID->"7503814c-2574-48b1-8ded-96899394b3e6"],
Cell[66413, 1926, 131, 0, 52, "Text",ExpressionUUID->"75bc1d17-74cf-4fcc-a18f-82b00de6a952"],
Cell[CellGroupData[{
Cell[66569, 1930, 111, 1, 49, "Subsubsection",ExpressionUUID->"b5d110d1-03b1-4eff-95ae-17e8230c175a"],
Cell[66683, 1933, 324, 9, 71, "Code",ExpressionUUID->"cb2b5b0f-3a05-4d70-ba30-b74851d9e0c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67044, 1947, 114, 1, 49, "Subsubsection",ExpressionUUID->"19ce5ce6-9b0b-424b-91ad-9173b6c1cc47"],
Cell[67161, 1950, 254, 7, 71, "Code",ExpressionUUID->"6b2e88a3-0386-41d9-8e2c-7b37623f9418"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67452, 1962, 126, 1, 49, "Subsubsection",ExpressionUUID->"93796c7d-cb3b-4acf-888a-64bcc6d73f3d"],
Cell[67581, 1965, 347, 10, 71, "Code",ExpressionUUID->"575b0423-8eeb-45ef-9812-641d07fbda65"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67965, 1980, 134, 1, 49, "Subsubsection",ExpressionUUID->"980d7348-63f4-454c-bd00-bff991a7ef9c"],
Cell[68102, 1983, 836, 24, 130, "Code",ExpressionUUID->"67edac52-9df2-4f91-84a6-56f8d7e43a30"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68975, 2012, 136, 1, 49, "Subsubsection",ExpressionUUID->"6b24564e-a8c9-49ef-bebc-19f6a3a6c313"],
Cell[CellGroupData[{
Cell[69136, 2017, 220, 5, 71, "Code",ExpressionUUID->"6d9e779b-e88a-41a9-b493-bb57752424a5"],
Cell[69359, 2024, 871, 15, 70, "Output",ExpressionUUID->"86c7b479-04c2-40f7-a327-a0f82a5140fe"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[70279, 2045, 127, 1, 49, "Subsubsection",ExpressionUUID->"988aa313-c8bc-48b2-8ccf-8d7edf3940cc"],
Cell[70409, 2048, 1064, 32, 188, "Code",ExpressionUUID->"2c16259a-5286-467f-9a0f-acd1461dba9c"],
Cell[71476, 2082, 679, 20, 130, "Code",ExpressionUUID->"bda6fa45-ad4e-4392-921d-1f6a5157ed59"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72192, 2107, 128, 1, 49, "Subsubsection",ExpressionUUID->"96467067-1ba7-4925-b4ff-bac52876e9d9"],
Cell[72323, 2110, 1109, 33, 188, "Code",ExpressionUUID->"fcb648ee-c7f9-462a-9cbf-f85128e382e5"],
Cell[73435, 2145, 937, 27, 159, "Code",ExpressionUUID->"c1c618f1-49bc-4e21-a7f3-b7a150a028f6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74409, 2177, 115, 1, 49, "Subsubsection",ExpressionUUID->"c00bca25-b1a1-48c0-96b7-a12e4b820ca9"],
Cell[74527, 2180, 186, 3, 52, "Text",ExpressionUUID->"850a9b30-97f0-47cd-b942-8498cc872403"],
Cell[74716, 2185, 333, 8, 71, "Code",ExpressionUUID->"a779046f-72e3-4642-8e9e-91a648e70002"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75086, 2198, 121, 1, 49, "Subsubsection",ExpressionUUID->"f7bd4955-d7c8-4917-9de5-0f51edc6d868"],
Cell[75210, 2201, 112, 0, 52, "Text",ExpressionUUID->"02087736-8065-4215-a645-2a1285e3177b"],
Cell[75325, 2203, 769, 18, 501, "Text",ExpressionUUID->"a6d8013d-bd1a-4361-be5a-07b7d86926b7"],
Cell[76097, 2223, 179, 3, 52, "Text",ExpressionUUID->"a27b1319-66db-4fc9-b739-cb70d8df63f6"],
Cell[76279, 2228, 1695, 47, 391, "Code",ExpressionUUID->"61409ae6-0c93-43c8-83e0-aa9a406bb01e"]
}, Open  ]]
}, Open  ]],
Cell[78001, 2279, 117, 1, 51, "Subsection",ExpressionUUID->"11e5c0ed-b2e1-45b3-9215-3360a79b659c"],
Cell[CellGroupData[{
Cell[78143, 2284, 116, 1, 49, "Subsection",ExpressionUUID->"19266de1-5d22-4c11-8020-1a4f0a72848d"],
Cell[CellGroupData[{
Cell[78284, 2289, 111, 1, 49, "Subsubsection",ExpressionUUID->"3d9b0787-1ad1-4684-9722-a23584183a8e"],
Cell[78398, 2292, 310, 10, 101, "Code",ExpressionUUID->"fd5ec8dd-725e-4ddc-b187-93909d0f0468"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78745, 2307, 115, 1, 49, "Subsubsection",ExpressionUUID->"a9b0cfb2-79af-486f-bc56-07224b376ff9"],
Cell[78863, 2310, 322, 10, 101, "Code",ExpressionUUID->"ed7bc27e-e897-40dd-8c3a-e6d86341fe2a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79222, 2325, 114, 1, 49, "Subsubsection",ExpressionUUID->"43d6c894-b3bb-4a5a-9cf3-dd16d284411e"],
Cell[79339, 2328, 319, 10, 101, "Code",ExpressionUUID->"0c11a1bb-4f81-4fd1-b2c0-237978f42cdd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79695, 2343, 120, 1, 49, "Subsubsection",ExpressionUUID->"a9c19549-6460-4567-abab-0ee2b2b569c2"],
Cell[79818, 2346, 529, 11, 217, "Code",ExpressionUUID->"790ce1c6-dbe3-4c3c-921e-f5a6c12c08b3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80384, 2362, 128, 1, 49, "Subsubsection",ExpressionUUID->"5149ca28-cad2-4b38-ad4c-77e4fc1aa044"],
Cell[80515, 2365, 1933, 47, 362, "Code",ExpressionUUID->"c9516960-da82-4871-9450-97e3726fb7ac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82485, 2417, 133, 1, 49, "Subsubsection",ExpressionUUID->"673644a5-91c0-4312-9a32-aa9beb2d4b81"],
Cell[82621, 2420, 557, 16, 130, "Code",ExpressionUUID->"6ea1a966-a82c-4f0a-922a-dc91cadc234e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83215, 2441, 128, 1, 49, "Subsubsection",ExpressionUUID->"75cd284c-2d82-4917-a33e-be5a8f6735ff"],
Cell[83346, 2444, 2109, 57, 362, "Code",ExpressionUUID->"7620bb13-a354-494d-991f-864c454cd3b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85492, 2506, 139, 1, 49, "Subsubsection",ExpressionUUID->"9b76e979-0ec8-4b33-825d-8eb7d786e15f"],
Cell[85634, 2509, 1591, 42, 362, "Code",ExpressionUUID->"a77f4c6b-d043-4860-a853-a92da54fd921"],
Cell[87228, 2553, 4224, 107, 710, "Code",ExpressionUUID->"270778b8-2827-4a5c-905b-7e55434dfaba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91489, 2665, 143, 1, 49, "Subsubsection",ExpressionUUID->"d8289050-af99-4596-a38c-da0b14212eb2"],
Cell[91635, 2668, 290, 5, 87, "Text",ExpressionUUID->"2e8b0375-1677-45b8-b081-93a46dfcb951"],
Cell[91928, 2675, 2451, 61, 391, "Code",ExpressionUUID->"8163b191-2503-4f5c-9dc6-58bd0e11efae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94416, 2741, 132, 1, 49, "Subsubsection",ExpressionUUID->"fc94bfba-19c7-4dab-afaf-70fe2d9db925"],
Cell[94551, 2744, 166, 3, 52, "Text",ExpressionUUID->"04da459c-8ea4-49e2-be36-3283e39db558"],
Cell[94720, 2749, 2366, 60, 391, "Code",ExpressionUUID->"490605d1-1812-4670-8144-10c51f8a285b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97123, 2814, 137, 1, 49, "Subsubsection",ExpressionUUID->"f2cff17d-4d36-4756-bb6a-63f06b29145d"],
Cell[97263, 2817, 731, 21, 188, "Code",ExpressionUUID->"fd4ee73f-e39f-460c-b861-1f6bdbcf51ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98031, 2843, 132, 1, 49, "Subsubsection",ExpressionUUID->"dbb42862-8ab9-42f9-8e87-c1fc197b6ddf"],
Cell[98166, 2846, 369, 9, 101, "Code",ExpressionUUID->"150e6b6b-df80-443b-913c-6398abd20779"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98572, 2860, 153, 1, 49, "Subsubsection",ExpressionUUID->"21d709c9-ecb8-418b-a260-60d69a3a13da"],
Cell[98728, 2863, 90, 0, 52, "Text",ExpressionUUID->"b55d9cff-9f40-4254-97f8-b096ed5c7a10"],
Cell[98821, 2865, 307, 8, 71, "Code",ExpressionUUID->"b5c7b59a-786b-4213-91df-eb75cf85d7f2"],
Cell[99131, 2875, 86, 0, 52, "Text",ExpressionUUID->"02484a4b-c72d-4bbf-b1e9-d34478799697"],
Cell[99220, 2877, 624, 17, 101, "Code",ExpressionUUID->"9ee56195-4d24-493c-889c-e4330c4f66f2"],
Cell[99847, 2896, 90, 0, 52, "Text",ExpressionUUID->"71f1bc89-0874-44f6-817a-31fa8e0008c4"],
Cell[99940, 2898, 677, 19, 130, "Code",ExpressionUUID->"6c080a35-40c8-498e-a077-c51a6f789946"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100654, 2922, 165, 4, 88, "Subsubsection",ExpressionUUID->"e3780f67-5a3f-4006-89b4-22f2aa79c83d"],
Cell[100822, 2928, 90, 0, 52, "Text",ExpressionUUID->"03491a5e-0e3d-4b3c-8602-51661b2c9096"],
Cell[100915, 2930, 310, 8, 71, "Code",ExpressionUUID->"0250971a-bcf0-4304-86bd-ebe1ee928bde"],
Cell[101228, 2940, 86, 0, 52, "Text",ExpressionUUID->"add2d11d-d825-4fd8-8743-b2e5f6bf4109"],
Cell[101317, 2942, 566, 15, 101, "Code",ExpressionUUID->"e51e53f3-f757-4460-83ce-8c47001219f9"],
Cell[101886, 2959, 90, 0, 52, "Text",ExpressionUUID->"75a67e81-495d-440f-b610-19c2976b4399"],
Cell[101979, 2961, 689, 19, 130, "Code",ExpressionUUID->"b8c7bf2a-613b-4b8b-a10e-6b7190e5b948"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[102717, 2986, 118, 1, 51, "Subsection",ExpressionUUID->"9f63a398-d374-4970-a237-cd5cde694e93"],
Cell[102838, 2989, 3542, 80, 1058, "Code",ExpressionUUID->"81a041b3-1a85-4a89-8a62-d73393f31edf"],
Cell[106383, 3071, 3285, 74, 1000, "Code",ExpressionUUID->"e8e1a2cb-7f07-454b-8689-0fe7fb6079cc"],
Cell[109671, 3147, 602, 13, 188, "Code",ExpressionUUID->"6eb0fbb7-85e1-49ab-b632-01eac5a469b2"],
Cell[110276, 3162, 741, 17, 217, "Code",ExpressionUUID->"4b7b4a58-3b0c-4de9-a813-efdede4ad051"],
Cell[111020, 3181, 877, 20, 246, "Code",ExpressionUUID->"60d46b24-1a4b-489d-bd01-e6c760592a14"],
Cell[111900, 3203, 707, 17, 188, "Code",ExpressionUUID->"4c5b263d-7092-4123-b209-e77c955f261a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112644, 3225, 106, 1, 51, "Subsection",ExpressionUUID->"7537c387-7323-4ff0-9a0d-0b5588483013"],
Cell[112753, 3228, 211, 6, 71, "Code",ExpressionUUID->"377f5257-1ece-4e4d-ba13-ff834e5f99bb"],
Cell[112967, 3236, 158, 4, 71, "Code",ExpressionUUID->"918ae5e9-ed89-472f-8b8a-42240344be15"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[113174, 3246, 165, 2, 81, "Section",ExpressionUUID->"894b628a-bb6d-446b-8011-dd1c8ba04cff"],
Cell[113342, 3250, 596, 14, 53, "Text",ExpressionUUID->"8a4d7e42-023c-40a8-ab10-8f81ae606672"],
Cell[CellGroupData[{
Cell[113963, 3268, 348, 8, 66, "Input",ExpressionUUID->"17e11793-12a4-41d3-a00b-76212d548a51"],
Cell[114314, 3278, 580, 9, 63, "Output",ExpressionUUID->"40fb0dde-ba5b-4690-88f8-cd444b1550ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114931, 3292, 496, 13, 66, "Input",ExpressionUUID->"403c9da7-de3b-4b5d-8ce2-93f2af135512"],
Cell[115430, 3307, 630, 10, 63, "Output",ExpressionUUID->"9cb284e8-ce26-4865-86b7-22868b515c94"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116097, 3322, 497, 13, 66, "Input",ExpressionUUID->"207884bd-3e3c-4bb4-a8a4-3ed5c082a5ba"],
Cell[116597, 3337, 600, 9, 63, "Output",ExpressionUUID->"d26d7064-4132-41b3-9ab1-65e053edb7cf"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[117246, 3352, 175, 2, 81, "Section",ExpressionUUID->"d2b22d21-9128-4b2c-bb34-3840452aab68"],
Cell[117424, 3356, 244, 5, 52, "Text",ExpressionUUID->"fecf91e9-0d85-4a8c-94d0-870a8ffcd3ed"],
Cell[117671, 3363, 1076, 26, 188, "Input",ExpressionUUID->"3e6d4f79-d9e6-43d1-914b-406a163edca0",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[118784, 3394, 228, 3, 81, "Section",ExpressionUUID->"38ce5bba-abeb-447f-9921-e0711f467ee7"],
Cell[CellGroupData[{
Cell[119037, 3401, 176, 2, 51, "Subsection",ExpressionUUID->"8c1da47a-ee85-47d6-b344-990faf75b1d8"],
Cell[119216, 3405, 246, 4, 52, "Text",ExpressionUUID->"7e7e40bb-bcef-4e48-bce9-66818b27ea34"],
Cell[119465, 3411, 366, 8, 95, "Input",ExpressionUUID->"c7117b70-b1f2-4725-9f43-a71f3384694d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119868, 3424, 278, 4, 51, "Subsection",ExpressionUUID->"96445b4c-0980-4255-8806-435dec960025"],
Cell[120149, 3430, 1040, 23, 219, "Input",ExpressionUUID->"22b6a661-0d5c-4c50-a94a-02a97e53d2dc"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[121238, 3459, 205, 2, 81, "Section",ExpressionUUID->"3ec8a088-47c6-4c17-b678-206d76763c30"],
Cell[121446, 3463, 153, 3, 52, "Text",ExpressionUUID->"7dadefef-3bd5-4c1f-b282-704280f69acd"],
Cell[CellGroupData[{
Cell[121624, 3470, 173, 2, 51, "Subsection",ExpressionUUID->"bc2dd19b-04b3-425d-92f9-c53535d39ae8"],
Cell[121800, 3474, 370, 8, 52, "Text",ExpressionUUID->"104531b8-6de6-4478-8eed-453b1b0b2865"],
Cell[122173, 3484, 1223, 30, 343, "Input",ExpressionUUID->"4c0ea9c0-ecc4-4b18-a07d-b1ef34f2fbbe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123433, 3519, 173, 2, 51, "Subsection",ExpressionUUID->"8d8f8580-e90f-4ce0-bc97-d19fbbf94478"],
Cell[123609, 3523, 920, 23, 250, "Input",ExpressionUUID->"91770af6-dff2-4383-b864-2686e1fb23ba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124566, 3551, 171, 2, 51, "Subsection",ExpressionUUID->"7b56d7ce-4dff-4046-b6eb-083a6088eee2"],
Cell[124740, 3555, 4030, 110, 374, "Input",ExpressionUUID->"fe7e4204-5253-4934-a536-1d3342189b04"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128807, 3670, 166, 2, 51, "Subsection",ExpressionUUID->"ade8c261-1c6d-46e1-a4d4-06924d60adca"],
Cell[128976, 3674, 288, 7, 52, "Text",ExpressionUUID->"e8d6f8ec-650e-4d54-82a2-b2690f1154d8"],
Cell[129267, 3683, 232, 5, 63, "Input",ExpressionUUID->"8243b4e2-fe10-4523-a764-c1d30833c2f1"],
Cell[129502, 3690, 1441, 33, 122, "Text",ExpressionUUID->"ac85bdb0-5022-4d3f-add7-f64a8b47ea7b"],
Cell[130946, 3725, 3106, 71, 253, "Input",ExpressionUUID->"08862b2e-bd29-469b-85c3-ebf3a7762621"],
Cell[CellGroupData[{
Cell[134077, 3800, 226, 3, 49, "Subsubsection",ExpressionUUID->"f6e1b9a9-e80a-4942-b37a-14d5b683dbe5"],
Cell[134306, 3805, 1006, 16, 63, "Input",ExpressionUUID->"f708d845-acfd-4ed1-9a4a-3f6a216f4263"],
Cell[135315, 3823, 463, 12, 87, "Text",ExpressionUUID->"df4b6dbf-e1ee-4281-89d0-c68cae2a37a1"],
Cell[135781, 3837, 2382, 56, 188, "Input",ExpressionUUID->"d34adc51-70d9-4d60-b3fa-863dbdde39df"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[138212, 3899, 167, 2, 51, "Subsection",ExpressionUUID->"c0f8f4bb-78e7-4e33-91d1-6d761efb8cf2"],
Cell[138382, 3903, 214, 4, 52, "Text",ExpressionUUID->"7ce5f8b1-9b31-4760-9852-e272e96ea97b"],
Cell[138599, 3909, 2827, 63, 191, "Input",ExpressionUUID->"45e94f2b-d6c0-44cf-bb6f-debad13aa471"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141463, 3977, 166, 2, 51, "Subsection",ExpressionUUID->"5af2f7c2-b1e2-4159-b039-c6e09045abde"],
Cell[141632, 3981, 326, 8, 52, "Text",ExpressionUUID->"05f3d6ed-a5bc-4a47-b7bb-fb58e0587a0c"],
Cell[141961, 3991, 7996, 220, 628, "Input",ExpressionUUID->"263feafb-68c8-4fdb-8f8c-d01a00ac2591"],
Cell[CellGroupData[{
Cell[149982, 4215, 176, 2, 49, "Subsubsection",ExpressionUUID->"04a1224b-8f60-41af-9bea-44422f50bd4e"],
Cell[150161, 4219, 279, 9, 52, "Text",ExpressionUUID->"740ccb36-9fd5-4c0c-8146-ca76a70931e9"],
Cell[150443, 4230, 1333, 41, 157, "Input",ExpressionUUID->"581c24b1-b797-4e02-95f5-f2b18414d69b"],
Cell[151779, 4273, 2570, 62, 250, "Input",ExpressionUUID->"287af2d0-eebf-4a38-8ba6-b7b846b3f68c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[154398, 4341, 203, 2, 51, "Subsection",ExpressionUUID->"e92ea7ab-ebd2-4521-bd7c-54294000e3ac"],
Cell[154604, 4345, 256, 6, 52, "Text",ExpressionUUID->"83dd286a-fd1d-4c9a-a02b-e299417ea21a"],
Cell[154863, 4353, 146, 3, 52, "Text",ExpressionUUID->"dfcfb9a6-3aac-490b-93cb-b4f9b2089047"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[155058, 4362, 173, 2, 104, "Section",ExpressionUUID->"310498a4-5a0f-45d0-bb5c-d2ce528a4060"],
Cell[CellGroupData[{
Cell[155256, 4368, 172, 2, 51, "Subsection",ExpressionUUID->"47d11e8c-b442-41de-aa25-7d42972cf853"],
Cell[CellGroupData[{
Cell[155453, 4374, 170, 2, 49, "Subsubsection",ExpressionUUID->"f7712b0e-7194-4b45-baf4-f2c10a643945"],
Cell[155626, 4378, 106828, 1756, 712, "Input",ExpressionUUID->"b93159aa-9094-4b21-a2cb-c6ff331d4b0e",
 Evaluatable->False],
Cell[262457, 6136, 335, 9, 52, "Text",ExpressionUUID->"7bc07e70-632e-4c13-9e3d-723aea1047c5"],
Cell[CellGroupData[{
Cell[262817, 6149, 2344, 57, 314, "Input",ExpressionUUID->"b243217a-67fc-41af-be92-f024e641ff60"],
Cell[265164, 6208, 939, 16, 63, "Output",ExpressionUUID->"aee296a5-1df3-4a12-bd87-4e1fe789942e"],
Cell[266106, 6226, 944, 16, 63, "Output",ExpressionUUID->"c6fe7de6-ac18-4f08-ac70-f7e40d3aac85"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[267099, 6248, 223, 3, 49, "Subsubsection",ExpressionUUID->"701b9949-772f-447b-864c-13f0159270cf"],
Cell[267325, 6253, 53164, 876, 837, "Input",ExpressionUUID->"0d0449a7-4407-4206-8b46-58a30d203181",
 Evaluatable->False],
Cell[320492, 7131, 356, 8, 52, "Text",ExpressionUUID->"faa1447d-93db-47ba-946b-268a4215ec60"],
Cell[320851, 7141, 435, 9, 52, "Text",ExpressionUUID->"5eb90d68-6334-4dfe-bf69-c8dd9aab86f9"],
Cell[CellGroupData[{
Cell[321311, 7154, 1829, 48, 283, "Input",ExpressionUUID->"63fccaa4-7d0e-4b51-9770-2918871d063e"],
Cell[323143, 7204, 565, 10, 63, "Output",ExpressionUUID->"ff7a26e7-20a4-41aa-9c92-a77b964fd359"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[323757, 7220, 227, 3, 49, "Subsubsection",ExpressionUUID->"c0c5aa46-2bf3-4200-bced-550c3809895d"],
Cell[323987, 7225, 120626, 1982, 654, "Input",ExpressionUUID->"e7275adc-6734-4243-ae6c-4b838fb2e2c4",
 Evaluatable->False],
Cell[444616, 9209, 325, 7, 52, "Text",ExpressionUUID->"0218c080-c1f9-4f92-8318-d65ab9434752"],
Cell[CellGroupData[{
Cell[444966, 9220, 2025, 50, 345, "Input",ExpressionUUID->"36baf6c3-55da-43f0-9af1-f5b803d12771"],
Cell[446994, 9272, 515, 10, 63, "Output",ExpressionUUID->"c3b8125c-1934-4716-b82a-7cd39ba93a38"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[447558, 9288, 230, 3, 49, "Subsubsection",ExpressionUUID->"9135dd45-1914-4a20-8359-fb305fce6ea0"],
Cell[CellGroupData[{
Cell[447813, 9295, 472, 11, 66, "Input",ExpressionUUID->"044dda7d-fb63-47c9-a4ee-1c636c4692b7"],
Cell[448288, 9308, 250, 4, 63, "Output",ExpressionUUID->"aa642d39-1c25-400c-b24c-d569937499f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[448575, 9317, 2146, 53, 259, "Input",ExpressionUUID->"8cdc09f3-4219-4f79-90a0-26848aeebc9d"],
Cell[450724, 9372, 995, 16, 63, "Output",ExpressionUUID->"65073cd8-b4b0-406d-9c2f-e9accdc0f418"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[451768, 9394, 227, 3, 49, "Subsubsection",ExpressionUUID->"83b7cc3b-1446-4df4-af8a-bcf1180764b0"],
Cell[451998, 9399, 181, 3, 52, "Text",ExpressionUUID->"79fb0cd0-56a2-448a-9148-d1ff4b330294"],
Cell[CellGroupData[{
Cell[452204, 9406, 1959, 48, 283, "Input",ExpressionUUID->"167182c3-5b56-46d4-999f-74969901837f"],
Cell[454166, 9456, 792, 14, 63, "Output",ExpressionUUID->"123420d3-0220-40ed-b14c-1288d748813f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[455007, 9476, 231, 3, 49, "Subsubsection",ExpressionUUID->"57b53ba3-94aa-46c8-802a-ab0b7c678f45"],
Cell[CellGroupData[{
Cell[455263, 9483, 1725, 45, 283, "Input",ExpressionUUID->"9d199b59-448b-48d0-8b6e-89356ed36979"],
Cell[456991, 9530, 654, 11, 63, "Output",ExpressionUUID->"3195a254-aac7-4634-9740-127cd8143532"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[457694, 9547, 225, 3, 49, "Subsubsection",ExpressionUUID->"0669b92a-0f52-4151-a1c3-c0c45b2bd32f"],
Cell[457922, 9552, 151, 3, 52, "Text",ExpressionUUID->"4330b4ce-7a29-45cf-9426-8a9bd3c427f6"],
Cell[CellGroupData[{
Cell[458098, 9559, 1348, 35, 221, "Input",ExpressionUUID->"d7d670bf-24f0-401f-a3d4-ad7cf95b0cf8"],
Cell[459449, 9596, 625, 11, 63, "Output",ExpressionUUID->"f7531b12-0d7e-48c4-a8e4-6a9ca2629fe0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[460123, 9613, 169, 2, 49, "Subsubsection",ExpressionUUID->"ba42def2-3b56-433a-a787-43ed7ea1261d"],
Cell[CellGroupData[{
Cell[460317, 9619, 1479, 40, 252, "Input",ExpressionUUID->"0382f539-fca7-420b-94d2-f9e819c08c8b"],
Cell[461799, 9661, 677, 12, 63, "Output",ExpressionUUID->"7a1f49ae-2335-4315-b258-fae15035150c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[462537, 9680, 232, 3, 51, "Subsection",ExpressionUUID->"b771c3e3-5dcb-477a-a93c-52ce0ebc6bed"],
Cell[462772, 9685, 255, 5, 52, "Text",ExpressionUUID->"e60b27ab-3b37-4a08-b308-53321816fc81"],
Cell[CellGroupData[{
Cell[463052, 9694, 225, 3, 49, "Subsubsection",ExpressionUUID->"75444226-7dc4-460b-8ab0-5fcfcd9465b2"],
Cell[463280, 9699, 251, 5, 52, "Text",ExpressionUUID->"2ae51aed-fd90-4d0f-85cd-894e4903a6f1"],
Cell[CellGroupData[{
Cell[463556, 9708, 1807, 49, 259, "Input",ExpressionUUID->"7bd2c41e-6785-4547-b85b-04d043003071"],
Cell[465366, 9759, 741, 12, 63, "Output",ExpressionUUID->"dc4f7243-6ee5-45c0-84c1-614ee842bca3"],
Cell[466110, 9773, 750, 12, 63, "Output",ExpressionUUID->"3d4f2384-89fc-4f67-a899-ee8479884eab"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[466909, 9791, 225, 3, 49, "Subsubsection",ExpressionUUID->"26044a37-6c67-43ea-843e-fe7d8dd8419f"],
Cell[467137, 9796, 251, 5, 52, "Text",ExpressionUUID->"faba8137-ede7-4c85-94d3-5f6c789df3a2"],
Cell[CellGroupData[{
Cell[467413, 9805, 1833, 49, 259, "Input",ExpressionUUID->"eeba1314-4287-4d33-8ae3-79c98aa3f48a"],
Cell[469249, 9856, 618, 11, 63, "Output",ExpressionUUID->"1ec3b77f-81cf-47bc-be9f-f8ef050af97e"],
Cell[469870, 9869, 620, 11, 63, "Output",ExpressionUUID->"21c73157-2d6d-429c-8121-305e94eba972"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[470551, 9887, 184, 2, 51, "Subsection",ExpressionUUID->"41884856-39f6-464e-ad99-23de7cbfd974"],
Cell[CellGroupData[{
Cell[470760, 9893, 249, 3, 49, "Subsubsection",ExpressionUUID->"12f19ff0-b9d7-432c-8d95-567ddb7a62ee"],
Cell[471012, 9898, 251, 5, 52, "Text",ExpressionUUID->"6a66c554-ab8f-4e7c-91b6-112588329df4"],
Cell[CellGroupData[{
Cell[471288, 9907, 1867, 50, 259, "Input",ExpressionUUID->"18ce82ca-6d41-4d46-8b93-cd357c5745b0"],
Cell[473158, 9959, 793, 13, 70, "Output",ExpressionUUID->"e57c5443-3586-40a4-ba4a-ea904ef3c271"],
Cell[473954, 9974, 796, 13, 70, "Output",ExpressionUUID->"80dc597b-0f54-44ce-856f-349145b5e2ef"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[474799, 9993, 224, 3, 49, "Subsubsection",ExpressionUUID->"a7df9d13-6dda-469c-b9c8-7855070275a6"],
Cell[475026, 9998, 251, 5, 52, "Text",ExpressionUUID->"89db92bd-fd26-4e8c-8ca0-ba51f7771d2e"],
Cell[CellGroupData[{
Cell[475302, 10007, 1852, 49, 259, "Input",ExpressionUUID->"f424ca79-fa66-4326-b147-be423defcbb3"],
Cell[477157, 10058, 666, 11, 70, "Output",ExpressionUUID->"d7beba65-b74d-47b6-ba72-d109c49775c2"],
Cell[477826, 10071, 671, 11, 70, "Output",ExpressionUUID->"f531c9cb-c13c-482f-a6de-b750765494a6"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[478558, 10089, 171, 2, 49, "Subsection",ExpressionUUID->"2ca05eb3-741f-4f5a-8d18-de6df6dfad62"],
Cell[478732, 10093, 391, 8, 52, "Text",ExpressionUUID->"015f1f65-2b71-4ec1-b699-7ddd6cc237fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[479160, 10106, 169, 2, 51, "Subsection",ExpressionUUID->"9b16f03f-9407-4acc-a6fc-582a1bc7dfde"],
Cell[479332, 10110, 83359, 1371, 697, "Input",ExpressionUUID->"23cb15b6-53f4-4103-aeaa-4baec68bc503",
 Evaluatable->False],
Cell[562694, 11483, 168, 3, 52, "Text",ExpressionUUID->"b7da21af-eb59-43dc-b474-b77e20136d06"],
Cell[CellGroupData[{
Cell[562887, 11490, 226, 5, 40, "Subitem",ExpressionUUID->"7992f1e4-1812-4b94-8914-843f7223a958"],
Cell[563116, 11497, 310, 6, 38, "SubsubitemNumbered",ExpressionUUID->"582af9d1-36e4-49d9-9e36-b2ec3d001512"],
Cell[563429, 11505, 395, 8, 38, "SubsubitemNumbered",ExpressionUUID->"34c0a9e8-54a1-493a-95c2-c433221ef3d7"],
Cell[563827, 11515, 421, 9, 38, "SubsubitemNumbered",ExpressionUUID->"3eaab60f-3540-4428-9b42-3440bac56ccf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[564285, 11529, 353, 7, 40, "Subitem",ExpressionUUID->"ef926592-2340-4b5d-9bb2-9152f15240e7"],
Cell[CellGroupData[{
Cell[564663, 11540, 1851, 45, 252, "Input",ExpressionUUID->"63860c21-8b68-4fe2-bbb1-3db4b6add24c"],
Cell[566517, 11587, 545, 10, 63, "Output",ExpressionUUID->"dccfb221-80e6-4210-bc53-1918d4f4d9e5"],
Cell[567065, 11599, 552, 10, 63, "Output",ExpressionUUID->"01a402fd-e2c9-48e2-8cc7-513481a154f7"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[567690, 11617, 176, 2, 104, "Section",ExpressionUUID->"61b83ca1-3038-4d47-859f-8605fed0246a"],
Cell[567869, 11621, 150, 3, 52, "Text",ExpressionUUID->"e17ad12d-d112-4324-9c19-3941233129c3"],
Cell[CellGroupData[{
Cell[568044, 11628, 166, 2, 51, "Subsection",ExpressionUUID->"3cc9bebf-a96f-464f-8ba1-7ca365473a3f"],
Cell[568213, 11632, 187, 3, 52, "Text",ExpressionUUID->"5ba3534e-2ea0-4494-b269-36f1c9284140"],
Cell[CellGroupData[{
Cell[568425, 11639, 1410, 35, 221, "Input",ExpressionUUID->"cf07ba35-3b02-490a-99c7-51203c69c738"],
Cell[569838, 11676, 458, 8, 63, "Output",ExpressionUUID->"19d42f46-de73-40c7-9967-0b83c8a6f133"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[570345, 11690, 217, 3, 51, "Subsection",ExpressionUUID->"66dd2c5a-f9a7-478a-a7f5-192183812bc9"],
Cell[570565, 11695, 183, 3, 52, "Text",ExpressionUUID->"c655a178-3084-4de7-9319-dae931c6ae2f"],
Cell[CellGroupData[{
Cell[570773, 11702, 1460, 36, 221, "Input",ExpressionUUID->"3862b3f7-7f1a-4454-bd0b-644987f7d11d"],
Cell[572236, 11740, 440, 8, 63, "Output",ExpressionUUID->"9c29f949-1ea2-42c4-a8c0-563a70c9a7dd"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[572725, 11754, 242, 3, 51, "Subsection",ExpressionUUID->"c3a541d8-9a0c-43f7-a168-c0da351b386d"],
Cell[572970, 11759, 212, 4, 52, "Text",ExpressionUUID->"3c905753-efa7-4cf4-ba8e-e58cfd0b4b62"],
Cell[CellGroupData[{
Cell[573207, 11767, 1543, 38, 221, "Input",ExpressionUUID->"891a44ee-7745-433b-b06a-1856c233ead7"],
Cell[574753, 11807, 438, 8, 63, "Output",ExpressionUUID->"aaee6833-9dfc-48ba-aa8b-992b17a3142b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[575240, 11821, 191, 4, 51, "Subsection",ExpressionUUID->"4a5680b8-5493-41f1-8e84-d14b63643c19"],
Cell[575434, 11827, 209, 7, 52, "Text",ExpressionUUID->"87768409-27f5-4b4f-87ff-634a89145fb4"],
Cell[CellGroupData[{
Cell[575668, 11838, 1579, 38, 221, "Input",ExpressionUUID->"4ff2412a-3080-491c-b873-7281ca40b9e0"],
Cell[577250, 11878, 488, 9, 63, "Output",ExpressionUUID->"88ddfb75-3f2d-4095-98cb-88917386c8dd"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[577787, 11893, 192, 4, 51, "Subsection",ExpressionUUID->"cc528d63-49ab-4e1e-ac5f-bc8622f64ece"],
Cell[577982, 11899, 237, 8, 52, "Text",ExpressionUUID->"b942bc81-819d-4dac-ba78-637e26c0a52b"],
Cell[CellGroupData[{
Cell[578244, 11911, 1232, 34, 221, "Input",ExpressionUUID->"2b93b3dc-4942-4692-84a6-fc1fcb65dfdf"],
Cell[579479, 11947, 422, 8, 63, "Output",ExpressionUUID->"fe1dee35-e635-47ee-9d6b-40c90c10f9e1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[579950, 11961, 171, 2, 51, "Subsection",ExpressionUUID->"68c829cf-02fc-4546-9d4a-b1d9d56d17f4"],
Cell[CellGroupData[{
Cell[580146, 11967, 1165, 32, 221, "Input",ExpressionUUID->"872aa6e9-67eb-4caf-ae12-64246ef2fbaa"],
Cell[581314, 12001, 385, 7, 63, "Output",ExpressionUUID->"90f76662-e550-407e-a19b-7e12e8cd18db"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[581748, 12014, 200, 3, 51, "Subsection",ExpressionUUID->"1558772a-880e-4a91-bd85-4bbf03eb3290"],
Cell[CellGroupData[{
Cell[581973, 12021, 1220, 33, 221, "Input",ExpressionUUID->"4c76ae8c-4599-44ba-a4b2-2a0f6b205eb4"],
Cell[583196, 12056, 408, 8, 63, "Output",ExpressionUUID->"29fc5aed-10d2-4994-ac50-4a8c84a655e1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[583653, 12070, 221, 3, 51, "Subsection",ExpressionUUID->"b59b5e3a-76dc-43fc-86af-76e2672a59ef"],
Cell[CellGroupData[{
Cell[583899, 12077, 1254, 33, 221, "Input",ExpressionUUID->"1bc2a73c-b858-4613-9805-7609ea489de8"],
Cell[585156, 12112, 433, 9, 63, "Output",ExpressionUUID->"f158f3d4-d808-4f8c-9c40-41b8bfad8cea"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[585638, 12127, 246, 3, 51, "Subsection",ExpressionUUID->"8803cd2d-9b7f-4a0b-8da9-6ad880d3b893"],
Cell[CellGroupData[{
Cell[585909, 12134, 1316, 34, 221, "Input",ExpressionUUID->"98108a39-d792-4b6a-b06e-6b8997650178"],
Cell[587228, 12170, 452, 9, 63, "Output",ExpressionUUID->"6f5ccf95-7f9e-4ccc-a4f8-5a121c0b2cd8"]
}, Open  ]]
}, Open  ]],
Cell[587707, 12183, 210, 4, 51, "Subsection",ExpressionUUID->"0d2e775e-063d-4203-91cf-6ae85dd1e809"],
Cell[587920, 12189, 209, 4, 49, "Subsection",ExpressionUUID->"1f71663e-d906-4589-a2ea-248ff0d484fe"],
Cell[588132, 12195, 210, 4, 49, "Subsection",ExpressionUUID->"c551c901-22b9-4110-9838-77823bf3b1a9"],
Cell[588345, 12201, 208, 4, 49, "Subsection",ExpressionUUID->"46145d69-055e-4801-bcbd-73c64d3c8612"],
Cell[588556, 12207, 209, 4, 49, "Subsection",ExpressionUUID->"6d5bf3cf-73a9-4e78-acd8-ba5257ae9df1"],
Cell[588768, 12213, 211, 4, 49, "Subsection",ExpressionUUID->"1d3c390e-89f2-4189-b422-f28f0f2b39c2"],
Cell[588982, 12219, 209, 4, 49, "Subsection",ExpressionUUID->"3ffd6846-d8ab-4a8f-ac57-4a6f0cc9f8e8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[589228, 12228, 204, 4, 104, "Section",ExpressionUUID->"72939af5-2d34-4186-9b83-df30f0fe8065"],
Cell[589435, 12234, 859, 15, 95, "Input",ExpressionUUID->"ef32843a-b31f-4ae0-bbc4-7c7cfab38ed1"],
Cell[CellGroupData[{
Cell[590319, 12253, 247, 5, 63, "Input",ExpressionUUID->"c930ff66-6713-479f-9e60-bd264087325e"],
Cell[590569, 12260, 226, 4, 63, "Output",ExpressionUUID->"719d4580-f335-4f14-bf44-b53d3b5a727c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[590844, 12270, 223, 3, 104, "Section",ExpressionUUID->"a416204a-1e85-4f5e-85cb-c051134b631c"],
Cell[591070, 12275, 176, 3, 52, "Text",ExpressionUUID->"7d9d8008-289d-443d-b29c-f36876c98183"],
Cell[CellGroupData[{
Cell[591271, 12282, 255, 6, 63, "Input",ExpressionUUID->"c7768425-603c-4af8-a0bb-80a41e34700b"],
Cell[591529, 12290, 294, 5, 63, "Output",ExpressionUUID->"d2690cca-81a3-4868-a8a8-815b27894152"]
}, Open  ]],
Cell[591838, 12298, 191, 3, 52, "Text",ExpressionUUID->"f8a41a81-9213-4a2d-b578-3dba88640e2b"],
Cell[CellGroupData[{
Cell[592054, 12305, 406, 8, 63, "Input",ExpressionUUID->"bcdf14ae-dc08-4ea1-ab22-c8c3e0972042"],
Cell[592463, 12315, 81521, 2395, 6766, "Output",ExpressionUUID->"da9e53d5-7457-4b09-b3f2-a7bd67f873dc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[674033, 14716, 161, 3, 104, "Section",ExpressionUUID->"c32db2b9-2c1b-4e9b-bd11-66f50e2d0086"],
Cell[674197, 14721, 291, 7, 52, "Text",ExpressionUUID->"9edf5f36-9b36-479e-8b6d-ff419b2ff82f"],
Cell[CellGroupData[{
Cell[674513, 14732, 197, 4, 51, "Subsection",ExpressionUUID->"65c9563c-7366-4855-a99a-b151eebfd4da"],
Cell[674713, 14738, 310, 7, 52, "Text",ExpressionUUID->"d245de55-b926-4b4b-9902-5969d041ed71"],
Cell[CellGroupData[{
Cell[675048, 14749, 232, 5, 49, "Subsubsection",ExpressionUUID->"0b283be4-3ec6-424b-84f5-c3fdca3018c8"],
Cell[675283, 14756, 336, 9, 121, "Text",ExpressionUUID->"ac235d24-0ba5-41b5-adaf-6daacebe2b62"]
}, Open  ]],
Cell[CellGroupData[{
Cell[675656, 14770, 236, 5, 49, "Subsubsection",ExpressionUUID->"72d24fc2-6c2d-4523-a7b5-c058b3abf926"],
Cell[675895, 14777, 312, 9, 121, "Text",ExpressionUUID->"4b44858c-603b-4db1-84f3-de64d6765c9f"],
Cell[676210, 14788, 587, 11, 87, "Text",ExpressionUUID->"2f9dbd34-12ff-4af6-8c11-ef09c9abb2bd"],
Cell[676800, 14801, 536, 10, 87, "Text",ExpressionUUID->"6ae98326-2b34-4aad-aca3-d5ab74cef37b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[677373, 14816, 287, 5, 49, "Subsubsection",ExpressionUUID->"b96dd674-b39d-4c73-b7b7-feaf0e02feeb"],
Cell[677663, 14823, 446, 9, 52, "Text",ExpressionUUID->"ac39664b-5681-4720-b19e-06108a09e7d8"],
Cell[678112, 14834, 499, 9, 87, "Text",ExpressionUUID->"851cae76-33bc-4375-92cb-3f25e1a2413b"],
Cell[678614, 14845, 520, 10, 87, "Text",ExpressionUUID->"cb1c375c-d76b-46d0-8d74-f08f5b895ac5"],
Cell[679137, 14857, 538, 10, 87, "Text",ExpressionUUID->"92b43039-25b0-4731-9034-9182da47a594"],
Cell[679678, 14869, 898, 15, 121, "Text",ExpressionUUID->"c5441623-7356-49ca-996e-1d482e4c95fc"],
Cell[680579, 14886, 538, 10, 87, "Text",ExpressionUUID->"9eb12312-91dd-4bf6-aa20-edb93fafe193"],
Cell[681120, 14898, 454, 9, 52, "Text",ExpressionUUID->"068ae827-a5af-4d96-885c-e432b279e447"],
Cell[681577, 14909, 837, 14, 121, "Text",ExpressionUUID->"b53dfd21-0a26-4759-af8f-df43bcc8bb94"],
Cell[682417, 14925, 633, 12, 87, "Text",ExpressionUUID->"2d3137bf-93e8-4957-bb2f-07c80481e2b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[683087, 14942, 390, 7, 49, "Subsubsection",ExpressionUUID->"f58beac0-4eaa-4cb8-917b-c3960b90e7c8"],
Cell[683480, 14951, 1188, 19, 156, "Text",ExpressionUUID->"cec4f423-eb0f-4144-a1b5-642196681244"],
Cell[684671, 14972, 980, 16, 121, "Text",ExpressionUUID->"cb26e900-8300-4255-a101-24205b198a86"],
Cell[685654, 14990, 939, 15, 156, "Text",ExpressionUUID->"d2a4be18-fcd0-4666-8332-f454a6524ba4"],
Cell[686596, 15007, 625, 11, 52, "Text",ExpressionUUID->"308b0a4d-1545-4db7-bf37-a941bd2fb954"],
Cell[687224, 15020, 695, 13, 87, "Text",ExpressionUUID->"0bb81d5b-517d-41f1-b39f-459732cc3e77"],
Cell[687922, 15035, 562, 11, 52, "Text",ExpressionUUID->"d1d2451a-af15-470e-b0f2-47a4c7d2ed42"],
Cell[688487, 15048, 1034, 15, 121, "Text",ExpressionUUID->"7193a302-dd86-42eb-9943-a95018392701"],
Cell[689524, 15065, 1285, 20, 156, "Text",ExpressionUUID->"7fb13c65-c2f0-4d83-8ec1-f54f357cfa85"],
Cell[690812, 15087, 863, 14, 87, "Text",ExpressionUUID->"287ab62e-5320-4fac-b7d7-9554daf9689d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[691712, 15106, 589, 9, 49, "Subsubsection",ExpressionUUID->"2ed198ca-9851-4046-b4a9-06e8a31d081c"],
Cell[692304, 15117, 1466, 23, 190, "Text",ExpressionUUID->"616e65bd-9506-4b62-bbec-cdbf36af5914"],
Cell[693773, 15142, 847, 14, 87, "Text",ExpressionUUID->"1aa690f3-7547-429a-9adf-80c9b158f5fa"],
Cell[694623, 15158, 810, 14, 87, "Text",ExpressionUUID->"0f1dfe74-241d-4aa5-be09-08f9049154e5"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

