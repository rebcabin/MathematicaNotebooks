(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    571292,      11582]
NotebookOptionsPosition[    543127,      11149]
NotebookOutlinePosition[    543716,      11171]
CellTagsIndexPosition[    543673,      11168]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Folds over Lists (Enumerable), Lazy Lists (Iterable) and Tasks (Observable)\
\>", "Title",
 CellChangeTimes->{{3.637749249076985*^9, 3.6377492536447077`*^9}, {
  3.637785801631466*^9, 3.637785839248712*^9}, {3.637837486908992*^9, 
  3.637837498345578*^9}, {3.637866153847753*^9, 3.637866197973426*^9}, {
  3.904727608428134*^9, 3.90472768970436*^9}, {3.9049207338296213`*^9, 
  3.90492074564894*^9}},ExpressionUUID->"339b47d8-1d27-46e6-8940-\
96b5aa667b41"],

Cell[TextData[{
 "We\[CloseCurlyQuote]d like to have the same operations over Lists (or ",
 StyleBox["enumerable",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " collections, more generally), lazy Lists (",
 StyleBox["Streams",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ", ",
 StyleBox["iterables",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ", or ",
 StyleBox["iteractive",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " [",
 StyleBox["sic",
  FontSlant->"Italic"],
 "] collections) and asynchronous tasks (",
 StyleBox["Observables",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " or ",
 StyleBox["reactive",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " collections). We call Lists, Streams, and Observables ",
 StyleBox["collection domains",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " (or monads, if you like that word). They each maintain ordered collections \
of values, differing only in the method and timing of delivery. Elements of \
Lists are distributed in memory, elements of Streams are computed on demand, \
and elements of Observables arrive asynchronously, on a schedule not known to \
the observer."
}], "Text",
 CellChangeTimes->{{3.637866202605702*^9, 3.637866324983736*^9}, {
   3.6378664239348497`*^9, 3.637866621321067*^9}, {3.637866652527083*^9, 
   3.637866683884159*^9}, {3.63786674533447*^9, 3.637866768276507*^9}, {
   3.6378668029253607`*^9, 3.6378668065281677`*^9}, {3.637866999078224*^9, 
   3.63786706406164*^9}, {3.637867340979306*^9, 3.63786734742855*^9}, {
   3.904727659048279*^9, 3.904727660089614*^9}, {3.904727702878994*^9, 
   3.904727726448612*^9}, {3.904919993745902*^9, 3.904920124960146*^9}, {
   3.9049207065601387`*^9, 3.9049207084707527`*^9}, {3.904929520126607*^9, 
   3.904929704051217*^9}, {3.904996256323883*^9, 3.904996267534624*^9}, {
   3.905016051265946*^9, 3.905016091221094*^9}, 
   3.905018337752014*^9},ExpressionUUID->"283328ea-a795-4e0a-b7e5-\
ed8c3c55a5a0"],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " ",
 StyleBox["List", "Input"],
 "s have a rich set of built-in operations, like ",
 StyleBox["Map", "Input"],
 ", ",
 StyleBox["Scan", "Input"],
 ", ",
 StyleBox["Take", "Input"],
 ", ",
 StyleBox["Fold", "Input"],
 ", ",
 StyleBox["FoldList", "Input"],
 ", ",
 StyleBox["Drop", "Input"],
 ", ",
 StyleBox["Append", "Input"],
 ", and so on. For brevity, we work up examples just with analogues of ",
 StyleBox["Take", "Input"],
 " and ",
 StyleBox["FoldList", "Input"],
 " for Streams and Observables. It\[CloseCurlyQuote]s easy to build up other \
operations. "
}], "Text",
 CellChangeTimes->{{3.637866202605702*^9, 3.637866324983736*^9}, {
   3.6378664239348497`*^9, 3.637866621321067*^9}, {3.637866652527083*^9, 
   3.637866683884159*^9}, {3.63786674533447*^9, 3.637866768276507*^9}, {
   3.6378668029253607`*^9, 3.6378668065281677`*^9}, {3.637866999078224*^9, 
   3.63786706406164*^9}, {3.637867340979306*^9, 3.63786734742855*^9}, {
   3.904727659048279*^9, 3.904727660089614*^9}, {3.904727702878994*^9, 
   3.904727726448612*^9}, {3.904919993745902*^9, 3.904920124960146*^9}, {
   3.9049207065601387`*^9, 3.9049207084707527`*^9}, {3.904929520126607*^9, 
   3.9049295864035387`*^9}, {3.904929722498563*^9, 3.904929758718248*^9}, {
   3.905016631682254*^9, 3.90501666915441*^9}, 3.905016840831299*^9, {
   3.905016876204632*^9, 3.905016976200539*^9}, {3.9050184009333773`*^9, 
   3.905018431812862*^9}},ExpressionUUID->"cfdce099-3b2c-4290-9242-\
d909162a5517"],

Cell[TextData[{
 "Many of these operations are ",
 StyleBox["higher-order",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ". Higher-order operations take ",
 StyleBox["query",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " functions as arguments. We may package sophisticated algorithms in \
queries, from mere counts to ",
 ButtonBox["incremental statistics",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://vixra.org/abs/1609.0044"], None},
  ButtonNote->"https://vixra.org/abs/1609.0044"],
 " to ",
 ButtonBox["Kalman filters",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://vixra.org/author/brian_beckman"], None},
  ButtonNote->"https://vixra.org/author/brian_beckman"],
 ". "
}], "Text",
 CellChangeTimes->{{3.905016136415429*^9, 3.905016356876234*^9}, {
  3.9050165076624527`*^9, 3.905016507663103*^9}, {3.9050166798988743`*^9, 
  3.905016684981567*^9}, {3.905016721610878*^9, 3.905016730802711*^9}, {
  3.905018444366748*^9, 
  3.905018470953191*^9}},ExpressionUUID->"17777953-3d2c-4386-8490-\
8ffc5263fda9"],

Cell[TextData[{
 StyleBox["The big message here is that we write the algorithms ",
  Background->RGBColor[1, 1, 0]],
 StyleBox["once",
  FontSlant->"Italic",
  Background->RGBColor[1, 1, 0]],
 StyleBox[", and run them over all manner of collections: eager or lazy, \
in-memory or computed on-the-fly, synchronous or asynchronous.",
  Background->RGBColor[1, 1, 0]],
 StyleBox[" Test them in a friendly environment of Lists; deploy them in an \
unfriendly environment of Observables, for instance.",
  Background->None]
}], "Text",
 CellChangeTimes->{{3.905016136415429*^9, 3.905016356876234*^9}, {
  3.9050165076624527`*^9, 3.905016507663103*^9}, {3.9050166798988743`*^9, 
  3.905016684981567*^9}, {3.905016721610878*^9, 3.905016730802711*^9}, {
  3.905018444366748*^9, 3.905018460489097*^9}, {3.905018737876696*^9, 
  3.90501876662503*^9}},ExpressionUUID->"7e433fc9-9641-41d1-8f41-\
070c61b1e63b"],

Cell[TextData[{
 "Many higher-order operations are ",
 StyleBox["composable",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ": they compute Lists from Lists, Streams from Streams, Observables from \
Observable. That means we may build up more sophisticated algorithms from \
building blocks, as one does on the Unix command line with the pipe operator. "
}], "Text",
 CellChangeTimes->{{3.905016360152995*^9, 3.905016464757001*^9}, {
  3.905016742583252*^9, 3.905016742960932*^9}, {3.905018490452073*^9, 
  3.905018493404606*^9}},ExpressionUUID->"f77709b5-a80a-4bc2-bbb1-\
4d6abade007f"],

Cell["\<\
Cross domains at will, with List as a rock-bottom intermediary. We show how \
to convert Lists into Streams and vice versa, and Lists into Observables, and \
vice versa.\
\>", "Text",
 CellChangeTimes->{{3.905016472154904*^9, 3.905016483196961*^9}, {
  3.905016522141108*^9, 3.9050165570282097`*^9}, {3.905018515072392*^9, 
  3.905018524422728*^9}, {3.9050188749897127`*^9, 
  3.905018900117325*^9}},ExpressionUUID->"6a343904-8e27-4525-8f1d-\
77fcb00eef38"],

Cell[TextData[{
 "Finally, we want \[OpenCurlyDoubleQuote]ways out\[CloseCurlyDoubleQuote] of \
the collection domains: operations that return values from Lists, Streams, \
and Observables. A way-out from Mathematica ",
 StyleBox["List", "Input"],
 "s is ",
 StyleBox["Scan", "Input"],
 ". We posit ",
 StyleBox["subscribe",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " for Observables and ",
 StyleBox["forEach",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " for Streams. These should have the same signatures as ",
 "Scan",
 ", taking a collection and a unary ",
 "query",
 " that operates on each element of the collection. ",
 StyleBox["T",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox["ransformers",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " \[LongDash] ways to and from ",
 StyleBox["List", "Input"],
 "s for Streams and Observables, with ",
 StyleBox["List", "Input"],
 "s as the rock-bottom domain \[LongDash] are ",
 StyleBox["reify",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " and ",
 StyleBox["disperse",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " for Streams and ",
 StyleBox["harvest",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " and ",
 StyleBox["dispense",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " for Observables. "
}], "Text",
 CellChangeTimes->{{3.90501700210646*^9, 3.905017075518034*^9}, {
  3.905017115033985*^9, 3.9050172259954433`*^9}, {3.905018552401064*^9, 
  3.905018564725053*^9}, {3.90501868928086*^9, 
  3.905018704869326*^9}},ExpressionUUID->"5d6e0092-c2ea-46cb-9678-\
3772af4874c5"],

Cell["The following diagram illustrates:", "Text",
 CellChangeTimes->{{3.905017233060482*^9, 
  3.905017242219359*^9}},ExpressionUUID->"15f00ffc-3909-417b-9037-\
8e0056f6683e"],

Cell[CellGroupData[{

Cell["Import[\"http://i.stack.imgur.com/hwY7H.png\"]", "Input",
 CellChangeTimes->{{3.637866103959899*^9, 3.63786612128055*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"63b9e697-1149-4fda-9e87-f289951ad2c7"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
oIsFCxZAYtOmTWRCj3fSBTCAu7u7s7OzhYWFh4dHYXV0QS6OwNLo6GjZZZH0
9HRfX19XV1c7OzvITE5Orpkupk6dCtVzlAoSshcxv1MKThdpaZSaWmW06NqV
72rVTUgXKJSApSyRgnTBlILQBYzsVenC2tp63rx5ZC1CF+RdhEuXLgVUGDt2
7NvoAjR//nzYuI+Pj2yeEKAFJycn+ApCMky6APyAxLp16wpfPaEDdDF79mxb
W9tDhw4dlorcqlEbKThdlJfTF7aYaKGpSa1fz3e16iakCxRKwFKWSEG6YEqR
6cLZ2dnBwSEgICAvL49JF7NmzQoODq7h3EXhq4sjzHlCgC7s7e0BIQBLKtFF
dna2jY0NfNeUKVNgs4QuyOwlM2bMWL16NbAKeU9ibaTgdAGaOZPS0nqDLh4+
5LtOdRPSBQolYClLpLBIF3BIe/CVyDtP666YmJjw8HBWNlUbcU8XGRkZc+bM
2SV95tTf35/MYrF7927IPHLkyP79+yFx4MCBQunTqT4+PjC+Q9tCZlRUVKH0
rglvb29YEb5x1apVkLN27drly5dX+paCggLAktmzZ8temnzo0CH4COvCduBf
hn0H3wKbhW8slN5NCmgxb968uLg4Pz8/cmsH7IuZM2d6enpCPoBNLf9BxaeL
Cxdeo4WGBn0nhrIL6QKFErCUJVLYogtyOl2mxMTED97U+vXrZYfY48aNGzZs
WB3rVntxTxeCl+LTBahr1wq6UFOj78RQdiFdoFAClrJEClt0Qc7wBwUF7ZEq
Nzc3OzubzMlQKJ0xkjyhAAfIx48fh3w4PGfOwJmenp6UlJSTk5OVlQVHx8OH
Dz8kVWpqqmweSzhm37t3L2xcdtEftgblYWuQmZeXV8d/oRDpQg5SCrpYv56+
IAJ0YWRE34mh7EK6QKEELGWJFHbpYu3atbKcgIAAKysrkh46dOicOXMgAdjg
7u5uaWkJhUePHk0uoMyfP5+c8XByclqwYEGliR2gWKH0CsKYMWNIjp2dHaAI
ZDo4OMDWyL0B48aNq/vlGKQL1qUUdEEmvlBTU+5pLmRCukChBCxliRR26QJI
YLpUOTk5b6MLSMNwQx51BEjYu3cvJBYtWpSdnR0dHS07d0Hu3wB4IPN+z5s3
D7aWmpoKmAFQMXHixEIpXdjb2ycmJpIJIqAOdfwvkC5Yl1LQBWjIEKWf5kIm
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
    "], {{0, 613.}, {714., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{72, 72}],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, 
    MetaInformation -> <|
     "Comments" -> {
       "Software" -> "Created with the Wolfram Language : www.wolfram.com", 
        "Creation Time" -> 
        DateObject[{2015, 4, 12, 15, 21, 31.}, "Instant", "Gregorian", 
          None]}|>],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{714., 613.},
  PlotRange->{{0, 714.}, {0, 613.}}]], "Output",
 CellChangeTimes->{3.637866123176937*^9, 3.904727597281274*^9, 
  3.904921452725313*^9, 3.904931468816333*^9, 3.904934142314432*^9, 
  3.9049351754282837`*^9, 3.905009998242206*^9, 3.905010341887767*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"053bce5c-bc17-4db0-b68c-f07cbe3a4b43"]
}, {2}]],

Cell[CellGroupData[{

Cell["Typographical Conventions", "Section",
 CellChangeTimes->{{3.905017253818632*^9, 
  3.905017260893375*^9}},ExpressionUUID->"35376fae-a0a4-4a2b-a952-\
b77d0b065c4b"],

Cell[TextData[{
 "Types are capitalised, like ",
 StyleBox["List",
  FontSlant->"Italic"],
 ", ",
 StyleBox["Stream",
  FontSlant->"Italic"],
 ", and ",
 StyleBox["Observable",
  FontSlant->"Italic"],
 ". "
}], "Text",
 CellChangeTimes->{{3.905017267785851*^9, 
  3.9050172881406517`*^9}},ExpressionUUID->"1ccd9a18-2662-44d3-9a21-\
648ded0bbf29"],

Cell[TextData[{
 "Honoring the use-mention dichotomy, mentioned or appositive terms are in ",
 StyleBox["italics",
  FontSlant->"Italic"],
 ". The word ",
 StyleBox["List",
  FontSlant->"Italic"],
 " refers to the List type.",
 " To extract an element from a stream, apply ",
 StyleBox["extract",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.905018063441103*^9, 3.905018163349114*^9}, {
  3.905019465843289*^9, 3.9050195935966663`*^9}, {3.90501967034731*^9, 
  3.905019724308713*^9}, {3.9050198580828037`*^9, 3.905019910943088*^9}, {
  3.9050200037461433`*^9, 3.905020010420164*^9}, {3.905021104114397*^9, 
  3.905021107668571*^9}},ExpressionUUID->"a2cf95c0-a5aa-48a1-a4da-\
4161fee8df35"],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " built-ins, like ",
 StyleBox["List", "Input"],
 " and ",
 StyleBox["FoldList", "Input"],
 ", are written in a ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " input font, as shown to the left. Literal ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " expressions like ",
 StyleBox["extract[___]", "Input"],
 " are in the same font. "
}], "Text",
 CellChangeTimes->{{3.905017294587859*^9, 3.905017379169181*^9}, {
  3.905017410704268*^9, 3.905017495855666*^9}, {3.905018255974367*^9, 
  3.9050182570027*^9}, {3.9050203857022057`*^9, 
  3.905020433636825*^9}},ExpressionUUID->"55555991-d5a7-4d52-913e-\
a76dd1847614"],

Cell[TextData[{
 "Some built-ins are types, like ",
 StyleBox["List", "Input"],
 ", and some are functions, like ",
 StyleBox["FoldList", "Input"],
 ". The word ",
 StyleBox["List",
  FontSlant->"Italic"],
 ", when referring to a general notion of the type of lists, is not in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " input font. "
}], "Text",
 CellChangeTimes->{{3.905017294587859*^9, 3.905017379169181*^9}, {
   3.905017410704268*^9, 3.905017495855666*^9}, {3.905018255974367*^9, 
   3.9050182570027*^9}, {3.9050203857022057`*^9, 3.905020413828273*^9}, {
   3.9050204530287113`*^9, 3.905020454382262*^9}, {3.905021008273259*^9, 
   3.905021044743621*^9}, 
   3.9050211296759577`*^9},ExpressionUUID->"667eaaf1-dfbd-4e83-8cd7-\
e07eb60d7b1a"],

Cell[TextData[{
 "A general instance of a type like ",
 StyleBox["List",
  FontSlant->"Italic"],
 " is written in lower case: the list ",
 StyleBox["[1,2,3]", "Input"],
 " is an instance of type ",
 StyleBox["List",
  FontSlant->"Italic"],
 ". "
}], "Text",
 CellChangeTimes->{{3.9050175071558733`*^9, 3.905017528020694*^9}, {
  3.905017981199448*^9, 3.905017994652576*^9}, {3.905019767069351*^9, 
  3.905019808589408*^9}},ExpressionUUID->"afde8474-6769-4fa6-9d1b-\
49e33abf42b7"],

Cell[TextData[{
 "Sometimes ",
 StyleBox["List", "Input",
  FontSlant->"Italic"],
 ", in font, means an instance of type ",
 StyleBox["List", "Input"],
 ", when we wish to mean a list specific to ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ". The ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " expression ",
 StyleBox["{1,2,3}", "Input"],
 " is both a list and a ",
 StyleBox["List", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.905017294587859*^9, 3.905017379169181*^9}, {
  3.905017410704268*^9, 3.905017495855666*^9}, {3.905018255974367*^9, 
  3.9050182570027*^9}, {3.9050203857022057`*^9, 3.905020413828273*^9}, {
  3.9050204530287113`*^9, 3.905020454382262*^9}, {3.905021008273259*^9, 
  3.905021044743621*^9}, {3.905021140323332*^9, 3.905021202068372*^9}, {
  3.905021302149084*^9, 
  3.905021308726396*^9}},ExpressionUUID->"266e7800-d062-4caf-9f27-\
4f9af48aadc7"],

Cell[TextData[{
 "New terms are written at first in ",
 StyleBox["bold italics",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ", later in appropriate typography."
}], "Text",
 CellChangeTimes->{{3.905018004207671*^9, 3.9050180525814667`*^9}, {
  3.905020471266835*^9, 
  3.905020480426297*^9}},ExpressionUUID->"dafde870-8b48-4555-a85f-\
ff8c649d283f"],

Cell[TextData[{
 "Double quote are pejorative: a \[OpenCurlyDoubleQuote]way out\
\[CloseCurlyDoubleQuote] of a list is some way of extracting a value, as in \
Mathematica\[CloseCurlyQuote]s ",
 StyleBox["Part", "Input"],
 " built-in."
}], "Text",
 CellChangeTimes->{{3.905018174261544*^9, 
  3.905018244606174*^9}},ExpressionUUID->"ce9d5927-dd4f-421b-b267-\
6f92f51279a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Lists", "Section",
 CellChangeTimes->{{3.637757811850546*^9, 3.637757816441293*^9}, {
  3.637869940202814*^9, 
  3.63786997383114*^9}},ExpressionUUID->"e2555fdc-aec3-4942-a3d3-\
3f0ff550cb2e"],

Cell[TextData[{
 "In general, any ",
 StyleBox["fold",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " takes three arguments: a binary query function, a starting output value, \
and a collection of input values. The binary query takes two arguments: the \
current output value and the current input value, and produces a new output \
value (the queries for right folds and left folds take their arguments in the \
opposite order, but we don\[CloseCurlyQuote]t consider left folds in this \
notebook). "
}], "Text",
 CellChangeTimes->{{3.637751266575506*^9, 3.637751313887394*^9}, 
   3.637751520442885*^9, {3.637753036219933*^9, 3.637753068886631*^9}, {
   3.637757733015213*^9, 3.637757794756987*^9}, {3.637757934817663*^9, 
   3.637757934880309*^9}, {3.637797124788266*^9, 3.6377971337842827`*^9}, {
   3.637838019788842*^9, 3.637838034978837*^9}, {3.6378675029164877`*^9, 
   3.6378675794429617`*^9}, {3.6378677176600246`*^9, 3.637867719492516*^9}, {
   3.637867752242906*^9, 3.637867752247013*^9}, {3.637869984291624*^9, 
   3.637870004678749*^9}, {3.9049203605638447`*^9, 3.9049204037974873`*^9}, {
   3.904920448686413*^9, 3.904920499121911*^9}, 3.904920801704155*^9, {
   3.9049964687642317`*^9, 3.904996581025029*^9}, {3.904996651760972*^9, 
   3.904996654804344*^9}, {3.9050189462087297`*^9, 3.905018946624119*^9}, {
   3.905020059034676*^9, 
   3.905020067426372*^9}},ExpressionUUID->"da0932e3-f44f-415d-80c7-\
f4fea73ae5de"],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s basic ",
 StyleBox["Fold", "Input"],
 " produces just one final output value, exiting the collection domain of \
List. ",
 StyleBox["FoldList", "Input"],
 " produces all intermediate output values in a new ",
 StyleBox["List", "Input"],
 ". We want ",
 StyleBox["FoldList", "Input"],
 " because its results compose easily (and composition is good). Using ",
 ButtonBox["Haskell-style functional type notation",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikibooks.org/wiki/Haskell/Type_basics#Functional_types"], 
    None},
  ButtonNote->
   "http://en.wikibooks.org/wiki/Haskell/Type_basics#Functional_types"],
 ", the type of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s ",
 StyleBox["FoldList", "Input"],
 " is as follows:"
}], "Text",
 CellChangeTimes->{{3.637751266575506*^9, 3.637751313887394*^9}, 
   3.637751520442885*^9, {3.637753036219933*^9, 3.637753068886631*^9}, {
   3.637757733015213*^9, 3.637757794756987*^9}, {3.637757934817663*^9, 
   3.637757934880309*^9}, {3.637797124788266*^9, 3.6377971337842827`*^9}, {
   3.637838019788842*^9, 3.637838034978837*^9}, {3.6378675029164877`*^9, 
   3.6378675794429617`*^9}, {3.6378677176600246`*^9, 3.637867719492516*^9}, {
   3.637867752242906*^9, 3.637867752247013*^9}, {3.637869984291624*^9, 
   3.637870004678749*^9}, {3.9049203605638447`*^9, 3.9049204037974873`*^9}, {
   3.904920448686413*^9, 3.904920499121911*^9}, 3.904920801704155*^9, {
   3.9049964687642317`*^9, 3.90499662330893*^9}, {3.904996660621233*^9, 
   3.904996704582803*^9}, {3.905018977820895*^9, 3.905019039288108*^9}, {
   3.90502008110396*^9, 3.905020082364708*^9}, {3.9050213458697023`*^9, 
   3.905021360958267*^9}},ExpressionUUID->"e1607c03-f989-480f-9c0e-\
6230ec391199"],

Cell["\<\
FoldList :: binaryQueryFunction \[LongRightArrow] startingValue \
\[LongRightArrow] List \[LongRightArrow] List\
\>", "Subsection",
 CellChangeTimes->{{3.637838061142933*^9, 3.637838114973258*^9}, {
  3.904921245513567*^9, 3.9049212491943903`*^9}, {3.904996776605855*^9, 
  3.904996777381482*^9}},ExpressionUUID->"0d435756-a6a9-418e-9cbd-\
bfbad38d3fb2"],

Cell[CellGroupData[{

Cell["Example: Fibonacci", "Subsection",
 CellChangeTimes->{{3.6378700448066063`*^9, 
  3.637870052500503*^9}},ExpressionUUID->"0c06dd88-895d-4fd4-884a-\
4b1a2e47f474"],

Cell["\<\
This version of Fibonacci doesn't actually use the values in the third \
argument, the collection, it just needs them to be there to \
\[OpenCurlyDoubleQuote]drive\[CloseCurlyDoubleQuote] the computation.\
\>", "Text",
 CellChangeTimes->{{3.637751266575506*^9, 3.637751313887394*^9}, 
   3.637751520442885*^9, {3.637753036219933*^9, 3.637753068886631*^9}, {
   3.637757733015213*^9, 3.637757792454714*^9}, 3.637790959795089*^9, {
   3.6377972896490593`*^9, 3.637797295981718*^9}, {3.904920815480802*^9, 
   3.90492082224842*^9}, 3.904920855492558*^9, {3.9049967394867764`*^9, 
   3.904996745685376*^9}, {3.905019070983136*^9, 
   3.905019072095434*^9}},ExpressionUUID->"81b4700d-2ee9-471c-9512-\
735a15f8cd0d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FoldList", "[", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"binary", " ", "query", " ", "function"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"acc", ",", "v"}], "}"}], "\[Function]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"acc", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
      ",", 
      RowBox[{
       RowBox[{"acc", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
       "+", 
       RowBox[{
       "acc", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"starting", " ", "value"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"collection", " ", 
     RowBox[{"(", "List", ")"}], " ", "of", " ", "other", " ", "ten", " ", 
     "values"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "9"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.637752752389595*^9, 3.6377527691655607`*^9}, {
   3.637752802854848*^9, 3.637752834094846*^9}, {3.637752874031959*^9, 
   3.637752950801259*^9}, {3.637752982550132*^9, 3.637753030829895*^9}, {
   3.637753072431374*^9, 3.637753107746235*^9}, {3.6377573133264112`*^9, 
   3.6377573679033003`*^9}, 3.6377574461476593`*^9, {3.637758525641428*^9, 
   3.6377585454537077`*^9}, {3.637797302792972*^9, 3.637797359157297*^9}, {
   3.9049205481813498`*^9, 3.904920549031406*^9}, {3.904920910440876*^9, 
   3.904920912659944*^9}, {3.904996762423848*^9, 3.904996763249919*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"07a94457-e164-4b30-9083-fb1fdd12682e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"34", ",", "55"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"55", ",", "89"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.637752940968752*^9, 3.637752951525159*^9}, {
   3.637752983111718*^9, 3.6377529929402943`*^9}, 3.637753225743802*^9, 
   3.637753684726486*^9, 3.637754038826622*^9, {3.637757344819635*^9, 
   3.6377573696633177`*^9}, 3.637757446907247*^9, 3.637758331123955*^9, {
   3.637758527768385*^9, 3.637758546297936*^9}, 3.637759559929253*^9, 
   3.637782303564742*^9, 3.6377872372316113`*^9, 3.637797374496093*^9, 
   3.637797796100916*^9, 3.637801351185845*^9, 3.637848065660007*^9, 
   3.63785181814755*^9, 3.6378521881814747`*^9, 3.63785245965766*^9, 
   3.90490464672925*^9, {3.904921452753737*^9, 3.904921477897726*^9}, 
   3.9049314690012608`*^9, 3.9049341424627447`*^9, 3.904935175583922*^9, 
   3.904996764666593*^9, 3.905009998409626*^9, 3.905010342061795*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"9cf78e2b-d976-4787-91a4-bd9f9e63593f"]
}, Open  ]],

Cell[TextData[{
 "This produces a new ",
 StyleBox["List", "Input"],
 " from the given ",
 StyleBox["List", "Input"],
 ". ",
 StyleBox["The new ",
  Background->RGBColor[1, 1, 0]],
 StyleBox["List", "Input",
  Background->RGBColor[1, 1, 0]],
 StyleBox[" has one extra element",
  Background->RGBColor[1, 1, 0]],
 ", because ",
 StyleBox["FoldList", "Input"],
 " produces the starting accumulation value if the input ",
 StyleBox["List", "Input"],
 " is empty. Our request for 10 elements above \[LongDash] via ",
 StyleBox["Range[0,9]", "Input"],
 " \[LongDash] produces 11 elements. "
}], "Text",
 CellChangeTimes->{{3.637753255160122*^9, 3.637753323046393*^9}, {
  3.637753394166718*^9, 3.637753429204159*^9}, {3.637757962403892*^9, 
  3.637757973368853*^9}, {3.6377822803558483`*^9, 3.637782297697795*^9}, {
  3.637797389466322*^9, 3.63779738978638*^9}, {3.637797445516444*^9, 
  3.637797465769763*^9}, {3.904920553454219*^9, 3.904920567650758*^9}, {
  3.9049208985076723`*^9, 3.904920962023242*^9}, {3.904996791254548*^9, 
  3.9049968069736433`*^9}, {3.905019089039937*^9, 3.905019122766911*^9}, {
  3.9050201244628677`*^9, 
  3.905020138111607*^9}},ExpressionUUID->"f80367ed-7972-46d3-9b42-\
bf3a6e8dd454"],

Cell[TextData[{
 StyleBox["FoldList", "Input"],
 " cannot produce an empty ",
 StyleBox["List", "Input"],
 ", no matter what the query produces and no matter how many elements are in \
the input ",
 StyleBox["List", "Input"],
 ": "
}], "Text",
 CellChangeTimes->{{3.637785125145746*^9, 3.637785145862733*^9}, {
  3.904920585925074*^9, 3.9049206126506567`*^9}, {3.904920992203369*^9, 
  3.9049210029942007`*^9}, {3.90499691989329*^9, 
  3.9049969211117067`*^9}},ExpressionUUID->"9fa2f8cd-69f9-4e14-8a46-\
1a8d35c6c309"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FoldList", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], "\[Function]", "Null"}], ",", "42", ",", 
   RowBox[{"{", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.637785093770376*^9, 3.63778511786005*^9}, {
  3.6377851638857393`*^9, 3.637785163964568*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"f2c7d655-9841-4eb0-8cf9-ea7d4622348c"],

Cell[BoxData[
 RowBox[{"{", "42", "}"}]], "Output",
 CellChangeTimes->{
  3.6377851183147087`*^9, 3.637785164533022*^9, 3.6377872374299192`*^9, 
   3.6377977990848083`*^9, 3.637801351502603*^9, 3.637848065783113*^9, 
   3.637851818180423*^9, 3.637852188223612*^9, 3.637852459681797*^9, 
   3.904904663732033*^9, {3.904921452777726*^9, 3.904921480904518*^9}, 
   3.904931469025024*^9, 3.904934142486702*^9, 3.904935175607053*^9, 
   3.905009998429503*^9, 3.9050103420642557`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"7a4155d0-390f-49dc-af80-c8f38b3eb1fe"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Streams", "Section",
 CellChangeTimes->{{3.637784995750167*^9, 
  3.6377849985563498`*^9}},ExpressionUUID->"6d4bc6ee-f7e6-435d-a9cc-\
989524ae1359"],

Cell[TextData[{
 "Let's write folds for potentially infinite, lazy, iteractive [sic] \
collections \[LongDash] streams. Represent a stream as a pair of a value and \
a ",
 StyleBox["thunk",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " (procedure of no arguments); the thunk must produce another stream. An \
idiomatic way to write a thunk from any expression ",
 Cell[BoxData[
  FormBox["E", TraditionalForm]],ExpressionUUID->
  "7b17062b-818b-45b9-9f4b-17a307366480"],
 " is ",
 StyleBox["E&", "Input"],
 ". It\[CloseCurlyQuote]s elegant and also idiomatic to pick up instances of ",
 "Stream",
 " by matching ",
 StyleBox["{v_, thunk_}", "Input"],
 ", so I won\[CloseCurlyQuote]t apologize for the lack of something like a ",
 "class",
 ". Classes are not idiomatic in Mathematica (though see ",
 ButtonBox["this blog post",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://mathematicaforprediction.wordpress.com/2016/03/20/object-\
oriented-design-patterns-in-mathematica/"], None},
  ButtonNote->
   "https://mathematicaforprediction.wordpress.com/2016/03/20/object-oriented-\
design-patterns-in-mathematica/"],
 ")."
}], "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQvUP+6ZYyqdeOvDWJe0H0wVDXYyC6omPZKRC9/o0P
YyWQnrM8nBNEb+xa9LQFSH9adPs1iOYxUvTrAdKrxPmDQPSL6//VFgBpz0k6
piB6lWDnwnVAOk3u0yIQ7Wx5fj+zxFtHVy/3QyA6wm33HRC9j8v2NYh+9uVy
IieQvrfgXAaIvmQVq8sFpBfNKQXTfrVLDoFow4DMwyBaws/oJIju4d13GURb
9m5s4wbS2cl2XSA6TvbDNhAtcvf7SRDt9U74HIju+Qihl3AbnDAA0s2bHM+B
6JlXVS6B6Evv6y+D6PXTyxZZA2mNSy9XgGgAAuqLRw==
  "],ExpressionUUID->"fdd75d59-90bf-4da0-87cc-94e6cff8d552"],

Cell[TextData[{
 "Here's an example stream factory that produces an infinite stream of ",
 StyleBox["Integers", "Input"],
 " starting at ",
 StyleBox["n",
  FontSlant->"Italic"],
 ":"
}], "Text",
 CellChangeTimes->{{3.637753255160122*^9, 3.637753323046393*^9}, {
   3.637753394166718*^9, 3.637753429204159*^9}, {3.637757962403892*^9, 
   3.63775802673921*^9}, {3.63778231707943*^9, 3.637782366863641*^9}, {
   3.637797489037359*^9, 3.6377975204716387`*^9}, {3.6378381359951057`*^9, 
   3.637838167750366*^9}, {3.904918189153241*^9, 3.904918282786418*^9}, {
   3.904921212032275*^9, 3.904921224850531*^9}, {3.9049970255037193`*^9, 
   3.904997076190918*^9}, 3.904997262308179*^9, {3.905019230724553*^9, 
   3.9050192758561487`*^9}, {3.9050202118643713`*^9, 3.905020213304933*^9}, {
   3.905021412972386*^9, 
   3.905021413945334*^9}},ExpressionUUID->"772a0701-f1c7-4632-bea5-\
87b6fc829844"],

Cell[BoxData[
 RowBox[{
  RowBox[{"integersFrom", "[", "n_Integer", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"n", ",", 
    RowBox[{
     RowBox[{"integersFrom", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "&"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.637753337739325*^9, 3.637753386320825*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"55c6bde7-8ecb-4382-bcf4-1bcd9aeff297"],

Cell[TextData[{
 "Technically, any such stream is semi-infinite, producing all ",
 StyleBox["Integers", "Input"],
 " greater than or equal to ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "edb3ef38-1756-4624-a394-bdb7e35b4532"],
 ". If we extract a value from a slot ",
 Cell[BoxData[
  FormBox[
   RowBox[{"<", "n"}], TraditionalForm]],ExpressionUUID->
  "de218906-a81c-4505-8530-60830bd51780"],
 ", we get ",
 StyleBox["Null", "Input"],
 ", which doesn\[CloseCurlyQuote]t print by itself."
}], "Text",
 CellChangeTimes->{
  3.904997273094351*^9, {3.9050193000990334`*^9, 3.905019306422249*^9}, {
   3.905020194334724*^9, 
   3.9050202242909107`*^9}},ExpressionUUID->"dda32110-eb2f-4b1d-81f7-\
d2896deb05c1"],

Cell[CellGroupData[{

Cell["extract :: Stream \[LongRightArrow] value", "Subsection",
 CellChangeTimes->{{3.63778440150141*^9, 3.6377844026438513`*^9}, {
   3.637837968002224*^9, 3.6378379956997833`*^9}, 
   3.904921259199581*^9},ExpressionUUID->"3c7e1c4c-1524-4653-a00f-\
7fa05ce97b13"],

Cell[TextData[{
 StyleBox["Extract",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " is a (tail-recursive) way to get the 1-indexed, ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "8cff52bd-5a1e-49c2-bb26-ff2a978fdc68"],
 "-th value from any stream. ",
 StyleBox["Extract",
  FontSlant->"Italic"],
 " is not Stream-to-Stream, but Stream-to-Value \[LongDash] it\
\[CloseCurlyQuote]s a \[OpenCurlyDoubleQuote]way out.\[CloseCurlyDoubleQuote] \
Other ways-out of Stream are ",
 StyleBox["forEach", "Input"],
 " and ",
 StyleBox["reify", "Input"],
 ", and we get to them below. "
}], "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQB2IQ3RqgcblM6rUjx5OaayB60s3TDeVAekuobyOI3hyQ
xlUJpNc8zAHTB9bd4QfRBe38QiD62qUAOxDtdPY4mI6T2qJbBaSl50oagOi2
kCThViB9/vQ2ML0tQqQcRH99GlQNolfIZbeB6DeHJoPpbamiB0G0Wu96MJ0k
vP44iL7LaXYJRG8P0g3tAdLn3NNSQPRf4XL2BUDabWEhB4jmEXJYtQ5IpwgH
bALRyVLVF0F0kYPRFRBdI6N5nFniraOQeD6YTpM48xlEr9rJ/h1Eh51edo0b
SKs5xT0C0Xbrvkw3BKlLuT8TRE865LDdGkh/Ea3YA6K3GDIdBdFTHKKPgWiW
78paNkCa/VAfmJ4lebIRRNe43QLTAIJPpQs=
  "],ExpressionUUID->"51f68548-7cbb-430b-ac6f-533206cea7d3"],

Cell[TextData[{
 "By convention, a finite stream has a ",
 StyleBox["Null", "Input"],
 " thunk at the end. ",
 StyleBox["Thus, the empty stream, by invoking such a thunk, is ",
  Background->RGBColor[1, 1, 0]],
 StyleBox["Null[]", "Input",
  Background->RGBColor[1, 1, 0]],
 ". Extracting anything from such a stream produces ",
 StyleBox["Null", "Input"],
 ", which does not print by itself."
}], "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQ3RqgcblM6rUjx5OaayB60s3TDeVAekuobyOI3hyQ
xlUJpNc8zAHTB9bd4QfRBe38QiD62qUAOxDtdPY4mI6T2qJbBaSl50oagOi2
kCThViB9/vQ2ML0tQqQcRH99GlQNolfIZbeB6DeHJoPpbamiB0G0Wu96MJ0k
vP44iL7LaXYJRG8P0g3tAdLn3NNSQPRf4XL2BUDabWEhB4jmEXJYtQ5IpwgH
bALRAdOYr3JJvHXk+Hb0Goj2Ocf5hBtI75OofQ2iHddwzDUE0qyBO8H0PMWw
fdYg+WeeB0B0k0yMjg2QztiyBkwDAHnBiPk=
  "],ExpressionUUID->"2b8cd78c-d7fc-4ac2-ae6c-3b456cff9463"],

Cell[TextData[{
 "The following five, ordered patterns implement ",
 StyleBox["extract",
  FontSlant->"Italic"],
 ":"
}], "Text",
 CellChangeTimes->{{3.637753497259829*^9, 3.637753523902836*^9}, {
  3.637754886370309*^9, 3.637754890416712*^9}, {3.637758035197351*^9, 
  3.637758035402548*^9}, {3.637758078896332*^9, 3.637758096485283*^9}, {
  3.637758450525737*^9, 3.637758454243806*^9}, {3.6377603656282187`*^9, 
  3.637760384800428*^9}, {3.637782683072818*^9, 3.637782685712379*^9}, {
  3.637783480635829*^9, 3.637783514590571*^9}, {3.637783603347492*^9, 
  3.637783604617544*^9}, {3.637784072668666*^9, 3.63778407748598*^9}, {
  3.637784125471116*^9, 3.637784209688704*^9}, {3.637797545416347*^9, 
  3.637797667196265*^9}, {3.63783788372119*^9, 3.6378378915509367`*^9}, {
  3.637867858002203*^9, 3.637867922502367*^9}, {3.9049192081120987`*^9, 
  3.904919222186283*^9}, {3.9049213763064327`*^9, 3.904921422508478*^9}, {
  3.904998643109373*^9, 
  3.904998647016963*^9}},ExpressionUUID->"a8930fdd-9528-4527-827f-\
712bfbaa517c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "extract", "]"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"defaulting", " ", 
    RowBox[{"n", ":"}]}], " ", "*)"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extract", "[", 
     RowBox[{"{", 
      RowBox[{"v_", ",", "thunk_"}], "}"}], "]"}], ":=", 
    RowBox[{"extract", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"v", ",", "thunk"}], "}"}], ",", "1"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"base", " ", "case"}], ";", " ", 
    RowBox[{
     RowBox[{"Null", "[", "]"}], " ", "is", " ", "the", " ", "empty", " ", 
     "stream"}]}], " ", "*)"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extract", "[", 
     RowBox[{
      RowBox[{"Null", "[", "]"}], ",", "_"}], "]"}], ":=", "Null"}], ";"}], 
  " ", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Do", " ", "this", " ", "if", " ", "you", " ", "just", " ", "want", " ", 
     "the", " ", "first", " ", "value"}], ";", " ", 
    RowBox[{"it", " ", "is", " ", "the", " ", "default"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extract", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"v_", ",", "thunk_"}], "}"}], ",", "1"}], "]"}], ":=", "v"}], 
   ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Somebody", " ", "invoked", " ", "my", " ", 
    RowBox[{"thunk", "!"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"tail", " ", 
    RowBox[{"recursion", ":"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"extract", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v_", ",", "thunk_"}], "}"}], ",", 
     RowBox[{"n_Integer", "/;", 
      RowBox[{"n", ">", "0"}]}]}], "]"}], ":=", 
   RowBox[{"extract", "[", 
    RowBox[{
     RowBox[{"thunk", "[", "]"}], ",", 
     RowBox[{"n", "-", "1"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"catch", "-", 
    RowBox[{"all", ":"}]}], " ", "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"extract", "[", "___", "]"}], ":=", "Null"}], ";"}]}]}], "Input",
 CellChangeTimes->{
  3.6377516391118393`*^9, {3.637753593407526*^9, 3.637753643829895*^9}, {
   3.63775371886684*^9, 3.637753757057453*^9}, {3.637753789471341*^9, 
   3.637753803796227*^9}, {3.6377538350228863`*^9, 3.637753933091619*^9}, {
   3.63775406910161*^9, 3.637754154740123*^9}, {3.637754556461924*^9, 
   3.6377546351687193`*^9}, {3.637755583729496*^9, 3.637755747476664*^9}, {
   3.637756216169758*^9, 3.6377562471557293`*^9}, {3.637759469849208*^9, 
   3.6377594727457457`*^9}, {3.63775969666359*^9, 3.637759698885449*^9}, {
   3.637760398816819*^9, 3.637760466464635*^9}, {3.6377837058662558`*^9, 
   3.6377837114553537`*^9}, {3.637784314994334*^9, 3.6377843486375103`*^9}, {
   3.637786810804034*^9, 3.637786862452306*^9}, {3.637797692838512*^9, 
   3.637797719766581*^9}, {3.637797751191168*^9, 3.637797768852206*^9}, {
   3.637837906437263*^9, 3.6378379513079157`*^9}, {3.904904816930204*^9, 
   3.904904819876649*^9}, {3.904917972985376*^9, 3.9049179836992083`*^9}, {
   3.9049219033154697`*^9, 3.904921931204302*^9}, {3.904922012625456*^9, 
   3.904922074223311*^9}, {3.9049221284804277`*^9, 3.9049221980945787`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"291c1afc-5394-4f06-9364-f5cb2c2e4296"],

Cell[TextData[{
 "Get the ",
 Cell[BoxData[
  FormBox["630000", TraditionalForm]],ExpressionUUID->
  "2d040abd-f2a3-4748-8f89-60deb69860e8"],
 "-th integer efficiently (if not quickly):"
}], "Text",
 CellChangeTimes->{{3.6377580468353148`*^9, 3.63775806670474*^9}, {
   3.6377581021247787`*^9, 3.637758130337009*^9}, {3.9049219447951403`*^9, 
   3.904921945528561*^9}, 
   3.905020281554834*^9},ExpressionUUID->"446f3868-9bbf-45b6-949c-\
7310613cc0af"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"$IterationLimit", "=", "Infinity"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"extract", "[", 
     RowBox[{
      RowBox[{"integersFrom", "[", "1", "]"}], ",", "630000"}], "]"}]}], 
   "]"}], "//", "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.637753556033202*^9, 3.6377535674798*^9}, {
   3.637753627260697*^9, 3.637753676179442*^9}, 3.6377538588757668`*^9, {
   3.637754018884202*^9, 3.637754028960527*^9}, {3.637754637249743*^9, 
   3.637754666398757*^9}, 3.637754856842067*^9, {3.637755381521036*^9, 
   3.637755390692295*^9}, 3.637759473564096*^9},
 CellLabel->"In[8]:=",ExpressionUUID->"795dc94d-e3b3-430a-87fb-5d2d49edfca4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.643266`", ",", "630000"}], "}"}]], "Output",
 CellChangeTimes->{{3.637753568648037*^9, 3.6377535796333513`*^9}, {
   3.6377536165702677`*^9, 3.637753651168797*^9}, 3.637753684822069*^9, 
   3.6377537244414253`*^9, {3.637753855244419*^9, 3.637753878166842*^9}, {
   3.63775391504521*^9, 3.637753935113977*^9}, {3.637754012913208*^9, 
   3.637754039125669*^9}, 3.637754157584219*^9, 3.637754627181587*^9, {
   3.6377546600486097`*^9, 3.6377546671964483`*^9}, 3.637754859505443*^9, 
   3.6377553935142937`*^9, 3.637755752226548*^9, 3.63775834020856*^9, 
   3.637759570316523*^9, 3.6377597046115007`*^9, 3.6377604403493347`*^9, 
   3.637760477011236*^9, 3.637782408615926*^9, 3.637783525610038*^9, 
   3.6377841627779713`*^9, 3.637784353363121*^9, 3.637787239475601*^9, 
   3.637797775892722*^9, 3.637797817092394*^9, 3.637801353554673*^9, 
   3.6378480675423317`*^9, 3.637851819885415*^9, 3.637852189990485*^9, 
   3.637852461526099*^9, 3.6378679560760927`*^9, 3.904904837369025*^9, {
   3.904921443434504*^9, 3.904921452799532*^9}, 3.904921496092617*^9, 
   3.904922223873917*^9, 3.9049314696525393`*^9, 3.9049341431196136`*^9, 
   3.904935176256216*^9, 3.9049986516454773`*^9, 3.905009999088317*^9, 
   3.905010342737465*^9, 3.905020287749484*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"69d24e83-d1b7-4598-9a77-918045585ad8"]
}, Open  ]],

Cell[TextData[{
 "Extracting 0 values produces ",
 StyleBox["Null", "Input"],
 " \[LongDash] nothing in the output cell; in fact, no output cell:"
}], "Text",
 CellChangeTimes->{{3.637784368850827*^9, 3.6377843822392693`*^9}, {
  3.904922239043652*^9, 
  3.9049222642352047`*^9}},ExpressionUUID->"49fbc7a2-3ba4-4ffe-95f1-\
d4a9e4cafef5"],

Cell[BoxData[
 RowBox[{"extract", "[", 
  RowBox[{
   RowBox[{"integersFrom", "[", "0", "]"}], ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.637784353608123*^9, 3.637784363410925*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"587ab5bc-8e2f-486c-8540-a99dfecc934d"],

Cell[TextData[{
 "Extracting from before the beginning produces ",
 StyleBox["Null", "Input"],
 ":"
}], "Text",
 CellChangeTimes->{{3.9049183068753147`*^9, 
  3.904918321027732*^9}},ExpressionUUID->"3a373757-0216-4383-81fc-\
6fda2364c053"],

Cell[BoxData[
 RowBox[{"extract", "[", 
  RowBox[{
   RowBox[{"integersFrom", "[", "0", "]"}], ",", 
   RowBox[{"-", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.904918328213388*^9, 3.9049183390164747`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"222806ae-61d7-43ba-a066-3bde5e45f8ab"],

Cell[TextData[{
 "Here is how that works, by invoking the fifth, catch-all pattern, ",
 StyleBox["extract[___]", "Input"],
 ", in the definition of ",
 StyleBox["extract",
  FontSlant->"Italic"],
 ":"
}], "Text",
 CellChangeTimes->{{3.904918682717532*^9, 3.904918720322378*^9}, {
  3.904922279520084*^9, 3.904922283164105*^9}, {3.905020351165452*^9, 
  3.9050203563451138`*^9}},ExpressionUUID->"3728fd41-e057-49d2-8867-\
f1cd193c3f2a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<TraceView\>\"", "]"}], "[", 
  RowBox[{"extract", "[", 
   RowBox[{
    RowBox[{"integersFrom", "[", "0", "]"}], ",", " ", 
    RowBox[{"-", "2"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.904918370590219*^9, 3.9049183860402412`*^9}, {
  3.904918456351753*^9, 3.9049184636313353`*^9}, {3.904918608636838*^9, 
  3.904918624924623*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"e6efd1be-caa7-4938-9b3a-6e1e671343ff"],

Cell[BoxData[
 TagBox[
  DynamicModuleBox[{
   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`pos$$ = {{1, 1}, {1, 
   2}}, FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`maxDisplayDepth$$\
 = 4, FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`maxChildDisplay$$ =
    5, FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`timesRelativeTo$$ \
= "Outer", FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`treeMeta$$, 
   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`animating$$ = False, 
   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`animatingPos$$, 
   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`animationStart$$, 
   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`childPos$$, 
   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`outerColor$$ = 
   GrayLevel[0, 0], 
   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`forceVisible$$, 
   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`baseBoxBudget$$, 
   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`boxBudgets$$, 
   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`paneSize$$, 
   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`allowContextHint$$, 
   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`toolbarAtTop$$ = 
   False}, 
   TagBox[GridBox[{
      {
       DynamicBox[ToBoxes[
         If[Length[
            
            FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`traceSym$\
6942[]] > 0, 
          
          FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
DisplayTraceTreeView[
          FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`traceSym$6942, 
           FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`pos$$, 
           FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`childPos$$, 
           FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`treeMeta$$, 
           FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`baseBoxBudget$\
$, FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`boxBudgets$$, 
           FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`forceVisible$$\
, FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`outerColor$$, 
           FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
timesRelativeTo$$, 
           FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
maxDisplayDepth$$, 
           FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
maxChildDisplay$$, 
           FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
animationStart$$, 
           FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`animating$$, 
           FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`animatingPos$$\
, FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`allowContextHint$$, 
           FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`paneSize$$], 
          Framed[
           Style["Trace data no longer available.", "Text", 
            RGBColor[1, 0.1, 0.3, 0.8]], Background -> GrayLevel[0.62, 0.08], 
           FrameStyle -> GrayLevel[0.75, 0.5]]], StandardForm],
        ImageSizeCache->{712., {67., 77.}},
        TrackedSymbols:>{
         FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`pos$$, 
          FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`childPos$$, 
          FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
timesRelativeTo$$, 
          FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
maxDisplayDepth$$, 
          FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
maxChildDisplay$$, 
          FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`boxBudgets$$}]},
      {
       StyleBox[
        RowBox[{
         TagBox[
          TooltipBox[
           PaneBox[
            TagBox[GridBox[{
               {
                ItemBox[
                 GraphicsBox[{CircleBox[{0, 0}, 1.3], 
                   {JoinForm["Bevel"], 
                    LineBox[{{-0.6, 0.6}, {0, 0}, {0, 1.2}}]}}],
                 Background->GrayLevel[0.65, 0.15],
                 StripOnInput->False], 
                ItemBox[
                 PaneBox[
                  TagBox[
                   TagBox[
                    ButtonBox[
                    
                    PaneSelectorBox[{"Outer"->"\<\"Outer\"\>", 
                    "Total"->"\<\"Total\"\>", "Parent"->"\<\"Parent\"\>"}, 
                    Dynamic[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
timesRelativeTo$$]],
                    Appearance->{"Default" -> None, "Pressed" -> "Palette"},
                    Background->RGBColor[0, 0, 0, 0],
                    BaseStyle->(FontSize -> 15),
                    ButtonFunction:>{},
                    ContentPadding->False,
                    Enabled->False,
                    Evaluator->None,
                    ImageMargins->{{-2, -2}, {-1, -1}},
                    Method->"Preemptive"],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
timesRelativeTo$$ = Part[{
                    "Outer" -> "Outer", "Total" -> "Total", "Parent" -> 
                    "Parent"}, 
                    Mod[Part[
                    
                    FirstPosition[{
                    "Outer" -> "Outer", "Total" -> "Total", "Parent" -> 
                    "Parent"}, 
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
timesRelativeTo$$, {0}], 1] + 1, 
                    
                    Length[{
                    "Outer" -> "Outer", "Total" -> "Total", "Parent" -> 
                    "Parent"}], 1], 1]), Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]],
                   MouseAppearanceTag["LinkHand"]],
                  Alignment->{Center, Center},
                  ImageSize->{Automatic, 23}],
                 Background->Dynamic[
                   If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[{"MouseButtonTest", 1}], 
                    GrayLevel[0.7, 0.82], 
                    GrayLevel[0.75, 0.5]], 
                    GrayLevel[0.65, 0.15]]],
                 StripOnInput->False]}
              },
              AutoDelete->False,
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"]],
           "\"Times relative to\""],
          Annotation[#, "Times relative to", "Tooltip"]& ], "\<\"\"\>", 
         TagBox[
          TooltipBox[
           PaneBox[
            TagBox[GridBox[{
               {
                ItemBox[
                 
                 GraphicsBox[
                  LineBox[{{{-1, 1}, {-1, 0.1}, {1, 0.1}}, {{0, 0.1}, {
                    0, -1}, {1, -1}}}]],
                 Background->GrayLevel[0.65, 0.15],
                 StripOnInput->False], 
                ItemBox[
                 
                 TemplateBox[{{{-1, 0}, {1, 0}}, If[
                   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
maxDisplayDepth$$ > 2, PreDecrement[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
maxDisplayDepth$$]]& },
                  ""],
                 Background->Dynamic[
                   If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[{"MouseButtonTest", 1}], 
                    GrayLevel[0.7, 0.82], 
                    GrayLevel[0.75, 0.5]], 
                    GrayLevel[0.65, 0.15]]],
                 StripOnInput->False], 
                PaneBox[
                 
                 InputFieldBox[Dynamic[
                  FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
maxDisplayDepth$$, (
                   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
maxDisplayDepth$$ = Max[
                    Round[#], 2])& ], Number,
                  Alignment->{Center, Center},
                  BaseStyle->(FontColor -> GrayLevel[0.5]),
                  FieldSize->{1, 1}],
                 Alignment->{Center, Center},
                 ImageSize->{Automatic, 23},
                 ScrollPosition->{0., 8.333333333333334}], 
                ItemBox[
                 
                 TemplateBox[{{{{-1, 0}, {1, 0}}, {{0, -1}, {0, 1}}}, (
                   PreIncrement[
                   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
maxDisplayDepth$$])& },
                  ""],
                 Background->Dynamic[
                   If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[{"MouseButtonTest", 1}], 
                    GrayLevel[0.7, 0.82], 
                    GrayLevel[0.75, 0.5]], 
                    GrayLevel[0.65, 0.15]]],
                 StripOnInput->False]}
              },
              AutoDelete->False,
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"]],
           "\"Maximum display depth\""],
          Annotation[#, "Maximum display depth", "Tooltip"]& ], "\<\"\"\>", 
         TagBox[
          TooltipBox[
           PaneBox[
            TagBox[GridBox[{
               {
                ItemBox[
                 
                 GraphicsBox[{PointBox[{{-1, 1}, {-1, 0}, {-1, -1}}], 
                   LineBox[{{{0, 1}, {1, 1}}, {{0, 0}, {1, 0}}, {{0, -1}, {
                    1, -1}}}]}],
                 Background->GrayLevel[0.65, 0.15],
                 StripOnInput->False], 
                ItemBox[
                 
                 TemplateBox[{{{-1, 0}, {1, 0}}, If[
                   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
maxChildDisplay$$ > 2, 
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
forceVisible$$ = True; 
                    PreDecrement[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
maxChildDisplay$$]]& },
                  ""],
                 Background->Dynamic[
                   If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[{"MouseButtonTest", 1}], 
                    GrayLevel[0.7, 0.82], 
                    GrayLevel[0.75, 0.5]], 
                    GrayLevel[0.65, 0.15]]],
                 StripOnInput->False], 
                PaneBox[
                 
                 InputFieldBox[Dynamic[
                  FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
maxChildDisplay$$, (
                   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
forceVisible$$ = True; 
                   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
maxChildDisplay$$ = Max[
                    Round[#], 2])& ], Number,
                  Alignment->{Center, Center},
                  BaseStyle->(FontColor -> GrayLevel[0.5]),
                  FieldSize->{1, 1}],
                 Alignment->{Center, Center},
                 ImageSize->{Automatic, 23}], 
                ItemBox[
                 
                 TemplateBox[{{{{-1, 0}, {1, 0}}, {{0, -1}, {0, 1}}}, (
                   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
forceVisible$$ = True; 
                   PreIncrement[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
maxChildDisplay$$])& },
                  ""],
                 Background->Dynamic[
                   If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[{"MouseButtonTest", 1}], 
                    GrayLevel[0.7, 0.82], 
                    GrayLevel[0.75, 0.5]], 
                    GrayLevel[0.65, 0.15]]],
                 StripOnInput->False]}
              },
              AutoDelete->False,
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"]],
           "\"Maximum number of children displayed\""],
          
          Annotation[#, "Maximum number of children displayed", 
           "Tooltip"]& ], "\<\"\"\>", 
         DynamicModuleBox[{
          FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`searchEnabled$$\
 = True, FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchPatternString$$ = "", 
          FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`searchPattern$$\
, FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`searchPatternError$$ = \
{}, FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`noResultFound$$ = 
          False, FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
doSearch$$}, 
          PaneBox[
           TagBox[GridBox[{
              {
               ItemBox[
                PaneBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    
                    InputFieldBox[Dynamic[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchPatternString$$, (
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchPatternString$$ = #; 
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchPatternError$$ = If[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchPatternString$$ == "", {}, 
                    If[
                    AllTrue[Internal`SymbolNameQ][
                    StringReplace[Alternatives["*", "@"] -> "A"][
                    StringSplit[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchPatternString$$, "`"]]], 
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchPattern$$ = 
                    With[{FunctionRepository`$\
c1b927fd1f474ad4b6a5f61e95744e9e`pat = 
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchPatternString$$}, 
                    Condition[
                    Pattern[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`s, 
                    HoldPattern[
                    Except[
                    Symbol[
                    BlankNullSequence[]], 
                    Blank[Symbol]]]], 
                    Or[
                    StringMatchQ[
                    SymbolName[
                    Unevaluated[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`s]], 
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`pat], 
                    StringMatchQ[
                    Context[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`s] <> 
                    SymbolName[
                    Unevaluated[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`s]], 
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`pat]]\
]]; {}, 
                    First[Quiet[
                    ToExpression[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchPatternString$$, InputForm, HoldPattern]]; Part[
                    Reap[
                    Quiet[
                    Internal`HandlerBlock[{"Message", 
                    Replace[
                    Pattern[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`h, 
                    Hold[
                    Message[
                    Pattern[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`m, 
                    MessageName[
                    Pattern[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`sym, 
                    Blank[]], 
                    Blank[]]], 
                    Pattern[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`args, 
                    BlankNullSequence[]]], 
                    Blank[]]] :> Sow[
                    StringForm[
                    ReplaceAll[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`m, 
                    Messages[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`sym]]\
, FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`args]]]}, 
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchPattern$$ = 
                    ToExpression[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchPatternString$$, InputForm, HoldPattern]]]], 2], {}]]]; 
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchEnabled$$ = 
                    And[FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchPatternError$$ === {}, 
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchPatternString$$ != ""]; Null)& ], String,
                    BaseStyle->(FontFamily -> Dynamic[
                    AbsoluteCurrentValue[{StyleHints, "CodeFont"}]]),
                    FieldHint->"Search pattern",
                    FieldHintStyle->(FontOpacity -> 0.7),
                    FieldSize->{12, 1}],
                    
                    EventHandlerTag[{
                    "ReturnKeyDown" :> 
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
doSearch$$[1], Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]],
                   DynamicBox[
                    ToBoxes[
                    Style[
                    StringTrim[
                    StringRiffle[
                    Map[
                    ToString, 
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchPatternError$$], "\n"]], 
                    Darker[Red]], StandardForm]],
                   TooltipDelay->Dynamic[
                    If[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchPatternError$$ === {}, Infinity, 0]]],
                  Annotation[#, 
                   Dynamic[
                    Style[
                    StringTrim[
                    StringRiffle[
                    Map[
                    ToString, 
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchPatternError$$], "\n"]], 
                    Darker[Red]]], "Tooltip"]& ],
                 Alignment->{Center, Center},
                 ImageSize->{Automatic, 23}],
                Background->Dynamic[
                  If[
                  FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
noResultFound$$, If[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
animationStart$$ === None, 
                    Refresh[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
animationStart$$ = Clock[Infinity], None]]; 
                   If[Clock[Infinity] - 
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
animationStart$$ > 1, 
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
noResultFound$$ = False]; (RGBColor[1, 0.5, 0.5, 0.3 - 0.3 #]& )[
                    Clip[
                    Clock[Infinity] - 
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
animationStart$$]], 
                   If[
                   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchPatternError$$ =!= {}, 
                    RGBColor[1, 0.6, 0.6, 0.2], Transparent]]],
                FrameStyle->Dynamic[
                  If[
                  FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchPatternError$$ =!= {}, 
                   RGBColor[1, 0, 0, 0.5], 
                   GrayLevel[0.75]]],
                StripOnInput->False], 
               ItemBox[
                TooltipBox[
                 
                 TemplateBox[{{{{0, -1}, {-0.5, 0}, {0, 1}}, {{1, -1}, {
                    0.5, 0}, {1, 1}}}, 
                   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
doSearch$$[-1]& },
                  ""],
                 "Previous match"],
                Background->Dynamic[
                  If[
                  FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchEnabled$$, 
                   If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[{"MouseButtonTest", 1}], 
                    GrayLevel[0.7, 0.82], 
                    GrayLevel[0.75, 0.5]], 
                    GrayLevel[0.65, 0.15]], 
                   GrayLevel[0.75, 0.5]]],
                StripOnInput->False], 
               ItemBox[
                TooltipBox[
                 
                 TemplateBox[{{{{0, -1}, {0.5, 0}, {0, 
                    1}}, {{-1, -1}, {-0.5, 0}, {-1, 1}}}, 
                   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
doSearch$$[1]& },
                  ""],
                 "Next match"],
                Background->Dynamic[
                  If[
                  FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchEnabled$$, 
                   If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[{"MouseButtonTest", 1}], 
                    GrayLevel[0.7, 0.82], 
                    GrayLevel[0.75, 0.5]], 
                    GrayLevel[0.65, 0.15]], 
                   GrayLevel[0.75, 0.5]]],
                StripOnInput->False]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"]],
          DynamicModuleValues:>{},
          
          Initialization:>(
           FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`doSearch$$[
              Pattern[
              FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`dir$, 
               Blank[]]] := 
            If[FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchEnabled$$, 
              FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
forceVisible$$ = True; 
              With[{FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`res$ = 
                 FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
SearchTree[FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`traceSym$6942,
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchPattern$$, FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`pos$$, 
                   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`dir$]}\
, 
                If[
                 MissingQ[
                 FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`res$], 
                 FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
animatingPos$$ = {}; 
                 FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
StartColorAnimation[
                  FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
noResultFound$$, 
                   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
animationStart$$]; Null, 
                 FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
animatingPos$$ = (FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`pos$$ = 
                   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`res$); 
                 FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
StartColorAnimation[
                  FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
animating$$, 
                   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
animationStart$$]; Null]]; Null]; Null),
          
          UnsavedVariables:>{
           FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`doSearch$$}]}],
        StripOnInput->False,
        TemplateBoxOptions->{DisplayFunction->(TagBox[
          TagBox[
           ButtonBox[
            GraphicsBox[
             LineBox[#]], ButtonFunction :> {}, Evaluator -> None, 
            Appearance -> {"Default" -> None, "Pressed" -> "Palette"}, 
            Enabled -> False, ContentPadding -> False, 
            ImageMargins -> {{-2, -2}, {-1, -1}}, BaseStyle -> {}, Background -> 
            RGBColor[0, 0, 0, 0], Method -> "Preemptive"], 
           
           EventHandlerTag[{
            "MouseClicked" :> #2[], Method -> "Preemptive", PassEventsDown -> 
             Automatic, PassEventsUp -> True}]], 
          MouseAppearanceTag["LinkHand"]]& )},
        InputFieldBoxOptions->{Alignment->{Left, Center},
        Appearance->"Frameless"},
        TooltipBoxOptions->{
        TooltipStyle->{
         Background -> GrayLevel[0.97], FontColor -> GrayLevel[0.1], 
          CellFrameStyle -> GrayLevel[0.7]}},
        GridBoxOptions->{AutoDelete->False,
        BaseStyle->{
         Background :> CurrentValue[{StyleDefinitions, "Output", Background}],
           "Text"},
        FrameStyle->GrayLevel[0.75],
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
        GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.1}}}},
        GraphicsBoxOptions->{BaseStyle->{
          AbsoluteThickness[1.5], 
          AbsolutePointSize[1.5], 
          GrayLevel[0.5]},
        ImageSize->12,
        PlotRange->1.7},
        GraphicsBoxOptions -> {Antialiasing -> False}]}
     },
     BaseStyle->{"Output", FontWeight -> "Plain"},
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"],
   DynamicModuleValues:>{},
   Initialization:>(
    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`treeMeta$$[
       Pattern[FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`pos$, 
        Blank[]]] := (
      FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`treeMeta$$[
       FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`pos$] = <|
       "MainContext" -> 
        Map[FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
DetermineMainContext, 
          Through[
           {
           FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
EvaluationInput, 
            FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
EvaluationOutput}[
           FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`traceSym$6942,
             FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`pos$]]]|>); 
    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`boxBudgets$$[
       BlankSequence[]][
       Blank[]] = 0; 
    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`childPos$$[
       Blank[]] = 1; Null),
   UnsavedVariables:>{
    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`treeMeta$$, 
     FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`animatingPos$$, 
     FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`animationStart$$, 
     FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`childPos$$, 
     FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`forceVisible$$, 
     FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`baseBoxBudget$$, 
     FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`boxBudgets$$, 
     FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`paneSize$$, 
     FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`allowContextHint$$}],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "Output",
 CellChangeTimes->{3.9049184642829103`*^9, 3.90491862578592*^9, 
  3.904921452834709*^9, 3.904922286724103*^9, 3.904931469890238*^9, 
  3.904934143330659*^9, 3.9049351764899683`*^9, 3.904998668276648*^9, 
  3.905009999453594*^9, 3.905010343042323*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"187e8444-421a-40c8-94e8-fedbd8f0457c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["take :: Stream \[LongRightArrow] index \[LongRightArrow] Stream", \
"Subsection",
 CellChangeTimes->{{3.637784422633168*^9, 3.6377844230330133`*^9}, {
  3.6378382666851683`*^9, 3.637838304454303*^9}, {3.904922292453247*^9, 
  3.904922295282567*^9}},ExpressionUUID->"10498316-d9f1-4a13-8edb-\
950c73f17e0c"],

Cell[TextData[{
 "Here\[CloseCurlyQuote]s the first of the big results in this notebook: ",
 StyleBox["take", "Input"],
 " is a function that takes a finite number of elements from a possibly \
infinite stream and produces a finite stream:"
}], "Text",
 CellChangeTimes->{{3.6378679789735737`*^9, 3.637868060519628*^9}, {
  3.904904872676712*^9, 3.904904893437289*^9}, {3.904922309483121*^9, 
  3.904922338893462*^9}, {3.904998688678977*^9, 3.9049986901622677`*^9}, {
  3.90502051034101*^9, 
  3.905020578400119*^9}},ExpressionUUID->"adafbf43-5426-450c-b5ec-\
a421b7f6e870"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "take", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"take", "[", "stream_", "]"}], ":=", 
    RowBox[{"take", "[", 
     RowBox[{"stream", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"the", " ", "empty", " ", "Stream"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"take", "[", 
     RowBox[{"_", ",", "0"}], "]"}], ":=", 
    RowBox[{"Null", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"new", " ", "Stream", " ", "with", " ", "exactly", " ", "one", " ", 
    RowBox[{"element", ":"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"take", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"v_", ",", "thunk_"}], "}"}], ",", "1"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{"v", ",", "Null"}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"treating", " ", "Null", " ", "as", " ", "a", " ", 
    RowBox[{"thunk", "!"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"recursive", " ", "case"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"take", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"v_", ",", "thunk_"}], "}"}], ",", 
      RowBox[{"n_Integer", "/;", 
       RowBox[{"n", ">", "0"}]}]}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{"v", ",", 
      RowBox[{
       RowBox[{"take", "[", 
        RowBox[{
         RowBox[{"thunk", "[", "]"}], ",", 
         RowBox[{"n", "-", "1"}]}], "]"}], "&"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "What", " ", "happens", " ", "if", " ", "you", " ", "take", " ", "more", 
    " ", "than", " ", "the", " ", "Stream", " ", 
    RowBox[{"has", "?"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"take", "[", 
    RowBox[{
     RowBox[{"Null", "[", "]"}], ",", "_"}], "]"}], ":=", 
   RowBox[{"Null", "[", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.637759102827816*^9, 3.637759234736011*^9}, 
   3.6377594743971643`*^9, {3.637759577364447*^9, 3.637759692346114*^9}, {
   3.637759733978079*^9, 3.637759761077281*^9}, {3.6377600809115353`*^9, 
   3.637760081646707*^9}, {3.6377828153525352`*^9, 3.637782825693058*^9}, {
   3.637783546116251*^9, 3.637783548853736*^9}, {3.90490524192697*^9, 
   3.904905306784483*^9}, 3.904918771513414*^9, {3.904918808752369*^9, 
   3.904918829064324*^9}, {3.905009578936994*^9, 3.905009601365787*^9}, {
   3.905009641825572*^9, 3.905009701952087*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"76504fec-9e45-4843-ae5b-edf91edf413f"],

Cell[TextData[{
 "Here it is at work on the infinite stream of all ",
 StyleBox["Integers", "Input"],
 ", producing a finite stream of three ",
 StyleBox["Integers", "Input"],
 ", from which we extract the first value:"
}], "Text",
 CellChangeTimes->{{3.637868083884145*^9, 3.637868114856819*^9}, 
   3.904922383613674*^9, {3.904998949702304*^9, 3.904998964690096*^9}, {
   3.9050206116391706`*^9, 
   3.905020612201276*^9}},ExpressionUUID->"3c9d1d7b-8c43-436e-b371-\
071373ab3431"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"extract", "[", 
  RowBox[{
   RowBox[{"take", "[", 
    RowBox[{
     RowBox[{"integersFrom", "[", "1", "]"}], ",", "3"}], "]"}], ",", "1"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6377844376278553`*^9, 3.637784437743939*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"39c4a70c-2d36-426c-8ab4-1387a2cb191f"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.637784438147915*^9, 3.63778723960688*^9, 
  3.637797914170817*^9, 3.637801353641848*^9, 3.637848067631216*^9, 
  3.637851819951673*^9, 3.6378521900768967`*^9, 3.63785246162119*^9, 
  3.6378681173035107`*^9, 3.904905313868318*^9, 3.904918775397387*^9, 
  3.9049214528638487`*^9, 3.904922355833477*^9, 3.9049314699627123`*^9, 
  3.9049341433921967`*^9, 3.9049351765494213`*^9, 3.904998971045622*^9, 
  3.905009705193924*^9, 3.9050099995078907`*^9, 3.9050103431013536`*^9, 
  3.905020623613978*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"8d98e441-ffb5-429e-a7a6-5b4129c32706"]
}, Open  ]],

Cell["... and the last value:", "Text",
 CellChangeTimes->{{3.637868122317462*^9, 3.637868126225086*^9}, {
  3.904998979486869*^9, 
  3.9049989800324297`*^9}},ExpressionUUID->"a78835e1-e359-48a0-970f-\
6f6c1ee51aeb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"extract", "[", 
  RowBox[{
   RowBox[{"take", "[", 
    RowBox[{
     RowBox[{"integersFrom", "[", "1", "]"}], ",", "3"}], "]"}], ",", "3"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.637783617666028*^9, 3.637783627854794*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"be25d1e8-94f4-44ee-b15f-90b6ded6608f"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.637783629936417*^9, 3.637787239652817*^9, 
  3.637797918803417*^9, 3.637801353704751*^9, 3.63784806766603*^9, 
  3.637851819976346*^9, 3.637852190100765*^9, 3.637852461645075*^9, 
  3.637868128523107*^9, 3.904905320850957*^9, 3.904918777605212*^9, 
  3.904921452866666*^9, 3.904922362558258*^9, 3.904931469985025*^9, 
  3.904934143394384*^9, 3.9049351765518103`*^9, 3.9049989828264313`*^9, 
  3.905009707263794*^9, 3.9050099995243607`*^9, 3.905010343103833*^9, 
  3.905020633214262*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"92632401-8cfc-4ce4-9079-f5774a491e25"]
}, Open  ]],

Cell[TextData[{
 "If we extract too far into a finite stream, we get ",
 StyleBox["Null", "Input"],
 ", which doesn\[CloseCurlyQuote]t print to the notebook:"
}], "Text",
 CellChangeTimes->{{3.637760823877214*^9, 3.63776084864818*^9}, {
   3.6377825683455877`*^9, 3.637782573601036*^9}, {3.637783659762761*^9, 
   3.637783674959201*^9}, {3.637868146193605*^9, 3.6378681482442923`*^9}, 
   3.904922375747163*^9, {3.905021519160204*^9, 
   3.9050215196851387`*^9}},ExpressionUUID->"13e3a75e-bcff-4cc0-bd58-\
3cfd8bb83561"],

Cell[BoxData[
 RowBox[{"extract", "[", 
  RowBox[{
   RowBox[{"take", "[", 
    RowBox[{
     RowBox[{"integersFrom", "[", "1", "]"}], ",", "3"}], "]"}], ",", "400"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.6377602615937223`*^9, 3.637760289834202*^9}, {
  3.6377608429147253`*^9, 3.6377608430582447`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"c2f960d9-2f14-475f-9578-45993deb5fef"],

Cell[CellGroupData[{

Cell["Finite Streams", "Subsubsection",
 CellChangeTimes->{{3.9049077953059998`*^9, 
  3.904907798073084*^9}},ExpressionUUID->"55dc77f7-7215-4adb-bb05-\
0c0bc34d4765"],

Cell[TextData[{
 "Test ",
 StyleBox["extract",
  FontSlant->"Italic"],
 " on a finite stream, produced by ",
 StyleBox["integersDownFrom", "Input"],
 ":"
}], "Text",
 CellChangeTimes->{{3.904905330483925*^9, 3.904905373046096*^9}, {
   3.904907381626459*^9, 3.904907393794159*^9}, {3.904922398728076*^9, 
   3.9049224178846197`*^9}, 3.9050102677578993`*^9, {3.905020654717058*^9, 
   3.905020672843618*^9}},ExpressionUUID->"336cc7a3-aee5-403f-b40d-\
680270b49427"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "integersDownFrom", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"integersDownFrom", "[", 
    RowBox[{"n_Integer", "/;", 
     RowBox[{"n", ">", "0"}]}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"n", ",", 
     RowBox[{
      RowBox[{"integersDownFrom", "[", 
       RowBox[{"n", "-", "1"}], "]"}], "&"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"integersDownFrom", "[", "_", "]"}], ":=", 
    RowBox[{"Null", "[", "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"the", " ", "empty", " ", "stream"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"integersDownFrom", "[", "3", "]"}]}], "Input",
 CellChangeTimes->{{3.904905343437448*^9, 3.90490539711665*^9}, {
   3.904905444004539*^9, 3.904905550879813*^9}, {3.904905593479126*^9, 
   3.904905606198139*^9}, {3.9049072160029984`*^9, 3.904907241390498*^9}, 
   3.904915544547287*^9, {3.9049156316264677`*^9, 3.9049156317063847`*^9}, {
   3.904918015284552*^9, 3.904918021038293*^9}, {3.9050102699664392`*^9, 
   3.905010273608522*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"0cccaf57-573f-4066-ab9c-87fb37727198"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", 
   RowBox[{
    RowBox[{"integersDownFrom", "[", 
     RowBox[{"3", "-", "1"}], "]"}], "&"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.904907217259376*^9, 3.904907242376045*^9}, 
   3.9049073200421467`*^9, 3.904915546831254*^9, 3.904915640759202*^9, 
   3.904918788528664*^9, 3.904918838966607*^9, 3.904921452882633*^9, 
   3.904922419790083*^9, 3.904931470010879*^9, 3.90493414342065*^9, 
   3.904935176577798*^9, 3.904998993376197*^9, 3.9050097228394127`*^9, 
   3.905009999544937*^9, 3.905010343120757*^9, 3.905020658360669*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"6d516ce9-2ca7-40ae-82f8-de66266cb181"]
}, Open  ]],

Cell["Extract all elements:", "Text",
 CellChangeTimes->{{3.904907482553441*^9, 3.9049074914509697`*^9}, {
  3.904918854912547*^9, 3.904918858160136*^9}, {3.90502153358491*^9, 
  3.905021538140683*^9}},ExpressionUUID->"8d8fa1a6-0cca-4159-88dd-\
0fa983ee2eee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"extract", "[", 
    RowBox[{
     RowBox[{"integersDownFrom", "[", "3", "]"}], ",", "i"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.904907426633378*^9, 3.904907503598028*^9}, {
   3.904907542032597*^9, 3.904907542214387*^9}, 3.9050102797643757`*^9},
 CellLabel->"In[24]:=",ExpressionUUID->"26f3edaa-ebb1-4375-acb1-1ee0b75dbc6d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "2", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.904907472636342*^9, 3.904907504805256*^9}, 
   3.9049075513780317`*^9, 3.904915550273693*^9, 3.9049156430658207`*^9, 
   3.9049187948191347`*^9, 3.904918841401013*^9, 3.904921452885332*^9, 
   3.904922427819126*^9, 3.90493147001337*^9, 3.904934143441924*^9, 
   3.9049351765999727`*^9, 3.90499900023186*^9, 3.905009725957282*^9, 
   3.905009999547531*^9, 3.9050103431236753`*^9, 3.905020694784555*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"3dfa8fe8-4e21-4252-bd96-6c7d335ca888"]
}, Open  ]],

Cell[TextData[{
 "Go too far \[LongDash] ",
 StyleBox["Null", "Input"],
 " in a ",
 StyleBox["List", "Input"],
 " self-prints:"
}], "Text",
 CellChangeTimes->{{3.904907506483645*^9, 3.9049075159242477`*^9}, {
  3.904922443815683*^9, 
  3.904922464330496*^9}},ExpressionUUID->"365dd819-9ac5-45c4-abef-\
e74ea29eeed9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"extract", "[", 
    RowBox[{
     RowBox[{"integersDownFrom", "[", "3", "]"}], ",", " ", "i"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.904907518314665*^9, 3.904907547364459*^9}, 
   3.9050102807445707`*^9},
 CellLabel->"In[25]:=",ExpressionUUID->"115d2364-e9a1-4569-90cf-3f71f1a8fe97"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "2", ",", "1", ",", "Null", ",", "Null"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.904907536168627*^9, 3.904907548192144*^9}, 
   3.904915553481702*^9, 3.9049156449432173`*^9, 3.9049188436561623`*^9, 
   3.9049214528877077`*^9, 3.904922431981884*^9, 3.904922472158825*^9, 
   3.904931470015818*^9, 3.904934143444354*^9, 3.9049351766027613`*^9, 
   3.90499901509717*^9, 3.9050097283585653`*^9, 3.905009999566619*^9, 
   3.905010343137093*^9, 3.905020698087412*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"4fb2c9e6-cddb-45b7-8c96-8b22a2ab46ec"]
}, Open  ]],

Cell[TextData[{
 "Look at the wrong end, ",
 StyleBox["and",
  FontSlant->"Italic"],
 " go too far:"
}], "Text",
 CellChangeTimes->{{3.9049075551183653`*^9, 3.904907569200529*^9}, {
  3.904917768377198*^9, 
  3.9049177714582148`*^9}},ExpressionUUID->"40b3466a-14f2-4562-b6c7-\
2b0cffffc4cd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"extract", "[", 
    RowBox[{
     RowBox[{"integersDownFrom", "[", "3", "]"}], ",", " ", "i"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"-", "2"}], ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.904907573884102*^9, 3.904907590539591*^9}, 
   3.905010281844687*^9},
 CellLabel->"In[26]:=",ExpressionUUID->"f4fb44f7-c55a-46d8-965d-8ee71a48f15e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "Null", ",", "Null", ",", "Null", ",", "3", ",", "2", ",", "1", ",", "Null",
    ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.904907591363282*^9, 3.904915558478838*^9, 
  3.90491564639847*^9, 3.904918846900041*^9, 3.904921452890148*^9, 
  3.904922474824009*^9, 3.904931470035096*^9, 3.904934143465403*^9, 
  3.904935176623148*^9, 3.904999017773467*^9, 3.905009732089094*^9, 
  3.9050099995695744`*^9, 3.905010343139783*^9, 3.9050207007619753`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"c7cd53a9-8d2a-44cd-99f7-4d7e913ee939"]
}, Open  ]],

Cell[TextData[{
 "Consider ",
 StyleBox["extract", "Input"],
 " on ",
 StyleBox["take", "Input"],
 ", staying within the known bounds; the first element of every ",
 StyleBox["take", "Input"],
 " is the first element of the original stream:"
}], "Text",
 CellChangeTimes->{{3.904907906339629*^9, 3.904907931555447*^9}, {
  3.9049080644630136`*^9, 3.904908081765999*^9}, {3.9049224989727716`*^9, 
  3.9049225003161077`*^9}, {3.905009743960833*^9, 3.905009745345154*^9}, {
  3.905020709737084*^9, 3.9050207133488073`*^9}, {3.9050207476447773`*^9, 
  3.9050207490326643`*^9}},ExpressionUUID->"cd6ebdd7-cda0-40b3-8a5c-\
9afa00abf531"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"extract", "[", 
    RowBox[{
     RowBox[{"take", "[", 
      RowBox[{
       RowBox[{"integersDownFrom", "[", "3", "]"}], ",", "i"}], "]"}], ",", 
     "1"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9049078539196653`*^9, 3.904907882220688*^9}, 
   3.905010283053893*^9},
 CellLabel->"In[27]:=",ExpressionUUID->"9d921c68-e503-4e96-8c3f-ac7d1590beff"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "3", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.90490788306567*^9, 3.9049155636162567`*^9, 
  3.904915647793811*^9, 3.9049214529014053`*^9, 3.90492248205236*^9, 
  3.9049314700380383`*^9, 3.904934143467803*^9, 3.904935176625622*^9, 
  3.904999036190578*^9, 3.905009735957245*^9, 3.905009999571933*^9, 
  3.905010343154253*^9, 3.905020759395772*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"1ec3f2ef-54c4-4d94-b748-dd9f15ed061c"]
}, Open  ]],

Cell["\<\
Exceed the bounds; if we take too many, we can still extract the first:\
\>", "Text",
 CellChangeTimes->{{3.9049079416278887`*^9, 3.9049079479279757`*^9}, {
  3.904908019407907*^9, 3.90490803862212*^9}, {3.904917790479774*^9, 
  3.9049178018146772`*^9}, {3.904922504710339*^9, 3.904922506192461*^9}, {
  3.904999094827951*^9, 3.90499910094663*^9}, {3.90500932930723*^9, 
  3.9050093497795687`*^9}, {3.905009756756577*^9, 
  3.9050097591004457`*^9}},ExpressionUUID->"271e416d-6dab-413c-a48e-\
f871ebea167e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"extract", "[", 
    RowBox[{
     RowBox[{"take", "[", 
      RowBox[{
       RowBox[{"integersDownFrom", "[", "3", "]"}], ",", "i"}], "]"}], ",", 
     "1"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"-", "2"}], ",", " ", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9049078539196653`*^9, 3.904907882220688*^9}, {
   3.904907977541607*^9, 3.904907982698304*^9}, 3.905010284162237*^9},
 CellLabel->"In[28]:=",ExpressionUUID->"ee8d484a-9a80-43d4-a941-ac452475bf67"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "Null", ",", "Null", ",", "Null", ",", "3", ",", "3", ",", "3", ",", "3", 
   ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.904907983567362*^9, 3.904915566791135*^9, 
  3.904915649504693*^9, 3.9049214529042263`*^9, 3.9049225083189697`*^9, 
  3.904931470057333*^9, 3.904934143470002*^9, 3.904935176627902*^9, 
  3.905009355718418*^9, 3.905009999588921*^9, 3.905010343156857*^9, 
  3.905020762575391*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"6cdcb7a0-6aa4-4bee-b5bf-59e88fe19542"]
}, Open  ]],

Cell[TextData[{
 "a corner case \[LongDash] ",
 StyleBox["integersDownFrom", "Input"],
 " stops at 1, so ",
 StyleBox["integersDownFrom[n < 1]", "Input"],
 " must be empty:"
}], "Text",
 CellChangeTimes->{{3.9049081831802397`*^9, 3.904908187516968*^9}, {
  3.90491141089406*^9, 3.9049114154760036`*^9}, {3.904922521420363*^9, 
  3.904922624620944*^9}, {3.9050097791023483`*^9, 3.9050098521787987`*^9}, {
  3.905010285707052*^9, 
  3.905010286841447*^9}},ExpressionUUID->"e46e3a1f-0a81-411e-a419-\
9bd9c7cc09aa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"extract", "[", 
    RowBox[{"take", "[", 
     RowBox[{
      RowBox[{"integersDownFrom", "[", "0", "]"}], ",", " ", "i"}], "]"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"-", "2"}], ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9049082445369377`*^9, 3.904908248853003*^9}, {
   3.9049113353189487`*^9, 3.9049113977715282`*^9}, {3.9049226299037724`*^9, 
   3.904922631368739*^9}, 3.905010299214398*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"1b638e40-6a8a-4952-8a8f-2baac4bc938b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", 
   ",", "Null", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.904911373127931*^9, 3.904911398608561*^9}, 
   3.90491556995623*^9, 3.904915651112708*^9, 3.904921452915666*^9, 
   3.904922515973979*^9, 3.904922632356751*^9, 3.9049314700601673`*^9, 
   3.904934143473754*^9, 3.9049351766316643`*^9, 3.904999125960046*^9, 
   3.905009854455418*^9, 3.905009999592463*^9, 3.9050103431714354`*^9, 
   3.905020767608366*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"931870c2-1c6d-496a-a0f8-8fdc58b5d6b2"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["reify :: Stream \[LongRightArrow] List", "Subsection",
 CellChangeTimes->{{3.637784451878047*^9, 3.637784452812488*^9}, {
  3.637838356199197*^9, 3.637838365731372*^9}, {3.904922644864148*^9, 
  3.904922648721426*^9}},ExpressionUUID->"6089bdf5-050c-461b-a980-\
c1542df4cd30"],

Cell["\<\
Reify a stream to a list, rattling out all thunks (this is not \
tail-recursive; we might have to do better if we overflow the stack; it\
\[CloseCurlyQuote]s not hard to do better, the function just won\
\[CloseCurlyQuote]t be so obviously correct):\
\>", "Text",
 CellChangeTimes->{{3.637759802379668*^9, 3.637759829375986*^9}, {
  3.637782456506134*^9, 3.6377824777511263`*^9}, {3.637797936412305*^9, 
  3.637797962608555*^9}, {3.637868241772913*^9, 3.6378682575439777`*^9}, {
  3.9049081224724817`*^9, 3.90490814070407*^9}, {3.9049226651275263`*^9, 
  3.904922667843494*^9}, {3.9050103979195127`*^9, 3.905010424888987*^9}, {
  3.905020888151038*^9, 
  3.905020891879879*^9}},ExpressionUUID->"95869b55-46cc-43ff-bac0-\
32e700d444b3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "reify", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"reify", "[", 
     RowBox[{"Null", "[", "]"}], "]"}], ":=", 
    RowBox[{"{", "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"somebody", " ", "called", " ", "my", " ", "Null", " ", "thunk"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"reify", "[", 
    RowBox[{"{", 
     RowBox[{"v_", ",", "Null"}], "}"}], "]"}], ":=", 
   RowBox[{"{", "v", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"reify", "[", 
    RowBox[{"{", 
     RowBox[{"v_", ",", "thunk_"}], "}"}], "]"}], ":=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", "v", "}"}], ",", 
     RowBox[{"reify", "[", 
      RowBox[{"thunk", "[", "]"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.637759831586834*^9, 3.637760047757572*^9}, {
  3.637760088965227*^9, 3.637760183449573*^9}, {3.637782968314682*^9, 
  3.637782978279014*^9}, {3.63778358330233*^9, 3.6377835852316227`*^9}, {
  3.904915508005227*^9, 3.904915514633926*^9}, {3.904922681334948*^9, 
  3.904922691355815*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"68bba097-e53e-49dd-a539-240a2863c23e"],

Cell[TextData[{
 "On a finite ",
 StyleBox["take", "Input"],
 " of an infinite stream:"
}], "Text",
 CellChangeTimes->{{3.904918076665758*^9, 3.9049180903882303`*^9}, {
  3.9050090750386963`*^9, 3.905009098041497*^9}, {3.905020794684594*^9, 
  3.905020795305797*^9}},ExpressionUUID->"194458d2-0618-431f-9544-\
4909d72e2ca5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"reify", "[", 
  RowBox[{"take", "[", 
   RowBox[{
    RowBox[{"integersFrom", "[", "1", "]"}], ",", "3"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6377592368857927`*^9, 3.6377592435103292`*^9}, {
  3.637759275870009*^9, 3.6377592759500113`*^9}, {3.637760188674143*^9, 
  3.6377601929768476`*^9}, {3.637760232131069*^9, 3.637760237367325*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"e9411849-e1d1-4aa1-92f2-b6d2f0a0f5d6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{
  3.637759244295498*^9, 3.63775927639777*^9, 3.637759763666115*^9, {
   3.63776019347586*^9, 3.637760238319868*^9}, 3.637760498374275*^9, 
   3.637782453005809*^9, 3.637782997074419*^9, 3.6377835895234737`*^9, 
   3.6377837447400637`*^9, 3.637784468807783*^9, 3.637787239740479*^9, 
   3.637797966917306*^9, 3.6378013537780533`*^9, 3.6378480677079563`*^9, 
   3.637851820038003*^9, 3.637852190162265*^9, 3.637852461755733*^9, 
   3.637868264370632*^9, 3.904908146707079*^9, 3.904911602283774*^9, 
   3.904911679767914*^9, 3.9049155766466722`*^9, 3.904915658866023*^9, 
   3.904918904271373*^9, 3.9049214529198236`*^9, 3.9049226994291286`*^9, 
   3.90493147006478*^9, 3.9049341434943533`*^9, 3.904935176653368*^9, 
   3.90500907118281*^9, 3.905009875534019*^9, 3.90500999961123*^9, 
   3.9050104295333643`*^9, 3.905020798544059*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"1cd4f278-e5fc-4635-b7f0-0270f22efd7d"]
}, Open  ]],

Cell["On a finite stream:", "Text",
 CellChangeTimes->{{3.904918101294772*^9, 3.9049181089642687`*^9}, {
  3.905009085512012*^9, 3.905009103345079*^9}, {3.9050208025142403`*^9, 
  3.905020803036138*^9}},ExpressionUUID->"b3b73d56-4ff6-41bc-8301-\
41b8f7709e9c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"reify", "[", 
  RowBox[{"integersDownFrom", "[", "3", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.904915715326188*^9, 3.9049157261099358`*^9}, 
   3.905010300901598*^9},
 CellLabel->"In[35]:=",ExpressionUUID->"32aa9960-f5df-4ed9-b893-bb86178568b1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "2", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.904915711591758*^9, 3.9049157266972713`*^9}, 
   3.904918906854986*^9, 3.904921452923229*^9, 3.904922704098381*^9, 
   3.90493147008368*^9, 3.904934143515121*^9, 3.904935176674829*^9, 
   3.9050098793967533`*^9, 3.905009999613947*^9, 3.905010432224581*^9, 
   3.905020805879593*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"557e0c9a-2d5d-4178-9cdd-57091c790a05"]
}, Open  ]],

Cell["On an empty stream:", "Text",
 CellChangeTimes->{{3.9049189153133307`*^9, 3.90491892237119*^9}, 
   3.9050090908995533`*^9, {3.905020809700282*^9, 
   3.90502081024431*^9}},ExpressionUUID->"1eea07db-1cf9-44c3-89cf-\
13f3f626470a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"reify", "[", 
  RowBox[{"Null", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.904918925573339*^9, 3.904918935449572*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"c9acf2bd-f78a-4fbc-be1b-044c0e54b3a4"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.904918936069206*^9, 3.904921452934376*^9, 
  3.9049227070920563`*^9, 3.904931470086443*^9, 3.9049341435174217`*^9, 
  3.9049351766773643`*^9, 3.905009882093446*^9, 3.905009999618854*^9, 
  3.9050104344424458`*^9, 3.905020812442231*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"6198c641-fd2e-4e2f-a9bf-e86d116ff4fb"]
}, Open  ]],

Cell["\<\
When you take too many from a finite stream, you get all elements, but no \
more, in a list:\
\>", "Text",
 CellChangeTimes->{{3.905009115528502*^9, 3.905009127603896*^9}, {
  3.905009913445991*^9, 3.905009935653343*^9}, {3.905020819382502*^9, 
  3.905020826379841*^9}, {3.905020870426867*^9, 
  3.905020873246295*^9}},ExpressionUUID->"bb2474be-0e2d-45b4-88df-\
9e33dfcff2ef"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"reify", "[", 
  RowBox[{"take", "[", 
   RowBox[{
    RowBox[{"integersDownFrom", "[", "3", "]"}], ",", "5"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.905009130869562*^9, 3.90500915226962*^9}, {
   3.90500920883538*^9, 3.905009222131268*^9}, {3.9050092935246468`*^9, 
   3.905009303797929*^9}, {3.905009365573373*^9, 3.905009426190701*^9}, {
   3.9050094962396584`*^9, 3.905009501087439*^9}, {3.905009941665773*^9, 
   3.905009947395515*^9}, 3.905010302840219*^9},
 CellLabel->"In[37]:=",ExpressionUUID->"7381477d-6bf1-4f07-9d36-3e4979eaf917"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "2", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.9050095268385*^9, 3.905009531338976*^9}, 
   3.9050098891378527`*^9, 3.905009947981522*^9, 3.905009999635446*^9, 
   3.9050104380536423`*^9, 3.905020837076681*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"f08a1f69-6ac6-47a5-acf6-fb156ec33e24"]
}, Open  ]],

Cell[TextData[{
 "If you forget to call ",
 StyleBox["Null", "Input"],
 "-treated-as-a-thunk, ",
 StyleBox["reify",
  FontSlant->"Italic"],
 " does not reduce:"
}], "Text",
 CellChangeTimes->{{3.904918950963516*^9, 
  3.904918981909631*^9}},ExpressionUUID->"e2dada0c-baee-4574-98ab-\
ea872ec1e9ac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"reify", "[", "Null", "]"}]], "Input",
 CellChangeTimes->{{3.9049189375616426`*^9, 3.90491894070483*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"3d0d66b6-e3d5-4ddf-97ae-f7ddf4f4d2b4"],

Cell[BoxData[
 RowBox[{"reify", "[", "Null", "]"}]], "Output",
 CellChangeTimes->{3.904918941191111*^9, 3.904921452937093*^9, 
  3.904922711324696*^9, 3.904931470106105*^9, 3.904934143519513*^9, 
  3.904935176679503*^9, 3.905009999638319*^9, 3.9050104441783752`*^9, 
  3.90502084203472*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"5fc3385b-df1b-4082-95e5-1b9d42f03b4e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["disperse :: List \[LongRightArrow] Stream", "Subsection",
 CellChangeTimes->{{3.6378397406787663`*^9, 3.637839745108528*^9}, {
  3.6378421363796453`*^9, 3.63784215970313*^9}, {3.6378425769064703`*^9, 
  3.63784257880963*^9}, {3.904922716186722*^9, 
  3.904922719386038*^9}},ExpressionUUID->"bcc1744d-0d1a-49bb-bee2-\
c4a020154d20"],

Cell["Go the other way, producing a finite stream from a list:", "Text",
 CellChangeTimes->{{3.637842171493763*^9, 3.6378421783806133`*^9}, {
  3.904917830372114*^9, 3.904917832468445*^9}, {3.904918138898987*^9, 
  3.904918148769617*^9}, {3.904922724542091*^9, 3.9049227290294247`*^9}, {
  3.905020859992475*^9, 
  3.9050208652731857`*^9}},ExpressionUUID->"82b7b220-816a-471e-97ea-\
c974cde32a9e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "disperse", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"disperse", "[", 
     RowBox[{"{", "}"}], "]"}], ":=", 
    RowBox[{"Null", "[", "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"the", " ", "empty", " ", "stream"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"disperse", "[", 
    RowBox[{"{", "x_", "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"x", ",", "Null"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"disperse", "[", 
    RowBox[{"{", 
     RowBox[{"v_", ",", "xs__"}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"v", ",", 
     RowBox[{
      RowBox[{"disperse", "[", 
       RowBox[{"{", "xs", "}"}], "]"}], "&"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6378424825339127`*^9, 3.6378424874171457`*^9}, {
  3.6378425635977182`*^9, 3.637842676941205*^9}, {3.6378428564415693`*^9, 
  3.637842924191328*^9}, {3.637843005460359*^9, 3.6378430289881144`*^9}, {
  3.904918121775854*^9, 3.9049181264576283`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"8aeef867-b114-4dd1-86c4-90498f862ecf"],

Cell[TextData[{
 StyleBox["disperse", "Input"],
 " and ",
 StyleBox["reify", "Input"],
 " will round-trip. On an empty:"
}], "Text",
 CellChangeTimes->{{3.9050105099746*^9, 3.905010536179961*^9}, 
   3.905010674848906*^9},ExpressionUUID->"5c9a9879-f824-486f-93bc-\
76c74ffcc5ef"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"reify", "[", 
  RowBox[{"disperse", "[", 
   RowBox[{"{", "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.637842926744529*^9, 3.637842959134816*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"53fc0274-01aa-42cf-9d16-b01db163f015"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{{3.6378429379283743`*^9, 3.637842959875489*^9}, 
   3.637843031076523*^9, 3.637848067743904*^9, 3.637851820080468*^9, 
   3.637852190206626*^9, 3.637852461800655*^9, 3.6378682762358932`*^9, 
   3.904921452950032*^9, 3.904922740658546*^9, 3.904931470132056*^9, 
   3.904934143541339*^9, 3.9049351767016783`*^9, 3.9050099996598797`*^9, 
   3.9050105380568542`*^9, 3.90502166709339*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"c435f528-cca8-48ba-9e94-2ccac6271115"]
}, Open  ]],

Cell["On a finite collection:", "Text",
 CellChangeTimes->{{3.905010541491334*^9, 
  3.905010560070035*^9}},ExpressionUUID->"0c61b5a7-ff08-4ed3-934a-\
4d91692132fb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"reify", "[", 
  RowBox[{"disperse", "[", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6378429620030737`*^9, 3.637842981915756*^9}, {
  3.6378430379590273`*^9, 3.637843038027844*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"fe1152b7-2198-4eb1-b547-dd79078fbb20"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6378429826879797`*^9, {3.6378430131414337`*^9, 3.637843038625119*^9}, 
   3.6378480677953568`*^9, 3.637851820148286*^9, 3.637852190274026*^9, 
   3.6378524618925753`*^9, 3.637868283705317*^9, 3.904921452952751*^9, 
   3.904922744045402*^9, 3.9049314701350527`*^9, 3.904934143543638*^9, 
   3.90493517670434*^9, 3.905009999676899*^9, 3.9050105621246357`*^9, 
   3.905021669472561*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"d51efc12-8bc5-4caf-a1cf-1a23719cfe8d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fibonaccis as a Stream", "Subsection",
 CellChangeTimes->{{3.637784485807845*^9, 3.6377844880875998`*^9}, {
  3.637868291938224*^9, 
  3.637868301395749*^9}},ExpressionUUID->"bcd6b2ff-ecb8-4989-b9f5-\
57b6bf7a49bf"],

Cell[TextData[{
 "Here\[CloseCurlyQuote]s a direct, semi-infinite, non-tail recursive, \
fibonacci stream (with ",
 StyleBox["memoization",
  FontSlant->"Italic"],
 ", i.e., dynamic programming)"
}], "Text",
 CellChangeTimes->{{3.637755439072893*^9, 3.6377554773192787`*^9}, {
   3.6377558563528643`*^9, 3.637755860511764*^9}, {3.637756644202067*^9, 
   3.6377566492959623`*^9}, {3.637758139930417*^9, 3.6377581560791273`*^9}, {
   3.637797980046337*^9, 3.637797981885668*^9}, {3.904919009544149*^9, 
   3.904919014505885*^9}, 3.905010041640644*^9, {3.9050216785294657`*^9, 
   3.905021679011115*^9}},ExpressionUUID->"a7a4f2f1-c50f-4dcd-babf-\
eef9be074bd2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "fibonaccis", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fibonaccis", "[", "0", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"fibonaccis", "[", "2", "]"}], "&"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fibonaccis", "[", "1", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{
      RowBox[{"fibonaccis", "[", "3", "]"}], "&"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fibonaccis", "[", "n_", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Here", "'"}], "s", " ", "the", " ", "dynamic", " ", 
     RowBox[{"programming", ":", " ", 
      RowBox[{"create", " ", "a", " ", "static"}]}]}], ",", " ", 
    RowBox[{"value", "-", 
     RowBox[{
     "producing", " ", "rule", " ", "for", " ", "a", " ", "particular", " ", 
      RowBox[{"argument", "."}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"fibonaccis", "[", "n", "]"}], "=", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"(*", " ", "value", " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"extract", "[", 
       RowBox[{"fibonaccis", "[", 
        RowBox[{"n", "-", "1"}], "]"}], "]"}], "+", 
      RowBox[{"extract", "[", 
       RowBox[{"fibonaccis", "[", 
        RowBox[{"n", "-", "2"}], "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", "thunk", " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"fibonaccis", "[", 
       RowBox[{"n", "+", "1"}], "]"}], "&"}]}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.637756294366603*^9, 3.63775639001782*^9}, {
  3.637756500572054*^9, 3.63775655077188*^9}, {3.637758185968095*^9, 
  3.637758192484057*^9}, {3.637759475664336*^9, 3.6377594762147427`*^9}, {
  3.637798007917757*^9, 3.6377980634001913`*^9}, {3.9049192619784403`*^9, 
  3.904919271326666*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"aa0db890-517f-46a3-a7c1-26726cb4f1ff"],

Cell[TextData[{
 "This is efficient, modulo stack overflow: it can find ",
 ButtonBox["large Fibonacci numbers",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.maths.surrey.ac.uk/hosted-sites/R.Knott/Fibonacci/\
fibtable.html#series"], None},
  ButtonNote->
   "http://www.maths.surrey.ac.uk/hosted-sites/R.Knott/Fibonacci/fibtable.\
html#series"],
 " quickly. Pick up the 200-th element of the semi-infinite stream:"
}], "Text",
 CellChangeTimes->{{3.637868326326041*^9, 3.637868351468481*^9}, {
   3.6378684143391447`*^9, 3.63786843111521*^9}, {3.637886993586486*^9, 
   3.6378869939855623`*^9}, {3.904919294376144*^9, 3.9049193181252527`*^9}, {
   3.904922777030643*^9, 3.904922778378167*^9}, 3.905010048413809*^9, 
   3.9050216978163548`*^9},ExpressionUUID->"924eba9d-f7c0-4bda-9966-\
e1ba24d95c0b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"extract", "[", 
   RowBox[{
    RowBox[{"fibonaccis", "[", "0", "]"}], ",", "200"}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.637783036510445*^9, 3.637783100316793*^9}, {
  3.637783186164713*^9, 3.637783194919894*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"37550ff3-3665-4eea-ba7b-86211adaa676"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.001796`", ",", "280571172992510140037611932413038677189525"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.637783062070486*^9, 3.637783070015079*^9}, {
   3.637783101437797*^9, 3.637783109439056*^9}, {3.6377831884276953`*^9, 
   3.637783195449253*^9}, 3.637783752045225*^9, 3.637787239812853*^9, 
   3.637798070705739*^9, 3.637801353837941*^9, 3.6378480678564653`*^9, 
   3.63785182021034*^9, 3.637852190318161*^9, 3.6378524619712687`*^9, 
   3.637868425550516*^9, 3.90491932118526*^9, 3.904921452966909*^9, 
   3.904922780779155*^9, 3.904931470142475*^9, 3.904934143549017*^9, 
   3.904935176726345*^9, 3.9050100517885857`*^9, 3.905010573227569*^9, 
   3.905021699820385*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"acc48ce8-b72d-42fd-9d96-4f658f081857"]
}, Open  ]],

Cell["\<\
Pick up the first element of a semi-infinite stream that begins at element \
200:\
\>", "Text",
 CellChangeTimes->{{3.904919323926918*^9, 3.904919346327332*^9}, 
   3.904922792661989*^9, 
   3.9050217053798847`*^9},ExpressionUUID->"1926390a-b005-40a8-8b90-\
518d6da8949e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"extract", "[", 
   RowBox[{"fibonaccis", "[", "200", "]"}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.6377554900345078`*^9, 3.637755544469069*^9}, {
   3.637755819515872*^9, 3.637755851579867*^9}, 3.637756260619071*^9, {
   3.637756396526623*^9, 3.637756397030057*^9}, {3.637756456379551*^9, 
   3.637756469018403*^9}, {3.637756564376979*^9, 3.637756582351756*^9}, {
   3.637756652815243*^9, 3.6377566574787703`*^9}, 3.6377594775305157`*^9},
 CellLabel->"In[50]:=",ExpressionUUID->"8eace226-ef82-4853-8968-b2ab855da44e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.000018`", ",", "280571172992510140037611932413038677189525"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.637755545548583*^9, {3.637755814284052*^9, 3.637755852267993*^9}, 
   3.6377562620737867`*^9, 3.637756398318948*^9, 3.637756469734846*^9, 
   3.6377565176185513`*^9, {3.63775655485917*^9, 3.637756582694281*^9}, 
   3.637756658611821*^9, 3.6377581948177767`*^9, 3.637758348750202*^9, 
   3.6377605241584797`*^9, 3.6377825833603783`*^9, {3.637783105455351*^9, 
   3.637783113500263*^9}, 3.6377837528721237`*^9, 3.6377872398694363`*^9, 
   3.6377980731180143`*^9, 3.6378013539042177`*^9, 3.6378480678792677`*^9, 
   3.6378518203221273`*^9, 3.6378521903566933`*^9, 3.637852462009735*^9, 
   3.637868434524273*^9, 3.9049193495366583`*^9, 3.904922785761593*^9, 
   3.904931470161846*^9, 3.904934143567913*^9, 3.9049351767286873`*^9, 
   3.905010061445418*^9, 3.905010576827351*^9, 3.9050217076413403`*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"5f05c78c-7a25-47b1-9c5d-d00a40cd1b18"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
foldrStream :: binaryQueryFunction \[LongRightArrow] initialValue \
\[LongRightArrow] Stream \[LongRightArrow] Stream\
\>", "Subsection",
 CellChangeTimes->{{3.6377845364733686`*^9, 3.637784538808044*^9}, {
  3.637847329023609*^9, 3.637847359758264*^9}, {3.9049228104326878`*^9, 
  3.904922812858975*^9}, {3.9050105919754343`*^9, 
  3.9050105928005247`*^9}},ExpressionUUID->"93900db4-d08c-4100-aeef-\
09a1527ef278"],

Cell[TextData[{
 "Here is a ",
 StyleBox["fold",
  FontSlant->"Italic"],
 " for Stream with the same signature and semantics as ",
 StyleBox["FoldList", "Input"],
 " for ",
 StyleBox["List", "Input"],
 ". The \[OpenCurlyDoubleQuote]r\[CloseCurlyDoubleQuote] in \
\[OpenCurlyDoubleQuote]foldrStream\[CloseCurlyDoubleQuote] means \
\[OpenCurlyDoubleQuote]right.\[CloseCurlyDoubleQuote] This is a right-fold, \
distinct from the (not shown) left-fold:"
}], "Text",
 CellChangeTimes->{{3.637868446965806*^9, 3.6378684853920727`*^9}, {
  3.904922802753202*^9, 3.904922803552*^9}, {3.905010618575327*^9, 
  3.9050106390128307`*^9}, {3.905021718596341*^9, 
  3.905021731739171*^9}},ExpressionUUID->"e4bc7c8a-f0b3-4163-9d52-\
55b3ad565a55"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "foldrStream", "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Produce", " ", "a", " ", "singleton", " ", "from", " ", "an", " ", 
    "empty", " ", "stream"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"bf", " ", "is", " ", "binary", " ", "query", " ", "function"}], 
    ";", " ", 
    RowBox[{
    "z", " ", "begins", " ", "as", " ", "the", " ", "\"\<zero\>\"", " ", "of",
      " ", "the", " ", "fold"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"foldrStream", "[", 
     RowBox[{"bf_", ",", "z_", ",", 
      RowBox[{"Null", "[", "]"}]}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{"z", ",", "Null"}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Null", " ", "treated", " ", "as", " ", "a", " ", "thunk"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"foldrStream", "[", 
    RowBox[{"bf_", ",", "z_", ",", 
     RowBox[{"{", 
      RowBox[{"v_", ",", "thunk_"}], "}"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{
      RowBox[{"foldrStream", "[", 
       RowBox[{"bf", ",", 
        RowBox[{"bf", "[", 
         RowBox[{"z", ",", "v"}], "]"}], ",", 
        RowBox[{"thunk", "[", "]"}]}], "]"}], "&"}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.637756687987795*^9, 3.637756721439137*^9}, {
  3.637757024309765*^9, 3.63775709648453*^9}, {3.637757137386477*^9, 
  3.6377572080711203`*^9}, {3.637757665359969*^9, 3.637757665451668*^9}, {
  3.637758613591318*^9, 3.637758629827216*^9}, {3.637782699311613*^9, 
  3.6377827307710867`*^9}, {3.637783403393293*^9, 3.63778340666007*^9}, {
  3.637783767395638*^9, 3.637783790899523*^9}, {3.6377845863883123`*^9, 
  3.637784596619836*^9}, {3.637798145693973*^9, 3.637798146124696*^9}, {
  3.90491937812246*^9, 3.904919388509633*^9}, {3.904919450699551*^9, 
  3.904919488475909*^9}, {3.905021746529626*^9, 3.9050217474352293`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"fcab1f44-9225-4ef7-9be1-c2e572f57d81"],

Cell[TextData[{
 StyleBox["foldrStream", "Input"],
 " produces a stream from a given stream. It\[CloseCurlyQuote]s first-class, \
as composable as ",
 StyleBox["take", "Input"],
 ". "
}], "Text",
 CellChangeTimes->{{3.6377532196073637`*^9, 3.637753245335621*^9}, {
   3.637756678766308*^9, 3.6377566859238443`*^9}, {3.6377567233737297`*^9, 
   3.6377567349325523`*^9}, 3.637757020933919*^9, {3.6377845469027443`*^9, 
   3.637784554813601*^9}, {3.6377850216031923`*^9, 3.637785072489541*^9}, {
   3.637785629681879*^9, 3.637785651132329*^9}, {3.637798093145196*^9, 
   3.6377981189068117`*^9}, {3.637868497666514*^9, 3.637868543861876*^9}, {
   3.9049195055209923`*^9, 3.9049195429180593`*^9}, {3.904922832697175*^9, 
   3.9049229643015423`*^9}, {3.905010658776177*^9, 3.9050106614494143`*^9}, {
   3.905021763969924*^9, 
   3.905021768488986*^9}},ExpressionUUID->"656afa1f-1926-487a-bece-\
9885e2c30def"],

Cell[TextData[{
 "Just as ",
 StyleBox["FoldList", "Input"],
 " can\[CloseCurlyQuote]t produce an empty ",
 StyleBox["List", "Input"],
 ", ",
 StyleBox["foldrStream", "Input"],
 " can\[CloseCurlyQuote]t produce an empty stream. "
}], "Text",
 CellChangeTimes->{{3.6377532196073637`*^9, 3.637753245335621*^9}, {
   3.637756678766308*^9, 3.6377566859238443`*^9}, {3.6377567233737297`*^9, 
   3.6377567349325523`*^9}, 3.637757020933919*^9, {3.6377845469027443`*^9, 
   3.637784554813601*^9}, {3.6377850216031923`*^9, 3.637785072489541*^9}, {
   3.637785629681879*^9, 3.637785651132329*^9}, {3.637798093145196*^9, 
   3.6377981189068117`*^9}, {3.637868497666514*^9, 3.637868543861876*^9}, {
   3.9049195055209923`*^9, 3.9049195429180593`*^9}, {3.904922832697175*^9, 
   3.904922950453514*^9}, {3.905021783959488*^9, 
   3.905021801070342*^9}},ExpressionUUID->"8a9c7650-f622-4f78-9fa9-\
8eb7fcd6aa51"],

Cell[TextData[{
 "This next example is another way \[LongDash] via ",
 StyleBox["foldrStream", "Input"],
 " \[LongDash] to produce a semi-infinite stream of fibonaccis. It produces ",
 StyleBox["all",
  FontSlant->"Italic"],
 " the fibonaccis, plus the starting value at the beginning. That\
\[CloseCurlyQuote]s one more than an infinite number, which is exactly the \
same infinity. Otherwise, it\[CloseCurlyQuote]s just like our way of \
producing a ",
 StyleBox["List", "Input"],
 " of fibonaccis via ",
 StyleBox["FoldList", "Input"],
 " in Input 2 of this notebook:"
}], "Text",
 CellChangeTimes->{{3.6377847075436974`*^9, 3.637784771173931*^9}, {
   3.6377856676524143`*^9, 3.637785727961122*^9}, 3.904665049567297*^9, {
   3.9049195621580677`*^9, 3.9049195720852413`*^9}, {3.904922978954646*^9, 
   3.904922986049918*^9}, {3.90501010532693*^9, 3.905010108503265*^9}, {
   3.905010150837504*^9, 3.90501015885439*^9}, {3.905010714285068*^9, 
   3.905010843891679*^9}, {3.905021807627574*^9, 
   3.905021808016263*^9}},ExpressionUUID->"1dc57bc9-5a05-4222-8e9a-\
32ebc4763d6c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "allFibs", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"allFibs", "=", "\[IndentingNewLine]", 
   RowBox[{"foldrStream", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"acc", ",", "v"}], "}"}], "\[Function]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"acc", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
         ",", 
        RowBox[{
         RowBox[{
         "acc", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "+", 
         RowBox[{
         "acc", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
       "}"}]}], ",", 
     RowBox[{"(*", " ", 
      RowBox[{"binary", " ", "query", " ", "function"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "\"\<zero\>\"", " ", "accumulation", " ", "of", " ", "the", " ", 
        "stream"}], ",", " ", 
       RowBox[{"i", ".", "e", "."}], ",", " ", 
       RowBox[{"first", " ", "element"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"integersFrom", "[", "0", "]"}]}], 
    RowBox[{"(*", " ", 
     RowBox[{"input", " ", "stream"}], "*)"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.637757219043275*^9, 3.6377572903719883`*^9}, {
   3.637757497821246*^9, 3.637757573591688*^9}, 3.637758249656111*^9, {
   3.637798178746921*^9, 3.6377981790330877`*^9}, {3.90491958549494*^9, 
   3.904919643899543*^9}, {3.904923030284004*^9, 3.9049230330628347`*^9}, {
   3.9050108570053463`*^9, 3.905010857757152*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"bdeb4570-e67b-4bef-8b1c-cc712694158c"],

Cell["Its first value is the starting value of the accumulation:", "Text",
 CellChangeTimes->{{3.637785743495736*^9, 3.637785758788498*^9}, 
   3.637798189926065*^9, {3.904923000611261*^9, 
   3.9049230192009287`*^9}},ExpressionUUID->"5bf70756-239e-4fa9-8d65-\
4c9eb6647c26"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"reify", "[", 
  RowBox[{"take", "[", 
   RowBox[{"allFibs", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.637782768972643*^9, 3.637782791554105*^9}, {
  3.6377840293547993`*^9, 3.637784029524005*^9}, {3.637798197226738*^9, 
  3.637798197999359*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"6cc156df-673d-49d4-be97-5a0ac1e33b02"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"0", ",", "1"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.637782780512162*^9, 3.6377827925779343`*^9}, 
   3.6377832227075777`*^9, 3.637783795645432*^9, 3.6377840300321503`*^9, 
   3.637787239956252*^9, 3.6377981988990183`*^9, 3.637801353982744*^9, 
   3.637848067933238*^9, 3.637851820435501*^9, 3.637852190418929*^9, 
   3.637852462096382*^9, 3.637868562319895*^9, 3.904919650004445*^9, 
   3.904923038132008*^9, 3.904931470188013*^9, 3.904934143592495*^9, 
   3.904935176753501*^9, 3.905010174819813*^9, 3.905010922167305*^9, 
   3.905021832057756*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"4ca16111-8718-4886-9d61-2f014188ccfd"]
}, Open  ]],

Cell[TextData[{
 "The first 10 non-trivial fibonaccis must include one extra accumulation \
value, the zero accumulation, just as in the original ",
 StyleBox["FoldList", "Input"],
 " example. Just take one more, 11, than the desired number, 10:"
}], "Text",
 CellChangeTimes->{{3.6377847874845037`*^9, 3.637784808088519*^9}, {
  3.637785774698099*^9, 3.6377857858887377`*^9}, {3.637798210691677*^9, 
  3.637798219514303*^9}, {3.637868570046091*^9, 3.637868571283181*^9}, {
  3.904919678972395*^9, 3.904919691905553*^9}, {3.904923057929626*^9, 
  3.904923099297475*^9}, {3.905010179652959*^9, 3.905010180548872*^9}, {
  3.90501087332508*^9, 3.9050109165248127`*^9}, {3.9050218518647537`*^9, 
  3.905021853688059*^9}},ExpressionUUID->"f05122fb-2c24-4067-b823-\
23ee2b3650dd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"reify", "[", 
  RowBox[{"take", "[", 
   RowBox[{"allFibs", ",", "11"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.637783232421235*^9, 3.6377832404880047`*^9}, {
  3.6377982260302067`*^9, 3.637798226490666*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"cbbd0185-4066-475a-b709-ad1646f868bb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"34", ",", "55"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"55", ",", "89"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.637783241510141*^9, 3.637783796810688*^9, 3.637787240002151*^9, 
   3.637798227572043*^9, 3.6378013540380363`*^9, 3.637848067953287*^9, 
   3.637851820482041*^9, 3.637852190442698*^9, 3.6378524621438417`*^9, 
   3.637868575542543*^9, {3.904923075538588*^9, 3.904923102556917*^9}, 
   3.904931470207582*^9, 3.904934143594685*^9, 3.904935176774561*^9, 
   3.905010188758407*^9, 3.905010924966899*^9, 3.905021847167426*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"8650e13b-73f1-4e50-afa9-b800c8930990"]
}, Open  ]],

Cell[TextData[{
 StyleBox["foldrStream", "Input"],
 " also works on finite streams; here is the count-up variant of ",
 StyleBox["integersDownFrom", "Input"],
 ":"
}], "Text",
 CellChangeTimes->{{3.637758887444446*^9, 3.6377588968431396`*^9}, {
   3.6377605409133873`*^9, 3.637760542769104*^9}, {3.637784818249299*^9, 
   3.637784819294887*^9}, {3.905010208197092*^9, 3.90501022833596*^9}, 
   3.905010263424363*^9},ExpressionUUID->"6323d708-2d5e-45db-812a-\
5ad9c34a7712"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"integersTo", "[", "n_", "]"}], ":=", 
   RowBox[{"take", "[", 
    RowBox[{
     RowBox[{"integersFrom", "[", "1", "]"}], ",", "n"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.637758942277007*^9, 3.637759026359003*^9}, {
  3.637760552368891*^9, 3.6377605531450033`*^9}, {3.637760667489716*^9, 
  3.637760688925701*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"0f551e7a-4690-40d6-b7f9-2deea5edd9bb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"reify", "[", 
  RowBox[{"integersTo", "[", "3", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.637783870221492*^9, 3.6377838800577*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"f6c132c0-f2d1-4b30-bd79-2d587d2ae4de"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.637783880420939*^9, 3.637787240080357*^9, 
  3.6377982363544493`*^9, 3.637801354086875*^9, 3.637848067986266*^9, 
  3.637851820536697*^9, 3.637852190485153*^9, 3.637852462221795*^9, 
  3.6378685902485447`*^9, 3.9049231230871143`*^9, 3.904931470212285*^9, 
  3.904934143617309*^9, 3.904935176778675*^9, 3.905010932693226*^9, 
  3.905021866479281*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"629627f5-fe6c-4e2b-9d3d-b26161863a59"]
}, Open  ]],

Cell[TextData[{
 "Expect the empty stream, ",
 StyleBox["Null[]", "Input"],
 ", from the following (",
 StyleBox["Null[]", "Input"],
 " prints, unlike ",
 StyleBox["Null", "Input"],
 "):"
}], "Text",
 CellChangeTimes->{{3.904923137440402*^9, 3.904923193977858*^9}, {
  3.905021875857074*^9, 
  3.905021876431366*^9}},ExpressionUUID->"b6f33ba0-ffbf-40ee-8bd7-\
84bcdc948c27"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"integersTo", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.6377848565549583`*^9, 3.637784861865829*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"1d328c15-c576-4e7d-ace0-f0bd80af04e4"],

Cell[BoxData[
 RowBox[{"Null", "[", "]"}]], "Output",
 CellChangeTimes->{3.63778486252735*^9, 3.6377872401059647`*^9, 
  3.637798238283065*^9, 3.637801354120525*^9, 3.637848068017515*^9, 
  3.6378518206401567`*^9, 3.637852190524418*^9, 3.637852462261055*^9, 
  3.6378685938209133`*^9, 3.904923127393737*^9, 3.904931470216197*^9, 
  3.904934143619679*^9, 3.9049351767831078`*^9, 3.905010952955327*^9, 
  3.9050218811036053`*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"9a102f70-5634-4a05-b281-559498cbc0c7"]
}, Open  ]],

Cell[TextData[{
 "Reify an empty ",
 StyleBox["List", "Input"],
 " from an empty stream:"
}], "Text",
 CellChangeTimes->{{3.637798260552751*^9, 3.637798292740748*^9}, {
  3.904923254120322*^9, 3.904923257918539*^9}, {3.9050109683557777`*^9, 
  3.9050110207682533`*^9}, {3.905011147589563*^9, 3.9050111520103827`*^9}, {
  3.90502189312243*^9, 
  3.905021893613647*^9}},ExpressionUUID->"f3b6b134-481a-4598-b562-\
b314b1779179"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<TraceView\>\"", "]"}], "[", 
  RowBox[{"reify", "[", 
   RowBox[{"integersTo", "[", "0", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.637783952012705*^9, 3.63778396053415*^9}, {
  3.905011026321607*^9, 3.905011091107737*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"135701e7-2e18-4205-9bde-b3861dc35bbf"],

Cell[BoxData[
 TagBox[
  DynamicModuleBox[{
   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`pos$$ = {{1, 1}, {1, 
   2}}, FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`maxDisplayDepth$$\
 = 4, FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`maxChildDisplay$$ =
    5, FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`timesRelativeTo$$ \
= "Outer", FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`treeMeta$$, 
   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`animating$$ = False, 
   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`animatingPos$$, 
   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`animationStart$$, 
   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`childPos$$, 
   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`outerColor$$ = 
   GrayLevel[0, 0], 
   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`forceVisible$$, 
   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`baseBoxBudget$$, 
   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`boxBudgets$$, 
   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`paneSize$$, 
   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`allowContextHint$$, 
   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`toolbarAtTop$$ = 
   False}, 
   TagBox[GridBox[{
      {
       DynamicBox[ToBoxes[
         If[Length[
            
            FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`traceSym$\
17643[]] > 0, 
          
          FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
DisplayTraceTreeView[
          FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`traceSym$17643,
            FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`pos$$, 
           FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`childPos$$, 
           FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`treeMeta$$, 
           FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`baseBoxBudget$\
$, FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`boxBudgets$$, 
           FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`forceVisible$$\
, FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`outerColor$$, 
           FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
timesRelativeTo$$, 
           FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
maxDisplayDepth$$, 
           FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
maxChildDisplay$$, 
           FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
animationStart$$, 
           FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`animating$$, 
           FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`animatingPos$$\
, FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`allowContextHint$$, 
           FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`paneSize$$], 
          Framed[
           Style["Trace data no longer available.", "Text", 
            RGBColor[1, 0.1, 0.3, 0.8]], Background -> GrayLevel[0.62, 0.08], 
           FrameStyle -> GrayLevel[0.75, 0.5]]], StandardForm],
        ImageSizeCache->{385., {66.07568359375, 76.92431640625}},
        TrackedSymbols:>{
         FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`pos$$, 
          FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`childPos$$, 
          FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
timesRelativeTo$$, 
          FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
maxDisplayDepth$$, 
          FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
maxChildDisplay$$, 
          FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`boxBudgets$$}]},
      {
       StyleBox[
        RowBox[{
         TagBox[
          TooltipBox[
           PaneBox[
            TagBox[GridBox[{
               {
                ItemBox[
                 GraphicsBox[{CircleBox[{0, 0}, 1.3], 
                   {JoinForm["Bevel"], 
                    LineBox[{{-0.6, 0.6}, {0, 0}, {0, 1.2}}]}}],
                 Background->GrayLevel[0.65, 0.15],
                 StripOnInput->False], 
                ItemBox[
                 PaneBox[
                  TagBox[
                   TagBox[
                    ButtonBox[
                    PaneSelectorBox[{"Outer"->"\<\"Outer\"\>", 
                    "Total"->"\<\"Total\"\>", "Parent"->"\<\"Parent\"\>"}, 
                    Dynamic[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
timesRelativeTo$$]],
                    Appearance->{"Default" -> None, "Pressed" -> "Palette"},
                    Background->RGBColor[0, 0, 0, 0],
                    BaseStyle->(FontSize -> 15),
                    ButtonFunction:>{},
                    ContentPadding->False,
                    Enabled->False,
                    Evaluator->None,
                    ImageMargins->{{-2, -2}, {-1, -1}},
                    Method->"Preemptive"],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
timesRelativeTo$$ = Part[{
                    "Outer" -> "Outer", "Total" -> "Total", "Parent" -> 
                    "Parent"}, 
                    Mod[Part[
                    
                    FirstPosition[{
                    "Outer" -> "Outer", "Total" -> "Total", "Parent" -> 
                    "Parent"}, 
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
timesRelativeTo$$, {0}], 1] + 1, 
                    
                    Length[{
                    "Outer" -> "Outer", "Total" -> "Total", "Parent" -> 
                    "Parent"}], 1], 1]), Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]],
                   MouseAppearanceTag["LinkHand"]],
                  Alignment->{Center, Center},
                  ImageSize->{Automatic, 23}],
                 Background->Dynamic[
                   If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[{"MouseButtonTest", 1}], 
                    GrayLevel[0.7, 0.82], 
                    GrayLevel[0.75, 0.5]], 
                    GrayLevel[0.65, 0.15]]],
                 StripOnInput->False]}
              },
              AutoDelete->False,
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"]],
           "\"Times relative to\""],
          Annotation[#, "Times relative to", "Tooltip"]& ], "\<\"\"\>", 
         TagBox[
          TooltipBox[
           PaneBox[
            TagBox[GridBox[{
               {
                ItemBox[
                 
                 GraphicsBox[
                  LineBox[{{{-1, 1}, {-1, 0.1}, {1, 0.1}}, {{0, 0.1}, {
                    0, -1}, {1, -1}}}]],
                 Background->GrayLevel[0.65, 0.15],
                 StripOnInput->False], 
                ItemBox[
                 
                 TemplateBox[{{{-1, 0}, {1, 0}}, If[
                   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
maxDisplayDepth$$ > 2, PreDecrement[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
maxDisplayDepth$$]]& },
                  ""],
                 Background->Dynamic[
                   If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[{"MouseButtonTest", 1}], 
                    GrayLevel[0.7, 0.82], 
                    GrayLevel[0.75, 0.5]], 
                    GrayLevel[0.65, 0.15]]],
                 StripOnInput->False], 
                PaneBox[
                 
                 InputFieldBox[Dynamic[
                  FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
maxDisplayDepth$$, (
                   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
maxDisplayDepth$$ = Max[
                    Round[#], 2])& ], Number,
                  Alignment->{Center, Center},
                  BaseStyle->(FontColor -> GrayLevel[0.5]),
                  FieldSize->{1, 1}],
                 Alignment->{Center, Center},
                 ImageSize->{Automatic, 23}], 
                ItemBox[
                 
                 TemplateBox[{{{{-1, 0}, {1, 0}}, {{0, -1}, {0, 1}}}, (
                   PreIncrement[
                   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
maxDisplayDepth$$])& },
                  ""],
                 Background->Dynamic[
                   If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[{"MouseButtonTest", 1}], 
                    GrayLevel[0.7, 0.82], 
                    GrayLevel[0.75, 0.5]], 
                    GrayLevel[0.65, 0.15]]],
                 StripOnInput->False]}
              },
              AutoDelete->False,
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"]],
           "\"Maximum display depth\""],
          Annotation[#, "Maximum display depth", "Tooltip"]& ], "\<\"\"\>", 
         TagBox[
          TooltipBox[
           PaneBox[
            TagBox[GridBox[{
               {
                ItemBox[
                 
                 GraphicsBox[{PointBox[{{-1, 1}, {-1, 0}, {-1, -1}}], 
                   LineBox[{{{0, 1}, {1, 1}}, {{0, 0}, {1, 0}}, {{0, -1}, {
                    1, -1}}}]}],
                 Background->GrayLevel[0.65, 0.15],
                 StripOnInput->False], 
                ItemBox[
                 
                 TemplateBox[{{{-1, 0}, {1, 0}}, If[
                   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
maxChildDisplay$$ > 2, 
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
forceVisible$$ = True; 
                    PreDecrement[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
maxChildDisplay$$]]& },
                  ""],
                 Background->Dynamic[
                   If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[{"MouseButtonTest", 1}], 
                    GrayLevel[0.7, 0.82], 
                    GrayLevel[0.75, 0.5]], 
                    GrayLevel[0.65, 0.15]]],
                 StripOnInput->False], 
                PaneBox[
                 
                 InputFieldBox[Dynamic[
                  FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
maxChildDisplay$$, (
                   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
forceVisible$$ = True; 
                   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
maxChildDisplay$$ = Max[
                    Round[#], 2])& ], Number,
                  Alignment->{Center, Center},
                  BaseStyle->(FontColor -> GrayLevel[0.5]),
                  FieldSize->{1, 1}],
                 Alignment->{Center, Center},
                 ImageSize->{Automatic, 23},
                 ScrollPosition->{0., 8.333333333333334}], 
                ItemBox[
                 
                 TemplateBox[{{{{-1, 0}, {1, 0}}, {{0, -1}, {0, 1}}}, (
                   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
forceVisible$$ = True; 
                   PreIncrement[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
maxChildDisplay$$])& },
                  ""],
                 Background->Dynamic[
                   If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[{"MouseButtonTest", 1}], 
                    GrayLevel[0.7, 0.82], 
                    GrayLevel[0.75, 0.5]], 
                    GrayLevel[0.65, 0.15]]],
                 StripOnInput->False]}
              },
              AutoDelete->False,
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"]],
           "\"Maximum number of children displayed\""],
          
          Annotation[#, "Maximum number of children displayed", 
           "Tooltip"]& ], "\<\"\"\>", 
         DynamicModuleBox[{
          FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`searchEnabled$$\
 = True, FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchPatternString$$ = "", 
          FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`searchPattern$$\
, FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`searchPatternError$$ = \
{}, FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`noResultFound$$ = 
          False, FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
doSearch$$}, 
          PaneBox[
           TagBox[GridBox[{
              {
               ItemBox[
                PaneBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    
                    InputFieldBox[Dynamic[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchPatternString$$, (
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchPatternString$$ = #; 
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchPatternError$$ = If[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchPatternString$$ == "", {}, 
                    If[
                    AllTrue[Internal`SymbolNameQ][
                    StringReplace[Alternatives["*", "@"] -> "A"][
                    StringSplit[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchPatternString$$, "`"]]], 
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchPattern$$ = 
                    With[{FunctionRepository`$\
c1b927fd1f474ad4b6a5f61e95744e9e`pat = 
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchPatternString$$}, 
                    Condition[
                    Pattern[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`s, 
                    HoldPattern[
                    Except[
                    Symbol[
                    BlankNullSequence[]], 
                    Blank[Symbol]]]], 
                    Or[
                    StringMatchQ[
                    SymbolName[
                    Unevaluated[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`s]], 
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`pat], 
                    StringMatchQ[
                    Context[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`s] <> 
                    SymbolName[
                    Unevaluated[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`s]], 
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`pat]]\
]]; {}, 
                    First[Quiet[
                    ToExpression[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchPatternString$$, InputForm, HoldPattern]]; Part[
                    Reap[
                    Quiet[
                    Internal`HandlerBlock[{"Message", 
                    Replace[
                    Pattern[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`h, 
                    Hold[
                    Message[
                    Pattern[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`m, 
                    MessageName[
                    Pattern[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`sym, 
                    Blank[]], 
                    Blank[]]], 
                    Pattern[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`args, 
                    BlankNullSequence[]]], 
                    Blank[]]] :> Sow[
                    StringForm[
                    ReplaceAll[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`m, 
                    Messages[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`sym]]\
, FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`args]]]}, 
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchPattern$$ = 
                    ToExpression[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchPatternString$$, InputForm, HoldPattern]]]], 2], {}]]]; 
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchEnabled$$ = 
                    And[FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchPatternError$$ === {}, 
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchPatternString$$ != ""]; Null)& ], String,
                    BaseStyle->(FontFamily -> Dynamic[
                    AbsoluteCurrentValue[{StyleHints, "CodeFont"}]]),
                    FieldHint->"Search pattern",
                    FieldHintStyle->(FontOpacity -> 0.7),
                    FieldSize->{12, 1}],
                    
                    EventHandlerTag[{
                    "ReturnKeyDown" :> 
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
doSearch$$[1], Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]],
                   DynamicBox[
                    ToBoxes[
                    Style[
                    StringTrim[
                    StringRiffle[
                    Map[
                    ToString, 
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchPatternError$$], "\n"]], 
                    Darker[Red]], StandardForm]],
                   TooltipDelay->Dynamic[
                    If[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchPatternError$$ === {}, Infinity, 0]]],
                  Annotation[#, 
                   Dynamic[
                    Style[
                    StringTrim[
                    StringRiffle[
                    Map[
                    ToString, 
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchPatternError$$], "\n"]], 
                    Darker[Red]]], "Tooltip"]& ],
                 Alignment->{Center, Center},
                 ImageSize->{Automatic, 23}],
                Background->Dynamic[
                  If[
                  FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
noResultFound$$, If[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
animationStart$$ === None, 
                    Refresh[
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
animationStart$$ = Clock[Infinity], None]]; 
                   If[Clock[Infinity] - 
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
animationStart$$ > 1, 
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
noResultFound$$ = False]; (RGBColor[1, 0.5, 0.5, 0.3 - 0.3 #]& )[
                    Clip[
                    Clock[Infinity] - 
                    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
animationStart$$]], 
                   If[
                   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchPatternError$$ =!= {}, 
                    RGBColor[1, 0.6, 0.6, 0.2], Transparent]]],
                FrameStyle->Dynamic[
                  If[
                  FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchPatternError$$ =!= {}, 
                   RGBColor[1, 0, 0, 0.5], 
                   GrayLevel[0.75]]],
                StripOnInput->False], 
               ItemBox[
                TooltipBox[
                 
                 TemplateBox[{{{{0, -1}, {-0.5, 0}, {0, 1}}, {{1, -1}, {
                    0.5, 0}, {1, 1}}}, 
                   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
doSearch$$[-1]& },
                  ""],
                 "Previous match"],
                Background->Dynamic[
                  If[
                  FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchEnabled$$, 
                   If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[{"MouseButtonTest", 1}], 
                    GrayLevel[0.7, 0.82], 
                    GrayLevel[0.75, 0.5]], 
                    GrayLevel[0.65, 0.15]], 
                   GrayLevel[0.75, 0.5]]],
                StripOnInput->False], 
               ItemBox[
                TooltipBox[
                 
                 TemplateBox[{{{{0, -1}, {0.5, 0}, {0, 
                    1}}, {{-1, -1}, {-0.5, 0}, {-1, 1}}}, 
                   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
doSearch$$[1]& },
                  ""],
                 "Next match"],
                Background->Dynamic[
                  If[
                  FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchEnabled$$, 
                   If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[{"MouseButtonTest", 1}], 
                    GrayLevel[0.7, 0.82], 
                    GrayLevel[0.75, 0.5]], 
                    GrayLevel[0.65, 0.15]], 
                   GrayLevel[0.75, 0.5]]],
                StripOnInput->False]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"]],
          DynamicModuleValues:>{},
          
          Initialization:>(
           FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`doSearch$$[
              Pattern[
              FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`dir$, 
               Blank[]]] := 
            If[FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchEnabled$$, 
              FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
forceVisible$$ = True; 
              With[{FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`res$ = 
                 FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
SearchTree[
                  FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
traceSym$17643, 
                   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
searchPattern$$, FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`pos$$, 
                   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`dir$]}\
, 
                If[
                 MissingQ[
                 FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`res$], 
                 FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
animatingPos$$ = {}; 
                 FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
StartColorAnimation[
                  FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
noResultFound$$, 
                   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
animationStart$$]; Null, 
                 FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
animatingPos$$ = (FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`pos$$ = 
                   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`res$); 
                 FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
StartColorAnimation[
                  FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
animating$$, 
                   FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
animationStart$$]; Null]]; Null]; Null),
          
          UnsavedVariables:>{
           FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`doSearch$$}]}],
        StripOnInput->False,
        TemplateBoxOptions->{DisplayFunction->(TagBox[
          TagBox[
           ButtonBox[
            GraphicsBox[
             LineBox[#]], ButtonFunction :> {}, Evaluator -> None, 
            Appearance -> {"Default" -> None, "Pressed" -> "Palette"}, 
            Enabled -> False, ContentPadding -> False, 
            ImageMargins -> {{-2, -2}, {-1, -1}}, BaseStyle -> {}, Background -> 
            RGBColor[0, 0, 0, 0], Method -> "Preemptive"], 
           
           EventHandlerTag[{
            "MouseClicked" :> #2[], Method -> "Preemptive", PassEventsDown -> 
             Automatic, PassEventsUp -> True}]], 
          MouseAppearanceTag["LinkHand"]]& )},
        InputFieldBoxOptions->{Alignment->{Left, Center},
        Appearance->"Frameless"},
        TooltipBoxOptions->{
        TooltipStyle->{
         Background -> GrayLevel[0.97], FontColor -> GrayLevel[0.1], 
          CellFrameStyle -> GrayLevel[0.7]}},
        GridBoxOptions->{AutoDelete->False,
        BaseStyle->{
         Background :> CurrentValue[{StyleDefinitions, "Output", Background}],
           "Text"},
        FrameStyle->GrayLevel[0.75],
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
        GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.1}}}},
        GraphicsBoxOptions->{BaseStyle->{
          AbsoluteThickness[1.5], 
          AbsolutePointSize[1.5], 
          GrayLevel[0.5]},
        ImageSize->12,
        PlotRange->1.7},
        GraphicsBoxOptions -> {Antialiasing -> False}]}
     },
     BaseStyle->{"Output", FontWeight -> "Plain"},
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"],
   DynamicModuleValues:>{},
   Initialization:>(
    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`treeMeta$$[
       Pattern[FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`pos$, 
        Blank[]]] := (
      FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`treeMeta$$[
       FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`pos$] = <|
       "MainContext" -> 
        Map[FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
DetermineMainContext, 
          Through[
           {
           FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
EvaluationInput, 
            FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`\
EvaluationOutput}[
           FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`traceSym$\
17643, FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`pos$]]]|>); 
    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`boxBudgets$$[
       BlankSequence[]][
       Blank[]] = 0; 
    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`childPos$$[
       Blank[]] = 1; Null),
   UnsavedVariables:>{
    FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`treeMeta$$, 
     FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`animatingPos$$, 
     FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`animationStart$$, 
     FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`childPos$$, 
     FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`forceVisible$$, 
     FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`baseBoxBudget$$, 
     FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`boxBudgets$$, 
     FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`paneSize$$, 
     FunctionRepository`$c1b927fd1f474ad4b6a5f61e95744e9e`allowContextHint$$}],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "Output",
 CellChangeTimes->{
  3.637783960892045*^9, 3.637784864684662*^9, 3.637787240153268*^9, 
   3.637798239937914*^9, 3.637801354185184*^9, 3.637848068036792*^9, 
   3.637851820856493*^9, 3.637852190560732*^9, 3.6378524623109007`*^9, 
   3.6378685967563257`*^9, 3.904923213726959*^9, 3.904923260384604*^9, 
   3.9049314702352333`*^9, 3.904934143641067*^9, 3.904935176802031*^9, 
   3.905010958234869*^9, {3.905011050197542*^9, 3.905011091938788*^9}, 
   3.905021897226625*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"f54644a0-3014-4e45-bb80-de12e8618fdf"]
}, Open  ]],

Cell[TextData[{
 StyleBox["foldrStream", "Input"],
 " does not produce an empty result, but rather the first accumulator value, \
so we can never reify an empty ",
 StyleBox["List", "Input"],
 " from a ",
 StyleBox["foldrStream", "Input"],
 ":"
}], "Text",
 CellChangeTimes->{{3.904923263854967*^9, 3.9049233090467653`*^9}, {
  3.905011106468644*^9, 
  3.905011136031076*^9}},ExpressionUUID->"df2bb655-c4a2-4f38-b99a-\
4395430d97c2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"reify", "[", 
  RowBox[{"foldrStream", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"acc", ",", "v"}], "}"}], "\[Function]", "v"}], ",", "42", ",", 
    RowBox[{"integersTo", "[", "0", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.637783972466384*^9, 3.6377839734044333`*^9}, {
  3.6377852666153727`*^9, 3.63778526719026*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"c5d2baef-c847-4bcf-997f-6eeb9e3dc716"],

Cell[BoxData[
 RowBox[{"{", "42", "}"}]], "Output",
 CellChangeTimes->{3.637783974178396*^9, 3.6377852676516*^9, 
  3.6377872402006807`*^9, 3.637798249716017*^9, 3.6378013542359943`*^9, 
  3.637848068074651*^9, 3.6378518208840923`*^9, 3.637852190607196*^9, 
  3.6378524623607264`*^9, 3.637868614398013*^9, 3.904923311496038*^9, 
  3.9049314702380447`*^9, 3.9049341436435537`*^9, 3.904935176804438*^9, 
  3.9050112022603397`*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"635450df-8160-43b3-9e5f-a839d2c52865"]
}, Open  ]],

Cell["\<\
As always with any fold, the length of the result is one more than the length \
of the input stream:\
\>", "Text",
 CellChangeTimes->{{3.9049233328776503`*^9, 3.904923373019513*^9}, {
  3.9050112088096647`*^9, 3.9050112113768787`*^9}, {3.905021921372596*^9, 
  3.905021921825862*^9}},ExpressionUUID->"97fc31a0-9acf-4d10-8c9e-\
d63efc9fec2e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"reify", "[", 
  RowBox[{"foldrStream", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"acc", ",", "v"}], "}"}], "\[Function]", "v"}], ",", "42", ",", 
    RowBox[{"integersTo", "[", "3", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6377832730163403`*^9, 3.6377833137025642`*^9}, {
  3.637785279010676*^9, 3.63778527946045*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"f4b1f9c2-c6fc-49ab-8ad4-a8f81a035c2c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"42", ",", "1", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{{3.6377833085616693`*^9, 3.637783314688985*^9}, 
   3.6377838109374657`*^9, 3.637784902900568*^9, {3.637785271065339*^9, 
   3.6377852798931293`*^9}, 3.637787240252974*^9, 3.63780135428763*^9, 
   3.637848068107888*^9, 3.637851821019641*^9, 3.637852190643621*^9, 
   3.6378524624099503`*^9, 3.63786861594306*^9, 3.904923377969655*^9, 
   3.904931470258953*^9, 3.904934143645859*^9, 3.90493517682481*^9, 
   3.905011214327652*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"59eedf7d-de2f-4be7-9f9e-49f51daaa486"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Iterable", "Section",
 CellChangeTimes->{
  3.637749271819919*^9, {3.637749679213498*^9, 
   3.637749689729578*^9}},ExpressionUUID->"3b71ec4f-a45d-43c4-a24e-\
bfa0590ad064"],

Cell[CellGroupData[{

Cell["forEach :: Stream \[LongRightArrow] unaryQueryFunction \
\[LongRightArrow] Null", "Subsection",
 CellChangeTimes->{{3.637870109972138*^9, 3.637870147118382*^9}, {
  3.904923382212556*^9, 3.9049233830968533`*^9}, {3.905011226408297*^9, 
  3.905011228774232*^9}},ExpressionUUID->"49b6b182-0f29-4ecb-beae-\
02326a99f1e9"],

Cell[TextData[{
 "An ",
 StyleBox["interface",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " is a function that take a collection object as first argument, by \
convention, just as you'd emulate object-oriented programming in C. There are \
multiple approaches to object-oriented programming in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "; too many, in fact, so we won\[CloseCurlyQuote]t bother."
}], "Text",
 CellChangeTimes->{{3.6377849216487923`*^9, 3.637784975383359*^9}, 
   3.637785296075066*^9, {3.637785361919977*^9, 3.637785380861224*^9}, {
   3.637786021270876*^9, 3.637786059056611*^9}, {3.637786314299981*^9, 
   3.637786369287127*^9}, {3.637798393839575*^9, 3.637798394925221*^9}, {
   3.637868690370627*^9, 3.637868710699567*^9}, {3.904923633063304*^9, 
   3.904923720203498*^9}, {3.905011464287229*^9, 3.905011537654316*^9}, {
   3.905012035475263*^9, 
   3.905012100690466*^9}},ExpressionUUID->"b0b12749-b430-4213-a522-\
612d400df311"],

Cell[TextData[{
 "An ",
 StyleBox["iterable",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " is an interface with one method, ",
 StyleBox["forEach", "Input"],
 ", which takes an iterable and a unary, side-effecting query function, and \
invokes the query on every element of the iterable. It\[CloseCurlyQuote]s \
side-effecting way to pull values out of an iterable, so \
it\[CloseCurlyQuote]s a legitimate \[OpenCurlyDoubleQuote]way out.\
\[CloseCurlyDoubleQuote] The analogous, non-side-effecting operator is ",
 StyleBox["Map", "Input"],
 ", not pursued here for brevity. Streams are the only iterables in this \
notebook."
}], "Text",
 CellChangeTimes->{{3.6377849216487923`*^9, 3.637784975383359*^9}, 
   3.637785296075066*^9, {3.637785361919977*^9, 3.637785380861224*^9}, {
   3.637786021270876*^9, 3.637786059056611*^9}, {3.637786314299981*^9, 
   3.637786369287127*^9}, {3.6377876192696257`*^9, 3.637787664420611*^9}, {
   3.637798322344281*^9, 3.637798375065296*^9}, {3.637868630857519*^9, 
   3.637868631941077*^9}, {3.637869220432897*^9, 3.637869224269265*^9}, {
   3.904665120508024*^9, 3.90466512287045*^9}, {3.904923396932379*^9, 
   3.904923555613904*^9}, {3.904923608368224*^9, 3.904923623862833*^9}, {
   3.905011249867894*^9, 3.9050112688717537`*^9}, {3.905011311341751*^9, 
   3.905011369844733*^9}, {3.905011402752523*^9, 3.905011414000148*^9}, 
   3.905011565162524*^9, {3.905011644697171*^9, 3.905011722801805*^9}, {
   3.905011913478712*^9, 3.9050119891928167`*^9}, {3.905012138497074*^9, 
   3.905012155131279*^9}, {3.905021950327446*^9, 
   3.9050219515202627`*^9}},ExpressionUUID->"d2fa342a-81dc-45fe-a05e-\
2634b25da3d7"],

Cell[TextData[{
 "It\[CloseCurlyQuote]s bad to invoke ",
 StyleBox["forEach", "Input"],
 " on infinite streams, just as with ",
 StyleBox["reify", "Input"],
 ". You\[CloseCurlyQuote]ll get a non-terminating computation."
}], "Text",
 CellChangeTimes->{{3.6377849216487923`*^9, 3.637784975383359*^9}, 
   3.637785296075066*^9, {3.637785361919977*^9, 3.637785380861224*^9}, {
   3.637786021270876*^9, 3.637786059056611*^9}, {3.637786314299981*^9, 
   3.637786369287127*^9}, {3.6377876192696257`*^9, 3.637787664420611*^9}, {
   3.637798322344281*^9, 3.637798375065296*^9}, {3.637868678616596*^9, 
   3.6378686814247513`*^9}, {3.904923572936243*^9, 3.904923574463071*^9}, {
   3.905011447908696*^9, 3.905011457716744*^9}, 3.905011745191558*^9, {
   3.905011994398817*^9, 3.905011997442422*^9}, {3.9050219780493507`*^9, 
   3.90502197843487*^9}},ExpressionUUID->"cadcd96c-15d5-4860-aea9-\
3cef9caf58bc"],

Cell[TextData[{
 "Here is ",
 StyleBox["forEach", "Input"],
 " for Stream:"
}], "Text",
 CellChangeTimes->{{3.6377863746739483`*^9, 3.637786387608069*^9}, {
   3.9050121858722467`*^9, 3.90501220492605*^9}, 
   3.9050219840206623`*^9},ExpressionUUID->"0cbe84d6-ab3a-445a-acb7-\
69e6dbb3efd3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "forEach", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"forEach", "[", 
    RowBox[{
     RowBox[{"Null", "[", "]"}], ",", "lambda_"}], "]"}], ":=", "Null"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"forEach", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v_", ",", "thunk_"}], "}"}], ",", "lambda_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"lambda", "[", "v", "]"}], 
     RowBox[{"(*", " ", 
      RowBox[{"discard", " ", 
       RowBox[{"lambda", "'"}], "s", " ", "result"}], " ", "*)"}], ";", 
     RowBox[{"forEach", "[", 
      RowBox[{
       RowBox[{"thunk", "[", "]"}], ",", "lambda"}], "]"}], ";"}], ")"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.637785298573759*^9, 3.637785354105178*^9}, {
   3.6377853937520237`*^9, 3.6377854405246058`*^9}, {3.637785872062255*^9, 
   3.637785876332829*^9}, {3.637785947498212*^9, 3.637786001634392*^9}, {
   3.637786165627861*^9, 3.637786166929821*^9}, 3.637870160987349*^9},
 CellLabel->"In[62]:=",ExpressionUUID->"dea5b70a-c989-4ae9-b337-1b9ae02513a0"],

Cell[TextData[{
 "and here it is at work, side-effecting a ",
 StyleBox["take", "Input"],
 " of ",
 StyleBox["allFibs", "Input"],
 " via ",
 StyleBox["Print", "Input"],
 ":"
}], "Text",
 CellChangeTimes->{{3.637868729968411*^9, 3.6378687513702908`*^9}, {
  3.904925052846375*^9, 3.904925055527895*^9}, {3.9050122237174*^9, 
  3.9050122261572447`*^9}, {3.9050219955969543`*^9, 
  3.905021999907707*^9}},ExpressionUUID->"e294cc38-7a37-4695-baa0-\
29cd911256fd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"forEach", "[", 
  RowBox[{
   RowBox[{"take", "[", 
    RowBox[{"allFibs", ",", "11"}], "]"}], ",", "Print"}], "]"}]], "Input",
 CellChangeTimes->{{3.6377860747526283`*^9, 3.637786091317171*^9}, {
  3.637786177794757*^9, 3.6377861799515133`*^9}, {3.637798412002798*^9, 
  3.6377984128307467`*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"cb024948-2bd2-41fb-aaea-d934985ded39"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1"}], "}"}]], "Print",
 CellChangeTimes->{3.637798413436466*^9, 3.637801354337984*^9, 
  3.63784806814333*^9, 3.637851821071164*^9, 3.637852190706815*^9, 
  3.637852462489296*^9, 3.637868755647008*^9, 3.637870166517692*^9, 
  3.904925046296198*^9, 3.9049314702821617`*^9, 3.904934143669003*^9, 
  3.90493517682976*^9, 3.90501224199683*^9, 3.905022005944414*^9},
 CellLabel->
  "During evaluation of \
In[65]:=",ExpressionUUID->"1a4f4944-4a13-4877-adc3-9f71d1b3272a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1"}], "}"}]], "Print",
 CellChangeTimes->{3.637798413436466*^9, 3.637801354337984*^9, 
  3.63784806814333*^9, 3.637851821071164*^9, 3.637852190706815*^9, 
  3.637852462489296*^9, 3.637868755647008*^9, 3.637870166517692*^9, 
  3.904925046296198*^9, 3.9049314702821617`*^9, 3.904934143669003*^9, 
  3.90493517682976*^9, 3.90501224199683*^9, 3.90502200595109*^9},
 CellLabel->
  "During evaluation of \
In[65]:=",ExpressionUUID->"ac651f40-d847-4d12-8a7b-82fd39afdbbf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2"}], "}"}]], "Print",
 CellChangeTimes->{3.637798413436466*^9, 3.637801354337984*^9, 
  3.63784806814333*^9, 3.637851821071164*^9, 3.637852190706815*^9, 
  3.637852462489296*^9, 3.637868755647008*^9, 3.637870166517692*^9, 
  3.904925046296198*^9, 3.9049314702821617`*^9, 3.904934143669003*^9, 
  3.90493517682976*^9, 3.90501224199683*^9, 3.905022005952963*^9},
 CellLabel->
  "During evaluation of \
In[65]:=",ExpressionUUID->"ca843482-9ffa-4eee-b1e6-32bba852714b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3"}], "}"}]], "Print",
 CellChangeTimes->{3.637798413436466*^9, 3.637801354337984*^9, 
  3.63784806814333*^9, 3.637851821071164*^9, 3.637852190706815*^9, 
  3.637852462489296*^9, 3.637868755647008*^9, 3.637870166517692*^9, 
  3.904925046296198*^9, 3.9049314702821617`*^9, 3.904934143669003*^9, 
  3.90493517682976*^9, 3.90501224199683*^9, 3.9050220059539223`*^9},
 CellLabel->
  "During evaluation of \
In[65]:=",ExpressionUUID->"c1c75309-3962-4bcd-b960-c17303b9cd08"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "5"}], "}"}]], "Print",
 CellChangeTimes->{3.637798413436466*^9, 3.637801354337984*^9, 
  3.63784806814333*^9, 3.637851821071164*^9, 3.637852190706815*^9, 
  3.637852462489296*^9, 3.637868755647008*^9, 3.637870166517692*^9, 
  3.904925046296198*^9, 3.9049314702821617`*^9, 3.904934143669003*^9, 
  3.90493517682976*^9, 3.90501224199683*^9, 3.9050220059548817`*^9},
 CellLabel->
  "During evaluation of \
In[65]:=",ExpressionUUID->"aaac25b4-3335-4fd7-ae65-9ffadde84c87"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "8"}], "}"}]], "Print",
 CellChangeTimes->{3.637798413436466*^9, 3.637801354337984*^9, 
  3.63784806814333*^9, 3.637851821071164*^9, 3.637852190706815*^9, 
  3.637852462489296*^9, 3.637868755647008*^9, 3.637870166517692*^9, 
  3.904925046296198*^9, 3.9049314702821617`*^9, 3.904934143669003*^9, 
  3.90493517682976*^9, 3.90501224199683*^9, 3.905022005955688*^9},
 CellLabel->
  "During evaluation of \
In[65]:=",ExpressionUUID->"b3d4eab7-9483-427e-9f36-45d2028e1d1d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"8", ",", "13"}], "}"}]], "Print",
 CellChangeTimes->{3.637798413436466*^9, 3.637801354337984*^9, 
  3.63784806814333*^9, 3.637851821071164*^9, 3.637852190706815*^9, 
  3.637852462489296*^9, 3.637868755647008*^9, 3.637870166517692*^9, 
  3.904925046296198*^9, 3.9049314702821617`*^9, 3.904934143669003*^9, 
  3.90493517682976*^9, 3.90501224199683*^9, 3.9050220059565067`*^9},
 CellLabel->
  "During evaluation of \
In[65]:=",ExpressionUUID->"970a2e1f-6831-4366-bf00-a852dc34ae88"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"13", ",", "21"}], "}"}]], "Print",
 CellChangeTimes->{3.637798413436466*^9, 3.637801354337984*^9, 
  3.63784806814333*^9, 3.637851821071164*^9, 3.637852190706815*^9, 
  3.637852462489296*^9, 3.637868755647008*^9, 3.637870166517692*^9, 
  3.904925046296198*^9, 3.9049314702821617`*^9, 3.904934143669003*^9, 
  3.90493517682976*^9, 3.90501224199683*^9, 3.9050220059572353`*^9},
 CellLabel->
  "During evaluation of \
In[65]:=",ExpressionUUID->"eb003dce-10e5-4ee7-8c6e-68b57b64bc94"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"21", ",", "34"}], "}"}]], "Print",
 CellChangeTimes->{3.637798413436466*^9, 3.637801354337984*^9, 
  3.63784806814333*^9, 3.637851821071164*^9, 3.637852190706815*^9, 
  3.637852462489296*^9, 3.637868755647008*^9, 3.637870166517692*^9, 
  3.904925046296198*^9, 3.9049314702821617`*^9, 3.904934143669003*^9, 
  3.90493517682976*^9, 3.90501224199683*^9, 3.905022005957938*^9},
 CellLabel->
  "During evaluation of \
In[65]:=",ExpressionUUID->"3086f7dc-14e3-497d-b97a-46bf5511c2f2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"34", ",", "55"}], "}"}]], "Print",
 CellChangeTimes->{3.637798413436466*^9, 3.637801354337984*^9, 
  3.63784806814333*^9, 3.637851821071164*^9, 3.637852190706815*^9, 
  3.637852462489296*^9, 3.637868755647008*^9, 3.637870166517692*^9, 
  3.904925046296198*^9, 3.9049314702821617`*^9, 3.904934143669003*^9, 
  3.90493517682976*^9, 3.90501224199683*^9, 3.905022005958637*^9},
 CellLabel->
  "During evaluation of \
In[65]:=",ExpressionUUID->"b0d65f61-5022-486e-bb19-a2d840d15f5e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"55", ",", "89"}], "}"}]], "Print",
 CellChangeTimes->{3.637798413436466*^9, 3.637801354337984*^9, 
  3.63784806814333*^9, 3.637851821071164*^9, 3.637852190706815*^9, 
  3.637852462489296*^9, 3.637868755647008*^9, 3.637870166517692*^9, 
  3.904925046296198*^9, 3.9049314702821617`*^9, 3.904934143669003*^9, 
  3.90493517682976*^9, 3.90501224199683*^9, 3.9050220059593554`*^9},
 CellLabel->
  "During evaluation of \
In[65]:=",ExpressionUUID->"b884bfb0-354e-4725-afa8-c9c829aa882a"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Observable", "Section",
 CellChangeTimes->{{3.63774969733701*^9, 
  3.6377497040991364`*^9}},ExpressionUUID->"440272b8-74cd-450a-9470-\
bd9d31134ba0"],

Cell[TextData[{
 "An ",
 StyleBox["observable",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " is an interface with one method: ",
 StyleBox["subscribe", "Input"],
 ", which has the same signature and semantics as ",
 StyleBox["forEach", "Input"],
 ". The difference is that an observable produces its results asynchronously. \
",
 StyleBox["The big lesson of this whole notebook is that the query function \
can\[CloseCurlyQuote]t tell whether it\[CloseCurlyQuote]s invoked on values \
in a list, values from a stream, or values (observations) from an observable",
  FontWeight->"Bold",
  Background->RGBColor[1, 1, 0]],
 ". Put your algorithm in the query, and you\[CloseCurlyQuote]ve separated \
the concerns of algorithms from the concern of synchrony. This strategy works \
for very big algorithms, like ",
 ButtonBox["Kalman filters",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://vixra.org/author/brian_beckman"], None},
  ButtonNote->"https://vixra.org/author/brian_beckman"],
 "."
}], "Text",
 CellChangeTimes->{{3.6377849216487923`*^9, 3.637784975383359*^9}, 
   3.637785296075066*^9, {3.637785361919977*^9, 3.637785380861224*^9}, {
   3.637786021270876*^9, 3.637786059056611*^9}, {3.637786224897748*^9, 
   3.637786244349176*^9}, {3.637786554105165*^9, 3.6377866107752666`*^9}, {
   3.637786658616255*^9, 3.637786689627636*^9}, {3.6377874674187403`*^9, 
   3.6377874727927027`*^9}, {3.637787731810238*^9, 3.637787743216867*^9}, {
   3.637788725394952*^9, 3.637788728320141*^9}, {3.6377984374943333`*^9, 
   3.637798457871128*^9}, {3.637847523522278*^9, 3.637847567470766*^9}, {
   3.637868773391118*^9, 3.637868818992219*^9}, {3.637870224040381*^9, 
   3.6378702250390673`*^9}, {3.90492506734825*^9, 3.904925118054462*^9}, {
   3.905012272054851*^9, 3.9050123450623837`*^9}, {3.905012515264389*^9, 
   3.905012515264893*^9}, {3.90502201709873*^9, 
   3.9050220667680073`*^9}},ExpressionUUID->"656643de-f1d3-4f76-afa8-\
512ebe29ce67"],

Cell[TextData[{
 "Model the asynchronous behavior of observables with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " ",
 StyleBox["Tasks", "Input",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox["; ",
  FontSlant->"Italic"],
 "model the observables themselves differently because we need the ",
 StyleBox["subscribe", "Input"],
 " interface for them. "
}], "Text",
 CellChangeTimes->{{3.6377849216487923`*^9, 3.637784975383359*^9}, 
   3.637785296075066*^9, {3.637785361919977*^9, 3.637785380861224*^9}, {
   3.637786021270876*^9, 3.637786059056611*^9}, {3.637786224897748*^9, 
   3.637786244349176*^9}, {3.637786554105165*^9, 3.6377866107752666`*^9}, {
   3.637786658616255*^9, 3.637786689627636*^9}, {3.6377874674187403`*^9, 
   3.6377874727927027`*^9}, {3.637787731810238*^9, 3.637787743216867*^9}, {
   3.637788725394952*^9, 3.637788728320141*^9}, {3.6377984374943333`*^9, 
   3.6377984748728933`*^9}, {3.637853090805872*^9, 3.6378530969563437`*^9}, {
   3.637853132779086*^9, 3.637853189929368*^9}, {3.6378688244381657`*^9, 
   3.637868846247497*^9}, {3.637868958008906*^9, 3.637868961366036*^9}, {
   3.637870189901095*^9, 3.637870201102456*^9}, {3.6378710883627157`*^9, 
   3.637871106232737*^9}, 3.9049208584134007`*^9, {3.904925129728266*^9, 
   3.904925182836438*^9}, {3.904929495227354*^9, 3.904929500940085*^9}, {
   3.904934158680606*^9, 3.904934160478372*^9}, {3.9049341917371893`*^9, 
   3.9049342172411013`*^9}, {3.904992052202026*^9, 3.9049920570004463`*^9}, {
   3.90499334155901*^9, 3.904993347851412*^9}, {3.9049933879473343`*^9, 
   3.904993398648974*^9}, {3.904993485381763*^9, 3.904993531642519*^9}, {
   3.905012526833295*^9, 3.90501255874*^9}, {3.905022077142145*^9, 
   3.905022086773984*^9}},ExpressionUUID->"5932c106-306a-49ef-a7fe-\
3defadb9b012"],

Cell[TextData[{
 "Here's an finite ",
 StyleBox["Task", "Input"],
 ". You MUST interact with this, say via ",
 StyleBox["Dynamic", "Input"],
 ", to appreciate it. Evaluate the following input cell and watch the values \
tick-over five times in the output cell:"
}], "Text",
 CellChangeTimes->{{3.6377849216487923`*^9, 3.637784975383359*^9}, 
   3.637785296075066*^9, {3.637785361919977*^9, 3.637785380861224*^9}, {
   3.637786021270876*^9, 3.637786059056611*^9}, {3.637786224897748*^9, 
   3.637786244349176*^9}, {3.637786554105165*^9, 3.6377866107752666`*^9}, {
   3.637786658616255*^9, 3.637786689627636*^9}, {3.6377874674187403`*^9, 
   3.6377874727927027`*^9}, {3.637787731810238*^9, 3.637787743216867*^9}, {
   3.637788725394952*^9, 3.637788728320141*^9}, {3.6377984374943333`*^9, 
   3.6377984748728933`*^9}, {3.637853090805872*^9, 3.6378530969563437`*^9}, {
   3.637853132779086*^9, 3.637853189929368*^9}, {3.6378688244381657`*^9, 
   3.637868846247497*^9}, {3.637868958008906*^9, 3.637868961366036*^9}, {
   3.637870189901095*^9, 3.637870201102456*^9}, {3.6378710883627157`*^9, 
   3.637871106232737*^9}, 3.9049208584134007`*^9, {3.904925129728266*^9, 
   3.904925182836438*^9}, {3.904929495227354*^9, 3.904929500940085*^9}, {
   3.904934158680606*^9, 3.904934160478372*^9}, {3.9049341917371893`*^9, 
   3.9049342172411013`*^9}, {3.904992052202026*^9, 3.9049920570004463`*^9}, {
   3.90499334155901*^9, 3.904993347851412*^9}, {3.9049933879473343`*^9, 
   3.904993398648974*^9}, {3.904993485381763*^9, 
   3.904993550296856*^9}},ExpressionUUID->"cf518a37-930c-4835-8a87-\
7ba838dfc946"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r$", "=", "0"}], ";", 
  RowBox[{"Dynamic", "[", "r$", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"SessionSubmit", "[", 
  RowBox[{"ScheduledTask", "[", 
   RowBox[{
    RowBox[{"r$", "++"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Quantity", "[", 
       RowBox[{"1", ",", "\"\<Seconds\>\""}], "]"}], ",", " ", "5"}], "}"}]}],
    "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6377874058455477`*^9, 3.637787409682954*^9}, {
   3.637787503870904*^9, 3.637787507864154*^9}, 3.6377879646059637`*^9, 
   3.637788402658154*^9, {3.637843619925458*^9, 3.637843621012211*^9}, {
   3.904929246508637*^9, 3.904929284673026*^9}, {3.904930207381956*^9, 
   3.904930286816889*^9}, 3.9049306456287193`*^9, {3.9049311480314827`*^9, 
   3.9049311779023457`*^9}, {3.904931227996428*^9, 3.904931243111484*^9}, {
   3.904934117540902*^9, 3.904934120151368*^9}, 3.904934171510199*^9, {
   3.9049914268267813`*^9, 3.9049914378610888`*^9}, {3.904991556684905*^9, 
   3.904991575298501*^9}, {3.904991978666081*^9, 3.904992023435761*^9}, {
   3.904993403451689*^9, 3.9049934035098257`*^9}},
 CellLabel->"In[66]:=",
 CellID->1828271894,ExpressionUUID->"c2ad6c86-edb6-437a-933a-cb0897a54110"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`r$, StandardForm],
  ImageSizeCache->{12., {0.23399999999999999`, 12.441}}]], "Output",
 CellChangeTimes->{
  3.9049919524651203`*^9, {3.9049919832523193`*^9, 3.904992024950088*^9}, {
   3.904993404340272*^9, 3.904993433893775*^9}, 3.905012599094028*^9, 
   3.905022111276682*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"54efde6c-078d-42e0-9c16-509bf41b6b4c"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TaskObject", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{
                 Thickness[0.041666666666666664`], {
                  FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5, 
                   15.5}, {9.501, 15.5}, {9.501, 16.5}, {6.5, 16.5}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5, 
                   5.5}, {9.501, 5.5}, {9.501, 6.5}, {6.5, 6.5}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5, 
                   13.5}, {9.501, 13.5}, {9.501, 14.5}, {6.5, 14.5}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5, 
                   11.5}, {9.501, 11.5}, {9.501, 12.5}, {6.5, 12.5}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5, 
                   9.5}, {9.501, 9.5}, {9.501, 10.5}, {6.5, 10.5}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5, 
                   7.5}, {9.501, 7.5}, {9.501, 8.5}, {6.5, 8.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 6.5}, {8.5, 6.5}, {
                   8.5, 15.5}, {15.5, 15.5}}, {{16.5, 16.5}, {7.5, 16.5}, {
                   7.5, 5.5}, {16.5, 5.5}}}]}, {
                  FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    15.5}, {8.5, 15.5}, {8.5, 6.5}, {15.5, 6.5}}}]}, {
                  RGBColor[0.392, 0.392, 0.392], 
                  Thickness[0.020833333333333332`], 
                  Opacity[1.], 
                  CapForm["Round"], 
                  JoinForm["Round"], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 
                    2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{10., 10.221699999999998`}, {10.768, 
                    10.484699999999998`}}, {{12.457, 10.2557}, {12., 
                    10.874699999999999`}}, {{11.543, 10.2557}, {12., 
                    10.874699999999999`}}, {{12., 10.874699999999999`}, {
                    11.261, 11.123699999999998`}}, {{12., 
                    10.874699999999999`}, {12.739, 11.123699999999998`}}, {{
                    12., 10.874699999999999`}, {12., 11.660699999999999`}}, {{
                    12.439, 12.222699999999998`}, {12., 
                    11.660699999999999`}}, {{12.739, 11.123699999999998`}, {
                    13.149000000000001`, 11.705699999999998`}}, {{12.762, 
                    11.932699999999999`}, {13.236, 12.572699999999998`}}, {{
                    13.421, 10.8707}, {12.739, 11.123699999999998`}}, {{14., 
                    10.221699999999998`}, {13.232, 10.484699999999998`}}, {{
                    13.149000000000001`, 10.035699999999999`}, {12.457, 
                    10.2557}}, {{12.437999999999999`, 9.519699999999998}, {
                    12.457, 10.2557}}, {{12., 8.768699999999999}, {12., 
                    9.5887}}, {{11.561, 9.520699999999998}, {11.543, 
                    10.2557}}, {{10.851, 10.035699999999999`}, {11.543, 
                    10.2557}}, {{11.261, 11.123699999999998`}, {10.579, 
                    10.8707}}, {{10.851, 11.706699999999998`}, {11.261, 
                    11.123699999999998`}}, {{10.765, 12.573699999999999`}, {
                    11.238, 11.932699999999999`}}, {{11.562, 
                    12.222699999999998`}, {12., 11.660699999999999`}}, {{12., 
                    10.874699999999999`}, {12., 10.874699999999999`}}, {{
                    11.261, 11.123699999999998`}, {10.768, 
                    10.484699999999998`}, {11.543, 10.2557}, {12., 9.5887}, {
                    12.457, 10.2557}, {13.232, 10.484699999999998`}, {12.739, 
                    11.123699999999998`}, {12.762, 11.932699999999999`}, {12.,
                     11.660699999999999`}, {11.238, 11.932699999999999`}, {
                    11.261, 11.123699999999998`}}, CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEqDg+4J69sKlRxmHNEYUORhqqDguPH5DN7VR1g
8lVLdZxluNUdDp5a6Lpts6rDDC2JqVcy1R08HlaJrGtXddDLW8y4R1XTwXLL
ibJ98uoOuUAua5EGVL+GQ8elew+4P2s6hDxeOvvIAw24vNu2z3+vVGg5LLhm
8t4CqN/BNG6Xp4+WA8g5gUDzIfp1HN7w7jOYyaXukGJ937/3uhaa+3Tg7ofp
B5rm6i6kAjcf6PrXj8KUHI55m3c6Au2PL/OXE+NShrsP5LzJnYoOa2SiUqyB
7ofYp+ywy5OHSRvoP5h+mP9h5qOHHwA2dXV1
                    "]}, 
                   CurveClosed -> {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                    0, 0, 0, 0, 0, 0, 1, 1, 1}]}, {
                  FaceForm[{
                    RGBColor[0.902, 0.902, 0.902], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                   0}, {1, 3, 3}, {1, 3, 3}}}, {{{21.959, 14.8984}, {20.057, 
                   14.281400000000001`}, {20.351, 13.3764}, {20.5, 12.4404}, {
                   20.5, 11.5004}, {20.5, 10.5594}, {20.351, 
                   9.624400000000001}, {20.057, 8.7184}, {21.959, 
                   8.101400000000002}, {22.317999999999998`, 
                   9.206400000000002}, {22.5, 10.3494}, {22.5, 11.5004}, {
                   22.5, 12.650400000000001`}, {22.317999999999998`, 
                   13.7944}, {21.959, 14.8984}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.9490000000000001, 0.9490000000000001, 
                    0.9490000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                   3}}}, {{{11.5, 22.5}, {11.5, 20.5}, {13.404, 20.5}, {
                   15.231, 19.903}, {16.783, 18.773}, {17.961, 20.391}, {
                   16.064, 21.771}, {13.83, 22.5}, {11.5, 22.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.929, 0.929, 0.929], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                   0}, {1, 3, 3}}}, {{{17.9609, 20.3906}, {17.9609, 
                   20.3906}, {16.782899999999998`, 18.7736}, {
                   18.337899999999998`, 17.6416}, {19.4699, 16.0876}, {
                   20.0569, 14.2816}, {21.9589, 14.898599999999998`}, {
                   21.2409, 17.1096}, {19.857899999999997`, 
                   19.008599999999998`}, {17.9609, 20.3906}}}]}, {
                  FaceForm[{
                    RGBColor[0.722, 0.722, 0.722], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                   3}}}, {{{6.2168, 4.2266}, {5.0388, 2.6096000000000004`}, {
                   6.9358, 1.2296000000000005`}, {9.1698, 
                   0.49960000000000004`}, {11.4998, 0.49960000000000004`}, {
                   11.4998, 2.4996000000000005`}, {9.5958, 
                   2.4996000000000005`}, {7.768800000000001, 
                   3.0966000000000005`}, {6.2168, 4.2266}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.7799999999999999, 0.7799999999999999, 
                    0.7799999999999999], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                   0}}}, {{{16.783199999999997`, 4.2266}, {
                   15.231199999999998`, 3.0966000000000005`}, {
                   13.404199999999998`, 2.4996000000000005`}, {
                   11.500199999999996`, 2.4996000000000005`}, {
                   11.500199999999996`, 0.49960000000000004`}, {
                   13.830199999999998`, 0.49960000000000004`}, {
                   16.064199999999996`, 1.2296000000000005`}, {
                   17.961199999999998`, 2.6096000000000004`}, {
                   16.783199999999997`, 4.2266}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.8510000000000001, 0.8510000000000001, 
                    0.8510000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                   0}}}, {{{20.0566, 8.718699999999998}, {19.4696, 
                   6.911699999999998}, {18.3376, 5.358699999999999}, {16.7836,
                    4.226699999999998}, {17.9606, 2.6096999999999984`}, {
                   19.8586, 3.9906999999999986`}, {21.2416, 
                   5.890699999999999}, {21.9586, 8.101699999999997}, {20.0566,
                    8.718699999999998}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.6749999999999999, 0.6749999999999999, 
                    0.6749999999999999], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                   3}}}, {{{2.9434, 8.718699999999998}, {1.0414, 
                   8.101699999999997}, {1.7584, 5.890699999999999}, {3.1414, 
                   3.9906999999999986`}, {5.0394, 2.6096999999999984`}, {
                   6.2164, 4.226699999999998}, {4.6624, 5.358699999999999}, {
                   3.5304, 6.911699999999998}, {2.9434, 
                   8.718699999999998}}}]}, {
                  FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                   3}}}, {{{6.2168, 18.7734}, {5.0388, 20.3904}, {6.9358, 
                   21.7704}, {9.1698, 22.5004}, {11.4998, 22.5004}, {11.4998, 
                   20.5004}, {9.5958, 20.5004}, {7.768800000000001, 
                   19.903399999999998`}, {6.2168, 18.7734}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.584, 0.584], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                   0}}}, {{{5.0391, 20.3906}, {3.1421, 19.008599999999998`}, {
                   1.7591, 17.1096}, {1.0411000000000006`, 
                   14.898599999999998`}, {2.9431000000000007`, 14.2816}, {
                   3.5301000000000005`, 16.0876}, {4.662100000000001, 
                   17.6416}, {6.2171, 18.7736}, {5.0391, 20.3906}}}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.631, 0.631], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}}}, {{{1.041, 14.8984}, {
                   0.6819999999999999, 13.7944}, {0.4999999999999999, 
                   12.650400000000001`}, {0.4999999999999999, 11.5004}, {
                   0.4999999999999999, 10.3494}, {0.6819999999999999, 
                   9.206400000000002}, {1.041, 8.101400000000002}, {
                   2.9429999999999996`, 8.7184}, {2.649, 9.624400000000001}, {
                   2.5, 10.5594}, {2.5, 11.5004}, {2.5, 12.4404}, {2.649, 
                   13.3764}, {2.9429999999999996`, 14.281400000000001`}, {
                   1.041, 14.8984}}}]}}, AspectRatio -> Automatic, 
                ImageSize -> {24., 24.}, PlotRange -> {{0., 24.}, {0., 24.}}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Task UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"bbc10d0f-c322-480d-9b24-b67c7b57c67d\"", 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Task environment: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["\"Session\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Task type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Scheduled\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Evaluation expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    RowBox[{"r$", "++"}], Short], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{
                 Thickness[0.041666666666666664`], {
                  FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5, 
                   15.5}, {9.501, 15.5}, {9.501, 16.5}, {6.5, 16.5}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5, 
                   5.5}, {9.501, 5.5}, {9.501, 6.5}, {6.5, 6.5}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5, 
                   13.5}, {9.501, 13.5}, {9.501, 14.5}, {6.5, 14.5}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5, 
                   11.5}, {9.501, 11.5}, {9.501, 12.5}, {6.5, 12.5}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5, 
                   9.5}, {9.501, 9.5}, {9.501, 10.5}, {6.5, 10.5}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5, 
                   7.5}, {9.501, 7.5}, {9.501, 8.5}, {6.5, 8.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 6.5}, {8.5, 6.5}, {
                   8.5, 15.5}, {15.5, 15.5}}, {{16.5, 16.5}, {7.5, 16.5}, {
                   7.5, 5.5}, {16.5, 5.5}}}]}, {
                  FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    15.5}, {8.5, 15.5}, {8.5, 6.5}, {15.5, 6.5}}}]}, {
                  RGBColor[0.392, 0.392, 0.392], 
                  Thickness[0.020833333333333332`], 
                  Opacity[1.], 
                  CapForm["Round"], 
                  JoinForm["Round"], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 
                    2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{10., 10.221699999999998`}, {10.768, 
                    10.484699999999998`}}, {{12.457, 10.2557}, {12., 
                    10.874699999999999`}}, {{11.543, 10.2557}, {12., 
                    10.874699999999999`}}, {{12., 10.874699999999999`}, {
                    11.261, 11.123699999999998`}}, {{12., 
                    10.874699999999999`}, {12.739, 11.123699999999998`}}, {{
                    12., 10.874699999999999`}, {12., 11.660699999999999`}}, {{
                    12.439, 12.222699999999998`}, {12., 
                    11.660699999999999`}}, {{12.739, 11.123699999999998`}, {
                    13.149000000000001`, 11.705699999999998`}}, {{12.762, 
                    11.932699999999999`}, {13.236, 12.572699999999998`}}, {{
                    13.421, 10.8707}, {12.739, 11.123699999999998`}}, {{14., 
                    10.221699999999998`}, {13.232, 10.484699999999998`}}, {{
                    13.149000000000001`, 10.035699999999999`}, {12.457, 
                    10.2557}}, {{12.437999999999999`, 9.519699999999998}, {
                    12.457, 10.2557}}, {{12., 8.768699999999999}, {12., 
                    9.5887}}, {{11.561, 9.520699999999998}, {11.543, 
                    10.2557}}, {{10.851, 10.035699999999999`}, {11.543, 
                    10.2557}}, {{11.261, 11.123699999999998`}, {10.579, 
                    10.8707}}, {{10.851, 11.706699999999998`}, {11.261, 
                    11.123699999999998`}}, {{10.765, 12.573699999999999`}, {
                    11.238, 11.932699999999999`}}, {{11.562, 
                    12.222699999999998`}, {12., 11.660699999999999`}}, {{12., 
                    10.874699999999999`}, {12., 10.874699999999999`}}, {{
                    11.261, 11.123699999999998`}, {10.768, 
                    10.484699999999998`}, {11.543, 10.2557}, {12., 9.5887}, {
                    12.457, 10.2557}, {13.232, 10.484699999999998`}, {12.739, 
                    11.123699999999998`}, {12.762, 11.932699999999999`}, {12.,
                     11.660699999999999`}, {11.238, 11.932699999999999`}, {
                    11.261, 11.123699999999998`}}, CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEqDg+4J69sKlRxmHNEYUORhqqDguPH5DN7VR1g
8lVLdZxluNUdDp5a6Lpts6rDDC2JqVcy1R08HlaJrGtXddDLW8y4R1XTwXLL
ibJ98uoOuUAua5EGVL+GQ8elew+4P2s6hDxeOvvIAw24vNu2z3+vVGg5LLhm
8t4CqN/BNG6Xp4+WA8g5gUDzIfp1HN7w7jOYyaXukGJ937/3uhaa+3Tg7ofp
B5rm6i6kAjcf6PrXj8KUHI55m3c6Au2PL/OXE+NShrsP5LzJnYoOa2SiUqyB
7ofYp+ywy5OHSRvoP5h+mP9h5qOHHwA2dXV1
                    "]}, 
                   CurveClosed -> {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                    0, 0, 0, 0, 0, 0, 1, 1, 1}]}, {
                  FaceForm[{
                    RGBColor[0.902, 0.902, 0.902], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                   0}, {1, 3, 3}, {1, 3, 3}}}, {{{21.959, 14.8984}, {20.057, 
                   14.281400000000001`}, {20.351, 13.3764}, {20.5, 12.4404}, {
                   20.5, 11.5004}, {20.5, 10.5594}, {20.351, 
                   9.624400000000001}, {20.057, 8.7184}, {21.959, 
                   8.101400000000002}, {22.317999999999998`, 
                   9.206400000000002}, {22.5, 10.3494}, {22.5, 11.5004}, {
                   22.5, 12.650400000000001`}, {22.317999999999998`, 
                   13.7944}, {21.959, 14.8984}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.9490000000000001, 0.9490000000000001, 
                    0.9490000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                   3}}}, {{{11.5, 22.5}, {11.5, 20.5}, {13.404, 20.5}, {
                   15.231, 19.903}, {16.783, 18.773}, {17.961, 20.391}, {
                   16.064, 21.771}, {13.83, 22.5}, {11.5, 22.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.929, 0.929, 0.929], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                   0}, {1, 3, 3}}}, {{{17.9609, 20.3906}, {17.9609, 
                   20.3906}, {16.782899999999998`, 18.7736}, {
                   18.337899999999998`, 17.6416}, {19.4699, 16.0876}, {
                   20.0569, 14.2816}, {21.9589, 14.898599999999998`}, {
                   21.2409, 17.1096}, {19.857899999999997`, 
                   19.008599999999998`}, {17.9609, 20.3906}}}]}, {
                  FaceForm[{
                    RGBColor[0.722, 0.722, 0.722], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                   3}}}, {{{6.2168, 4.2266}, {5.0388, 2.6096000000000004`}, {
                   6.9358, 1.2296000000000005`}, {9.1698, 
                   0.49960000000000004`}, {11.4998, 0.49960000000000004`}, {
                   11.4998, 2.4996000000000005`}, {9.5958, 
                   2.4996000000000005`}, {7.768800000000001, 
                   3.0966000000000005`}, {6.2168, 4.2266}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.7799999999999999, 0.7799999999999999, 
                    0.7799999999999999], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                   0}}}, {{{16.783199999999997`, 4.2266}, {
                   15.231199999999998`, 3.0966000000000005`}, {
                   13.404199999999998`, 2.4996000000000005`}, {
                   11.500199999999996`, 2.4996000000000005`}, {
                   11.500199999999996`, 0.49960000000000004`}, {
                   13.830199999999998`, 0.49960000000000004`}, {
                   16.064199999999996`, 1.2296000000000005`}, {
                   17.961199999999998`, 2.6096000000000004`}, {
                   16.783199999999997`, 4.2266}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.8510000000000001, 0.8510000000000001, 
                    0.8510000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                   0}}}, {{{20.0566, 8.718699999999998}, {19.4696, 
                   6.911699999999998}, {18.3376, 5.358699999999999}, {16.7836,
                    4.226699999999998}, {17.9606, 2.6096999999999984`}, {
                   19.8586, 3.9906999999999986`}, {21.2416, 
                   5.890699999999999}, {21.9586, 8.101699999999997}, {20.0566,
                    8.718699999999998}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.6749999999999999, 0.6749999999999999, 
                    0.6749999999999999], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                   3}}}, {{{2.9434, 8.718699999999998}, {1.0414, 
                   8.101699999999997}, {1.7584, 5.890699999999999}, {3.1414, 
                   3.9906999999999986`}, {5.0394, 2.6096999999999984`}, {
                   6.2164, 4.226699999999998}, {4.6624, 5.358699999999999}, {
                   3.5304, 6.911699999999998}, {2.9434, 
                   8.718699999999998}}}]}, {
                  FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                   3}}}, {{{6.2168, 18.7734}, {5.0388, 20.3904}, {6.9358, 
                   21.7704}, {9.1698, 22.5004}, {11.4998, 22.5004}, {11.4998, 
                   20.5004}, {9.5958, 20.5004}, {7.768800000000001, 
                   19.903399999999998`}, {6.2168, 18.7734}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.584, 0.584], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                   0}}}, {{{5.0391, 20.3906}, {3.1421, 19.008599999999998`}, {
                   1.7591, 17.1096}, {1.0411000000000006`, 
                   14.898599999999998`}, {2.9431000000000007`, 14.2816}, {
                   3.5301000000000005`, 16.0876}, {4.662100000000001, 
                   17.6416}, {6.2171, 18.7736}, {5.0391, 20.3906}}}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.631, 0.631], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}}}, {{{1.041, 14.8984}, {
                   0.6819999999999999, 13.7944}, {0.4999999999999999, 
                   12.650400000000001`}, {0.4999999999999999, 11.5004}, {
                   0.4999999999999999, 10.3494}, {0.6819999999999999, 
                   9.206400000000002}, {1.041, 8.101400000000002}, {
                   2.9429999999999996`, 8.7184}, {2.649, 9.624400000000001}, {
                   2.5, 10.5594}, {2.5, 11.5004}, {2.5, 12.4404}, {2.649, 
                   13.3764}, {2.9429999999999996`, 14.281400000000001`}, {
                   1.041, 14.8984}}}]}}, AspectRatio -> Automatic, 
                ImageSize -> {24., 24.}, PlotRange -> {{0., 24.}, {0., 24.}}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Task UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"bbc10d0f-c322-480d-9b24-b67c7b57c67d\"", 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Task environment: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["\"Session\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Task type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Scheduled\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Evaluation expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    RowBox[{"r$", "++"}], Short], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Run interval: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Total run count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["5", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "TaskObject[<|TaskUUID -> bbc10d0f-c322-480d-9b24-b67c7b57c67d, \
TaskEnvironment -> Session, TaskType -> Scheduled, <<3>>, \
HandlerFunctionsKeys -> {Task, TaskUUID, TaskType, TaskStatus, \
TaskEnvironment, HandlerFunctions, HandlerFunctionsKeys, EventName, \
EvaluationExpression, <<4>>, Rem<<11>>unt, NextScheduledTime, TotalRunCount, \
MessageOutput, PrintOutput}, AutoRemove -> True|>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.9049919524651203`*^9, {3.9049919832523193`*^9, 3.904992024950088*^9}, {
   3.904993404340272*^9, 3.904993433893775*^9}, 3.905012599094028*^9, 
   3.905022111444127*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"a1b06f62-c1be-4bda-b08f-75cdf52d9f93"]
}, Open  ]],

Cell[TextData[{
 "That task cleans itself up. If you evaluate the following cell quickly \
enough, while the ",
 StyleBox["Task", "Input"],
 " is running, you\[CloseCurlyQuote]ll see the task in some kind of waiting \
area inside ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ". If you evaluate the following cell after the ",
 StyleBox["Task", "Input"],
 " is finished, you\[CloseCurlyQuote]ll see an empty ",
 StyleBox["List", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.904993413514591*^9, 3.904993462024497*^9}, {
  3.904993559199511*^9, 3.904993620738752*^9}, {3.905012610803747*^9, 
  3.9050126183143873`*^9}},ExpressionUUID->"3f64207e-373a-4e2f-a889-\
d9995ca4c104"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tasks", "[", "]"}]], "Input",
 CellChangeTimes->{{3.9049919699680433`*^9, 3.904991972147355*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"78256a8a-5432-4655-96f4-ebaa3f5a4769"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{{3.904991972462823*^9, 3.904992035217807*^9}, {
   3.9049934371464663`*^9, 3.904993443129695*^9}, 3.90501264387036*^9, 
   3.9050221305342617`*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"74c615d3-0e77-4539-825c-160fbd86a315"]
}, Open  ]],

Cell[TextData[{
 "Observables must produce values every tick so we can subscribe query \
functions to them. Model observables as stateful thunks that produce new \
values every time they\[CloseCurlyQuote]re invoked, then invoke the thunks \
inside asynchronous ",
 StyleBox["Task", "Input"],
 "s that start when you subscribe. "
}], "Text",
 CellChangeTimes->{{3.637788536900779*^9, 3.6377885977946377`*^9}, {
   3.637788796688183*^9, 3.637788840047392*^9}, {3.637790121219719*^9, 
   3.637790211799202*^9}, {3.637790258217121*^9, 3.637790318629849*^9}, {
   3.637791411471024*^9, 3.637791432489225*^9}, {3.637798671905547*^9, 
   3.637798787089563*^9}, {3.637843687279511*^9, 3.6378436882065067`*^9}, {
   3.6378476095998297`*^9, 3.637847660564897*^9}, {3.637848146180646*^9, 
   3.6378481662806883`*^9}, {3.637868971258472*^9, 3.637869020926594*^9}, {
   3.637871161097465*^9, 3.6378711656916103`*^9}, {3.9049344959123907`*^9, 
   3.9049345045447197`*^9}, {3.9050126502148933`*^9, 3.905012671193974*^9}, 
   3.9050221388714037`*^9},ExpressionUUID->"9aff722a-0396-4e7c-8c3e-\
80634efc7bd5"],

Cell[TextData[{
 "Such tasks implement ",
 StyleBox["cold observables",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ", which don't produce values until subscribed. By contrast, ",
 StyleBox["hot observables",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " produce values whether subscribed or not, and you can subscribe and \
unsubscribe on-the-fly. We'll finesse those now because the purpose here is \
to show that ",
 StyleBox["subscribe", "Input"],
 " is almost the same as ",
 StyleBox["forEach", "Input"],
 ". Our purpose here is illustrative, not to produce a complete ",
 "Observable",
 " library (see ",
 ButtonBox["this book by Lee Campbell",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.introtorx.com/content/v1.0.10621.0/14_\
HotAndColdObservables.html"], None},
  ButtonNote->
   "http://www.introtorx.com/content/v1.0.10621.0/14_HotAndColdObservables.\
html"],
 " for much more)."
}], "Text",
 CellChangeTimes->{{3.637788536900779*^9, 3.6377885977946377`*^9}, {
   3.637788796688183*^9, 3.637788840047392*^9}, {3.637790121219719*^9, 
   3.637790211799202*^9}, {3.637790258217121*^9, 3.637790318629849*^9}, {
   3.637791411471024*^9, 3.637791432489225*^9}, {3.637798671905547*^9, 
   3.637798787089563*^9}, {3.637843687279511*^9, 3.6378436882065067`*^9}, {
   3.6378476095998297`*^9, 3.637847660564897*^9}, {3.637848146180646*^9, 
   3.637848152641562*^9}, {3.637869068942878*^9, 3.637869102761622*^9}, {
   3.6378712021958427`*^9, 3.6378712057630568`*^9}, {3.637874631819029*^9, 
   3.637874632924551*^9}, {3.904934519936592*^9, 3.904934543859181*^9}, {
   3.905012697161275*^9, 3.905012705812481*^9}, 
   3.9050221807257843`*^9},ExpressionUUID->"d9a3ea4b-f017-4b3f-b345-\
a89d9882aabb"],

Cell[CellGroupData[{

Cell["Fibonacci as an Observable", "Subsection",
 CellChangeTimes->{{3.637871245850829*^9, 3.637871252195717*^9}, {
  3.637872431596253*^9, 
  3.6378724350771437`*^9}},ExpressionUUID->"b8a7eae4-fa0b-4451-9e23-\
c52cf643af28"],

Cell[TextData[{
 "Here\[CloseCurlyQuote]s a factory for fibonacci observables. Call it, and \
you\[CloseCurlyQuote]ll get a function that you can apply to a ",
 StyleBox["List", "Input"],
 " to get a number of results equal to the ",
 StyleBox["Length", "Input"],
 " of the ",
 StyleBox["List", "Input"],
 ":"
}], "Text",
 CellChangeTimes->{{3.637791123863882*^9, 3.6377911373325977`*^9}, {
   3.637798800047492*^9, 3.637798803173482*^9}, {3.637871214544263*^9, 
   3.63787121875674*^9}, 3.904934554371738*^9, {3.904934652888928*^9, 
   3.90493473766663*^9}, {3.905022197784156*^9, 
   3.905022198334248*^9}},ExpressionUUID->"0cbfb604-bf8f-4ae1-b4a4-\
30e6bb264fc4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "fibonacciObservable", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fibonacciObservable", "[", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", "0"}], ",", 
      RowBox[{"b", "=", "1"}], ",", "oblFibs"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"oblFibs", "[", "]"}], ":=", "\[IndentingNewLine]", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"a$", "=", "a"}], ",", 
          RowBox[{"b$", "=", "b"}], ",", 
          RowBox[{"result", "=", 
           RowBox[{"{", 
            RowBox[{"a", ",", "b"}], "}"}]}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"a", "=", "b$"}], ";", "\[IndentingNewLine]", 
         RowBox[{"b", "=", 
          RowBox[{"a$", "+", "b$"}]}], ";", "\[IndentingNewLine]", 
         "result"}]}], "]"}]}], ";", "\[IndentingNewLine]", "oblFibs"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.6377888549484377`*^9, 3.637788885913525*^9}, {
  3.637788917470595*^9, 3.6377890731021843`*^9}, {3.637789144428309*^9, 
  3.637789151234927*^9}, {3.6377891967192*^9, 3.637789238311672*^9}, {
  3.637791549771318*^9, 3.637791558744795*^9}, {3.637871988040156*^9, 
  3.6378719925531597`*^9}, {3.637872022844261*^9, 3.63787202284869*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"9c9aff13-96af-40d5-811e-2470e5d8377e"],

Cell[TextData[{
 "Here we show 11 calls of ",
 StyleBox["oldFibs", "Input"],
 ", resulting in statefully updated values:"
}], "Text",
 CellChangeTimes->{{3.637798821490965*^9, 3.63779885584194*^9}, {
  3.9050128229195538`*^9, 
  3.9050128388314257`*^9}},ExpressionUUID->"1dc8d2c1-0259-448b-ba19-\
e0eb33cc81cb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"oblFibs", "=", 
   RowBox[{"fibonacciObservable", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"oblFibs", "[", "]"}], "&"}], "/@", 
  RowBox[{"Range", "[", "11", "]"}]}]}], "Input",
 CellChangeTimes->{{3.637789079820774*^9, 3.6377891647968073`*^9}, {
   3.6377892255777407`*^9, 3.637789228183281*^9}, {3.637789916811532*^9, 
   3.637789920044179*^9}, 3.63787202285362*^9},
 CellLabel->"In[71]:=",ExpressionUUID->"c2ceaf85-344c-4b69-a502-132aebd92d94"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"34", ",", "55"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"55", ",", "89"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.637789083121942*^9, {3.637789113417774*^9, 3.63778916543086*^9}, 
   3.6377892418526382`*^9, 3.6377915609221697`*^9, 3.6377988104983683`*^9, 
   3.637801354856666*^9, 3.637848069338964*^9, 3.637851821520671*^9, 
   3.63785219180365*^9, 3.637852462880783*^9, 3.637869113815981*^9, 
   3.637872031014983*^9, 3.90493474723006*^9, 3.904935177637722*^9, 
   3.905012802978086*^9, 3.905013075277296*^9, 3.9050222114882917`*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"d237b702-6f39-4544-8038-7f7e0fe1b402"]
}, Open  ]],

Cell[TextData[{
 "Of course, we\[CloseCurlyQuote]ve left garbage in the environment (e.g., \
local variables created by the ",
 StyleBox["Module", "Input"],
 "). But we\[CloseCurlyQuote]ll finesse that now, too. All we did was call ",
 StyleBox["oldFibs", "Input"],
 " 11 times. We only want the last 10 values, but we must also produce the \
original accumulation value, just as was automatically done with ",
 StyleBox["FoldList", "Input"],
 " and ",
 StyleBox["foldrStream", "Input"],
 ". We want all our folds to behave the same."
}], "Text",
 CellChangeTimes->{{3.637789944164209*^9, 3.637789986414467*^9}, {
   3.637790340811159*^9, 3.637790341305892*^9}, {3.637798863620234*^9, 
   3.637798864875637*^9}, {3.6378691254880447`*^9, 3.637869134450727*^9}, 
   3.637887185323498*^9, {3.9049347685010567`*^9, 3.9049347727203283`*^9}, {
   3.904934815411152*^9, 3.90493493767723*^9}, {3.9050128447118196`*^9, 
   3.905012900059698*^9}, {3.905014828628381*^9, 3.905014842630218*^9}, {
   3.905022219902423*^9, 
   3.905022222755129*^9}},ExpressionUUID->"0cc6f2af-e587-4bb0-9c6d-\
0a3fd140e2b5"],

Cell["Watch this until it stops changing:", "Text",
 CellChangeTimes->{{3.637869145543373*^9, 3.63786918170571*^9}, {
  3.9049349413902884`*^9, 3.904934943711172*^9}, {3.9050148702399*^9, 
  3.9050148747445917`*^9}},ExpressionUUID->"bda8714c-dd58-4645-8c3a-\
75f9b99cb19b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r$", "=", "0"}], ";", 
  RowBox[{"Dynamic", "[", "r$", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"oldFibs", "=", 
      RowBox[{"fibonacciObservable", "[", "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"SessionSubmit", "[", 
     RowBox[{"ScheduledTask", "[", 
      RowBox[{
       RowBox[{"r$", "=", 
        RowBox[{"oldFibs", "[", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Quantity", "[", 
          RowBox[{"1", ",", "\"\<Seconds\>\""}], "]"}], ",", "11"}], "}"}]}], 
      "]"}], "]"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.637789672090919*^9, 3.63778974130816*^9}, 
   3.637872022864002*^9, {3.9050129330768347`*^9, 3.905013000546258*^9}, {
   3.9050130850592127`*^9, 3.905013157160582*^9}, {3.905015503877693*^9, 
   3.905015505904291*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"16265688-c451-48dd-a5a9-81a9ac740175"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`r$, StandardForm],
  ImageSizeCache->{89., {4.1535, 12.675}}]], "Output",
 CellChangeTimes->{{3.637789730827615*^9, 3.637789742214958*^9}, 
   3.637790000510538*^9, 3.6377915651968822`*^9, 3.637798871554902*^9, 
   3.637801354921172*^9, 3.637848069358056*^9, 3.63785182156618*^9, 
   3.6378521918574142`*^9, 3.6378524629266644`*^9, 3.6378691367857723`*^9, 
   3.637869185417296*^9, 3.637872036081676*^9, 3.904934947264483*^9, 
   3.9049351097459373`*^9, 3.9050130101385593`*^9, 3.905013045230845*^9, {
   3.905013091253274*^9, 3.9050131020944557`*^9}, {3.9050131342327347`*^9, 
   3.905013158555231*^9}, 3.905014877821406*^9, 3.905015360332378*^9, 
   3.905015508336381*^9, 3.9050222384375753`*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"ab8ca073-c1bf-425a-bc05-6851ca60da80"]
}, Open  ]],

Cell["Catch it in time, or not; this shows tasks-in-progress:", "Text",
 CellChangeTimes->{{3.905013175929153*^9, 3.905013185616928*^9}, {
  3.905014895682335*^9, 
  3.9050149111181297`*^9}},ExpressionUUID->"fa495c51-4093-46cc-bf9a-\
f78613ed5fa8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tasks", "[", "]"}]], "Input",
 CellChangeTimes->{{3.905013026412155*^9, 3.9050130366287413`*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"6fde25a0-1489-4849-8716-e49d0f34ef53"],

Cell[BoxData[
 RowBox[{"{", 
  TagBox[
   TemplateBox[{
     RowBox[{
       StyleBox[
        TagBox["TaskObject", "SummaryHead"], "NonInterpretableSummary"], 
       StyleBox["[", "NonInterpretableSummary"], 
       DynamicModuleBox[{
        Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxOpener"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{
                  Thickness[0.041666666666666664`], {
                   FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     15.5}, {9.501, 15.5}, {9.501, 16.5}, {6.5, 16.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     5.5}, {9.501, 5.5}, {9.501, 6.5}, {6.5, 6.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     13.5}, {9.501, 13.5}, {9.501, 14.5}, {6.5, 14.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     11.5}, {9.501, 11.5}, {9.501, 12.5}, {6.5, 12.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     9.5}, {9.501, 9.5}, {9.501, 10.5}, {6.5, 10.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     7.5}, {9.501, 7.5}, {9.501, 8.5}, {6.5, 8.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 6.5}, {8.5, 6.5}, {
                    8.5, 15.5}, {15.5, 15.5}}, {{16.5, 16.5}, {7.5, 16.5}, {
                    7.5, 5.5}, {16.5, 5.5}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 15.5}, {8.5, 15.5}, {8.5, 6.5}, {15.5, 6.5}}}]}, {
                   RGBColor[0.392, 0.392, 0.392], 
                   Thickness[0.020833333333333332`], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0,
                     2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{10., 10.221699999999998`}, {10.768, 
                    10.484699999999998`}}, {{12.457, 10.2557}, {12., 
                    10.874699999999999`}}, {{11.543, 10.2557}, {12., 
                    10.874699999999999`}}, {{12., 10.874699999999999`}, {
                    11.261, 11.123699999999998`}}, {{12., 
                    10.874699999999999`}, {12.739, 11.123699999999998`}}, {{
                    12., 10.874699999999999`}, {12., 11.660699999999999`}}, {{
                    12.439, 12.222699999999998`}, {12., 
                    11.660699999999999`}}, {{12.739, 11.123699999999998`}, {
                    13.149000000000001`, 11.705699999999998`}}, {{12.762, 
                    11.932699999999999`}, {13.236, 12.572699999999998`}}, {{
                    13.421, 10.8707}, {12.739, 11.123699999999998`}}, {{14., 
                    10.221699999999998`}, {13.232, 10.484699999999998`}}, {{
                    13.149000000000001`, 10.035699999999999`}, {12.457, 
                    10.2557}}, {{12.437999999999999`, 9.519699999999998}, {
                    12.457, 10.2557}}, {{12., 8.768699999999999}, {12., 
                    9.5887}}, {{11.561, 9.520699999999998}, {11.543, 
                    10.2557}}, {{10.851, 10.035699999999999`}, {11.543, 
                    10.2557}}, {{11.261, 11.123699999999998`}, {10.579, 
                    10.8707}}, {{10.851, 11.706699999999998`}, {11.261, 
                    11.123699999999998`}}, {{10.765, 12.573699999999999`}, {
                    11.238, 11.932699999999999`}}, {{11.562, 
                    12.222699999999998`}, {12., 11.660699999999999`}}, {{12., 
                    10.874699999999999`}, {12., 10.874699999999999`}}, {{
                    11.261, 11.123699999999998`}, {10.768, 
                    10.484699999999998`}, {11.543, 10.2557}, {12., 9.5887}, {
                    12.457, 10.2557}, {13.232, 10.484699999999998`}, {12.739, 
                    11.123699999999998`}, {12.762, 11.932699999999999`}, {12.,
                     11.660699999999999`}, {11.238, 11.932699999999999`}, {
                    11.261, 11.123699999999998`}}, CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEqDg+4J69sKlRxmHNEYUORhqqDguPH5DN7VR1g
8lVLdZxluNUdDp5a6Lpts6rDDC2JqVcy1R08HlaJrGtXddDLW8y4R1XTwXLL
ibJ98uoOuUAua5EGVL+GQ8elew+4P2s6hDxeOvvIAw24vNu2z3+vVGg5LLhm
8t4CqN/BNG6Xp4+WA8g5gUDzIfp1HN7w7jOYyaXukGJ937/3uhaa+3Tg7ofp
B5rm6i6kAjcf6PrXj8KUHI55m3c6Au2PL/OXE+NShrsP5LzJnYoOa2SiUqyB
7ofYp+ywy5OHSRvoP5h+mP9h5qOHHwA2dXV1
                    "]}, 
                    CurveClosed -> {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                    0, 0, 0, 0, 0, 0, 1, 1, 1}]}, {
                   FaceForm[{
                    RGBColor[0.902, 0.902, 0.902], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}}, {{{21.959, 14.8984}, {20.057, 
                    14.281400000000001`}, {20.351, 13.3764}, {20.5, 
                    12.4404}, {20.5, 11.5004}, {20.5, 10.5594}, {20.351, 
                    9.624400000000001}, {20.057, 8.7184}, {21.959, 
                    8.101400000000002}, {22.317999999999998`, 
                    9.206400000000002}, {22.5, 10.3494}, {22.5, 11.5004}, {
                    22.5, 12.650400000000001`}, {22.317999999999998`, 
                    13.7944}, {21.959, 14.8984}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.9490000000000001, 0.9490000000000001, 
                    0.9490000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{11.5, 22.5}, {11.5, 20.5}, {13.404, 20.5}, {
                    15.231, 19.903}, {16.783, 18.773}, {17.961, 20.391}, {
                    16.064, 21.771}, {13.83, 22.5}, {11.5, 22.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.929, 0.929, 0.929], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{17.9609, 20.3906}, {17.9609, 
                    20.3906}, {16.782899999999998`, 18.7736}, {
                    18.337899999999998`, 17.6416}, {19.4699, 16.0876}, {
                    20.0569, 14.2816}, {21.9589, 14.898599999999998`}, {
                    21.2409, 17.1096}, {19.857899999999997`, 
                    19.008599999999998`}, {17.9609, 20.3906}}}]}, {
                   FaceForm[{
                    RGBColor[0.722, 0.722, 0.722], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 4.2266}, {5.0388, 2.6096000000000004`}, {
                    6.9358, 1.2296000000000005`}, {9.1698, 
                    0.49960000000000004`}, {11.4998, 0.49960000000000004`}, {
                    11.4998, 2.4996000000000005`}, {9.5958, 
                    2.4996000000000005`}, {7.768800000000001, 
                    3.0966000000000005`}, {6.2168, 4.2266}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.7799999999999999, 0.7799999999999999, 
                    0.7799999999999999], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{16.783199999999997`, 4.2266}, {
                    15.231199999999998`, 3.0966000000000005`}, {
                    13.404199999999998`, 2.4996000000000005`}, {
                    11.500199999999996`, 2.4996000000000005`}, {
                    11.500199999999996`, 0.49960000000000004`}, {
                    13.830199999999998`, 0.49960000000000004`}, {
                    16.064199999999996`, 1.2296000000000005`}, {
                    17.961199999999998`, 2.6096000000000004`}, {
                    16.783199999999997`, 4.2266}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.8510000000000001, 0.8510000000000001, 
                    0.8510000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{20.0566, 8.718699999999998}, {19.4696, 
                    6.911699999999998}, {18.3376, 5.358699999999999}, {
                    16.7836, 4.226699999999998}, {17.9606, 
                    2.6096999999999984`}, {19.8586, 3.9906999999999986`}, {
                    21.2416, 5.890699999999999}, {21.9586, 
                    8.101699999999997}, {20.0566, 8.718699999999998}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.6749999999999999, 0.6749999999999999, 
                    0.6749999999999999], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{2.9434, 8.718699999999998}, {1.0414, 
                    8.101699999999997}, {1.7584, 5.890699999999999}, {3.1414, 
                    3.9906999999999986`}, {5.0394, 2.6096999999999984`}, {
                    6.2164, 4.226699999999998}, {4.6624, 5.358699999999999}, {
                    3.5304, 6.911699999999998}, {2.9434, 
                    8.718699999999998}}}]}, {
                   FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 18.7734}, {5.0388, 20.3904}, {6.9358, 
                    21.7704}, {9.1698, 22.5004}, {11.4998, 22.5004}, {11.4998,
                     20.5004}, {9.5958, 20.5004}, {7.768800000000001, 
                    19.903399999999998`}, {6.2168, 18.7734}}}]}, {
                   FaceForm[{
                    RGBColor[0.584, 0.584, 0.584], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{5.0391, 20.3906}, {3.1421, 
                    19.008599999999998`}, {1.7591, 17.1096}, {
                    1.0411000000000006`, 14.898599999999998`}, {
                    2.9431000000000007`, 14.2816}, {3.5301000000000005`, 
                    16.0876}, {4.662100000000001, 17.6416}, {6.2171, 
                    18.7736}, {5.0391, 20.3906}}}]}, {
                   FaceForm[{
                    RGBColor[0.631, 0.631, 0.631], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, {{{1.041, 14.8984}, {
                    0.6819999999999999, 13.7944}, {0.4999999999999999, 
                    12.650400000000001`}, {0.4999999999999999, 11.5004}, {
                    0.4999999999999999, 10.3494}, {0.6819999999999999, 
                    9.206400000000002}, {1.041, 8.101400000000002}, {
                    2.9429999999999996`, 8.7184}, {2.649, 
                    9.624400000000001}, {2.5, 10.5594}, {2.5, 11.5004}, {2.5, 
                    12.4404}, {2.649, 13.3764}, {2.9429999999999996`, 
                    14.281400000000001`}, {1.041, 14.8984}}}]}}, AspectRatio -> 
                 Automatic, ImageSize -> {24., 24.}, 
                 PlotRange -> {{0., 24.}, {0., 24.}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Task UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"cbdbbb54-7325-4816-8b41-f2f371f9bb8d\"", 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Task environment: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["\"Session\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Task type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Scheduled\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Evaluation expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    RowBox[{"r$", "=", 
                    RowBox[{"oldFibs$21272", "[", "]"}]}], Short], 
                    "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxCloser"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{
                  Thickness[0.041666666666666664`], {
                   FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     15.5}, {9.501, 15.5}, {9.501, 16.5}, {6.5, 16.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     5.5}, {9.501, 5.5}, {9.501, 6.5}, {6.5, 6.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     13.5}, {9.501, 13.5}, {9.501, 14.5}, {6.5, 14.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     11.5}, {9.501, 11.5}, {9.501, 12.5}, {6.5, 12.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     9.5}, {9.501, 9.5}, {9.501, 10.5}, {6.5, 10.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     7.5}, {9.501, 7.5}, {9.501, 8.5}, {6.5, 8.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 6.5}, {8.5, 6.5}, {
                    8.5, 15.5}, {15.5, 15.5}}, {{16.5, 16.5}, {7.5, 16.5}, {
                    7.5, 5.5}, {16.5, 5.5}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 15.5}, {8.5, 15.5}, {8.5, 6.5}, {15.5, 6.5}}}]}, {
                   RGBColor[0.392, 0.392, 0.392], 
                   Thickness[0.020833333333333332`], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0,
                     2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{10., 10.221699999999998`}, {10.768, 
                    10.484699999999998`}}, {{12.457, 10.2557}, {12., 
                    10.874699999999999`}}, {{11.543, 10.2557}, {12., 
                    10.874699999999999`}}, {{12., 10.874699999999999`}, {
                    11.261, 11.123699999999998`}}, {{12., 
                    10.874699999999999`}, {12.739, 11.123699999999998`}}, {{
                    12., 10.874699999999999`}, {12., 11.660699999999999`}}, {{
                    12.439, 12.222699999999998`}, {12., 
                    11.660699999999999`}}, {{12.739, 11.123699999999998`}, {
                    13.149000000000001`, 11.705699999999998`}}, {{12.762, 
                    11.932699999999999`}, {13.236, 12.572699999999998`}}, {{
                    13.421, 10.8707}, {12.739, 11.123699999999998`}}, {{14., 
                    10.221699999999998`}, {13.232, 10.484699999999998`}}, {{
                    13.149000000000001`, 10.035699999999999`}, {12.457, 
                    10.2557}}, {{12.437999999999999`, 9.519699999999998}, {
                    12.457, 10.2557}}, {{12., 8.768699999999999}, {12., 
                    9.5887}}, {{11.561, 9.520699999999998}, {11.543, 
                    10.2557}}, {{10.851, 10.035699999999999`}, {11.543, 
                    10.2557}}, {{11.261, 11.123699999999998`}, {10.579, 
                    10.8707}}, {{10.851, 11.706699999999998`}, {11.261, 
                    11.123699999999998`}}, {{10.765, 12.573699999999999`}, {
                    11.238, 11.932699999999999`}}, {{11.562, 
                    12.222699999999998`}, {12., 11.660699999999999`}}, {{12., 
                    10.874699999999999`}, {12., 10.874699999999999`}}, {{
                    11.261, 11.123699999999998`}, {10.768, 
                    10.484699999999998`}, {11.543, 10.2557}, {12., 9.5887}, {
                    12.457, 10.2557}, {13.232, 10.484699999999998`}, {12.739, 
                    11.123699999999998`}, {12.762, 11.932699999999999`}, {12.,
                     11.660699999999999`}, {11.238, 11.932699999999999`}, {
                    11.261, 11.123699999999998`}}, CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEqDg+4J69sKlRxmHNEYUORhqqDguPH5DN7VR1g
8lVLdZxluNUdDp5a6Lpts6rDDC2JqVcy1R08HlaJrGtXddDLW8y4R1XTwXLL
ibJ98uoOuUAua5EGVL+GQ8elew+4P2s6hDxeOvvIAw24vNu2z3+vVGg5LLhm
8t4CqN/BNG6Xp4+WA8g5gUDzIfp1HN7w7jOYyaXukGJ937/3uhaa+3Tg7ofp
B5rm6i6kAjcf6PrXj8KUHI55m3c6Au2PL/OXE+NShrsP5LzJnYoOa2SiUqyB
7ofYp+ywy5OHSRvoP5h+mP9h5qOHHwA2dXV1
                    "]}, 
                    CurveClosed -> {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                    0, 0, 0, 0, 0, 0, 1, 1, 1}]}, {
                   FaceForm[{
                    RGBColor[0.902, 0.902, 0.902], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}}, {{{21.959, 14.8984}, {20.057, 
                    14.281400000000001`}, {20.351, 13.3764}, {20.5, 
                    12.4404}, {20.5, 11.5004}, {20.5, 10.5594}, {20.351, 
                    9.624400000000001}, {20.057, 8.7184}, {21.959, 
                    8.101400000000002}, {22.317999999999998`, 
                    9.206400000000002}, {22.5, 10.3494}, {22.5, 11.5004}, {
                    22.5, 12.650400000000001`}, {22.317999999999998`, 
                    13.7944}, {21.959, 14.8984}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.9490000000000001, 0.9490000000000001, 
                    0.9490000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{11.5, 22.5}, {11.5, 20.5}, {13.404, 20.5}, {
                    15.231, 19.903}, {16.783, 18.773}, {17.961, 20.391}, {
                    16.064, 21.771}, {13.83, 22.5}, {11.5, 22.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.929, 0.929, 0.929], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{17.9609, 20.3906}, {17.9609, 
                    20.3906}, {16.782899999999998`, 18.7736}, {
                    18.337899999999998`, 17.6416}, {19.4699, 16.0876}, {
                    20.0569, 14.2816}, {21.9589, 14.898599999999998`}, {
                    21.2409, 17.1096}, {19.857899999999997`, 
                    19.008599999999998`}, {17.9609, 20.3906}}}]}, {
                   FaceForm[{
                    RGBColor[0.722, 0.722, 0.722], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 4.2266}, {5.0388, 2.6096000000000004`}, {
                    6.9358, 1.2296000000000005`}, {9.1698, 
                    0.49960000000000004`}, {11.4998, 0.49960000000000004`}, {
                    11.4998, 2.4996000000000005`}, {9.5958, 
                    2.4996000000000005`}, {7.768800000000001, 
                    3.0966000000000005`}, {6.2168, 4.2266}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.7799999999999999, 0.7799999999999999, 
                    0.7799999999999999], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{16.783199999999997`, 4.2266}, {
                    15.231199999999998`, 3.0966000000000005`}, {
                    13.404199999999998`, 2.4996000000000005`}, {
                    11.500199999999996`, 2.4996000000000005`}, {
                    11.500199999999996`, 0.49960000000000004`}, {
                    13.830199999999998`, 0.49960000000000004`}, {
                    16.064199999999996`, 1.2296000000000005`}, {
                    17.961199999999998`, 2.6096000000000004`}, {
                    16.783199999999997`, 4.2266}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.8510000000000001, 0.8510000000000001, 
                    0.8510000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{20.0566, 8.718699999999998}, {19.4696, 
                    6.911699999999998}, {18.3376, 5.358699999999999}, {
                    16.7836, 4.226699999999998}, {17.9606, 
                    2.6096999999999984`}, {19.8586, 3.9906999999999986`}, {
                    21.2416, 5.890699999999999}, {21.9586, 
                    8.101699999999997}, {20.0566, 8.718699999999998}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.6749999999999999, 0.6749999999999999, 
                    0.6749999999999999], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{2.9434, 8.718699999999998}, {1.0414, 
                    8.101699999999997}, {1.7584, 5.890699999999999}, {3.1414, 
                    3.9906999999999986`}, {5.0394, 2.6096999999999984`}, {
                    6.2164, 4.226699999999998}, {4.6624, 5.358699999999999}, {
                    3.5304, 6.911699999999998}, {2.9434, 
                    8.718699999999998}}}]}, {
                   FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 18.7734}, {5.0388, 20.3904}, {6.9358, 
                    21.7704}, {9.1698, 22.5004}, {11.4998, 22.5004}, {11.4998,
                     20.5004}, {9.5958, 20.5004}, {7.768800000000001, 
                    19.903399999999998`}, {6.2168, 18.7734}}}]}, {
                   FaceForm[{
                    RGBColor[0.584, 0.584, 0.584], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{5.0391, 20.3906}, {3.1421, 
                    19.008599999999998`}, {1.7591, 17.1096}, {
                    1.0411000000000006`, 14.898599999999998`}, {
                    2.9431000000000007`, 14.2816}, {3.5301000000000005`, 
                    16.0876}, {4.662100000000001, 17.6416}, {6.2171, 
                    18.7736}, {5.0391, 20.3906}}}]}, {
                   FaceForm[{
                    RGBColor[0.631, 0.631, 0.631], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, {{{1.041, 14.8984}, {
                    0.6819999999999999, 13.7944}, {0.4999999999999999, 
                    12.650400000000001`}, {0.4999999999999999, 11.5004}, {
                    0.4999999999999999, 10.3494}, {0.6819999999999999, 
                    9.206400000000002}, {1.041, 8.101400000000002}, {
                    2.9429999999999996`, 8.7184}, {2.649, 
                    9.624400000000001}, {2.5, 10.5594}, {2.5, 11.5004}, {2.5, 
                    12.4404}, {2.649, 13.3764}, {2.9429999999999996`, 
                    14.281400000000001`}, {1.041, 14.8984}}}]}}, AspectRatio -> 
                 Automatic, ImageSize -> {24., 24.}, 
                 PlotRange -> {{0., 24.}, {0., 24.}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Task UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"cbdbbb54-7325-4816-8b41-f2f371f9bb8d\"", 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Task environment: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["\"Session\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Task type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Scheduled\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Evaluation expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    RowBox[{"r$", "=", 
                    RowBox[{"oldFibs$21272", "[", "]"}]}], Short], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Run interval: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Total run count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["11", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"],
         DynamicModuleValues :> {}], 
       StyleBox["]", "NonInterpretableSummary"]}]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->(
     "TaskObject[<|TaskUUID -> cbdbbb54-7325-4816-8b41-f2f371f9bb8d, \
TaskEnvironment -> Session, TaskType -> Scheduled, <<3>>, \
HandlerFunctionsKeys -> {Task, TaskUUID, TaskType, TaskStatus, \
TaskEnvironment, HandlerFunctions, HandlerFunctionsKeys, EventName, \
EvaluationExpression, <<4>>, Rem<<11>>unt, NextScheduledTime, TotalRunCount, \
MessageOutput, PrintOutput}, AutoRemove -> True|>]"& )],
   False,
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "}"}]], "Output",
 CellChangeTimes->{{3.905013037228982*^9, 3.905013057881164*^9}, 
   3.905013162021709*^9, {3.9050148887651*^9, 3.905014892548099*^9}, 
   3.905015376393972*^9, 3.90501552325008*^9, 3.905022241339356*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"73a2a7aa-0281-4e76-b898-24d11e1a653a"]
}, Open  ]],

Cell[TextData[{
 "Just as we ",
 StyleBox["forEach", "Input"],
 " a unary query over a synchronous ",
 StyleBox["List", "Input"],
 " or stream, we ",
 StyleBox["subscribe", "Input"],
 " a unary query to an observable. Such queries are also called ",
 StyleBox["observers",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ", but they\[CloseCurlyQuote]re just ordinary unary functions."
}], "Text",
 CellChangeTimes->{{3.637790789527722*^9, 3.637790884593864*^9}, {
  3.637790930852335*^9, 3.637790935724399*^9}, {3.6377988999266987`*^9, 
  3.637798906789678*^9}, {3.6378691966918507`*^9, 3.6378691989451523`*^9}, {
  3.6378692634531317`*^9, 3.637869284836887*^9}, {3.905014923478466*^9, 
  3.905015010705225*^9}, {3.9050222625057297`*^9, 
  3.9050222738156033`*^9}},ExpressionUUID->"8b80d01b-89db-46ac-aa71-\
d99b7fe500b3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["subscribe :: Observable \[LongRightArrow] unaryQueryFunction \
\[LongRightArrow] Null", "Subsection",
 CellChangeTimes->{{3.637870274221303*^9, 3.6378702994992743`*^9}, {
  3.904934987460487*^9, 3.90493498934823*^9}, {3.905015015991625*^9, 
  3.905015019946765*^9}},ExpressionUUID->"f96e4621-eba9-46dc-b44c-\
a0ca77809771"],

Cell[TextData[{
 "We emphasize: ",
 StyleBox["the syntax and semantics of ",
  FontWeight->"Bold"],
 StyleBox["forEach", "Input",
  FontWeight->"Bold"],
 StyleBox[" and ",
  FontWeight->"Bold"],
 StyleBox["subscribe", "Input",
  FontWeight->"Bold"],
 StyleBox[" are virtually identical",
  FontWeight->"Bold"],
 ":"
}], "Text",
 CellChangeTimes->{{3.637798923914926*^9, 
  3.637798952334797*^9}},ExpressionUUID->"353a304f-fca9-4303-bd50-\
3a5e70306cd6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "subscribe", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"subscribe", "[", 
   RowBox[{"observable_", ",", "observer_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"SessionSubmit", "[", "\[IndentingNewLine]", 
    RowBox[{"ScheduledTask", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"observer", "[", 
       RowBox[{"observable", "[", "]"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Quantity", "[", 
       RowBox[{"1", ",", "\"\<Seconds\>\""}], "]"}]}], "]"}], "]"}], 
   ";;"}]}]}], "Input",
 CellChangeTimes->{{3.637785298573759*^9, 3.637785354105178*^9}, {
  3.6377853937520237`*^9, 3.6377854405246058`*^9}, {3.637785872062255*^9, 
  3.637785876332829*^9}, {3.637785947498212*^9, 3.637786001634392*^9}, {
  3.637786165627861*^9, 3.637786166929821*^9}, {3.637787536850206*^9, 
  3.637787568149499*^9}, {3.637788469036214*^9, 3.637788479469718*^9}, {
  3.637790368372295*^9, 3.637790394450385*^9}, {3.637790765486842*^9, 
  3.637790782138386*^9}, {3.637790894273929*^9, 3.6377909037468567`*^9}, {
  3.6378703188286343`*^9, 3.637870324630939*^9}, {3.90501504556045*^9, 
  3.9050150737737083`*^9}, {3.905015111468948*^9, 3.9050151910819273`*^9}, {
  3.905015231551776*^9, 3.9050152352343817`*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"4f29620d-7d67-4ee2-ae34-70f6e5c4a19f"],

Cell["\<\
Watch this until you get tired (it\[CloseCurlyQuote]s infinite), then clean \
it up:\
\>", "Text",
 CellChangeTimes->{{3.6378693060173273`*^9, 3.637869322888865*^9}, {
   3.9049350481687927`*^9, 3.904935064741713*^9}, 
   3.9050155408569403`*^9},ExpressionUUID->"0a923628-f438-460b-b5d4-\
881e8a92f27a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r$", "=", "0"}], ";", 
  RowBox[{"Dynamic", "[", "r$", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"subscribe", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"fibonacciObservable", "[", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"v", "\[Function]", 
    RowBox[{"(", 
     RowBox[{"r$", "=", "v"}], ")"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6377904038475323`*^9, 3.637790451334074*^9}, 
   3.637790739929761*^9, {3.637798992092298*^9, 3.637798997725361*^9}, 
   3.63787033018408*^9, 3.637872022873418*^9, {3.905015447791555*^9, 
   3.905015455767411*^9}, {3.9050155496162643`*^9, 3.905015552814652*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"94156bce-fac0-4e5f-b279-c655911d4df7"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`r$, StandardForm],
  ImageSizeCache->{89., {4.1535, 12.675}}]], "Output",
 CellChangeTimes->{
  3.637798999757491*^9, 3.637801355026225*^9, 3.637848069400334*^9, 
   3.6378518216282053`*^9, 3.637852191923661*^9, 3.63785246301192*^9, 
   3.637869295355239*^9, 3.637870332106168*^9, 3.9049350700917273`*^9, 
   3.905015082120227*^9, {3.905015175984808*^9, 3.905015194417995*^9}, 
   3.905015239782075*^9, 3.9050154565916567`*^9, 3.905015553753521*^9, 
   3.905022293362887*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"9f0ee55e-1641-46d9-bb21-a15cf3c2135e"],

Cell[BoxData[
 RowBox[{
  TagBox[
   TemplateBox[{
     RowBox[{
       StyleBox[
        TagBox["TaskObject", "SummaryHead"], "NonInterpretableSummary"], 
       StyleBox["[", "NonInterpretableSummary"], 
       DynamicModuleBox[{
        Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxOpener"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{
                  Thickness[0.041666666666666664`], {
                   FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     15.5}, {9.501, 15.5}, {9.501, 16.5}, {6.5, 16.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     5.5}, {9.501, 5.5}, {9.501, 6.5}, {6.5, 6.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     13.5}, {9.501, 13.5}, {9.501, 14.5}, {6.5, 14.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     11.5}, {9.501, 11.5}, {9.501, 12.5}, {6.5, 12.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     9.5}, {9.501, 9.5}, {9.501, 10.5}, {6.5, 10.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     7.5}, {9.501, 7.5}, {9.501, 8.5}, {6.5, 8.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 6.5}, {8.5, 6.5}, {
                    8.5, 15.5}, {15.5, 15.5}}, {{16.5, 16.5}, {7.5, 16.5}, {
                    7.5, 5.5}, {16.5, 5.5}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 15.5}, {8.5, 15.5}, {8.5, 6.5}, {15.5, 6.5}}}]}, {
                   RGBColor[0.392, 0.392, 0.392], 
                   Thickness[0.020833333333333332`], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0,
                     2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{10., 10.221699999999998`}, {10.768, 
                    10.484699999999998`}}, {{12.457, 10.2557}, {12., 
                    10.874699999999999`}}, {{11.543, 10.2557}, {12., 
                    10.874699999999999`}}, {{12., 10.874699999999999`}, {
                    11.261, 11.123699999999998`}}, {{12., 
                    10.874699999999999`}, {12.739, 11.123699999999998`}}, {{
                    12., 10.874699999999999`}, {12., 11.660699999999999`}}, {{
                    12.439, 12.222699999999998`}, {12., 
                    11.660699999999999`}}, {{12.739, 11.123699999999998`}, {
                    13.149000000000001`, 11.705699999999998`}}, {{12.762, 
                    11.932699999999999`}, {13.236, 12.572699999999998`}}, {{
                    13.421, 10.8707}, {12.739, 11.123699999999998`}}, {{14., 
                    10.221699999999998`}, {13.232, 10.484699999999998`}}, {{
                    13.149000000000001`, 10.035699999999999`}, {12.457, 
                    10.2557}}, {{12.437999999999999`, 9.519699999999998}, {
                    12.457, 10.2557}}, {{12., 8.768699999999999}, {12., 
                    9.5887}}, {{11.561, 9.520699999999998}, {11.543, 
                    10.2557}}, {{10.851, 10.035699999999999`}, {11.543, 
                    10.2557}}, {{11.261, 11.123699999999998`}, {10.579, 
                    10.8707}}, {{10.851, 11.706699999999998`}, {11.261, 
                    11.123699999999998`}}, {{10.765, 12.573699999999999`}, {
                    11.238, 11.932699999999999`}}, {{11.562, 
                    12.222699999999998`}, {12., 11.660699999999999`}}, {{12., 
                    10.874699999999999`}, {12., 10.874699999999999`}}, {{
                    11.261, 11.123699999999998`}, {10.768, 
                    10.484699999999998`}, {11.543, 10.2557}, {12., 9.5887}, {
                    12.457, 10.2557}, {13.232, 10.484699999999998`}, {12.739, 
                    11.123699999999998`}, {12.762, 11.932699999999999`}, {12.,
                     11.660699999999999`}, {11.238, 11.932699999999999`}, {
                    11.261, 11.123699999999998`}}, CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEqDg+4J69sKlRxmHNEYUORhqqDguPH5DN7VR1g
8lVLdZxluNUdDp5a6Lpts6rDDC2JqVcy1R08HlaJrGtXddDLW8y4R1XTwXLL
ibJ98uoOuUAua5EGVL+GQ8elew+4P2s6hDxeOvvIAw24vNu2z3+vVGg5LLhm
8t4CqN/BNG6Xp4+WA8g5gUDzIfp1HN7w7jOYyaXukGJ937/3uhaa+3Tg7ofp
B5rm6i6kAjcf6PrXj8KUHI55m3c6Au2PL/OXE+NShrsP5LzJnYoOa2SiUqyB
7ofYp+ywy5OHSRvoP5h+mP9h5qOHHwA2dXV1
                    "]}, 
                    CurveClosed -> {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                    0, 0, 0, 0, 0, 0, 1, 1, 1}]}, {
                   FaceForm[{
                    RGBColor[0.902, 0.902, 0.902], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}}, {{{21.959, 14.8984}, {20.057, 
                    14.281400000000001`}, {20.351, 13.3764}, {20.5, 
                    12.4404}, {20.5, 11.5004}, {20.5, 10.5594}, {20.351, 
                    9.624400000000001}, {20.057, 8.7184}, {21.959, 
                    8.101400000000002}, {22.317999999999998`, 
                    9.206400000000002}, {22.5, 10.3494}, {22.5, 11.5004}, {
                    22.5, 12.650400000000001`}, {22.317999999999998`, 
                    13.7944}, {21.959, 14.8984}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.9490000000000001, 0.9490000000000001, 
                    0.9490000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{11.5, 22.5}, {11.5, 20.5}, {13.404, 20.5}, {
                    15.231, 19.903}, {16.783, 18.773}, {17.961, 20.391}, {
                    16.064, 21.771}, {13.83, 22.5}, {11.5, 22.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.929, 0.929, 0.929], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{17.9609, 20.3906}, {17.9609, 
                    20.3906}, {16.782899999999998`, 18.7736}, {
                    18.337899999999998`, 17.6416}, {19.4699, 16.0876}, {
                    20.0569, 14.2816}, {21.9589, 14.898599999999998`}, {
                    21.2409, 17.1096}, {19.857899999999997`, 
                    19.008599999999998`}, {17.9609, 20.3906}}}]}, {
                   FaceForm[{
                    RGBColor[0.722, 0.722, 0.722], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 4.2266}, {5.0388, 2.6096000000000004`}, {
                    6.9358, 1.2296000000000005`}, {9.1698, 
                    0.49960000000000004`}, {11.4998, 0.49960000000000004`}, {
                    11.4998, 2.4996000000000005`}, {9.5958, 
                    2.4996000000000005`}, {7.768800000000001, 
                    3.0966000000000005`}, {6.2168, 4.2266}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.7799999999999999, 0.7799999999999999, 
                    0.7799999999999999], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{16.783199999999997`, 4.2266}, {
                    15.231199999999998`, 3.0966000000000005`}, {
                    13.404199999999998`, 2.4996000000000005`}, {
                    11.500199999999996`, 2.4996000000000005`}, {
                    11.500199999999996`, 0.49960000000000004`}, {
                    13.830199999999998`, 0.49960000000000004`}, {
                    16.064199999999996`, 1.2296000000000005`}, {
                    17.961199999999998`, 2.6096000000000004`}, {
                    16.783199999999997`, 4.2266}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.8510000000000001, 0.8510000000000001, 
                    0.8510000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{20.0566, 8.718699999999998}, {19.4696, 
                    6.911699999999998}, {18.3376, 5.358699999999999}, {
                    16.7836, 4.226699999999998}, {17.9606, 
                    2.6096999999999984`}, {19.8586, 3.9906999999999986`}, {
                    21.2416, 5.890699999999999}, {21.9586, 
                    8.101699999999997}, {20.0566, 8.718699999999998}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.6749999999999999, 0.6749999999999999, 
                    0.6749999999999999], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{2.9434, 8.718699999999998}, {1.0414, 
                    8.101699999999997}, {1.7584, 5.890699999999999}, {3.1414, 
                    3.9906999999999986`}, {5.0394, 2.6096999999999984`}, {
                    6.2164, 4.226699999999998}, {4.6624, 5.358699999999999}, {
                    3.5304, 6.911699999999998}, {2.9434, 
                    8.718699999999998}}}]}, {
                   FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 18.7734}, {5.0388, 20.3904}, {6.9358, 
                    21.7704}, {9.1698, 22.5004}, {11.4998, 22.5004}, {11.4998,
                     20.5004}, {9.5958, 20.5004}, {7.768800000000001, 
                    19.903399999999998`}, {6.2168, 18.7734}}}]}, {
                   FaceForm[{
                    RGBColor[0.584, 0.584, 0.584], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{5.0391, 20.3906}, {3.1421, 
                    19.008599999999998`}, {1.7591, 17.1096}, {
                    1.0411000000000006`, 14.898599999999998`}, {
                    2.9431000000000007`, 14.2816}, {3.5301000000000005`, 
                    16.0876}, {4.662100000000001, 17.6416}, {6.2171, 
                    18.7736}, {5.0391, 20.3906}}}]}, {
                   FaceForm[{
                    RGBColor[0.631, 0.631, 0.631], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, {{{1.041, 14.8984}, {
                    0.6819999999999999, 13.7944}, {0.4999999999999999, 
                    12.650400000000001`}, {0.4999999999999999, 11.5004}, {
                    0.4999999999999999, 10.3494}, {0.6819999999999999, 
                    9.206400000000002}, {1.041, 8.101400000000002}, {
                    2.9429999999999996`, 8.7184}, {2.649, 
                    9.624400000000001}, {2.5, 10.5594}, {2.5, 11.5004}, {2.5, 
                    12.4404}, {2.649, 13.3764}, {2.9429999999999996`, 
                    14.281400000000001`}, {1.041, 14.8984}}}]}}, AspectRatio -> 
                 Automatic, ImageSize -> {24., 24.}, 
                 PlotRange -> {{0., 24.}, {0., 24.}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Task UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"bbdc6dc5-b1c0-4e86-8c99-be533130af16\"", 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Task environment: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["\"Session\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Task type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Scheduled\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Evaluation expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"Function", "[", 
                    RowBox[{"v", ",", 
                    RowBox[{"r$", "=", "v"}]}], "]"}], "[", 
                    RowBox[{"oblFibs$22275", "[", "]"}], "]"}], Short], 
                    "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxCloser"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{
                  Thickness[0.041666666666666664`], {
                   FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     15.5}, {9.501, 15.5}, {9.501, 16.5}, {6.5, 16.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     5.5}, {9.501, 5.5}, {9.501, 6.5}, {6.5, 6.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     13.5}, {9.501, 13.5}, {9.501, 14.5}, {6.5, 14.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     11.5}, {9.501, 11.5}, {9.501, 12.5}, {6.5, 12.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     9.5}, {9.501, 9.5}, {9.501, 10.5}, {6.5, 10.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     7.5}, {9.501, 7.5}, {9.501, 8.5}, {6.5, 8.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 6.5}, {8.5, 6.5}, {
                    8.5, 15.5}, {15.5, 15.5}}, {{16.5, 16.5}, {7.5, 16.5}, {
                    7.5, 5.5}, {16.5, 5.5}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 15.5}, {8.5, 15.5}, {8.5, 6.5}, {15.5, 6.5}}}]}, {
                   RGBColor[0.392, 0.392, 0.392], 
                   Thickness[0.020833333333333332`], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0,
                     2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{10., 10.221699999999998`}, {10.768, 
                    10.484699999999998`}}, {{12.457, 10.2557}, {12., 
                    10.874699999999999`}}, {{11.543, 10.2557}, {12., 
                    10.874699999999999`}}, {{12., 10.874699999999999`}, {
                    11.261, 11.123699999999998`}}, {{12., 
                    10.874699999999999`}, {12.739, 11.123699999999998`}}, {{
                    12., 10.874699999999999`}, {12., 11.660699999999999`}}, {{
                    12.439, 12.222699999999998`}, {12., 
                    11.660699999999999`}}, {{12.739, 11.123699999999998`}, {
                    13.149000000000001`, 11.705699999999998`}}, {{12.762, 
                    11.932699999999999`}, {13.236, 12.572699999999998`}}, {{
                    13.421, 10.8707}, {12.739, 11.123699999999998`}}, {{14., 
                    10.221699999999998`}, {13.232, 10.484699999999998`}}, {{
                    13.149000000000001`, 10.035699999999999`}, {12.457, 
                    10.2557}}, {{12.437999999999999`, 9.519699999999998}, {
                    12.457, 10.2557}}, {{12., 8.768699999999999}, {12., 
                    9.5887}}, {{11.561, 9.520699999999998}, {11.543, 
                    10.2557}}, {{10.851, 10.035699999999999`}, {11.543, 
                    10.2557}}, {{11.261, 11.123699999999998`}, {10.579, 
                    10.8707}}, {{10.851, 11.706699999999998`}, {11.261, 
                    11.123699999999998`}}, {{10.765, 12.573699999999999`}, {
                    11.238, 11.932699999999999`}}, {{11.562, 
                    12.222699999999998`}, {12., 11.660699999999999`}}, {{12., 
                    10.874699999999999`}, {12., 10.874699999999999`}}, {{
                    11.261, 11.123699999999998`}, {10.768, 
                    10.484699999999998`}, {11.543, 10.2557}, {12., 9.5887}, {
                    12.457, 10.2557}, {13.232, 10.484699999999998`}, {12.739, 
                    11.123699999999998`}, {12.762, 11.932699999999999`}, {12.,
                     11.660699999999999`}, {11.238, 11.932699999999999`}, {
                    11.261, 11.123699999999998`}}, CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEqDg+4J69sKlRxmHNEYUORhqqDguPH5DN7VR1g
8lVLdZxluNUdDp5a6Lpts6rDDC2JqVcy1R08HlaJrGtXddDLW8y4R1XTwXLL
ibJ98uoOuUAua5EGVL+GQ8elew+4P2s6hDxeOvvIAw24vNu2z3+vVGg5LLhm
8t4CqN/BNG6Xp4+WA8g5gUDzIfp1HN7w7jOYyaXukGJ937/3uhaa+3Tg7ofp
B5rm6i6kAjcf6PrXj8KUHI55m3c6Au2PL/OXE+NShrsP5LzJnYoOa2SiUqyB
7ofYp+ywy5OHSRvoP5h+mP9h5qOHHwA2dXV1
                    "]}, 
                    CurveClosed -> {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                    0, 0, 0, 0, 0, 0, 1, 1, 1}]}, {
                   FaceForm[{
                    RGBColor[0.902, 0.902, 0.902], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}}, {{{21.959, 14.8984}, {20.057, 
                    14.281400000000001`}, {20.351, 13.3764}, {20.5, 
                    12.4404}, {20.5, 11.5004}, {20.5, 10.5594}, {20.351, 
                    9.624400000000001}, {20.057, 8.7184}, {21.959, 
                    8.101400000000002}, {22.317999999999998`, 
                    9.206400000000002}, {22.5, 10.3494}, {22.5, 11.5004}, {
                    22.5, 12.650400000000001`}, {22.317999999999998`, 
                    13.7944}, {21.959, 14.8984}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.9490000000000001, 0.9490000000000001, 
                    0.9490000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{11.5, 22.5}, {11.5, 20.5}, {13.404, 20.5}, {
                    15.231, 19.903}, {16.783, 18.773}, {17.961, 20.391}, {
                    16.064, 21.771}, {13.83, 22.5}, {11.5, 22.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.929, 0.929, 0.929], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{17.9609, 20.3906}, {17.9609, 
                    20.3906}, {16.782899999999998`, 18.7736}, {
                    18.337899999999998`, 17.6416}, {19.4699, 16.0876}, {
                    20.0569, 14.2816}, {21.9589, 14.898599999999998`}, {
                    21.2409, 17.1096}, {19.857899999999997`, 
                    19.008599999999998`}, {17.9609, 20.3906}}}]}, {
                   FaceForm[{
                    RGBColor[0.722, 0.722, 0.722], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 4.2266}, {5.0388, 2.6096000000000004`}, {
                    6.9358, 1.2296000000000005`}, {9.1698, 
                    0.49960000000000004`}, {11.4998, 0.49960000000000004`}, {
                    11.4998, 2.4996000000000005`}, {9.5958, 
                    2.4996000000000005`}, {7.768800000000001, 
                    3.0966000000000005`}, {6.2168, 4.2266}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.7799999999999999, 0.7799999999999999, 
                    0.7799999999999999], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{16.783199999999997`, 4.2266}, {
                    15.231199999999998`, 3.0966000000000005`}, {
                    13.404199999999998`, 2.4996000000000005`}, {
                    11.500199999999996`, 2.4996000000000005`}, {
                    11.500199999999996`, 0.49960000000000004`}, {
                    13.830199999999998`, 0.49960000000000004`}, {
                    16.064199999999996`, 1.2296000000000005`}, {
                    17.961199999999998`, 2.6096000000000004`}, {
                    16.783199999999997`, 4.2266}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.8510000000000001, 0.8510000000000001, 
                    0.8510000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{20.0566, 8.718699999999998}, {19.4696, 
                    6.911699999999998}, {18.3376, 5.358699999999999}, {
                    16.7836, 4.226699999999998}, {17.9606, 
                    2.6096999999999984`}, {19.8586, 3.9906999999999986`}, {
                    21.2416, 5.890699999999999}, {21.9586, 
                    8.101699999999997}, {20.0566, 8.718699999999998}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.6749999999999999, 0.6749999999999999, 
                    0.6749999999999999], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{2.9434, 8.718699999999998}, {1.0414, 
                    8.101699999999997}, {1.7584, 5.890699999999999}, {3.1414, 
                    3.9906999999999986`}, {5.0394, 2.6096999999999984`}, {
                    6.2164, 4.226699999999998}, {4.6624, 5.358699999999999}, {
                    3.5304, 6.911699999999998}, {2.9434, 
                    8.718699999999998}}}]}, {
                   FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 18.7734}, {5.0388, 20.3904}, {6.9358, 
                    21.7704}, {9.1698, 22.5004}, {11.4998, 22.5004}, {11.4998,
                     20.5004}, {9.5958, 20.5004}, {7.768800000000001, 
                    19.903399999999998`}, {6.2168, 18.7734}}}]}, {
                   FaceForm[{
                    RGBColor[0.584, 0.584, 0.584], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{5.0391, 20.3906}, {3.1421, 
                    19.008599999999998`}, {1.7591, 17.1096}, {
                    1.0411000000000006`, 14.898599999999998`}, {
                    2.9431000000000007`, 14.2816}, {3.5301000000000005`, 
                    16.0876}, {4.662100000000001, 17.6416}, {6.2171, 
                    18.7736}, {5.0391, 20.3906}}}]}, {
                   FaceForm[{
                    RGBColor[0.631, 0.631, 0.631], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, {{{1.041, 14.8984}, {
                    0.6819999999999999, 13.7944}, {0.4999999999999999, 
                    12.650400000000001`}, {0.4999999999999999, 11.5004}, {
                    0.4999999999999999, 10.3494}, {0.6819999999999999, 
                    9.206400000000002}, {1.041, 8.101400000000002}, {
                    2.9429999999999996`, 8.7184}, {2.649, 
                    9.624400000000001}, {2.5, 10.5594}, {2.5, 11.5004}, {2.5, 
                    12.4404}, {2.649, 13.3764}, {2.9429999999999996`, 
                    14.281400000000001`}, {1.041, 14.8984}}}]}}, AspectRatio -> 
                 Automatic, ImageSize -> {24., 24.}, 
                 PlotRange -> {{0., 24.}, {0., 24.}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Task UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"bbdc6dc5-b1c0-4e86-8c99-be533130af16\"", 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Task environment: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["\"Session\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Task type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Scheduled\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Evaluation expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"Function", "[", 
                    RowBox[{"v", ",", 
                    RowBox[{"r$", "=", "v"}]}], "]"}], "[", 
                    RowBox[{"oblFibs$22275", "[", "]"}], "]"}], Short], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Run interval: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Total run count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\[Infinity]", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"],
         DynamicModuleValues :> {}], 
       StyleBox["]", "NonInterpretableSummary"]}]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->(
     "TaskObject[<|TaskUUID -> bbdc6dc5-b1c0-4e86-8c99-be533130af16, \
TaskEnvironment -> Session, TaskType -> Scheduled, <<3>>, \
HandlerFunctionsKeys -> {Task, TaskUUID, TaskType, TaskStatus, \
TaskEnvironment, HandlerFunctions, HandlerFunctionsKeys, EventName, \
EvaluationExpression, <<4>>, Rem<<11>>unt, NextScheduledTime, TotalRunCount, \
MessageOutput, PrintOutput}, AutoRemove -> True|>]"& )],
   False,
   Editable->False,
   SelectWithContents->True,
   Selectable->False], ";;", "All"}]], "Output",
 CellChangeTimes->{
  3.637798999757491*^9, 3.637801355026225*^9, 3.637848069400334*^9, 
   3.6378518216282053`*^9, 3.637852191923661*^9, 3.63785246301192*^9, 
   3.637869295355239*^9, 3.637870332106168*^9, 3.9049350700917273`*^9, 
   3.905015082120227*^9, {3.905015175984808*^9, 3.905015194417995*^9}, 
   3.905015239782075*^9, 3.9050154565916567`*^9, 3.905015553753521*^9, 
   3.905022293367087*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"25720c43-24a5-4df1-b510-81d9dd7ccac2"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "cleanupAllTasks", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cleanupAllTasks", "[", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"TaskRemove", "[", 
    RowBox[{"Tasks", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cleanupAllTasks", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.905015092446823*^9, 3.905015093747491*^9}, {
   3.905015258107375*^9, 3.9050153412078743`*^9}, 3.90501543911458*^9},
 CellLabel->"In[80]:=",ExpressionUUID->"6330c4e1-1328-4658-95dd-e8220ce3595a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Tasks", "[", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Check", " ", "that", " ", "there", " ", "are", " ", "none", " ", "left", 
    " ", 
    RowBox[{"running", "."}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.905015092446823*^9, 3.905015093747491*^9}, {
   3.905015258107375*^9, 3.9050153412078743`*^9}, 3.90501543911458*^9},
 CellLabel->"In[83]:=",ExpressionUUID->"d12d1771-eefb-4f05-818c-3af7a05ff7e3"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{
  3.905015094716984*^9, 3.905015208491967*^9, {3.905015247886717*^9, 
   3.905015269016549*^9}, 3.9050153428173656`*^9, 3.9050154819490223`*^9, 
   3.905015573111973*^9, 3.905022305346218*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"3761cca3-f082-4e11-b768-03733a3f0f52"]
}, Open  ]],

Cell[TextData[{
 "Here\[CloseCurlyQuote]s an infinite observable of all the integers, just \
like our iterable ",
 StyleBox["integersFrom", "Input"],
 ": "
}], "Text",
 CellChangeTimes->{{3.6377990105900917`*^9, 3.637799033162963*^9}, {
  3.6378693533501787`*^9, 3.637869354913007*^9}, {3.905015596379684*^9, 
  3.905015610839622*^9}},ExpressionUUID->"9aeca67f-653c-46e6-b9ee-\
cf79d95a20eb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "integersFromObservable", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"integersFromObservable", "[", "from_", "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"state", "=", "from"}], ",", "integersObl"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"integersObl", "[", "]"}], ":=", "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"result", "=", "state"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"state", "=", 
           RowBox[{"state", "+", "1"}]}], ";", "\[IndentingNewLine]", 
          "result"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "integersObl"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.63779152976799*^9, 3.6377915413711977`*^9}, {
  3.637791592948785*^9, 3.637791767657237*^9}, {3.637872105192834*^9, 
  3.637872118892202*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"16c7bfcc-bdf6-4969-9d87-f4c62e7dcb6b"],

Cell["Watch the following for a while, then clean it up:", "Text",
 CellChangeTimes->{{3.637869399215274*^9, 3.637869406861638*^9}, {
  3.905015614676922*^9, 
  3.9050156164820127`*^9}},ExpressionUUID->"d996f833-f0cb-4da1-b527-\
0c65b3161171"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r$", "=", "0"}], ";", 
  RowBox[{"Dynamic", "[", "r$", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"subscribe", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"integersFromObservable", "[", "42", "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"v", "\[Function]", 
     RowBox[{"(", 
      RowBox[{"r$", "=", "v"}], ")"}]}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.637791754045891*^9, 3.637791803579667*^9}, 
   3.637794652988228*^9, 3.637872105204792*^9, {3.905015579428331*^9, 
   3.905015583158236*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"cdb0aac7-429a-4601-b1c4-72583d2817bf"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`r$, StandardForm],
  ImageSizeCache->{23., {0.23399999999999999`, 12.675}}]], "Output",
 CellChangeTimes->{
  3.6377918049128523`*^9, 3.637791846961363*^9, 3.637794654461111*^9, 
   3.6377947444270773`*^9, 3.637799054383741*^9, 3.637801355126483*^9, {
   3.6378480694602613`*^9, 3.637848076515169*^9}, 3.637851821679091*^9, 
   3.637852191981983*^9, 3.6378524630976057`*^9, 3.6378693926340103`*^9, 
   3.637872122273355*^9, 3.905015409783825*^9, 3.905015587699768*^9, 
   3.9050223200941267`*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"ca0e02a3-6a3d-48cf-9bf8-76b84c7715e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cleanupAllTasks", "[", "]"}]], "Input",
 CellChangeTimes->{{3.637791811602421*^9, 3.637791815060354*^9}, {
  3.9050154052853193`*^9, 3.9050154066851*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"a1de1731-8123-468a-aa7d-d5e4ad7c5a71"],

Cell[BoxData[
 RowBox[{"{", 
  TagBox[
   TemplateBox[{
     RowBox[{
       StyleBox[
        TagBox["TaskObject", "SummaryHead"], "NonInterpretableSummary"], 
       StyleBox["[", "NonInterpretableSummary"], 
       DynamicModuleBox[{
        Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxOpener"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{
                  Thickness[0.041666666666666664`], {
                   FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     15.5}, {9.501, 15.5}, {9.501, 16.5}, {6.5, 16.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     5.5}, {9.501, 5.5}, {9.501, 6.5}, {6.5, 6.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     13.5}, {9.501, 13.5}, {9.501, 14.5}, {6.5, 14.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     11.5}, {9.501, 11.5}, {9.501, 12.5}, {6.5, 12.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     9.5}, {9.501, 9.5}, {9.501, 10.5}, {6.5, 10.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     7.5}, {9.501, 7.5}, {9.501, 8.5}, {6.5, 8.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 6.5}, {8.5, 6.5}, {
                    8.5, 15.5}, {15.5, 15.5}}, {{16.5, 16.5}, {7.5, 16.5}, {
                    7.5, 5.5}, {16.5, 5.5}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 15.5}, {8.5, 15.5}, {8.5, 6.5}, {15.5, 6.5}}}]}, {
                   RGBColor[0.392, 0.392, 0.392], 
                   Thickness[0.020833333333333332`], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0,
                     2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{10., 10.221699999999998`}, {10.768, 
                    10.484699999999998`}}, {{12.457, 10.2557}, {12., 
                    10.874699999999999`}}, {{11.543, 10.2557}, {12., 
                    10.874699999999999`}}, {{12., 10.874699999999999`}, {
                    11.261, 11.123699999999998`}}, {{12., 
                    10.874699999999999`}, {12.739, 11.123699999999998`}}, {{
                    12., 10.874699999999999`}, {12., 11.660699999999999`}}, {{
                    12.439, 12.222699999999998`}, {12., 
                    11.660699999999999`}}, {{12.739, 11.123699999999998`}, {
                    13.149000000000001`, 11.705699999999998`}}, {{12.762, 
                    11.932699999999999`}, {13.236, 12.572699999999998`}}, {{
                    13.421, 10.8707}, {12.739, 11.123699999999998`}}, {{14., 
                    10.221699999999998`}, {13.232, 10.484699999999998`}}, {{
                    13.149000000000001`, 10.035699999999999`}, {12.457, 
                    10.2557}}, {{12.437999999999999`, 9.519699999999998}, {
                    12.457, 10.2557}}, {{12., 8.768699999999999}, {12., 
                    9.5887}}, {{11.561, 9.520699999999998}, {11.543, 
                    10.2557}}, {{10.851, 10.035699999999999`}, {11.543, 
                    10.2557}}, {{11.261, 11.123699999999998`}, {10.579, 
                    10.8707}}, {{10.851, 11.706699999999998`}, {11.261, 
                    11.123699999999998`}}, {{10.765, 12.573699999999999`}, {
                    11.238, 11.932699999999999`}}, {{11.562, 
                    12.222699999999998`}, {12., 11.660699999999999`}}, {{12., 
                    10.874699999999999`}, {12., 10.874699999999999`}}, {{
                    11.261, 11.123699999999998`}, {10.768, 
                    10.484699999999998`}, {11.543, 10.2557}, {12., 9.5887}, {
                    12.457, 10.2557}, {13.232, 10.484699999999998`}, {12.739, 
                    11.123699999999998`}, {12.762, 11.932699999999999`}, {12.,
                     11.660699999999999`}, {11.238, 11.932699999999999`}, {
                    11.261, 11.123699999999998`}}, CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEqDg+4J69sKlRxmHNEYUORhqqDguPH5DN7VR1g
8lVLdZxluNUdDp5a6Lpts6rDDC2JqVcy1R08HlaJrGtXddDLW8y4R1XTwXLL
ibJ98uoOuUAua5EGVL+GQ8elew+4P2s6hDxeOvvIAw24vNu2z3+vVGg5LLhm
8t4CqN/BNG6Xp4+WA8g5gUDzIfp1HN7w7jOYyaXukGJ937/3uhaa+3Tg7ofp
B5rm6i6kAjcf6PrXj8KUHI55m3c6Au2PL/OXE+NShrsP5LzJnYoOa2SiUqyB
7ofYp+ywy5OHSRvoP5h+mP9h5qOHHwA2dXV1
                    "]}, 
                    CurveClosed -> {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                    0, 0, 0, 0, 0, 0, 1, 1, 1}]}, {
                   FaceForm[{
                    RGBColor[0.902, 0.902, 0.902], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}}, {{{21.959, 14.8984}, {20.057, 
                    14.281400000000001`}, {20.351, 13.3764}, {20.5, 
                    12.4404}, {20.5, 11.5004}, {20.5, 10.5594}, {20.351, 
                    9.624400000000001}, {20.057, 8.7184}, {21.959, 
                    8.101400000000002}, {22.317999999999998`, 
                    9.206400000000002}, {22.5, 10.3494}, {22.5, 11.5004}, {
                    22.5, 12.650400000000001`}, {22.317999999999998`, 
                    13.7944}, {21.959, 14.8984}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.9490000000000001, 0.9490000000000001, 
                    0.9490000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{11.5, 22.5}, {11.5, 20.5}, {13.404, 20.5}, {
                    15.231, 19.903}, {16.783, 18.773}, {17.961, 20.391}, {
                    16.064, 21.771}, {13.83, 22.5}, {11.5, 22.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.929, 0.929, 0.929], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{17.9609, 20.3906}, {17.9609, 
                    20.3906}, {16.782899999999998`, 18.7736}, {
                    18.337899999999998`, 17.6416}, {19.4699, 16.0876}, {
                    20.0569, 14.2816}, {21.9589, 14.898599999999998`}, {
                    21.2409, 17.1096}, {19.857899999999997`, 
                    19.008599999999998`}, {17.9609, 20.3906}}}]}, {
                   FaceForm[{
                    RGBColor[0.722, 0.722, 0.722], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 4.2266}, {5.0388, 2.6096000000000004`}, {
                    6.9358, 1.2296000000000005`}, {9.1698, 
                    0.49960000000000004`}, {11.4998, 0.49960000000000004`}, {
                    11.4998, 2.4996000000000005`}, {9.5958, 
                    2.4996000000000005`}, {7.768800000000001, 
                    3.0966000000000005`}, {6.2168, 4.2266}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.7799999999999999, 0.7799999999999999, 
                    0.7799999999999999], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{16.783199999999997`, 4.2266}, {
                    15.231199999999998`, 3.0966000000000005`}, {
                    13.404199999999998`, 2.4996000000000005`}, {
                    11.500199999999996`, 2.4996000000000005`}, {
                    11.500199999999996`, 0.49960000000000004`}, {
                    13.830199999999998`, 0.49960000000000004`}, {
                    16.064199999999996`, 1.2296000000000005`}, {
                    17.961199999999998`, 2.6096000000000004`}, {
                    16.783199999999997`, 4.2266}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.8510000000000001, 0.8510000000000001, 
                    0.8510000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{20.0566, 8.718699999999998}, {19.4696, 
                    6.911699999999998}, {18.3376, 5.358699999999999}, {
                    16.7836, 4.226699999999998}, {17.9606, 
                    2.6096999999999984`}, {19.8586, 3.9906999999999986`}, {
                    21.2416, 5.890699999999999}, {21.9586, 
                    8.101699999999997}, {20.0566, 8.718699999999998}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.6749999999999999, 0.6749999999999999, 
                    0.6749999999999999], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{2.9434, 8.718699999999998}, {1.0414, 
                    8.101699999999997}, {1.7584, 5.890699999999999}, {3.1414, 
                    3.9906999999999986`}, {5.0394, 2.6096999999999984`}, {
                    6.2164, 4.226699999999998}, {4.6624, 5.358699999999999}, {
                    3.5304, 6.911699999999998}, {2.9434, 
                    8.718699999999998}}}]}, {
                   FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 18.7734}, {5.0388, 20.3904}, {6.9358, 
                    21.7704}, {9.1698, 22.5004}, {11.4998, 22.5004}, {11.4998,
                     20.5004}, {9.5958, 20.5004}, {7.768800000000001, 
                    19.903399999999998`}, {6.2168, 18.7734}}}]}, {
                   FaceForm[{
                    RGBColor[0.584, 0.584, 0.584], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{5.0391, 20.3906}, {3.1421, 
                    19.008599999999998`}, {1.7591, 17.1096}, {
                    1.0411000000000006`, 14.898599999999998`}, {
                    2.9431000000000007`, 14.2816}, {3.5301000000000005`, 
                    16.0876}, {4.662100000000001, 17.6416}, {6.2171, 
                    18.7736}, {5.0391, 20.3906}}}]}, {
                   FaceForm[{
                    RGBColor[0.631, 0.631, 0.631], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, {{{1.041, 14.8984}, {
                    0.6819999999999999, 13.7944}, {0.4999999999999999, 
                    12.650400000000001`}, {0.4999999999999999, 11.5004}, {
                    0.4999999999999999, 10.3494}, {0.6819999999999999, 
                    9.206400000000002}, {1.041, 8.101400000000002}, {
                    2.9429999999999996`, 8.7184}, {2.649, 
                    9.624400000000001}, {2.5, 10.5594}, {2.5, 11.5004}, {2.5, 
                    12.4404}, {2.649, 13.3764}, {2.9429999999999996`, 
                    14.281400000000001`}, {1.041, 14.8984}}}]}}, AspectRatio -> 
                 Automatic, ImageSize -> {24., 24.}, 
                 PlotRange -> {{0., 24.}, {0., 24.}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Task UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"59092381-ff6d-471e-bb21-f16e854906d0\"", 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Task environment: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["\"Session\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Task type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Scheduled\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Evaluation expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"Function", "[", 
                    RowBox[{"v", ",", 
                    RowBox[{"r$", "=", "v"}]}], "]"}], "[", 
                    RowBox[{"integersObl$23604", "[", "]"}], "]"}], Short], 
                    "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxCloser"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{
                  Thickness[0.041666666666666664`], {
                   FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     15.5}, {9.501, 15.5}, {9.501, 16.5}, {6.5, 16.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     5.5}, {9.501, 5.5}, {9.501, 6.5}, {6.5, 6.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     13.5}, {9.501, 13.5}, {9.501, 14.5}, {6.5, 14.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     11.5}, {9.501, 11.5}, {9.501, 12.5}, {6.5, 12.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     9.5}, {9.501, 9.5}, {9.501, 10.5}, {6.5, 10.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     7.5}, {9.501, 7.5}, {9.501, 8.5}, {6.5, 8.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 6.5}, {8.5, 6.5}, {
                    8.5, 15.5}, {15.5, 15.5}}, {{16.5, 16.5}, {7.5, 16.5}, {
                    7.5, 5.5}, {16.5, 5.5}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 15.5}, {8.5, 15.5}, {8.5, 6.5}, {15.5, 6.5}}}]}, {
                   RGBColor[0.392, 0.392, 0.392], 
                   Thickness[0.020833333333333332`], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0,
                     2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{10., 10.221699999999998`}, {10.768, 
                    10.484699999999998`}}, {{12.457, 10.2557}, {12., 
                    10.874699999999999`}}, {{11.543, 10.2557}, {12., 
                    10.874699999999999`}}, {{12., 10.874699999999999`}, {
                    11.261, 11.123699999999998`}}, {{12., 
                    10.874699999999999`}, {12.739, 11.123699999999998`}}, {{
                    12., 10.874699999999999`}, {12., 11.660699999999999`}}, {{
                    12.439, 12.222699999999998`}, {12., 
                    11.660699999999999`}}, {{12.739, 11.123699999999998`}, {
                    13.149000000000001`, 11.705699999999998`}}, {{12.762, 
                    11.932699999999999`}, {13.236, 12.572699999999998`}}, {{
                    13.421, 10.8707}, {12.739, 11.123699999999998`}}, {{14., 
                    10.221699999999998`}, {13.232, 10.484699999999998`}}, {{
                    13.149000000000001`, 10.035699999999999`}, {12.457, 
                    10.2557}}, {{12.437999999999999`, 9.519699999999998}, {
                    12.457, 10.2557}}, {{12., 8.768699999999999}, {12., 
                    9.5887}}, {{11.561, 9.520699999999998}, {11.543, 
                    10.2557}}, {{10.851, 10.035699999999999`}, {11.543, 
                    10.2557}}, {{11.261, 11.123699999999998`}, {10.579, 
                    10.8707}}, {{10.851, 11.706699999999998`}, {11.261, 
                    11.123699999999998`}}, {{10.765, 12.573699999999999`}, {
                    11.238, 11.932699999999999`}}, {{11.562, 
                    12.222699999999998`}, {12., 11.660699999999999`}}, {{12., 
                    10.874699999999999`}, {12., 10.874699999999999`}}, {{
                    11.261, 11.123699999999998`}, {10.768, 
                    10.484699999999998`}, {11.543, 10.2557}, {12., 9.5887}, {
                    12.457, 10.2557}, {13.232, 10.484699999999998`}, {12.739, 
                    11.123699999999998`}, {12.762, 11.932699999999999`}, {12.,
                     11.660699999999999`}, {11.238, 11.932699999999999`}, {
                    11.261, 11.123699999999998`}}, CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEqDg+4J69sKlRxmHNEYUORhqqDguPH5DN7VR1g
8lVLdZxluNUdDp5a6Lpts6rDDC2JqVcy1R08HlaJrGtXddDLW8y4R1XTwXLL
ibJ98uoOuUAua5EGVL+GQ8elew+4P2s6hDxeOvvIAw24vNu2z3+vVGg5LLhm
8t4CqN/BNG6Xp4+WA8g5gUDzIfp1HN7w7jOYyaXukGJ937/3uhaa+3Tg7ofp
B5rm6i6kAjcf6PrXj8KUHI55m3c6Au2PL/OXE+NShrsP5LzJnYoOa2SiUqyB
7ofYp+ywy5OHSRvoP5h+mP9h5qOHHwA2dXV1
                    "]}, 
                    CurveClosed -> {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                    0, 0, 0, 0, 0, 0, 1, 1, 1}]}, {
                   FaceForm[{
                    RGBColor[0.902, 0.902, 0.902], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}}, {{{21.959, 14.8984}, {20.057, 
                    14.281400000000001`}, {20.351, 13.3764}, {20.5, 
                    12.4404}, {20.5, 11.5004}, {20.5, 10.5594}, {20.351, 
                    9.624400000000001}, {20.057, 8.7184}, {21.959, 
                    8.101400000000002}, {22.317999999999998`, 
                    9.206400000000002}, {22.5, 10.3494}, {22.5, 11.5004}, {
                    22.5, 12.650400000000001`}, {22.317999999999998`, 
                    13.7944}, {21.959, 14.8984}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.9490000000000001, 0.9490000000000001, 
                    0.9490000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{11.5, 22.5}, {11.5, 20.5}, {13.404, 20.5}, {
                    15.231, 19.903}, {16.783, 18.773}, {17.961, 20.391}, {
                    16.064, 21.771}, {13.83, 22.5}, {11.5, 22.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.929, 0.929, 0.929], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{17.9609, 20.3906}, {17.9609, 
                    20.3906}, {16.782899999999998`, 18.7736}, {
                    18.337899999999998`, 17.6416}, {19.4699, 16.0876}, {
                    20.0569, 14.2816}, {21.9589, 14.898599999999998`}, {
                    21.2409, 17.1096}, {19.857899999999997`, 
                    19.008599999999998`}, {17.9609, 20.3906}}}]}, {
                   FaceForm[{
                    RGBColor[0.722, 0.722, 0.722], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 4.2266}, {5.0388, 2.6096000000000004`}, {
                    6.9358, 1.2296000000000005`}, {9.1698, 
                    0.49960000000000004`}, {11.4998, 0.49960000000000004`}, {
                    11.4998, 2.4996000000000005`}, {9.5958, 
                    2.4996000000000005`}, {7.768800000000001, 
                    3.0966000000000005`}, {6.2168, 4.2266}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.7799999999999999, 0.7799999999999999, 
                    0.7799999999999999], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{16.783199999999997`, 4.2266}, {
                    15.231199999999998`, 3.0966000000000005`}, {
                    13.404199999999998`, 2.4996000000000005`}, {
                    11.500199999999996`, 2.4996000000000005`}, {
                    11.500199999999996`, 0.49960000000000004`}, {
                    13.830199999999998`, 0.49960000000000004`}, {
                    16.064199999999996`, 1.2296000000000005`}, {
                    17.961199999999998`, 2.6096000000000004`}, {
                    16.783199999999997`, 4.2266}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.8510000000000001, 0.8510000000000001, 
                    0.8510000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{20.0566, 8.718699999999998}, {19.4696, 
                    6.911699999999998}, {18.3376, 5.358699999999999}, {
                    16.7836, 4.226699999999998}, {17.9606, 
                    2.6096999999999984`}, {19.8586, 3.9906999999999986`}, {
                    21.2416, 5.890699999999999}, {21.9586, 
                    8.101699999999997}, {20.0566, 8.718699999999998}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.6749999999999999, 0.6749999999999999, 
                    0.6749999999999999], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{2.9434, 8.718699999999998}, {1.0414, 
                    8.101699999999997}, {1.7584, 5.890699999999999}, {3.1414, 
                    3.9906999999999986`}, {5.0394, 2.6096999999999984`}, {
                    6.2164, 4.226699999999998}, {4.6624, 5.358699999999999}, {
                    3.5304, 6.911699999999998}, {2.9434, 
                    8.718699999999998}}}]}, {
                   FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 18.7734}, {5.0388, 20.3904}, {6.9358, 
                    21.7704}, {9.1698, 22.5004}, {11.4998, 22.5004}, {11.4998,
                     20.5004}, {9.5958, 20.5004}, {7.768800000000001, 
                    19.903399999999998`}, {6.2168, 18.7734}}}]}, {
                   FaceForm[{
                    RGBColor[0.584, 0.584, 0.584], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{5.0391, 20.3906}, {3.1421, 
                    19.008599999999998`}, {1.7591, 17.1096}, {
                    1.0411000000000006`, 14.898599999999998`}, {
                    2.9431000000000007`, 14.2816}, {3.5301000000000005`, 
                    16.0876}, {4.662100000000001, 17.6416}, {6.2171, 
                    18.7736}, {5.0391, 20.3906}}}]}, {
                   FaceForm[{
                    RGBColor[0.631, 0.631, 0.631], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, {{{1.041, 14.8984}, {
                    0.6819999999999999, 13.7944}, {0.4999999999999999, 
                    12.650400000000001`}, {0.4999999999999999, 11.5004}, {
                    0.4999999999999999, 10.3494}, {0.6819999999999999, 
                    9.206400000000002}, {1.041, 8.101400000000002}, {
                    2.9429999999999996`, 8.7184}, {2.649, 
                    9.624400000000001}, {2.5, 10.5594}, {2.5, 11.5004}, {2.5, 
                    12.4404}, {2.649, 13.3764}, {2.9429999999999996`, 
                    14.281400000000001`}, {1.041, 14.8984}}}]}}, AspectRatio -> 
                 Automatic, ImageSize -> {24., 24.}, 
                 PlotRange -> {{0., 24.}, {0., 24.}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Task UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"59092381-ff6d-471e-bb21-f16e854906d0\"", 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Task environment: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["\"Session\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Task type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Scheduled\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Evaluation expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"Function", "[", 
                    RowBox[{"v", ",", 
                    RowBox[{"r$", "=", "v"}]}], "]"}], "[", 
                    RowBox[{"integersObl$23604", "[", "]"}], "]"}], Short], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Run interval: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Total run count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\[Infinity]", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"],
         DynamicModuleValues :> {}], 
       StyleBox["]", "NonInterpretableSummary"]}]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->(
     "TaskObject[<|TaskUUID -> 59092381-ff6d-471e-bb21-f16e854906d0, \
TaskEnvironment -> Session, TaskType -> Scheduled, <<3>>, \
HandlerFunctionsKeys -> {Task, TaskUUID, TaskType, TaskStatus, \
TaskEnvironment, HandlerFunctions, HandlerFunctionsKeys, EventName, \
EvaluationExpression, <<4>>, Rem<<11>>unt, NextScheduledTime, TotalRunCount, \
MessageOutput, PrintOutput}, AutoRemove -> True|>]"& )],
   False,
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "}"}]], "Output",
 CellChangeTimes->{{3.905015419718721*^9, 3.9050154236651163`*^9}, 
   3.905015622434021*^9, 3.905022328644576*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"a266d6d9-5179-40ce-b333-2452283d0901"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tasks", "[", "]"}]], "Input",
 CellChangeTimes->{{3.905015628523271*^9, 3.905015630372602*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"b71b9f58-a416-45a7-8e3e-0b8695e2323a"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.905015630984084*^9, 3.905022330441491*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"fb1080dd-6c79-413c-a861-17a01343e550"]
}, Open  ]],

Cell[TextData[{
 "Here are our ways to get back and forth between ",
 StyleBox["Lists", "Input"],
 " and Observables (doing this right requires another aspect of observers, \
namely ",
 StyleBox["OnCompleted",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ", not covered here [see ",
 ButtonBox["the book by Campbell",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.introtorx.com/content/v1.0.10621.0/02_KeyTypes.html#\
IObserver"], None},
  ButtonNote->
   "http://www.introtorx.com/content/v1.0.10621.0/02_KeyTypes.html#IObserver"],
 " for more]. We\[CloseCurlyQuote]ll joke it with ",
 StyleBox["Null", "Input"],
 " for now)."
}], "Text",
 CellChangeTimes->{{3.637848238711*^9, 3.637848254597721*^9}, {
  3.637848344899742*^9, 3.6378483848571253`*^9}, {3.6378694700866537`*^9, 
  3.637869505057741*^9}, {3.637869564314308*^9, 3.637869564317418*^9}, {
  3.905015637611973*^9, 3.90501564634163*^9}, {3.905022362604089*^9, 
  3.905022366857106*^9}},ExpressionUUID->"c0a08140-d593-4d07-be93-\
f5f0473ae71f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["dispense :: List \[LongRightArrow] Observable", "Subsection",
 CellChangeTimes->{{3.637847305225587*^9, 3.6378473079684477`*^9}, {
  3.6378474411249104`*^9, 3.637847448642993*^9}, {3.905015657957308*^9, 
  3.905015682999505*^9}},ExpressionUUID->"2727edea-6432-4860-94dd-\
d4d29f61f3ec"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "dispense", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dispense", "[", 
    RowBox[{"{", "}"}], "]"}], ":=", 
   RowBox[{"Null", "&"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dispense", "[", "l_List", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"state", "=", "l"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "}"}], "===", "state"}], ",", "\[IndentingNewLine]", 
       "Null", ",", "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"v", "=", 
           RowBox[{"First", "[", "state", "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"state", "=", 
           RowBox[{"Rest", "[", "state", "]"}]}], ";", "\[IndentingNewLine]", 
          "v"}]}], "]"}]}], "]"}], "&"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.637847451209298*^9, 3.637847459539123*^9}, {
  3.637847717075122*^9, 3.637848030383902*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"4382cbc0-5499-4172-be6d-e1d38fe8432d"],

Cell["\<\
Here\[CloseCurlyQuote]s a finite instance. Clean it up once it starts to \
produce Null.\
\>", "Text",
 CellChangeTimes->{{3.637869588549884*^9, 3.63786959585776*^9}, {
  3.637872151001622*^9, 
  3.6378721648634777`*^9}},ExpressionUUID->"3954ff3b-c146-418a-bd22-\
717ae1985dd9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r$", "=", "0"}], ";", 
  RowBox[{"Dynamic", "[", "r$", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"subscribe", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dispense", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"v", "\[Function]", 
     RowBox[{"(", 
      RowBox[{"r$", "=", "v"}], ")"}]}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.637791754045891*^9, 3.637791803579667*^9}, 
   3.637794652988228*^9, {3.637848105210635*^9, 3.637848110899529*^9}, {
   3.905015698919321*^9, 3.905015702717328*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"2b4550e3-31bc-4068-a8b4-87290aa98e5f"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`r$, StandardForm],
  ImageSizeCache->{98., {4.1535, 12.675}}]], "Output",
 CellChangeTimes->{
  3.6377918049128523`*^9, 3.637791846961363*^9, 3.637794654461111*^9, 
   3.6377947444270773`*^9, 3.637799054383741*^9, 3.637801355126483*^9, {
   3.6378480694602613`*^9, 3.637848076515169*^9}, 3.637848112471724*^9, 
   3.637851821730042*^9, 3.637852192041032*^9, 3.6378524631786833`*^9, 
   3.6378695782976522`*^9, 3.637872142287573*^9, 3.905015703484432*^9, 
   3.9050223769331837`*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"d01562e8-861f-43cd-acce-821322e72ed9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cleanupAllTasks", "[", "]"}]], "Input",
 CellChangeTimes->{{3.637791811602421*^9, 3.637791815060354*^9}, {
  3.9050157111872873`*^9, 3.905015712168846*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"c95b202e-a9e8-4170-a19f-696fa7e9349f"],

Cell[BoxData[
 RowBox[{"{", 
  TagBox[
   TemplateBox[{
     RowBox[{
       StyleBox[
        TagBox["TaskObject", "SummaryHead"], "NonInterpretableSummary"], 
       StyleBox["[", "NonInterpretableSummary"], 
       DynamicModuleBox[{
        Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxOpener"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{
                  Thickness[0.041666666666666664`], {
                   FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     15.5}, {9.501, 15.5}, {9.501, 16.5}, {6.5, 16.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     5.5}, {9.501, 5.5}, {9.501, 6.5}, {6.5, 6.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     13.5}, {9.501, 13.5}, {9.501, 14.5}, {6.5, 14.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     11.5}, {9.501, 11.5}, {9.501, 12.5}, {6.5, 12.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     9.5}, {9.501, 9.5}, {9.501, 10.5}, {6.5, 10.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     7.5}, {9.501, 7.5}, {9.501, 8.5}, {6.5, 8.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 6.5}, {8.5, 6.5}, {
                    8.5, 15.5}, {15.5, 15.5}}, {{16.5, 16.5}, {7.5, 16.5}, {
                    7.5, 5.5}, {16.5, 5.5}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 15.5}, {8.5, 15.5}, {8.5, 6.5}, {15.5, 6.5}}}]}, {
                   RGBColor[0.392, 0.392, 0.392], 
                   Thickness[0.020833333333333332`], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0,
                     2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{10., 10.221699999999998`}, {10.768, 
                    10.484699999999998`}}, {{12.457, 10.2557}, {12., 
                    10.874699999999999`}}, {{11.543, 10.2557}, {12., 
                    10.874699999999999`}}, {{12., 10.874699999999999`}, {
                    11.261, 11.123699999999998`}}, {{12., 
                    10.874699999999999`}, {12.739, 11.123699999999998`}}, {{
                    12., 10.874699999999999`}, {12., 11.660699999999999`}}, {{
                    12.439, 12.222699999999998`}, {12., 
                    11.660699999999999`}}, {{12.739, 11.123699999999998`}, {
                    13.149000000000001`, 11.705699999999998`}}, {{12.762, 
                    11.932699999999999`}, {13.236, 12.572699999999998`}}, {{
                    13.421, 10.8707}, {12.739, 11.123699999999998`}}, {{14., 
                    10.221699999999998`}, {13.232, 10.484699999999998`}}, {{
                    13.149000000000001`, 10.035699999999999`}, {12.457, 
                    10.2557}}, {{12.437999999999999`, 9.519699999999998}, {
                    12.457, 10.2557}}, {{12., 8.768699999999999}, {12., 
                    9.5887}}, {{11.561, 9.520699999999998}, {11.543, 
                    10.2557}}, {{10.851, 10.035699999999999`}, {11.543, 
                    10.2557}}, {{11.261, 11.123699999999998`}, {10.579, 
                    10.8707}}, {{10.851, 11.706699999999998`}, {11.261, 
                    11.123699999999998`}}, {{10.765, 12.573699999999999`}, {
                    11.238, 11.932699999999999`}}, {{11.562, 
                    12.222699999999998`}, {12., 11.660699999999999`}}, {{12., 
                    10.874699999999999`}, {12., 10.874699999999999`}}, {{
                    11.261, 11.123699999999998`}, {10.768, 
                    10.484699999999998`}, {11.543, 10.2557}, {12., 9.5887}, {
                    12.457, 10.2557}, {13.232, 10.484699999999998`}, {12.739, 
                    11.123699999999998`}, {12.762, 11.932699999999999`}, {12.,
                     11.660699999999999`}, {11.238, 11.932699999999999`}, {
                    11.261, 11.123699999999998`}}, CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEqDg+4J69sKlRxmHNEYUORhqqDguPH5DN7VR1g
8lVLdZxluNUdDp5a6Lpts6rDDC2JqVcy1R08HlaJrGtXddDLW8y4R1XTwXLL
ibJ98uoOuUAua5EGVL+GQ8elew+4P2s6hDxeOvvIAw24vNu2z3+vVGg5LLhm
8t4CqN/BNG6Xp4+WA8g5gUDzIfp1HN7w7jOYyaXukGJ937/3uhaa+3Tg7ofp
B5rm6i6kAjcf6PrXj8KUHI55m3c6Au2PL/OXE+NShrsP5LzJnYoOa2SiUqyB
7ofYp+ywy5OHSRvoP5h+mP9h5qOHHwA2dXV1
                    "]}, 
                    CurveClosed -> {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                    0, 0, 0, 0, 0, 0, 1, 1, 1}]}, {
                   FaceForm[{
                    RGBColor[0.902, 0.902, 0.902], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}}, {{{21.959, 14.8984}, {20.057, 
                    14.281400000000001`}, {20.351, 13.3764}, {20.5, 
                    12.4404}, {20.5, 11.5004}, {20.5, 10.5594}, {20.351, 
                    9.624400000000001}, {20.057, 8.7184}, {21.959, 
                    8.101400000000002}, {22.317999999999998`, 
                    9.206400000000002}, {22.5, 10.3494}, {22.5, 11.5004}, {
                    22.5, 12.650400000000001`}, {22.317999999999998`, 
                    13.7944}, {21.959, 14.8984}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.9490000000000001, 0.9490000000000001, 
                    0.9490000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{11.5, 22.5}, {11.5, 20.5}, {13.404, 20.5}, {
                    15.231, 19.903}, {16.783, 18.773}, {17.961, 20.391}, {
                    16.064, 21.771}, {13.83, 22.5}, {11.5, 22.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.929, 0.929, 0.929], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{17.9609, 20.3906}, {17.9609, 
                    20.3906}, {16.782899999999998`, 18.7736}, {
                    18.337899999999998`, 17.6416}, {19.4699, 16.0876}, {
                    20.0569, 14.2816}, {21.9589, 14.898599999999998`}, {
                    21.2409, 17.1096}, {19.857899999999997`, 
                    19.008599999999998`}, {17.9609, 20.3906}}}]}, {
                   FaceForm[{
                    RGBColor[0.722, 0.722, 0.722], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 4.2266}, {5.0388, 2.6096000000000004`}, {
                    6.9358, 1.2296000000000005`}, {9.1698, 
                    0.49960000000000004`}, {11.4998, 0.49960000000000004`}, {
                    11.4998, 2.4996000000000005`}, {9.5958, 
                    2.4996000000000005`}, {7.768800000000001, 
                    3.0966000000000005`}, {6.2168, 4.2266}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.7799999999999999, 0.7799999999999999, 
                    0.7799999999999999], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{16.783199999999997`, 4.2266}, {
                    15.231199999999998`, 3.0966000000000005`}, {
                    13.404199999999998`, 2.4996000000000005`}, {
                    11.500199999999996`, 2.4996000000000005`}, {
                    11.500199999999996`, 0.49960000000000004`}, {
                    13.830199999999998`, 0.49960000000000004`}, {
                    16.064199999999996`, 1.2296000000000005`}, {
                    17.961199999999998`, 2.6096000000000004`}, {
                    16.783199999999997`, 4.2266}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.8510000000000001, 0.8510000000000001, 
                    0.8510000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{20.0566, 8.718699999999998}, {19.4696, 
                    6.911699999999998}, {18.3376, 5.358699999999999}, {
                    16.7836, 4.226699999999998}, {17.9606, 
                    2.6096999999999984`}, {19.8586, 3.9906999999999986`}, {
                    21.2416, 5.890699999999999}, {21.9586, 
                    8.101699999999997}, {20.0566, 8.718699999999998}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.6749999999999999, 0.6749999999999999, 
                    0.6749999999999999], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{2.9434, 8.718699999999998}, {1.0414, 
                    8.101699999999997}, {1.7584, 5.890699999999999}, {3.1414, 
                    3.9906999999999986`}, {5.0394, 2.6096999999999984`}, {
                    6.2164, 4.226699999999998}, {4.6624, 5.358699999999999}, {
                    3.5304, 6.911699999999998}, {2.9434, 
                    8.718699999999998}}}]}, {
                   FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 18.7734}, {5.0388, 20.3904}, {6.9358, 
                    21.7704}, {9.1698, 22.5004}, {11.4998, 22.5004}, {11.4998,
                     20.5004}, {9.5958, 20.5004}, {7.768800000000001, 
                    19.903399999999998`}, {6.2168, 18.7734}}}]}, {
                   FaceForm[{
                    RGBColor[0.584, 0.584, 0.584], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{5.0391, 20.3906}, {3.1421, 
                    19.008599999999998`}, {1.7591, 17.1096}, {
                    1.0411000000000006`, 14.898599999999998`}, {
                    2.9431000000000007`, 14.2816}, {3.5301000000000005`, 
                    16.0876}, {4.662100000000001, 17.6416}, {6.2171, 
                    18.7736}, {5.0391, 20.3906}}}]}, {
                   FaceForm[{
                    RGBColor[0.631, 0.631, 0.631], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, {{{1.041, 14.8984}, {
                    0.6819999999999999, 13.7944}, {0.4999999999999999, 
                    12.650400000000001`}, {0.4999999999999999, 11.5004}, {
                    0.4999999999999999, 10.3494}, {0.6819999999999999, 
                    9.206400000000002}, {1.041, 8.101400000000002}, {
                    2.9429999999999996`, 8.7184}, {2.649, 
                    9.624400000000001}, {2.5, 10.5594}, {2.5, 11.5004}, {2.5, 
                    12.4404}, {2.649, 13.3764}, {2.9429999999999996`, 
                    14.281400000000001`}, {1.041, 14.8984}}}]}}, AspectRatio -> 
                 Automatic, ImageSize -> {24., 24.}, 
                 PlotRange -> {{0., 24.}, {0., 24.}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Task UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"8993591e-36fe-4589-8c7a-b3d0765c520b\"", 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Task environment: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["\"Session\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Task type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Scheduled\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Evaluation expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"Function", "[", 
                    RowBox[{"v", ",", 
                    RowBox[{"r$", "=", "v"}]}], "]"}], "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", "}"}], "===", "state$24939"}], ",", "Null", 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]}], 
                    "]"}], "&"}], ")"}], "[", "]"}], "]"}], Short], 
                    "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxCloser"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{
                  Thickness[0.041666666666666664`], {
                   FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     15.5}, {9.501, 15.5}, {9.501, 16.5}, {6.5, 16.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     5.5}, {9.501, 5.5}, {9.501, 6.5}, {6.5, 6.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     13.5}, {9.501, 13.5}, {9.501, 14.5}, {6.5, 14.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     11.5}, {9.501, 11.5}, {9.501, 12.5}, {6.5, 12.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     9.5}, {9.501, 9.5}, {9.501, 10.5}, {6.5, 10.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     7.5}, {9.501, 7.5}, {9.501, 8.5}, {6.5, 8.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 6.5}, {8.5, 6.5}, {
                    8.5, 15.5}, {15.5, 15.5}}, {{16.5, 16.5}, {7.5, 16.5}, {
                    7.5, 5.5}, {16.5, 5.5}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 15.5}, {8.5, 15.5}, {8.5, 6.5}, {15.5, 6.5}}}]}, {
                   RGBColor[0.392, 0.392, 0.392], 
                   Thickness[0.020833333333333332`], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0,
                     2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{10., 10.221699999999998`}, {10.768, 
                    10.484699999999998`}}, {{12.457, 10.2557}, {12., 
                    10.874699999999999`}}, {{11.543, 10.2557}, {12., 
                    10.874699999999999`}}, {{12., 10.874699999999999`}, {
                    11.261, 11.123699999999998`}}, {{12., 
                    10.874699999999999`}, {12.739, 11.123699999999998`}}, {{
                    12., 10.874699999999999`}, {12., 11.660699999999999`}}, {{
                    12.439, 12.222699999999998`}, {12., 
                    11.660699999999999`}}, {{12.739, 11.123699999999998`}, {
                    13.149000000000001`, 11.705699999999998`}}, {{12.762, 
                    11.932699999999999`}, {13.236, 12.572699999999998`}}, {{
                    13.421, 10.8707}, {12.739, 11.123699999999998`}}, {{14., 
                    10.221699999999998`}, {13.232, 10.484699999999998`}}, {{
                    13.149000000000001`, 10.035699999999999`}, {12.457, 
                    10.2557}}, {{12.437999999999999`, 9.519699999999998}, {
                    12.457, 10.2557}}, {{12., 8.768699999999999}, {12., 
                    9.5887}}, {{11.561, 9.520699999999998}, {11.543, 
                    10.2557}}, {{10.851, 10.035699999999999`}, {11.543, 
                    10.2557}}, {{11.261, 11.123699999999998`}, {10.579, 
                    10.8707}}, {{10.851, 11.706699999999998`}, {11.261, 
                    11.123699999999998`}}, {{10.765, 12.573699999999999`}, {
                    11.238, 11.932699999999999`}}, {{11.562, 
                    12.222699999999998`}, {12., 11.660699999999999`}}, {{12., 
                    10.874699999999999`}, {12., 10.874699999999999`}}, {{
                    11.261, 11.123699999999998`}, {10.768, 
                    10.484699999999998`}, {11.543, 10.2557}, {12., 9.5887}, {
                    12.457, 10.2557}, {13.232, 10.484699999999998`}, {12.739, 
                    11.123699999999998`}, {12.762, 11.932699999999999`}, {12.,
                     11.660699999999999`}, {11.238, 11.932699999999999`}, {
                    11.261, 11.123699999999998`}}, CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEqDg+4J69sKlRxmHNEYUORhqqDguPH5DN7VR1g
8lVLdZxluNUdDp5a6Lpts6rDDC2JqVcy1R08HlaJrGtXddDLW8y4R1XTwXLL
ibJ98uoOuUAua5EGVL+GQ8elew+4P2s6hDxeOvvIAw24vNu2z3+vVGg5LLhm
8t4CqN/BNG6Xp4+WA8g5gUDzIfp1HN7w7jOYyaXukGJ937/3uhaa+3Tg7ofp
B5rm6i6kAjcf6PrXj8KUHI55m3c6Au2PL/OXE+NShrsP5LzJnYoOa2SiUqyB
7ofYp+ywy5OHSRvoP5h+mP9h5qOHHwA2dXV1
                    "]}, 
                    CurveClosed -> {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                    0, 0, 0, 0, 0, 0, 1, 1, 1}]}, {
                   FaceForm[{
                    RGBColor[0.902, 0.902, 0.902], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}}, {{{21.959, 14.8984}, {20.057, 
                    14.281400000000001`}, {20.351, 13.3764}, {20.5, 
                    12.4404}, {20.5, 11.5004}, {20.5, 10.5594}, {20.351, 
                    9.624400000000001}, {20.057, 8.7184}, {21.959, 
                    8.101400000000002}, {22.317999999999998`, 
                    9.206400000000002}, {22.5, 10.3494}, {22.5, 11.5004}, {
                    22.5, 12.650400000000001`}, {22.317999999999998`, 
                    13.7944}, {21.959, 14.8984}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.9490000000000001, 0.9490000000000001, 
                    0.9490000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{11.5, 22.5}, {11.5, 20.5}, {13.404, 20.5}, {
                    15.231, 19.903}, {16.783, 18.773}, {17.961, 20.391}, {
                    16.064, 21.771}, {13.83, 22.5}, {11.5, 22.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.929, 0.929, 0.929], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{17.9609, 20.3906}, {17.9609, 
                    20.3906}, {16.782899999999998`, 18.7736}, {
                    18.337899999999998`, 17.6416}, {19.4699, 16.0876}, {
                    20.0569, 14.2816}, {21.9589, 14.898599999999998`}, {
                    21.2409, 17.1096}, {19.857899999999997`, 
                    19.008599999999998`}, {17.9609, 20.3906}}}]}, {
                   FaceForm[{
                    RGBColor[0.722, 0.722, 0.722], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 4.2266}, {5.0388, 2.6096000000000004`}, {
                    6.9358, 1.2296000000000005`}, {9.1698, 
                    0.49960000000000004`}, {11.4998, 0.49960000000000004`}, {
                    11.4998, 2.4996000000000005`}, {9.5958, 
                    2.4996000000000005`}, {7.768800000000001, 
                    3.0966000000000005`}, {6.2168, 4.2266}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.7799999999999999, 0.7799999999999999, 
                    0.7799999999999999], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{16.783199999999997`, 4.2266}, {
                    15.231199999999998`, 3.0966000000000005`}, {
                    13.404199999999998`, 2.4996000000000005`}, {
                    11.500199999999996`, 2.4996000000000005`}, {
                    11.500199999999996`, 0.49960000000000004`}, {
                    13.830199999999998`, 0.49960000000000004`}, {
                    16.064199999999996`, 1.2296000000000005`}, {
                    17.961199999999998`, 2.6096000000000004`}, {
                    16.783199999999997`, 4.2266}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.8510000000000001, 0.8510000000000001, 
                    0.8510000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{20.0566, 8.718699999999998}, {19.4696, 
                    6.911699999999998}, {18.3376, 5.358699999999999}, {
                    16.7836, 4.226699999999998}, {17.9606, 
                    2.6096999999999984`}, {19.8586, 3.9906999999999986`}, {
                    21.2416, 5.890699999999999}, {21.9586, 
                    8.101699999999997}, {20.0566, 8.718699999999998}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.6749999999999999, 0.6749999999999999, 
                    0.6749999999999999], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{2.9434, 8.718699999999998}, {1.0414, 
                    8.101699999999997}, {1.7584, 5.890699999999999}, {3.1414, 
                    3.9906999999999986`}, {5.0394, 2.6096999999999984`}, {
                    6.2164, 4.226699999999998}, {4.6624, 5.358699999999999}, {
                    3.5304, 6.911699999999998}, {2.9434, 
                    8.718699999999998}}}]}, {
                   FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 18.7734}, {5.0388, 20.3904}, {6.9358, 
                    21.7704}, {9.1698, 22.5004}, {11.4998, 22.5004}, {11.4998,
                     20.5004}, {9.5958, 20.5004}, {7.768800000000001, 
                    19.903399999999998`}, {6.2168, 18.7734}}}]}, {
                   FaceForm[{
                    RGBColor[0.584, 0.584, 0.584], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{5.0391, 20.3906}, {3.1421, 
                    19.008599999999998`}, {1.7591, 17.1096}, {
                    1.0411000000000006`, 14.898599999999998`}, {
                    2.9431000000000007`, 14.2816}, {3.5301000000000005`, 
                    16.0876}, {4.662100000000001, 17.6416}, {6.2171, 
                    18.7736}, {5.0391, 20.3906}}}]}, {
                   FaceForm[{
                    RGBColor[0.631, 0.631, 0.631], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, {{{1.041, 14.8984}, {
                    0.6819999999999999, 13.7944}, {0.4999999999999999, 
                    12.650400000000001`}, {0.4999999999999999, 11.5004}, {
                    0.4999999999999999, 10.3494}, {0.6819999999999999, 
                    9.206400000000002}, {1.041, 8.101400000000002}, {
                    2.9429999999999996`, 8.7184}, {2.649, 
                    9.624400000000001}, {2.5, 10.5594}, {2.5, 11.5004}, {2.5, 
                    12.4404}, {2.649, 13.3764}, {2.9429999999999996`, 
                    14.281400000000001`}, {1.041, 14.8984}}}]}}, AspectRatio -> 
                 Automatic, ImageSize -> {24., 24.}, 
                 PlotRange -> {{0., 24.}, {0., 24.}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Task UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"8993591e-36fe-4589-8c7a-b3d0765c520b\"", 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Task environment: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["\"Session\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Task type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Scheduled\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Evaluation expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"Function", "[", 
                    RowBox[{"v", ",", 
                    RowBox[{"r$", "=", "v"}]}], "]"}], "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", "}"}], "===", "state$24939"}], ",", "Null", 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]}], 
                    "]"}], "&"}], ")"}], "[", "]"}], "]"}], Short], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Run interval: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Total run count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\[Infinity]", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"],
         DynamicModuleValues :> {}], 
       StyleBox["]", "NonInterpretableSummary"]}]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->(
     "TaskObject[<|TaskUUID -> 8993591e-36fe-4589-8c7a-b3d0765c520b, \
TaskEnvironment -> Session, TaskType -> Scheduled, <<3>>, \
HandlerFunctionsKeys -> {Task, TaskUUID, TaskType, TaskStatus, \
TaskEnvironment, HandlerFunctions, HandlerFunctionsKeys, EventName, \
EvaluationExpression, <<4>>, Rem<<11>>unt, NextScheduledTime, TotalRunCount, \
MessageOutput, PrintOutput}, AutoRemove -> True|>]"& )],
   False,
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "}"}]], "Output",
 CellChangeTimes->{3.905015712950989*^9, 3.905022383711276*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"55b3bd07-6f33-4c17-b6c9-708cfb736445"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tasks", "[", "]"}]], "Input",
 CellChangeTimes->{{3.905015715090391*^9, 3.905015717440818*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"c23a2d5f-5dc6-4414-abae-dca1f964a081"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.9050157181964417`*^9, 3.905022385868862*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"5eba1c7f-9fac-4805-9551-5603e5cac0d5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["harvest :: Observable \[LongRightArrow] List", "Subsection",
 CellChangeTimes->{{3.6378482693729877`*^9, 3.637848299828258*^9}, {
  3.905015723441448*^9, 
  3.905015728027191*^9}},ExpressionUUID->"f252043b-986d-4959-94c9-\
d1b29dbac849"],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " doesn\[CloseCurlyQuote]t have general reference semantics, so we\
\[CloseCurlyQuote]ll just update a global variable, for illustrative purposes \
(by now you know we\[CloseCurlyQuote]re in a hurry, but see ",
 Cell[BoxData[
  FormBox[
   ButtonBox[
    RowBox[{"this", " ", "StackExchange", " ", "question"}],
    BaseStyle->"Hyperlink",
    ButtonData->{
      URL[
      "http://mathematica.stackexchange.com/questions/79723/how-to-reap-data-\
from-a-scheduledtask"], None},
    ButtonNote->
     "http://mathematica.stackexchange.com/questions/79723/how-to-reap-data-\
from-a-scheduledtask"], TraditionalForm]],ExpressionUUID->
  "1b114c74-0c42-4223-b21a-326e4ef543c0"],
 " for work-in-progress to employ ",
 StyleBox["Reap", "Input"],
 " and ",
 StyleBox["Sow", "Input"],
 "). Also not that this uses ",
 StyleBox["AppendTo", "Input"],
 ", not the most efficient way (see ",
 ButtonBox["this blog entry",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://blog.wolfram.com/2011/12/07/10-tips-for-writing-fast-\
mathematica-code/"], None},
  ButtonNote->
   "http://blog.wolfram.com/2011/12/07/10-tips-for-writing-fast-mathematica-\
code/"],
 " for more), but we digress."
}], "Text",
 CellChangeTimes->{{3.6378509701316223`*^9, 3.637850997857524*^9}, {
  3.637869606437977*^9, 3.6378697097278*^9}, {3.637872193761817*^9, 
  3.637872201455592*^9}, {3.637872266863041*^9, 3.63787229956608*^9}, {
  3.905022394329359*^9, 
  3.9050224054635363`*^9}},ExpressionUUID->"56411f24-148b-4ba0-ac2f-\
92b7431eaa40"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "harvest", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"harvest", "[", "obl_", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"r$", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"subscribe", "[", 
      RowBox[{"obl", ",", 
       RowBox[{"v", "\[Function]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"v", "=!=", "Null"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"r$", ",", "v"}], "]"}]}], "]"}]}]}], "]"}]}], ")"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.637848428174823*^9, 3.6378484333674088`*^9}, {
  3.637849840990284*^9, 3.6378500287338057`*^9}, {3.637850113554809*^9, 
  3.637850166204502*^9}, {3.637850216297187*^9, 3.637850266005764*^9}, {
  3.637850309712736*^9, 3.637850318650449*^9}, {3.637850351092429*^9, 
  3.6378503544589663`*^9}, {3.637850412265045*^9, 3.637850417255883*^9}, {
  3.637850473371234*^9, 3.6378505358392344`*^9}, {3.637850573170973*^9, 
  3.637850621144375*^9}, {3.637850684359952*^9, 3.637850742447541*^9}, {
  3.6378508405366697`*^9, 3.637850918104916*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"4842264b-f6e4-444c-a86d-86c2843c4f4e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r$", "=", "0"}], ";", 
  RowBox[{"Dynamic", "[", "r$", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"harvest", "[", 
   RowBox[{"dispense", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.637850055277776*^9, 3.6378500766446667`*^9}, {
   3.6378504199692287`*^9, 3.637850429048712*^9}, 3.637850513281517*^9, 
   3.637850551267152*^9, {3.637850625997203*^9, 3.6378506507192173`*^9}, {
   3.637850749363852*^9, 3.6378507597004232`*^9}, {3.63785088777225*^9, 
   3.63785089165773*^9}, {3.905015749749054*^9, 3.905015753894556*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"9868846d-e639-40a1-9734-b9a6f4b77204"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`r$, StandardForm],
  ImageSizeCache->{98., {4.1535, 12.675}}]], "Output",
 CellChangeTimes->{{3.637850070804014*^9, 3.637850077165847*^9}, 
   3.63785017426929*^9, 3.6378502196982718`*^9, {3.637850327139587*^9, 
   3.637850356699781*^9}, 3.637850429988997*^9, 3.637850482993452*^9, {
   3.637850513948777*^9, 3.637850539989393*^9}, {3.637850632322926*^9, 
   3.6378506515886383`*^9}, 3.637850760266107*^9, {3.6378508922486343`*^9, 
   3.637850919911375*^9}, 3.6378514068859653`*^9, 3.63785182187508*^9, 
   3.63785219209918*^9, 3.6378524632643137`*^9, 3.63786971631579*^9, 
   3.637872174327683*^9, 3.905015755154171*^9, 3.9050158023422737`*^9, 
   3.9050224300016413`*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"6d24f9c7-3991-454b-8b4f-eea1d0274b6d"]
}, Open  ]],

Cell["\<\
The task does not clean itself up. We can capture the output list by \
evaluating r$ non-dynamically before doing the cleanup:\
\>", "Text",
 CellChangeTimes->{{3.905022445765663*^9, 
  3.9050225108562527`*^9}},ExpressionUUID->"5ec8013d-2f3b-4f72-aa49-\
ff541f1be72a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myTemp$", "=", "r$"}]], "Input",
 CellChangeTimes->{{3.63785141463484*^9, 3.6378514149471188`*^9}, {
  3.905015812261736*^9, 3.9050158168119307`*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"c5662f40-04a0-418c-a4fe-09db8de1f462"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.637851415831867*^9, 3.6378518219503937`*^9, 
  3.6378521921411057`*^9, 3.637852463311041*^9, 3.6378697226812267`*^9, 
  3.637872180380558*^9, 3.9050158177653713`*^9, 3.905022472563425*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"4750d80a-1b6b-4e42-af44-75e7c0b8b2f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cleanupAllTasks", "[", "]"}]], "Input",
 CellChangeTimes->{{3.637791811602421*^9, 3.637791815060354*^9}, {
  3.9050158225062647`*^9, 3.905015824499156*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"8bc95361-8ce3-45f0-ae01-95fa1479939b"],

Cell[BoxData[
 RowBox[{"{", 
  TagBox[
   TemplateBox[{
     RowBox[{
       StyleBox[
        TagBox["TaskObject", "SummaryHead"], "NonInterpretableSummary"], 
       StyleBox["[", "NonInterpretableSummary"], 
       DynamicModuleBox[{
        Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxOpener"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{
                  Thickness[0.041666666666666664`], {
                   FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     15.5}, {9.501, 15.5}, {9.501, 16.5}, {6.5, 16.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     5.5}, {9.501, 5.5}, {9.501, 6.5}, {6.5, 6.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     13.5}, {9.501, 13.5}, {9.501, 14.5}, {6.5, 14.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     11.5}, {9.501, 11.5}, {9.501, 12.5}, {6.5, 12.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     9.5}, {9.501, 9.5}, {9.501, 10.5}, {6.5, 10.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     7.5}, {9.501, 7.5}, {9.501, 8.5}, {6.5, 8.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 6.5}, {8.5, 6.5}, {
                    8.5, 15.5}, {15.5, 15.5}}, {{16.5, 16.5}, {7.5, 16.5}, {
                    7.5, 5.5}, {16.5, 5.5}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 15.5}, {8.5, 15.5}, {8.5, 6.5}, {15.5, 6.5}}}]}, {
                   RGBColor[0.392, 0.392, 0.392], 
                   Thickness[0.020833333333333332`], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0,
                     2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{10., 10.221699999999998`}, {10.768, 
                    10.484699999999998`}}, {{12.457, 10.2557}, {12., 
                    10.874699999999999`}}, {{11.543, 10.2557}, {12., 
                    10.874699999999999`}}, {{12., 10.874699999999999`}, {
                    11.261, 11.123699999999998`}}, {{12., 
                    10.874699999999999`}, {12.739, 11.123699999999998`}}, {{
                    12., 10.874699999999999`}, {12., 11.660699999999999`}}, {{
                    12.439, 12.222699999999998`}, {12., 
                    11.660699999999999`}}, {{12.739, 11.123699999999998`}, {
                    13.149000000000001`, 11.705699999999998`}}, {{12.762, 
                    11.932699999999999`}, {13.236, 12.572699999999998`}}, {{
                    13.421, 10.8707}, {12.739, 11.123699999999998`}}, {{14., 
                    10.221699999999998`}, {13.232, 10.484699999999998`}}, {{
                    13.149000000000001`, 10.035699999999999`}, {12.457, 
                    10.2557}}, {{12.437999999999999`, 9.519699999999998}, {
                    12.457, 10.2557}}, {{12., 8.768699999999999}, {12., 
                    9.5887}}, {{11.561, 9.520699999999998}, {11.543, 
                    10.2557}}, {{10.851, 10.035699999999999`}, {11.543, 
                    10.2557}}, {{11.261, 11.123699999999998`}, {10.579, 
                    10.8707}}, {{10.851, 11.706699999999998`}, {11.261, 
                    11.123699999999998`}}, {{10.765, 12.573699999999999`}, {
                    11.238, 11.932699999999999`}}, {{11.562, 
                    12.222699999999998`}, {12., 11.660699999999999`}}, {{12., 
                    10.874699999999999`}, {12., 10.874699999999999`}}, {{
                    11.261, 11.123699999999998`}, {10.768, 
                    10.484699999999998`}, {11.543, 10.2557}, {12., 9.5887}, {
                    12.457, 10.2557}, {13.232, 10.484699999999998`}, {12.739, 
                    11.123699999999998`}, {12.762, 11.932699999999999`}, {12.,
                     11.660699999999999`}, {11.238, 11.932699999999999`}, {
                    11.261, 11.123699999999998`}}, CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEqDg+4J69sKlRxmHNEYUORhqqDguPH5DN7VR1g
8lVLdZxluNUdDp5a6Lpts6rDDC2JqVcy1R08HlaJrGtXddDLW8y4R1XTwXLL
ibJ98uoOuUAua5EGVL+GQ8elew+4P2s6hDxeOvvIAw24vNu2z3+vVGg5LLhm
8t4CqN/BNG6Xp4+WA8g5gUDzIfp1HN7w7jOYyaXukGJ937/3uhaa+3Tg7ofp
B5rm6i6kAjcf6PrXj8KUHI55m3c6Au2PL/OXE+NShrsP5LzJnYoOa2SiUqyB
7ofYp+ywy5OHSRvoP5h+mP9h5qOHHwA2dXV1
                    "]}, 
                    CurveClosed -> {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                    0, 0, 0, 0, 0, 0, 1, 1, 1}]}, {
                   FaceForm[{
                    RGBColor[0.902, 0.902, 0.902], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}}, {{{21.959, 14.8984}, {20.057, 
                    14.281400000000001`}, {20.351, 13.3764}, {20.5, 
                    12.4404}, {20.5, 11.5004}, {20.5, 10.5594}, {20.351, 
                    9.624400000000001}, {20.057, 8.7184}, {21.959, 
                    8.101400000000002}, {22.317999999999998`, 
                    9.206400000000002}, {22.5, 10.3494}, {22.5, 11.5004}, {
                    22.5, 12.650400000000001`}, {22.317999999999998`, 
                    13.7944}, {21.959, 14.8984}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.9490000000000001, 0.9490000000000001, 
                    0.9490000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{11.5, 22.5}, {11.5, 20.5}, {13.404, 20.5}, {
                    15.231, 19.903}, {16.783, 18.773}, {17.961, 20.391}, {
                    16.064, 21.771}, {13.83, 22.5}, {11.5, 22.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.929, 0.929, 0.929], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{17.9609, 20.3906}, {17.9609, 
                    20.3906}, {16.782899999999998`, 18.7736}, {
                    18.337899999999998`, 17.6416}, {19.4699, 16.0876}, {
                    20.0569, 14.2816}, {21.9589, 14.898599999999998`}, {
                    21.2409, 17.1096}, {19.857899999999997`, 
                    19.008599999999998`}, {17.9609, 20.3906}}}]}, {
                   FaceForm[{
                    RGBColor[0.722, 0.722, 0.722], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 4.2266}, {5.0388, 2.6096000000000004`}, {
                    6.9358, 1.2296000000000005`}, {9.1698, 
                    0.49960000000000004`}, {11.4998, 0.49960000000000004`}, {
                    11.4998, 2.4996000000000005`}, {9.5958, 
                    2.4996000000000005`}, {7.768800000000001, 
                    3.0966000000000005`}, {6.2168, 4.2266}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.7799999999999999, 0.7799999999999999, 
                    0.7799999999999999], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{16.783199999999997`, 4.2266}, {
                    15.231199999999998`, 3.0966000000000005`}, {
                    13.404199999999998`, 2.4996000000000005`}, {
                    11.500199999999996`, 2.4996000000000005`}, {
                    11.500199999999996`, 0.49960000000000004`}, {
                    13.830199999999998`, 0.49960000000000004`}, {
                    16.064199999999996`, 1.2296000000000005`}, {
                    17.961199999999998`, 2.6096000000000004`}, {
                    16.783199999999997`, 4.2266}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.8510000000000001, 0.8510000000000001, 
                    0.8510000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{20.0566, 8.718699999999998}, {19.4696, 
                    6.911699999999998}, {18.3376, 5.358699999999999}, {
                    16.7836, 4.226699999999998}, {17.9606, 
                    2.6096999999999984`}, {19.8586, 3.9906999999999986`}, {
                    21.2416, 5.890699999999999}, {21.9586, 
                    8.101699999999997}, {20.0566, 8.718699999999998}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.6749999999999999, 0.6749999999999999, 
                    0.6749999999999999], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{2.9434, 8.718699999999998}, {1.0414, 
                    8.101699999999997}, {1.7584, 5.890699999999999}, {3.1414, 
                    3.9906999999999986`}, {5.0394, 2.6096999999999984`}, {
                    6.2164, 4.226699999999998}, {4.6624, 5.358699999999999}, {
                    3.5304, 6.911699999999998}, {2.9434, 
                    8.718699999999998}}}]}, {
                   FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 18.7734}, {5.0388, 20.3904}, {6.9358, 
                    21.7704}, {9.1698, 22.5004}, {11.4998, 22.5004}, {11.4998,
                     20.5004}, {9.5958, 20.5004}, {7.768800000000001, 
                    19.903399999999998`}, {6.2168, 18.7734}}}]}, {
                   FaceForm[{
                    RGBColor[0.584, 0.584, 0.584], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{5.0391, 20.3906}, {3.1421, 
                    19.008599999999998`}, {1.7591, 17.1096}, {
                    1.0411000000000006`, 14.898599999999998`}, {
                    2.9431000000000007`, 14.2816}, {3.5301000000000005`, 
                    16.0876}, {4.662100000000001, 17.6416}, {6.2171, 
                    18.7736}, {5.0391, 20.3906}}}]}, {
                   FaceForm[{
                    RGBColor[0.631, 0.631, 0.631], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, {{{1.041, 14.8984}, {
                    0.6819999999999999, 13.7944}, {0.4999999999999999, 
                    12.650400000000001`}, {0.4999999999999999, 11.5004}, {
                    0.4999999999999999, 10.3494}, {0.6819999999999999, 
                    9.206400000000002}, {1.041, 8.101400000000002}, {
                    2.9429999999999996`, 8.7184}, {2.649, 
                    9.624400000000001}, {2.5, 10.5594}, {2.5, 11.5004}, {2.5, 
                    12.4404}, {2.649, 13.3764}, {2.9429999999999996`, 
                    14.281400000000001`}, {1.041, 14.8984}}}]}}, AspectRatio -> 
                 Automatic, ImageSize -> {24., 24.}, 
                 PlotRange -> {{0., 24.}, {0., 24.}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Task UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"097b956f-fb2f-42c7-a939-3778d92aff16\"", 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Task environment: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["\"Session\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Task type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Scheduled\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Evaluation expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"Function", "[", 
                    RowBox[{"v", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"v", "=!=", "Null"}], ",", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"r$", ",", "v"}], "]"}]}], "]"}]}], "]"}], "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}], "&"}], ")"}], "[", "]"}], "]"}], Short], 
                    "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxCloser"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{
                  Thickness[0.041666666666666664`], {
                   FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     15.5}, {9.501, 15.5}, {9.501, 16.5}, {6.5, 16.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     5.5}, {9.501, 5.5}, {9.501, 6.5}, {6.5, 6.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     13.5}, {9.501, 13.5}, {9.501, 14.5}, {6.5, 14.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     11.5}, {9.501, 11.5}, {9.501, 12.5}, {6.5, 12.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     9.5}, {9.501, 9.5}, {9.501, 10.5}, {6.5, 10.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     7.5}, {9.501, 7.5}, {9.501, 8.5}, {6.5, 8.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 6.5}, {8.5, 6.5}, {
                    8.5, 15.5}, {15.5, 15.5}}, {{16.5, 16.5}, {7.5, 16.5}, {
                    7.5, 5.5}, {16.5, 5.5}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 15.5}, {8.5, 15.5}, {8.5, 6.5}, {15.5, 6.5}}}]}, {
                   RGBColor[0.392, 0.392, 0.392], 
                   Thickness[0.020833333333333332`], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0,
                     2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{10., 10.221699999999998`}, {10.768, 
                    10.484699999999998`}}, {{12.457, 10.2557}, {12., 
                    10.874699999999999`}}, {{11.543, 10.2557}, {12., 
                    10.874699999999999`}}, {{12., 10.874699999999999`}, {
                    11.261, 11.123699999999998`}}, {{12., 
                    10.874699999999999`}, {12.739, 11.123699999999998`}}, {{
                    12., 10.874699999999999`}, {12., 11.660699999999999`}}, {{
                    12.439, 12.222699999999998`}, {12., 
                    11.660699999999999`}}, {{12.739, 11.123699999999998`}, {
                    13.149000000000001`, 11.705699999999998`}}, {{12.762, 
                    11.932699999999999`}, {13.236, 12.572699999999998`}}, {{
                    13.421, 10.8707}, {12.739, 11.123699999999998`}}, {{14., 
                    10.221699999999998`}, {13.232, 10.484699999999998`}}, {{
                    13.149000000000001`, 10.035699999999999`}, {12.457, 
                    10.2557}}, {{12.437999999999999`, 9.519699999999998}, {
                    12.457, 10.2557}}, {{12., 8.768699999999999}, {12., 
                    9.5887}}, {{11.561, 9.520699999999998}, {11.543, 
                    10.2557}}, {{10.851, 10.035699999999999`}, {11.543, 
                    10.2557}}, {{11.261, 11.123699999999998`}, {10.579, 
                    10.8707}}, {{10.851, 11.706699999999998`}, {11.261, 
                    11.123699999999998`}}, {{10.765, 12.573699999999999`}, {
                    11.238, 11.932699999999999`}}, {{11.562, 
                    12.222699999999998`}, {12., 11.660699999999999`}}, {{12., 
                    10.874699999999999`}, {12., 10.874699999999999`}}, {{
                    11.261, 11.123699999999998`}, {10.768, 
                    10.484699999999998`}, {11.543, 10.2557}, {12., 9.5887}, {
                    12.457, 10.2557}, {13.232, 10.484699999999998`}, {12.739, 
                    11.123699999999998`}, {12.762, 11.932699999999999`}, {12.,
                     11.660699999999999`}, {11.238, 11.932699999999999`}, {
                    11.261, 11.123699999999998`}}, CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEqDg+4J69sKlRxmHNEYUORhqqDguPH5DN7VR1g
8lVLdZxluNUdDp5a6Lpts6rDDC2JqVcy1R08HlaJrGtXddDLW8y4R1XTwXLL
ibJ98uoOuUAua5EGVL+GQ8elew+4P2s6hDxeOvvIAw24vNu2z3+vVGg5LLhm
8t4CqN/BNG6Xp4+WA8g5gUDzIfp1HN7w7jOYyaXukGJ937/3uhaa+3Tg7ofp
B5rm6i6kAjcf6PrXj8KUHI55m3c6Au2PL/OXE+NShrsP5LzJnYoOa2SiUqyB
7ofYp+ywy5OHSRvoP5h+mP9h5qOHHwA2dXV1
                    "]}, 
                    CurveClosed -> {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                    0, 0, 0, 0, 0, 0, 1, 1, 1}]}, {
                   FaceForm[{
                    RGBColor[0.902, 0.902, 0.902], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}}, {{{21.959, 14.8984}, {20.057, 
                    14.281400000000001`}, {20.351, 13.3764}, {20.5, 
                    12.4404}, {20.5, 11.5004}, {20.5, 10.5594}, {20.351, 
                    9.624400000000001}, {20.057, 8.7184}, {21.959, 
                    8.101400000000002}, {22.317999999999998`, 
                    9.206400000000002}, {22.5, 10.3494}, {22.5, 11.5004}, {
                    22.5, 12.650400000000001`}, {22.317999999999998`, 
                    13.7944}, {21.959, 14.8984}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.9490000000000001, 0.9490000000000001, 
                    0.9490000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{11.5, 22.5}, {11.5, 20.5}, {13.404, 20.5}, {
                    15.231, 19.903}, {16.783, 18.773}, {17.961, 20.391}, {
                    16.064, 21.771}, {13.83, 22.5}, {11.5, 22.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.929, 0.929, 0.929], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{17.9609, 20.3906}, {17.9609, 
                    20.3906}, {16.782899999999998`, 18.7736}, {
                    18.337899999999998`, 17.6416}, {19.4699, 16.0876}, {
                    20.0569, 14.2816}, {21.9589, 14.898599999999998`}, {
                    21.2409, 17.1096}, {19.857899999999997`, 
                    19.008599999999998`}, {17.9609, 20.3906}}}]}, {
                   FaceForm[{
                    RGBColor[0.722, 0.722, 0.722], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 4.2266}, {5.0388, 2.6096000000000004`}, {
                    6.9358, 1.2296000000000005`}, {9.1698, 
                    0.49960000000000004`}, {11.4998, 0.49960000000000004`}, {
                    11.4998, 2.4996000000000005`}, {9.5958, 
                    2.4996000000000005`}, {7.768800000000001, 
                    3.0966000000000005`}, {6.2168, 4.2266}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.7799999999999999, 0.7799999999999999, 
                    0.7799999999999999], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{16.783199999999997`, 4.2266}, {
                    15.231199999999998`, 3.0966000000000005`}, {
                    13.404199999999998`, 2.4996000000000005`}, {
                    11.500199999999996`, 2.4996000000000005`}, {
                    11.500199999999996`, 0.49960000000000004`}, {
                    13.830199999999998`, 0.49960000000000004`}, {
                    16.064199999999996`, 1.2296000000000005`}, {
                    17.961199999999998`, 2.6096000000000004`}, {
                    16.783199999999997`, 4.2266}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.8510000000000001, 0.8510000000000001, 
                    0.8510000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{20.0566, 8.718699999999998}, {19.4696, 
                    6.911699999999998}, {18.3376, 5.358699999999999}, {
                    16.7836, 4.226699999999998}, {17.9606, 
                    2.6096999999999984`}, {19.8586, 3.9906999999999986`}, {
                    21.2416, 5.890699999999999}, {21.9586, 
                    8.101699999999997}, {20.0566, 8.718699999999998}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.6749999999999999, 0.6749999999999999, 
                    0.6749999999999999], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{2.9434, 8.718699999999998}, {1.0414, 
                    8.101699999999997}, {1.7584, 5.890699999999999}, {3.1414, 
                    3.9906999999999986`}, {5.0394, 2.6096999999999984`}, {
                    6.2164, 4.226699999999998}, {4.6624, 5.358699999999999}, {
                    3.5304, 6.911699999999998}, {2.9434, 
                    8.718699999999998}}}]}, {
                   FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 18.7734}, {5.0388, 20.3904}, {6.9358, 
                    21.7704}, {9.1698, 22.5004}, {11.4998, 22.5004}, {11.4998,
                     20.5004}, {9.5958, 20.5004}, {7.768800000000001, 
                    19.903399999999998`}, {6.2168, 18.7734}}}]}, {
                   FaceForm[{
                    RGBColor[0.584, 0.584, 0.584], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{5.0391, 20.3906}, {3.1421, 
                    19.008599999999998`}, {1.7591, 17.1096}, {
                    1.0411000000000006`, 14.898599999999998`}, {
                    2.9431000000000007`, 14.2816}, {3.5301000000000005`, 
                    16.0876}, {4.662100000000001, 17.6416}, {6.2171, 
                    18.7736}, {5.0391, 20.3906}}}]}, {
                   FaceForm[{
                    RGBColor[0.631, 0.631, 0.631], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, {{{1.041, 14.8984}, {
                    0.6819999999999999, 13.7944}, {0.4999999999999999, 
                    12.650400000000001`}, {0.4999999999999999, 11.5004}, {
                    0.4999999999999999, 10.3494}, {0.6819999999999999, 
                    9.206400000000002}, {1.041, 8.101400000000002}, {
                    2.9429999999999996`, 8.7184}, {2.649, 
                    9.624400000000001}, {2.5, 10.5594}, {2.5, 11.5004}, {2.5, 
                    12.4404}, {2.649, 13.3764}, {2.9429999999999996`, 
                    14.281400000000001`}, {1.041, 14.8984}}}]}}, AspectRatio -> 
                 Automatic, ImageSize -> {24., 24.}, 
                 PlotRange -> {{0., 24.}, {0., 24.}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Task UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"097b956f-fb2f-42c7-a939-3778d92aff16\"", 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Task environment: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["\"Session\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Task type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Scheduled\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Evaluation expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"Function", "[", 
                    RowBox[{"v", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"v", "=!=", "Null"}], ",", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"r$", ",", "v"}], "]"}]}], "]"}]}], "]"}], "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}], "&"}], ")"}], "[", "]"}], "]"}], Short], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Run interval: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Total run count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\[Infinity]", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"],
         DynamicModuleValues :> {}], 
       StyleBox["]", "NonInterpretableSummary"]}]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->(
     "TaskObject[<|TaskUUID -> 097b956f-fb2f-42c7-a939-3778d92aff16, \
TaskEnvironment -> Session, TaskType -> Scheduled, <<3>>, \
HandlerFunctionsKeys -> {Task, TaskUUID, TaskType, TaskStatus, \
TaskEnvironment, HandlerFunctions, HandlerFunctionsKeys, EventName, \
EvaluationExpression, <<4>>, Re<<12>>unt, NextScheduledTime, TotalRunCount, \
MessageOutput, PrintOutput}, AutoRemove -> True|>]"& )],
   False,
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "}"}]], "Output",
 CellChangeTimes->{3.90501582555575*^9, 3.905022477668002*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"7b66db36-9eef-41d3-9d7c-417c194cf581"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tasks", "[", "]"}]], "Input",
 CellChangeTimes->{{3.905015826771656*^9, 3.905015828509988*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"bf0079c2-df1c-4636-ab86-51021ab0d6e0"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.9050158298413973`*^9, 3.905022479713603*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"8cedd4a6-3a00-4638-b166-2768670cc0c5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["takeObservable :: Observable \[LongRightArrow] Integer \
\[LongRightArrow] Observable", "Subsection",
 CellChangeTimes->{{3.6378710442754803`*^9, 3.6378710621107283`*^9}, {
  3.637871303801304*^9, 3.637871329731241*^9}, {3.905015836117153*^9, 
  3.905015842527442*^9}},ExpressionUUID->"187f8673-6745-4d39-82cd-\
6b0c5b23b849"],

Cell[TextData[{
 "Here\[CloseCurlyQuote]s our version of ",
 StyleBox["take",
  FontSlant->"Italic"],
 " for observables:"
}], "Text",
 CellChangeTimes->{{3.637872324889669*^9, 3.637872332957597*^9}, {
  3.905015847663987*^9, 
  3.905015852620739*^9}},ExpressionUUID->"19e597bd-c064-4bd0-bddb-\
56f4e9735572"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "takeObservable", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"takeObservable", "[", 
    RowBox[{"obl_", ",", 
     RowBox[{"n_Integer", "/;", 
      RowBox[{"n", "\[GreaterEqual]", "0"}]}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"newObl", ",", 
       RowBox[{"state", "=", "Null"}], ",", 
       RowBox[{"count", "=", "n"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"newObl", "[", "]"}], ":=", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"count", "===", "0"}], ",", "Null", ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"count", "--"}], ";", "\[IndentingNewLine]", 
          RowBox[{"obl", "[", "]"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "newObl"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.637871429583392*^9, 3.637871637006751*^9}, {
   3.6378716676417217`*^9, 3.63787173261863*^9}, {3.6378718852137623`*^9, 
   3.6378718918210583`*^9}, 3.63787193127701*^9},
 CellLabel->
  "In[104]:=",ExpressionUUID->"91245056-dc1b-4ebf-a5c1-d43470427bef"],

Cell["and the usual test:", "Text",
 CellChangeTimes->{{3.637872347501925*^9, 
  3.637872350683687*^9}},ExpressionUUID->"3a0cbf6d-b953-43f8-81c4-\
60f206847b47"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r$", "=", "0"}], ";", 
  RowBox[{"Dynamic", "[", "r$", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"subscribe", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"takeObservable", "[", 
     RowBox[{
      RowBox[{"integersFromObservable", "[", "42", "]"}], ",", "3"}], "]"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"v", "\[Function]", 
     RowBox[{"(", 
      RowBox[{"r$", "=", "v"}], ")"}]}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6378717741534433`*^9, 3.637871807861219*^9}, {
   3.637871955882432*^9, 3.637871957040863*^9}, 3.637872105214197*^9, {
   3.9050158677077513`*^9, 3.905015869464954*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"2e9862ed-0ce0-4d03-ba2a-4d805f9733b8"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`r$, StandardForm],
  ImageSizeCache->{47., {0.23399999999999999`, 13.884}}]], "Output",
 CellChangeTimes->{
  3.6378718204339733`*^9, 3.6378718947000923`*^9, {3.6378719355630207`*^9, 
   3.637871958043686*^9}, 3.905015870050448*^9, 3.905022536866975*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"61e87b99-35d2-4b1d-8496-313acd6381a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cleanupAllTasks", "[", "]"}]], "Input",
 CellChangeTimes->{{3.637871812211532*^9, 3.6378718165709963`*^9}, {
  3.905015877730805*^9, 3.905015878195178*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"875c8921-2111-46da-b3bb-524d3e633eb7"],

Cell[BoxData[
 RowBox[{"{", 
  TagBox[
   TemplateBox[{
     RowBox[{
       StyleBox[
        TagBox["TaskObject", "SummaryHead"], "NonInterpretableSummary"], 
       StyleBox["[", "NonInterpretableSummary"], 
       DynamicModuleBox[{
        Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxOpener"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{
                  Thickness[0.041666666666666664`], {
                   FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     15.5}, {9.501, 15.5}, {9.501, 16.5}, {6.5, 16.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     5.5}, {9.501, 5.5}, {9.501, 6.5}, {6.5, 6.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     13.5}, {9.501, 13.5}, {9.501, 14.5}, {6.5, 14.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     11.5}, {9.501, 11.5}, {9.501, 12.5}, {6.5, 12.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     9.5}, {9.501, 9.5}, {9.501, 10.5}, {6.5, 10.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     7.5}, {9.501, 7.5}, {9.501, 8.5}, {6.5, 8.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 6.5}, {8.5, 6.5}, {
                    8.5, 15.5}, {15.5, 15.5}}, {{16.5, 16.5}, {7.5, 16.5}, {
                    7.5, 5.5}, {16.5, 5.5}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 15.5}, {8.5, 15.5}, {8.5, 6.5}, {15.5, 6.5}}}]}, {
                   RGBColor[0.392, 0.392, 0.392], 
                   Thickness[0.020833333333333332`], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0,
                     2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{10., 10.221699999999998`}, {10.768, 
                    10.484699999999998`}}, {{12.457, 10.2557}, {12., 
                    10.874699999999999`}}, {{11.543, 10.2557}, {12., 
                    10.874699999999999`}}, {{12., 10.874699999999999`}, {
                    11.261, 11.123699999999998`}}, {{12., 
                    10.874699999999999`}, {12.739, 11.123699999999998`}}, {{
                    12., 10.874699999999999`}, {12., 11.660699999999999`}}, {{
                    12.439, 12.222699999999998`}, {12., 
                    11.660699999999999`}}, {{12.739, 11.123699999999998`}, {
                    13.149000000000001`, 11.705699999999998`}}, {{12.762, 
                    11.932699999999999`}, {13.236, 12.572699999999998`}}, {{
                    13.421, 10.8707}, {12.739, 11.123699999999998`}}, {{14., 
                    10.221699999999998`}, {13.232, 10.484699999999998`}}, {{
                    13.149000000000001`, 10.035699999999999`}, {12.457, 
                    10.2557}}, {{12.437999999999999`, 9.519699999999998}, {
                    12.457, 10.2557}}, {{12., 8.768699999999999}, {12., 
                    9.5887}}, {{11.561, 9.520699999999998}, {11.543, 
                    10.2557}}, {{10.851, 10.035699999999999`}, {11.543, 
                    10.2557}}, {{11.261, 11.123699999999998`}, {10.579, 
                    10.8707}}, {{10.851, 11.706699999999998`}, {11.261, 
                    11.123699999999998`}}, {{10.765, 12.573699999999999`}, {
                    11.238, 11.932699999999999`}}, {{11.562, 
                    12.222699999999998`}, {12., 11.660699999999999`}}, {{12., 
                    10.874699999999999`}, {12., 10.874699999999999`}}, {{
                    11.261, 11.123699999999998`}, {10.768, 
                    10.484699999999998`}, {11.543, 10.2557}, {12., 9.5887}, {
                    12.457, 10.2557}, {13.232, 10.484699999999998`}, {12.739, 
                    11.123699999999998`}, {12.762, 11.932699999999999`}, {12.,
                     11.660699999999999`}, {11.238, 11.932699999999999`}, {
                    11.261, 11.123699999999998`}}, CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEqDg+4J69sKlRxmHNEYUORhqqDguPH5DN7VR1g
8lVLdZxluNUdDp5a6Lpts6rDDC2JqVcy1R08HlaJrGtXddDLW8y4R1XTwXLL
ibJ98uoOuUAua5EGVL+GQ8elew+4P2s6hDxeOvvIAw24vNu2z3+vVGg5LLhm
8t4CqN/BNG6Xp4+WA8g5gUDzIfp1HN7w7jOYyaXukGJ937/3uhaa+3Tg7ofp
B5rm6i6kAjcf6PrXj8KUHI55m3c6Au2PL/OXE+NShrsP5LzJnYoOa2SiUqyB
7ofYp+ywy5OHSRvoP5h+mP9h5qOHHwA2dXV1
                    "]}, 
                    CurveClosed -> {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                    0, 0, 0, 0, 0, 0, 1, 1, 1}]}, {
                   FaceForm[{
                    RGBColor[0.902, 0.902, 0.902], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}}, {{{21.959, 14.8984}, {20.057, 
                    14.281400000000001`}, {20.351, 13.3764}, {20.5, 
                    12.4404}, {20.5, 11.5004}, {20.5, 10.5594}, {20.351, 
                    9.624400000000001}, {20.057, 8.7184}, {21.959, 
                    8.101400000000002}, {22.317999999999998`, 
                    9.206400000000002}, {22.5, 10.3494}, {22.5, 11.5004}, {
                    22.5, 12.650400000000001`}, {22.317999999999998`, 
                    13.7944}, {21.959, 14.8984}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.9490000000000001, 0.9490000000000001, 
                    0.9490000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{11.5, 22.5}, {11.5, 20.5}, {13.404, 20.5}, {
                    15.231, 19.903}, {16.783, 18.773}, {17.961, 20.391}, {
                    16.064, 21.771}, {13.83, 22.5}, {11.5, 22.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.929, 0.929, 0.929], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{17.9609, 20.3906}, {17.9609, 
                    20.3906}, {16.782899999999998`, 18.7736}, {
                    18.337899999999998`, 17.6416}, {19.4699, 16.0876}, {
                    20.0569, 14.2816}, {21.9589, 14.898599999999998`}, {
                    21.2409, 17.1096}, {19.857899999999997`, 
                    19.008599999999998`}, {17.9609, 20.3906}}}]}, {
                   FaceForm[{
                    RGBColor[0.722, 0.722, 0.722], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 4.2266}, {5.0388, 2.6096000000000004`}, {
                    6.9358, 1.2296000000000005`}, {9.1698, 
                    0.49960000000000004`}, {11.4998, 0.49960000000000004`}, {
                    11.4998, 2.4996000000000005`}, {9.5958, 
                    2.4996000000000005`}, {7.768800000000001, 
                    3.0966000000000005`}, {6.2168, 4.2266}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.7799999999999999, 0.7799999999999999, 
                    0.7799999999999999], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{16.783199999999997`, 4.2266}, {
                    15.231199999999998`, 3.0966000000000005`}, {
                    13.404199999999998`, 2.4996000000000005`}, {
                    11.500199999999996`, 2.4996000000000005`}, {
                    11.500199999999996`, 0.49960000000000004`}, {
                    13.830199999999998`, 0.49960000000000004`}, {
                    16.064199999999996`, 1.2296000000000005`}, {
                    17.961199999999998`, 2.6096000000000004`}, {
                    16.783199999999997`, 4.2266}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.8510000000000001, 0.8510000000000001, 
                    0.8510000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{20.0566, 8.718699999999998}, {19.4696, 
                    6.911699999999998}, {18.3376, 5.358699999999999}, {
                    16.7836, 4.226699999999998}, {17.9606, 
                    2.6096999999999984`}, {19.8586, 3.9906999999999986`}, {
                    21.2416, 5.890699999999999}, {21.9586, 
                    8.101699999999997}, {20.0566, 8.718699999999998}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.6749999999999999, 0.6749999999999999, 
                    0.6749999999999999], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{2.9434, 8.718699999999998}, {1.0414, 
                    8.101699999999997}, {1.7584, 5.890699999999999}, {3.1414, 
                    3.9906999999999986`}, {5.0394, 2.6096999999999984`}, {
                    6.2164, 4.226699999999998}, {4.6624, 5.358699999999999}, {
                    3.5304, 6.911699999999998}, {2.9434, 
                    8.718699999999998}}}]}, {
                   FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 18.7734}, {5.0388, 20.3904}, {6.9358, 
                    21.7704}, {9.1698, 22.5004}, {11.4998, 22.5004}, {11.4998,
                     20.5004}, {9.5958, 20.5004}, {7.768800000000001, 
                    19.903399999999998`}, {6.2168, 18.7734}}}]}, {
                   FaceForm[{
                    RGBColor[0.584, 0.584, 0.584], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{5.0391, 20.3906}, {3.1421, 
                    19.008599999999998`}, {1.7591, 17.1096}, {
                    1.0411000000000006`, 14.898599999999998`}, {
                    2.9431000000000007`, 14.2816}, {3.5301000000000005`, 
                    16.0876}, {4.662100000000001, 17.6416}, {6.2171, 
                    18.7736}, {5.0391, 20.3906}}}]}, {
                   FaceForm[{
                    RGBColor[0.631, 0.631, 0.631], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, {{{1.041, 14.8984}, {
                    0.6819999999999999, 13.7944}, {0.4999999999999999, 
                    12.650400000000001`}, {0.4999999999999999, 11.5004}, {
                    0.4999999999999999, 10.3494}, {0.6819999999999999, 
                    9.206400000000002}, {1.041, 8.101400000000002}, {
                    2.9429999999999996`, 8.7184}, {2.649, 
                    9.624400000000001}, {2.5, 10.5594}, {2.5, 11.5004}, {2.5, 
                    12.4404}, {2.649, 13.3764}, {2.9429999999999996`, 
                    14.281400000000001`}, {1.041, 14.8984}}}]}}, AspectRatio -> 
                 Automatic, ImageSize -> {24., 24.}, 
                 PlotRange -> {{0., 24.}, {0., 24.}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Task UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"7499802b-12ef-424e-b017-8d4a33baddcd\"", 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Task environment: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["\"Session\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Task type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Scheduled\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Evaluation expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"Function", "[", 
                    RowBox[{"v", ",", 
                    RowBox[{"r$", "=", "v"}]}], "]"}], "[", 
                    RowBox[{"newObl$28018", "[", "]"}], "]"}], Short], 
                    "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxCloser"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{
                  Thickness[0.041666666666666664`], {
                   FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     15.5}, {9.501, 15.5}, {9.501, 16.5}, {6.5, 16.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     5.5}, {9.501, 5.5}, {9.501, 6.5}, {6.5, 6.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     13.5}, {9.501, 13.5}, {9.501, 14.5}, {6.5, 14.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     11.5}, {9.501, 11.5}, {9.501, 12.5}, {6.5, 12.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     9.5}, {9.501, 9.5}, {9.501, 10.5}, {6.5, 10.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     7.5}, {9.501, 7.5}, {9.501, 8.5}, {6.5, 8.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 6.5}, {8.5, 6.5}, {
                    8.5, 15.5}, {15.5, 15.5}}, {{16.5, 16.5}, {7.5, 16.5}, {
                    7.5, 5.5}, {16.5, 5.5}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 15.5}, {8.5, 15.5}, {8.5, 6.5}, {15.5, 6.5}}}]}, {
                   RGBColor[0.392, 0.392, 0.392], 
                   Thickness[0.020833333333333332`], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0,
                     2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{10., 10.221699999999998`}, {10.768, 
                    10.484699999999998`}}, {{12.457, 10.2557}, {12., 
                    10.874699999999999`}}, {{11.543, 10.2557}, {12., 
                    10.874699999999999`}}, {{12., 10.874699999999999`}, {
                    11.261, 11.123699999999998`}}, {{12., 
                    10.874699999999999`}, {12.739, 11.123699999999998`}}, {{
                    12., 10.874699999999999`}, {12., 11.660699999999999`}}, {{
                    12.439, 12.222699999999998`}, {12., 
                    11.660699999999999`}}, {{12.739, 11.123699999999998`}, {
                    13.149000000000001`, 11.705699999999998`}}, {{12.762, 
                    11.932699999999999`}, {13.236, 12.572699999999998`}}, {{
                    13.421, 10.8707}, {12.739, 11.123699999999998`}}, {{14., 
                    10.221699999999998`}, {13.232, 10.484699999999998`}}, {{
                    13.149000000000001`, 10.035699999999999`}, {12.457, 
                    10.2557}}, {{12.437999999999999`, 9.519699999999998}, {
                    12.457, 10.2557}}, {{12., 8.768699999999999}, {12., 
                    9.5887}}, {{11.561, 9.520699999999998}, {11.543, 
                    10.2557}}, {{10.851, 10.035699999999999`}, {11.543, 
                    10.2557}}, {{11.261, 11.123699999999998`}, {10.579, 
                    10.8707}}, {{10.851, 11.706699999999998`}, {11.261, 
                    11.123699999999998`}}, {{10.765, 12.573699999999999`}, {
                    11.238, 11.932699999999999`}}, {{11.562, 
                    12.222699999999998`}, {12., 11.660699999999999`}}, {{12., 
                    10.874699999999999`}, {12., 10.874699999999999`}}, {{
                    11.261, 11.123699999999998`}, {10.768, 
                    10.484699999999998`}, {11.543, 10.2557}, {12., 9.5887}, {
                    12.457, 10.2557}, {13.232, 10.484699999999998`}, {12.739, 
                    11.123699999999998`}, {12.762, 11.932699999999999`}, {12.,
                     11.660699999999999`}, {11.238, 11.932699999999999`}, {
                    11.261, 11.123699999999998`}}, CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEqDg+4J69sKlRxmHNEYUORhqqDguPH5DN7VR1g
8lVLdZxluNUdDp5a6Lpts6rDDC2JqVcy1R08HlaJrGtXddDLW8y4R1XTwXLL
ibJ98uoOuUAua5EGVL+GQ8elew+4P2s6hDxeOvvIAw24vNu2z3+vVGg5LLhm
8t4CqN/BNG6Xp4+WA8g5gUDzIfp1HN7w7jOYyaXukGJ937/3uhaa+3Tg7ofp
B5rm6i6kAjcf6PrXj8KUHI55m3c6Au2PL/OXE+NShrsP5LzJnYoOa2SiUqyB
7ofYp+ywy5OHSRvoP5h+mP9h5qOHHwA2dXV1
                    "]}, 
                    CurveClosed -> {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                    0, 0, 0, 0, 0, 0, 1, 1, 1}]}, {
                   FaceForm[{
                    RGBColor[0.902, 0.902, 0.902], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}}, {{{21.959, 14.8984}, {20.057, 
                    14.281400000000001`}, {20.351, 13.3764}, {20.5, 
                    12.4404}, {20.5, 11.5004}, {20.5, 10.5594}, {20.351, 
                    9.624400000000001}, {20.057, 8.7184}, {21.959, 
                    8.101400000000002}, {22.317999999999998`, 
                    9.206400000000002}, {22.5, 10.3494}, {22.5, 11.5004}, {
                    22.5, 12.650400000000001`}, {22.317999999999998`, 
                    13.7944}, {21.959, 14.8984}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.9490000000000001, 0.9490000000000001, 
                    0.9490000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{11.5, 22.5}, {11.5, 20.5}, {13.404, 20.5}, {
                    15.231, 19.903}, {16.783, 18.773}, {17.961, 20.391}, {
                    16.064, 21.771}, {13.83, 22.5}, {11.5, 22.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.929, 0.929, 0.929], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{17.9609, 20.3906}, {17.9609, 
                    20.3906}, {16.782899999999998`, 18.7736}, {
                    18.337899999999998`, 17.6416}, {19.4699, 16.0876}, {
                    20.0569, 14.2816}, {21.9589, 14.898599999999998`}, {
                    21.2409, 17.1096}, {19.857899999999997`, 
                    19.008599999999998`}, {17.9609, 20.3906}}}]}, {
                   FaceForm[{
                    RGBColor[0.722, 0.722, 0.722], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 4.2266}, {5.0388, 2.6096000000000004`}, {
                    6.9358, 1.2296000000000005`}, {9.1698, 
                    0.49960000000000004`}, {11.4998, 0.49960000000000004`}, {
                    11.4998, 2.4996000000000005`}, {9.5958, 
                    2.4996000000000005`}, {7.768800000000001, 
                    3.0966000000000005`}, {6.2168, 4.2266}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.7799999999999999, 0.7799999999999999, 
                    0.7799999999999999], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{16.783199999999997`, 4.2266}, {
                    15.231199999999998`, 3.0966000000000005`}, {
                    13.404199999999998`, 2.4996000000000005`}, {
                    11.500199999999996`, 2.4996000000000005`}, {
                    11.500199999999996`, 0.49960000000000004`}, {
                    13.830199999999998`, 0.49960000000000004`}, {
                    16.064199999999996`, 1.2296000000000005`}, {
                    17.961199999999998`, 2.6096000000000004`}, {
                    16.783199999999997`, 4.2266}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.8510000000000001, 0.8510000000000001, 
                    0.8510000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{20.0566, 8.718699999999998}, {19.4696, 
                    6.911699999999998}, {18.3376, 5.358699999999999}, {
                    16.7836, 4.226699999999998}, {17.9606, 
                    2.6096999999999984`}, {19.8586, 3.9906999999999986`}, {
                    21.2416, 5.890699999999999}, {21.9586, 
                    8.101699999999997}, {20.0566, 8.718699999999998}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.6749999999999999, 0.6749999999999999, 
                    0.6749999999999999], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{2.9434, 8.718699999999998}, {1.0414, 
                    8.101699999999997}, {1.7584, 5.890699999999999}, {3.1414, 
                    3.9906999999999986`}, {5.0394, 2.6096999999999984`}, {
                    6.2164, 4.226699999999998}, {4.6624, 5.358699999999999}, {
                    3.5304, 6.911699999999998}, {2.9434, 
                    8.718699999999998}}}]}, {
                   FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 18.7734}, {5.0388, 20.3904}, {6.9358, 
                    21.7704}, {9.1698, 22.5004}, {11.4998, 22.5004}, {11.4998,
                     20.5004}, {9.5958, 20.5004}, {7.768800000000001, 
                    19.903399999999998`}, {6.2168, 18.7734}}}]}, {
                   FaceForm[{
                    RGBColor[0.584, 0.584, 0.584], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{5.0391, 20.3906}, {3.1421, 
                    19.008599999999998`}, {1.7591, 17.1096}, {
                    1.0411000000000006`, 14.898599999999998`}, {
                    2.9431000000000007`, 14.2816}, {3.5301000000000005`, 
                    16.0876}, {4.662100000000001, 17.6416}, {6.2171, 
                    18.7736}, {5.0391, 20.3906}}}]}, {
                   FaceForm[{
                    RGBColor[0.631, 0.631, 0.631], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, {{{1.041, 14.8984}, {
                    0.6819999999999999, 13.7944}, {0.4999999999999999, 
                    12.650400000000001`}, {0.4999999999999999, 11.5004}, {
                    0.4999999999999999, 10.3494}, {0.6819999999999999, 
                    9.206400000000002}, {1.041, 8.101400000000002}, {
                    2.9429999999999996`, 8.7184}, {2.649, 
                    9.624400000000001}, {2.5, 10.5594}, {2.5, 11.5004}, {2.5, 
                    12.4404}, {2.649, 13.3764}, {2.9429999999999996`, 
                    14.281400000000001`}, {1.041, 14.8984}}}]}}, AspectRatio -> 
                 Automatic, ImageSize -> {24., 24.}, 
                 PlotRange -> {{0., 24.}, {0., 24.}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Task UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"7499802b-12ef-424e-b017-8d4a33baddcd\"", 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Task environment: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["\"Session\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Task type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Scheduled\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Evaluation expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"Function", "[", 
                    RowBox[{"v", ",", 
                    RowBox[{"r$", "=", "v"}]}], "]"}], "[", 
                    RowBox[{"newObl$28018", "[", "]"}], "]"}], Short], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Run interval: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Total run count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\[Infinity]", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"],
         DynamicModuleValues :> {}], 
       StyleBox["]", "NonInterpretableSummary"]}]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->(
     "TaskObject[<|TaskUUID -> 7499802b-12ef-424e-b017-8d4a33baddcd, \
TaskEnvironment -> Session, TaskType -> Scheduled, <<3>>, \
HandlerFunctionsKeys -> {Task, TaskUUID, TaskType, TaskStatus, \
TaskEnvironment, HandlerFunctions, HandlerFunctionsKeys, EventName, \
EvaluationExpression, <<4>>, Re<<12>>unt, NextScheduledTime, TotalRunCount, \
MessageOutput, PrintOutput}, AutoRemove -> True|>]"& )],
   False,
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "}"}]], "Output",
 CellChangeTimes->{3.905015879175592*^9, 3.9050225415884323`*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"082c0dca-cc2e-45b8-a4c8-2fb6b30a9566"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tasks", "[", "]"}]], "Input",
 CellChangeTimes->{{3.9050158806666327`*^9, 3.905015882630081*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"fa181177-34bf-46d9-854c-3f0f41533c3b"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.905015883555991*^9, 3.9050225440185003`*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"8508bf87-9ac3-40bf-8705-fc4234c62535"]
}, Open  ]],

Cell["\<\
All that\[CloseCurlyQuote]s left is to produce a new observable by folding a \
binary query function over another observable.\
\>", "Text",
 CellChangeTimes->{{3.637790612369795*^9, 3.6377906537877398`*^9}, {
  3.905015892277775*^9, 3.905015897627281*^9}, {3.905022552042804*^9, 
  3.905022552973608*^9}},ExpressionUUID->"7d76055d-5c7c-4e90-91e9-\
5e333651e4c8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
foldObservable :: binaryQueryFunction \[LongRightArrow] initialValue \
\[LongRightArrow] Observable \[LongRightArrow] Observable\
\>", "Subsection",
 CellChangeTimes->{{3.637791012704012*^9, 3.637791020965819*^9}, 
   3.637799140981299*^9, {3.637847402607716*^9, 3.637847418004592*^9}, {
   3.905015901857703*^9, 
   3.905015910360094*^9}},ExpressionUUID->"bfc547a4-de27-4612-b3f1-\
7587300b359e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "foldObservable", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"foldObservable", "[", 
   RowBox[{"bf_", ",", "z_", ",", "obl_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"newObl", ",", 
      RowBox[{"z$", "=", "z"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"newObl", "[", "]"}], ":=", 
      RowBox[{"With", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"result", "=", "z$"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"z$", "=", 
          RowBox[{"bf", "[", 
           RowBox[{"z$", ",", 
            RowBox[{"obl", "[", "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         "result"}]}], "]"}]}], ";", "\[IndentingNewLine]", "newObl"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.637791078477768*^9, 3.637791087844953*^9}, {
  3.6377911781379757`*^9, 3.637791240702318*^9}, {3.637791307988662*^9, 
  3.637791332168618*^9}, {3.637791485740635*^9, 3.6377914943787537`*^9}, {
  3.637794812828207*^9, 3.637794828122197*^9}, {3.637799140990543*^9, 
  3.637799140997476*^9}, {3.637852772034773*^9, 3.637852836199688*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"a05a7d4c-cdfd-40cf-9271-40fe9f4d9b58"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r$", "=", "0"}], ";", 
  RowBox[{"Dynamic", "[", "r$", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"subscribe", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"foldObservable", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"acc", ",", "v"}], "}"}], "\[Function]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "acc", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
         RowBox[{
          RowBox[{
          "acc", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "+", 
          RowBox[{
          "acc", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
        "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"integersFromObservable", "[", "0", "]"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"v", "\[Function]", 
     RowBox[{"(", 
      RowBox[{"r$", "=", "v"}], ")"}]}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.637794510990177*^9, 3.637794530673993*^9}, {
   3.637794570539114*^9, 3.6377946493467827`*^9}, 3.63779914100448*^9, 
   3.637872105223877*^9, {3.905015919026074*^9, 3.905015921844544*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"0896483d-1c1d-40bf-8c53-1def7efede86"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`r$, StandardForm],
  ImageSizeCache->{113., {4.1535, 12.675}}]], "Output",
 CellChangeTimes->{
  3.637794593098587*^9, 3.637794660341413*^9, 3.637794831469514*^9, 
   3.637799158905501*^9, 3.637801355225895*^9, 3.637848069513556*^9, 
   3.637851822221697*^9, 3.637852192201686*^9, 3.637852463397011*^9, 
   3.637852750891096*^9, {3.637852818240625*^9, 3.637852838181192*^9}, 
   3.905015922912636*^9, 3.905022568406188*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"7ab842fc-ed14-410a-a349-18c0bc9a5603"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cleanupAllTasks", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6377946703387613`*^9, 3.6377946722558527`*^9}, {
  3.90501593760597*^9, 3.905015939132159*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"4fcb1167-1353-404f-af77-9ce1d0c10627"],

Cell[BoxData[
 RowBox[{"{", 
  TagBox[
   TemplateBox[{
     RowBox[{
       StyleBox[
        TagBox["TaskObject", "SummaryHead"], "NonInterpretableSummary"], 
       StyleBox["[", "NonInterpretableSummary"], 
       DynamicModuleBox[{
        Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxOpener"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{
                  Thickness[0.041666666666666664`], {
                   FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     15.5}, {9.501, 15.5}, {9.501, 16.5}, {6.5, 16.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     5.5}, {9.501, 5.5}, {9.501, 6.5}, {6.5, 6.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     13.5}, {9.501, 13.5}, {9.501, 14.5}, {6.5, 14.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     11.5}, {9.501, 11.5}, {9.501, 12.5}, {6.5, 12.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     9.5}, {9.501, 9.5}, {9.501, 10.5}, {6.5, 10.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     7.5}, {9.501, 7.5}, {9.501, 8.5}, {6.5, 8.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 6.5}, {8.5, 6.5}, {
                    8.5, 15.5}, {15.5, 15.5}}, {{16.5, 16.5}, {7.5, 16.5}, {
                    7.5, 5.5}, {16.5, 5.5}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 15.5}, {8.5, 15.5}, {8.5, 6.5}, {15.5, 6.5}}}]}, {
                   RGBColor[0.392, 0.392, 0.392], 
                   Thickness[0.020833333333333332`], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0,
                     2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{10., 10.221699999999998`}, {10.768, 
                    10.484699999999998`}}, {{12.457, 10.2557}, {12., 
                    10.874699999999999`}}, {{11.543, 10.2557}, {12., 
                    10.874699999999999`}}, {{12., 10.874699999999999`}, {
                    11.261, 11.123699999999998`}}, {{12., 
                    10.874699999999999`}, {12.739, 11.123699999999998`}}, {{
                    12., 10.874699999999999`}, {12., 11.660699999999999`}}, {{
                    12.439, 12.222699999999998`}, {12., 
                    11.660699999999999`}}, {{12.739, 11.123699999999998`}, {
                    13.149000000000001`, 11.705699999999998`}}, {{12.762, 
                    11.932699999999999`}, {13.236, 12.572699999999998`}}, {{
                    13.421, 10.8707}, {12.739, 11.123699999999998`}}, {{14., 
                    10.221699999999998`}, {13.232, 10.484699999999998`}}, {{
                    13.149000000000001`, 10.035699999999999`}, {12.457, 
                    10.2557}}, {{12.437999999999999`, 9.519699999999998}, {
                    12.457, 10.2557}}, {{12., 8.768699999999999}, {12., 
                    9.5887}}, {{11.561, 9.520699999999998}, {11.543, 
                    10.2557}}, {{10.851, 10.035699999999999`}, {11.543, 
                    10.2557}}, {{11.261, 11.123699999999998`}, {10.579, 
                    10.8707}}, {{10.851, 11.706699999999998`}, {11.261, 
                    11.123699999999998`}}, {{10.765, 12.573699999999999`}, {
                    11.238, 11.932699999999999`}}, {{11.562, 
                    12.222699999999998`}, {12., 11.660699999999999`}}, {{12., 
                    10.874699999999999`}, {12., 10.874699999999999`}}, {{
                    11.261, 11.123699999999998`}, {10.768, 
                    10.484699999999998`}, {11.543, 10.2557}, {12., 9.5887}, {
                    12.457, 10.2557}, {13.232, 10.484699999999998`}, {12.739, 
                    11.123699999999998`}, {12.762, 11.932699999999999`}, {12.,
                     11.660699999999999`}, {11.238, 11.932699999999999`}, {
                    11.261, 11.123699999999998`}}, CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEqDg+4J69sKlRxmHNEYUORhqqDguPH5DN7VR1g
8lVLdZxluNUdDp5a6Lpts6rDDC2JqVcy1R08HlaJrGtXddDLW8y4R1XTwXLL
ibJ98uoOuUAua5EGVL+GQ8elew+4P2s6hDxeOvvIAw24vNu2z3+vVGg5LLhm
8t4CqN/BNG6Xp4+WA8g5gUDzIfp1HN7w7jOYyaXukGJ937/3uhaa+3Tg7ofp
B5rm6i6kAjcf6PrXj8KUHI55m3c6Au2PL/OXE+NShrsP5LzJnYoOa2SiUqyB
7ofYp+ywy5OHSRvoP5h+mP9h5qOHHwA2dXV1
                    "]}, 
                    CurveClosed -> {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                    0, 0, 0, 0, 0, 0, 1, 1, 1}]}, {
                   FaceForm[{
                    RGBColor[0.902, 0.902, 0.902], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}}, {{{21.959, 14.8984}, {20.057, 
                    14.281400000000001`}, {20.351, 13.3764}, {20.5, 
                    12.4404}, {20.5, 11.5004}, {20.5, 10.5594}, {20.351, 
                    9.624400000000001}, {20.057, 8.7184}, {21.959, 
                    8.101400000000002}, {22.317999999999998`, 
                    9.206400000000002}, {22.5, 10.3494}, {22.5, 11.5004}, {
                    22.5, 12.650400000000001`}, {22.317999999999998`, 
                    13.7944}, {21.959, 14.8984}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.9490000000000001, 0.9490000000000001, 
                    0.9490000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{11.5, 22.5}, {11.5, 20.5}, {13.404, 20.5}, {
                    15.231, 19.903}, {16.783, 18.773}, {17.961, 20.391}, {
                    16.064, 21.771}, {13.83, 22.5}, {11.5, 22.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.929, 0.929, 0.929], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{17.9609, 20.3906}, {17.9609, 
                    20.3906}, {16.782899999999998`, 18.7736}, {
                    18.337899999999998`, 17.6416}, {19.4699, 16.0876}, {
                    20.0569, 14.2816}, {21.9589, 14.898599999999998`}, {
                    21.2409, 17.1096}, {19.857899999999997`, 
                    19.008599999999998`}, {17.9609, 20.3906}}}]}, {
                   FaceForm[{
                    RGBColor[0.722, 0.722, 0.722], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 4.2266}, {5.0388, 2.6096000000000004`}, {
                    6.9358, 1.2296000000000005`}, {9.1698, 
                    0.49960000000000004`}, {11.4998, 0.49960000000000004`}, {
                    11.4998, 2.4996000000000005`}, {9.5958, 
                    2.4996000000000005`}, {7.768800000000001, 
                    3.0966000000000005`}, {6.2168, 4.2266}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.7799999999999999, 0.7799999999999999, 
                    0.7799999999999999], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{16.783199999999997`, 4.2266}, {
                    15.231199999999998`, 3.0966000000000005`}, {
                    13.404199999999998`, 2.4996000000000005`}, {
                    11.500199999999996`, 2.4996000000000005`}, {
                    11.500199999999996`, 0.49960000000000004`}, {
                    13.830199999999998`, 0.49960000000000004`}, {
                    16.064199999999996`, 1.2296000000000005`}, {
                    17.961199999999998`, 2.6096000000000004`}, {
                    16.783199999999997`, 4.2266}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.8510000000000001, 0.8510000000000001, 
                    0.8510000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{20.0566, 8.718699999999998}, {19.4696, 
                    6.911699999999998}, {18.3376, 5.358699999999999}, {
                    16.7836, 4.226699999999998}, {17.9606, 
                    2.6096999999999984`}, {19.8586, 3.9906999999999986`}, {
                    21.2416, 5.890699999999999}, {21.9586, 
                    8.101699999999997}, {20.0566, 8.718699999999998}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.6749999999999999, 0.6749999999999999, 
                    0.6749999999999999], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{2.9434, 8.718699999999998}, {1.0414, 
                    8.101699999999997}, {1.7584, 5.890699999999999}, {3.1414, 
                    3.9906999999999986`}, {5.0394, 2.6096999999999984`}, {
                    6.2164, 4.226699999999998}, {4.6624, 5.358699999999999}, {
                    3.5304, 6.911699999999998}, {2.9434, 
                    8.718699999999998}}}]}, {
                   FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 18.7734}, {5.0388, 20.3904}, {6.9358, 
                    21.7704}, {9.1698, 22.5004}, {11.4998, 22.5004}, {11.4998,
                     20.5004}, {9.5958, 20.5004}, {7.768800000000001, 
                    19.903399999999998`}, {6.2168, 18.7734}}}]}, {
                   FaceForm[{
                    RGBColor[0.584, 0.584, 0.584], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{5.0391, 20.3906}, {3.1421, 
                    19.008599999999998`}, {1.7591, 17.1096}, {
                    1.0411000000000006`, 14.898599999999998`}, {
                    2.9431000000000007`, 14.2816}, {3.5301000000000005`, 
                    16.0876}, {4.662100000000001, 17.6416}, {6.2171, 
                    18.7736}, {5.0391, 20.3906}}}]}, {
                   FaceForm[{
                    RGBColor[0.631, 0.631, 0.631], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, {{{1.041, 14.8984}, {
                    0.6819999999999999, 13.7944}, {0.4999999999999999, 
                    12.650400000000001`}, {0.4999999999999999, 11.5004}, {
                    0.4999999999999999, 10.3494}, {0.6819999999999999, 
                    9.206400000000002}, {1.041, 8.101400000000002}, {
                    2.9429999999999996`, 8.7184}, {2.649, 
                    9.624400000000001}, {2.5, 10.5594}, {2.5, 11.5004}, {2.5, 
                    12.4404}, {2.649, 13.3764}, {2.9429999999999996`, 
                    14.281400000000001`}, {1.041, 14.8984}}}]}}, AspectRatio -> 
                 Automatic, ImageSize -> {24., 24.}, 
                 PlotRange -> {{0., 24.}, {0., 24.}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Task UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"cac27877-2f21-4bd3-85ea-58ab6f4deca8\"", 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Task environment: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["\"Session\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Task type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Scheduled\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Evaluation expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"Function", "[", 
                    RowBox[{"v", ",", 
                    RowBox[{"r$", "=", "v"}]}], "]"}], "[", 
                    RowBox[{"newObl$29353", "[", "]"}], "]"}], Short], 
                    "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxCloser"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{
                  Thickness[0.041666666666666664`], {
                   FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     15.5}, {9.501, 15.5}, {9.501, 16.5}, {6.5, 16.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     5.5}, {9.501, 5.5}, {9.501, 6.5}, {6.5, 6.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     13.5}, {9.501, 13.5}, {9.501, 14.5}, {6.5, 14.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     11.5}, {9.501, 11.5}, {9.501, 12.5}, {6.5, 12.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     9.5}, {9.501, 9.5}, {9.501, 10.5}, {6.5, 10.5}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.5,
                     7.5}, {9.501, 7.5}, {9.501, 8.5}, {6.5, 8.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 6.5}, {8.5, 6.5}, {
                    8.5, 15.5}, {15.5, 15.5}}, {{16.5, 16.5}, {7.5, 16.5}, {
                    7.5, 5.5}, {16.5, 5.5}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 15.5}, {8.5, 15.5}, {8.5, 6.5}, {15.5, 6.5}}}]}, {
                   RGBColor[0.392, 0.392, 0.392], 
                   Thickness[0.020833333333333332`], 
                   Opacity[1.], 
                   CapForm["Round"], 
                   JoinForm["Round"], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0,
                     2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{10., 10.221699999999998`}, {10.768, 
                    10.484699999999998`}}, {{12.457, 10.2557}, {12., 
                    10.874699999999999`}}, {{11.543, 10.2557}, {12., 
                    10.874699999999999`}}, {{12., 10.874699999999999`}, {
                    11.261, 11.123699999999998`}}, {{12., 
                    10.874699999999999`}, {12.739, 11.123699999999998`}}, {{
                    12., 10.874699999999999`}, {12., 11.660699999999999`}}, {{
                    12.439, 12.222699999999998`}, {12., 
                    11.660699999999999`}}, {{12.739, 11.123699999999998`}, {
                    13.149000000000001`, 11.705699999999998`}}, {{12.762, 
                    11.932699999999999`}, {13.236, 12.572699999999998`}}, {{
                    13.421, 10.8707}, {12.739, 11.123699999999998`}}, {{14., 
                    10.221699999999998`}, {13.232, 10.484699999999998`}}, {{
                    13.149000000000001`, 10.035699999999999`}, {12.457, 
                    10.2557}}, {{12.437999999999999`, 9.519699999999998}, {
                    12.457, 10.2557}}, {{12., 8.768699999999999}, {12., 
                    9.5887}}, {{11.561, 9.520699999999998}, {11.543, 
                    10.2557}}, {{10.851, 10.035699999999999`}, {11.543, 
                    10.2557}}, {{11.261, 11.123699999999998`}, {10.579, 
                    10.8707}}, {{10.851, 11.706699999999998`}, {11.261, 
                    11.123699999999998`}}, {{10.765, 12.573699999999999`}, {
                    11.238, 11.932699999999999`}}, {{11.562, 
                    12.222699999999998`}, {12., 11.660699999999999`}}, {{12., 
                    10.874699999999999`}, {12., 10.874699999999999`}}, {{
                    11.261, 11.123699999999998`}, {10.768, 
                    10.484699999999998`}, {11.543, 10.2557}, {12., 9.5887}, {
                    12.457, 10.2557}, {13.232, 10.484699999999998`}, {12.739, 
                    11.123699999999998`}, {12.762, 11.932699999999999`}, {12.,
                     11.660699999999999`}, {11.238, 11.932699999999999`}, {
                    11.261, 11.123699999999998`}}, CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEqDg+4J69sKlRxmHNEYUORhqqDguPH5DN7VR1g
8lVLdZxluNUdDp5a6Lpts6rDDC2JqVcy1R08HlaJrGtXddDLW8y4R1XTwXLL
ibJ98uoOuUAua5EGVL+GQ8elew+4P2s6hDxeOvvIAw24vNu2z3+vVGg5LLhm
8t4CqN/BNG6Xp4+WA8g5gUDzIfp1HN7w7jOYyaXukGJ937/3uhaa+3Tg7ofp
B5rm6i6kAjcf6PrXj8KUHI55m3c6Au2PL/OXE+NShrsP5LzJnYoOa2SiUqyB
7ofYp+ywy5OHSRvoP5h+mP9h5qOHHwA2dXV1
                    "]}, 
                    CurveClosed -> {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                    0, 0, 0, 0, 0, 0, 1, 1, 1}]}, {
                   FaceForm[{
                    RGBColor[0.902, 0.902, 0.902], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}}, {{{21.959, 14.8984}, {20.057, 
                    14.281400000000001`}, {20.351, 13.3764}, {20.5, 
                    12.4404}, {20.5, 11.5004}, {20.5, 10.5594}, {20.351, 
                    9.624400000000001}, {20.057, 8.7184}, {21.959, 
                    8.101400000000002}, {22.317999999999998`, 
                    9.206400000000002}, {22.5, 10.3494}, {22.5, 11.5004}, {
                    22.5, 12.650400000000001`}, {22.317999999999998`, 
                    13.7944}, {21.959, 14.8984}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.9490000000000001, 0.9490000000000001, 
                    0.9490000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{11.5, 22.5}, {11.5, 20.5}, {13.404, 20.5}, {
                    15.231, 19.903}, {16.783, 18.773}, {17.961, 20.391}, {
                    16.064, 21.771}, {13.83, 22.5}, {11.5, 22.5}}}]}, {
                   FaceForm[{
                    RGBColor[0.929, 0.929, 0.929], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{17.9609, 20.3906}, {17.9609, 
                    20.3906}, {16.782899999999998`, 18.7736}, {
                    18.337899999999998`, 17.6416}, {19.4699, 16.0876}, {
                    20.0569, 14.2816}, {21.9589, 14.898599999999998`}, {
                    21.2409, 17.1096}, {19.857899999999997`, 
                    19.008599999999998`}, {17.9609, 20.3906}}}]}, {
                   FaceForm[{
                    RGBColor[0.722, 0.722, 0.722], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 4.2266}, {5.0388, 2.6096000000000004`}, {
                    6.9358, 1.2296000000000005`}, {9.1698, 
                    0.49960000000000004`}, {11.4998, 0.49960000000000004`}, {
                    11.4998, 2.4996000000000005`}, {9.5958, 
                    2.4996000000000005`}, {7.768800000000001, 
                    3.0966000000000005`}, {6.2168, 4.2266}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.7799999999999999, 0.7799999999999999, 
                    0.7799999999999999], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{16.783199999999997`, 4.2266}, {
                    15.231199999999998`, 3.0966000000000005`}, {
                    13.404199999999998`, 2.4996000000000005`}, {
                    11.500199999999996`, 2.4996000000000005`}, {
                    11.500199999999996`, 0.49960000000000004`}, {
                    13.830199999999998`, 0.49960000000000004`}, {
                    16.064199999999996`, 1.2296000000000005`}, {
                    17.961199999999998`, 2.6096000000000004`}, {
                    16.783199999999997`, 4.2266}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.8510000000000001, 0.8510000000000001, 
                    0.8510000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{20.0566, 8.718699999999998}, {19.4696, 
                    6.911699999999998}, {18.3376, 5.358699999999999}, {
                    16.7836, 4.226699999999998}, {17.9606, 
                    2.6096999999999984`}, {19.8586, 3.9906999999999986`}, {
                    21.2416, 5.890699999999999}, {21.9586, 
                    8.101699999999997}, {20.0566, 8.718699999999998}}}]}, {
                   FaceForm[{
                    RGBColor[
                    0.6749999999999999, 0.6749999999999999, 
                    0.6749999999999999], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{2.9434, 8.718699999999998}, {1.0414, 
                    8.101699999999997}, {1.7584, 5.890699999999999}, {3.1414, 
                    3.9906999999999986`}, {5.0394, 2.6096999999999984`}, {
                    6.2164, 4.226699999999998}, {4.6624, 5.358699999999999}, {
                    3.5304, 6.911699999999998}, {2.9434, 
                    8.718699999999998}}}]}, {
                   FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 18.7734}, {5.0388, 20.3904}, {6.9358, 
                    21.7704}, {9.1698, 22.5004}, {11.4998, 22.5004}, {11.4998,
                     20.5004}, {9.5958, 20.5004}, {7.768800000000001, 
                    19.903399999999998`}, {6.2168, 18.7734}}}]}, {
                   FaceForm[{
                    RGBColor[0.584, 0.584, 0.584], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{5.0391, 20.3906}, {3.1421, 
                    19.008599999999998`}, {1.7591, 17.1096}, {
                    1.0411000000000006`, 14.898599999999998`}, {
                    2.9431000000000007`, 14.2816}, {3.5301000000000005`, 
                    16.0876}, {4.662100000000001, 17.6416}, {6.2171, 
                    18.7736}, {5.0391, 20.3906}}}]}, {
                   FaceForm[{
                    RGBColor[0.631, 0.631, 0.631], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, {{{1.041, 14.8984}, {
                    0.6819999999999999, 13.7944}, {0.4999999999999999, 
                    12.650400000000001`}, {0.4999999999999999, 11.5004}, {
                    0.4999999999999999, 10.3494}, {0.6819999999999999, 
                    9.206400000000002}, {1.041, 8.101400000000002}, {
                    2.9429999999999996`, 8.7184}, {2.649, 
                    9.624400000000001}, {2.5, 10.5594}, {2.5, 11.5004}, {2.5, 
                    12.4404}, {2.649, 13.3764}, {2.9429999999999996`, 
                    14.281400000000001`}, {1.041, 14.8984}}}]}}, AspectRatio -> 
                 Automatic, ImageSize -> {24., 24.}, 
                 PlotRange -> {{0., 24.}, {0., 24.}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Task UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"cac27877-2f21-4bd3-85ea-58ab6f4deca8\"", 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Task environment: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["\"Session\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Task type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Scheduled\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Evaluation expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"Function", "[", 
                    RowBox[{"v", ",", 
                    RowBox[{"r$", "=", "v"}]}], "]"}], "[", 
                    RowBox[{"newObl$29353", "[", "]"}], "]"}], Short], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Run interval: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Total run count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\[Infinity]", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"],
         DynamicModuleValues :> {}], 
       StyleBox["]", "NonInterpretableSummary"]}]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->(
     "TaskObject[<|TaskUUID -> cac27877-2f21-4bd3-85ea-58ab6f4deca8, \
TaskEnvironment -> Session, TaskType -> Scheduled, <<3>>, \
HandlerFunctionsKeys -> {Task, TaskUUID, TaskType, TaskStatus, \
TaskEnvironment, HandlerFunctions, HandlerFunctionsKeys, EventName, \
EvaluationExpression, <<4>>, Re<<12>>unt, NextScheduledTime, TotalRunCount, \
MessageOutput, PrintOutput}, AutoRemove -> True|>]"& )],
   False,
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "}"}]], "Output",
 CellChangeTimes->{3.90501594092045*^9, 3.90502258235579*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"e492da3b-0a0d-444d-bf71-0cb01596898c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tasks", "[", "]"}]], "Input",
 CellChangeTimes->{{3.905015943720068*^9, 3.905015946765531*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"bb14c903-05a1-4a45-8898-135b3e730e32"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.9050159475077467`*^9, 3.905022584115529*^9},
 CellLabel->
  "Out[115]=",ExpressionUUID->"e28089d1-c805-4a25-8f49-42ce5fa04461"]
}, Open  ]],

Cell["\<\
There are lots of better ways to do this, but we\[CloseCurlyQuote]ve captured \
the gist.\
\>", "Text",
 CellChangeTimes->{{3.6377948605175*^9, 3.637794889792253*^9}, {
  3.637799187263392*^9, 
  3.637799189957827*^9}},ExpressionUUID->"cefa020c-e818-4ac4-bb55-\
177fdb531af6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Conclusion", "Section",
 CellChangeTimes->{{3.637794900652287*^9, 3.637794904140217*^9}, {
  3.6378723694344063`*^9, 
  3.637872374832617*^9}},ExpressionUUID->"007cc137-edf8-4e3c-852e-\
e44d96b3a337"],

Cell[TextData[{
 "We\[CloseCurlyQuote]ve established that folding over ",
 StyleBox["List", "Input"],
 "s produces L",
 StyleBox["ist", "Input"],
 "s, folding over iterable streams produces iterable streams, and that \
folding over observables produces observables. ",
 StyleBox["All our algorithms, expressed as query functions, can run over \
finite, infinite, synchronous, and asynchronous collections",
  Background->RGBColor[1, 1, 0]],
 ". "
}], "Text",
 CellChangeTimes->{{3.637790496484151*^9, 3.63779055542623*^9}, {
  3.637790588815989*^9, 3.637790593812764*^9}, {3.637790678792575*^9, 
  3.637790707883992*^9}, {3.905015957089036*^9, 3.905016021994959*^9}, {
  3.905022593212818*^9, 
  3.9050226058776073`*^9}},ExpressionUUID->"b1bb45f9-929c-460f-8276-\
e0190c4d2a7d"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1152, 1051},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
ShowSelection->True,
ShowCellTags->True,
Magnification:>1.5 Inherited,
FrontEndVersion->"13.3 for Mac OS X ARM (64-bit) (July 24, 2023)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"adaeb66a-d1bb-481a-994c-2b84b966c75a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 467, 8, 236, "Title",ExpressionUUID->"339b47d8-1d27-46e6-8940-96b5aa667b41"],
Cell[1049, 32, 1943, 49, 225, "Text",ExpressionUUID->"283328ea-a795-4e0a-b7e5-ed8c3c55a5a0"],
Cell[2995, 83, 1531, 38, 121, "Text",ExpressionUUID->"cfdce099-3b2c-4290-9242-d909162a5517"],
Cell[4529, 123, 1042, 29, 121, "Text",ExpressionUUID->"17777953-3d2c-4386-8490-8ffc5263fda9"],
Cell[5574, 154, 898, 18, 121, "Text",ExpressionUUID->"7e433fc9-9641-41d1-8f41-070c61b1e63b"],
Cell[6475, 174, 588, 12, 121, "Text",ExpressionUUID->"f77709b5-a80a-4bc2-bbb1-4d6abade007f"],
Cell[7066, 188, 467, 9, 87, "Text",ExpressionUUID->"6a343904-8e27-4525-8f1d-77fcb00eef38"],
Cell[7536, 199, 1563, 52, 225, "Text",ExpressionUUID->"5d6e0092-c2ea-46cb-9678-3772af4874c5"],
Cell[9102, 253, 176, 3, 52, "Text",ExpressionUUID->"15f00ffc-3909-417b-9037-8e0056f6683e"],
Cell[CellGroupData[{
Cell[9303, 260, 206, 2, 63, "Input",ExpressionUUID->"63b9e697-1149-4fda-9e87-f289951ad2c7"],
Cell[9512, 264, 68905, 1136, 790, "Output",ExpressionUUID->"053bce5c-bc17-4db0-b68c-f07cbe3a4b43"]
}, {2}]],
Cell[CellGroupData[{
Cell[78451, 1405, 170, 3, 104, "Section",ExpressionUUID->"35376fae-a0a4-4a2b-a952-b77d0b065c4b"],
Cell[78624, 1410, 346, 14, 52, "Text",ExpressionUUID->"1ccd9a18-2662-44d3-9a21-648ded0bbf29"],
Cell[78973, 1426, 707, 18, 87, "Text",ExpressionUUID->"a2cf95c0-a5aa-48a1-a4da-4161fee8df35"],
Cell[79683, 1446, 694, 21, 87, "Text",ExpressionUUID->"55555991-d5a7-4d52-913e-a76dd1847614"],
Cell[80380, 1469, 756, 19, 87, "Text",ExpressionUUID->"667eaaf1-dfbd-4e83-8cd7-e07eb60d7b1a"],
Cell[81139, 1490, 480, 14, 52, "Text",ExpressionUUID->"afde8474-6769-4fa6-9d1b-49e33abf42b7"],
Cell[81622, 1506, 892, 25, 87, "Text",ExpressionUUID->"266e7800-d062-4caf-9f27-4f9af48aadc7"],
Cell[82517, 1533, 353, 10, 52, "Text",ExpressionUUID->"dafde870-8b48-4555-a85f-ff8c649d283f"],
Cell[82873, 1545, 372, 9, 87, "Text",ExpressionUUID->"ce9d5927-dd4f-421b-b267-6f92f51279a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83282, 1559, 198, 4, 104, "Section",ExpressionUUID->"e2555fdc-aec3-4942-a3d3-3f0ff550cb2e"],
Cell[83483, 1565, 1436, 25, 156, "Text",ExpressionUUID->"da0932e3-f44f-415d-80c7-f4fea73ae5de"],
Cell[84922, 1592, 1838, 40, 156, "Text",ExpressionUUID->"e1607c03-f989-480f-9c0e-6230ec391199"],
Cell[86763, 1634, 364, 7, 51, "Subsection",ExpressionUUID->"0d435756-a6a9-418e-9cbd-bfbad38d3fb2"],
Cell[CellGroupData[{
Cell[87152, 1645, 168, 3, 49, "Subsection",ExpressionUUID->"0c06dd88-895d-4fd4-884a-4b1a2e47f474"],
Cell[87323, 1650, 720, 12, 87, "Text",ExpressionUUID->"81b4700d-2ee9-471c-9512-735a15f8cd0d"],
Cell[CellGroupData[{
Cell[88068, 1666, 1752, 37, 250, "Input",ExpressionUUID->"07a94457-e164-4b30-9083-fb1fdd12682e"],
Cell[89823, 1705, 1572, 36, 95, "Output",ExpressionUUID->"9cf78e2b-d976-4787-91a4-bd9f9e63593f"]
}, Open  ]],
Cell[91410, 1744, 1211, 29, 121, "Text",ExpressionUUID->"f80367ed-7972-46d3-9b42-bf3a6e8dd454"],
Cell[92624, 1775, 518, 13, 87, "Text",ExpressionUUID->"9fa2f8cd-69f9-4e14-8a46-1a8d35c6c309"],
Cell[CellGroupData[{
Cell[93167, 1792, 396, 9, 63, "Input",ExpressionUUID->"f2c7d655-9841-4eb0-8cf9-ea7d4622348c"],
Cell[93566, 1803, 556, 9, 63, "Output",ExpressionUUID->"7a4155d0-390f-49dc-af80-c8f38b3eb1fe"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[94183, 1819, 154, 3, 104, "Section",ExpressionUUID->"6d4bc6ee-f7e6-435d-a9cc-989524ae1359"],
Cell[94340, 1824, 1595, 38, 191, "Text",ExpressionUUID->"fdd75d59-90bf-4da0-87cc-94e6cff8d552"],
Cell[95938, 1864, 890, 18, 52, "Text",ExpressionUUID->"772a0701-f1c7-4632-bea5-87b6fc829844"],
Cell[96831, 1884, 377, 9, 63, "Input",ExpressionUUID->"55c6bde7-8ecb-4382-bcf4-1bcd9aeff297"],
Cell[97211, 1895, 733, 20, 89, "Text",ExpressionUUID->"dda32110-eb2f-4b1d-81f7-d2896deb05c1"],
Cell[CellGroupData[{
Cell[97969, 1919, 265, 4, 51, "Subsection",ExpressionUUID->"3c7e1c4c-1524-4653-a00f-7fa05ce97b13"],
Cell[98237, 1925, 1112, 27, 122, "Text",ExpressionUUID->"51f68548-7cbb-430b-ac6f-533206cea7d3"],
Cell[99352, 1954, 845, 19, 87, "Text",ExpressionUUID->"2b8cd78c-d7fc-4ac2-ae6c-3b456cff9463"],
Cell[100200, 1975, 1030, 19, 52, "Text",ExpressionUUID->"a8930fdd-9528-4527-827f-712bfbaa517c"],
Cell[101233, 1996, 3459, 87, 374, "Input",ExpressionUUID->"291c1afc-5394-4f06-9364-f5cb2c2e4296"],
Cell[104695, 2085, 452, 11, 53, "Text",ExpressionUUID->"446f3868-9bbf-45b6-949c-7310613cc0af"],
Cell[CellGroupData[{
Cell[105172, 2100, 743, 16, 95, "Input",ExpressionUUID->"795dc94d-e3b3-430a-87fb-5d2d49edfca4"],
Cell[105918, 2118, 1366, 20, 63, "Output",ExpressionUUID->"69d24e83-d1b7-4598-9a77-918045585ad8"]
}, Open  ]],
Cell[107299, 2141, 337, 8, 52, "Text",ExpressionUUID->"49fbc7a2-3ba4-4ffe-95f1-d4a9e4cafef5"],
Cell[107639, 2151, 267, 5, 63, "Input",ExpressionUUID->"587ab5bc-8e2f-486c-8540-a99dfecc934d"],
Cell[107909, 2158, 239, 7, 52, "Text",ExpressionUUID->"3a373757-0216-4383-81fc-6fda2364c053"],
Cell[108151, 2167, 289, 6, 63, "Input",ExpressionUUID->"222806ae-61d7-43ba-a066-3bde5e45f8ab"],
Cell[108443, 2175, 435, 11, 52, "Text",ExpressionUUID->"3728fd41-e057-49d2-8867-f1cd193c3f2a"],
Cell[CellGroupData[{
Cell[108903, 2190, 484, 10, 63, "Input",ExpressionUUID->"e6efd1be-caa7-4938-9b3a-6e1e671343ff"],
Cell[109390, 2202, 27703, 621, 232, "Output",ExpressionUUID->"187e8444-421a-40c8-94e8-fedbd8f0457c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[137142, 2829, 312, 5, 51, "Subsection",ExpressionUUID->"10498316-d9f1-4a13-8edb-950c73f17e0c"],
Cell[137457, 2836, 574, 11, 87, "Text",ExpressionUUID->"adafbf43-5426-450c-b5ec-a421b7f6e870"],
Cell[138034, 2849, 2728, 71, 343, "Input",ExpressionUUID->"76504fec-9e45-4843-ae5b-edf91edf413f"],
Cell[140765, 2922, 482, 11, 87, "Text",ExpressionUUID->"3c9d1d7b-8c43-436e-b371-071373ab3431"],
Cell[CellGroupData[{
Cell[141272, 2937, 332, 8, 63, "Input",ExpressionUUID->"39c4a70c-2d36-426c-8ab4-1387a2cb191f"],
Cell[141607, 2947, 624, 9, 63, "Output",ExpressionUUID->"8d98e441-ffb5-429e-a7a6-5b4129c32706"]
}, Open  ]],
Cell[142246, 2959, 216, 4, 52, "Text",ExpressionUUID->"a78835e1-e359-48a0-970f-6f6c1ee51aeb"],
Cell[CellGroupData[{
Cell[142487, 2967, 330, 8, 63, "Input",ExpressionUUID->"be25d1e8-94f4-44ee-b15f-90b6ded6608f"],
Cell[142820, 2977, 615, 9, 63, "Output",ExpressionUUID->"92632401-8cfc-4ce4-9079-f5774a491e25"]
}, Open  ]],
Cell[143450, 2989, 520, 10, 52, "Text",ExpressionUUID->"13e3a75e-bcff-4cc0-bd58-3cfd8bb83561"],
Cell[143973, 3001, 387, 9, 63, "Input",ExpressionUUID->"c2f960d9-2f14-475f-9578-45993deb5fef"],
Cell[CellGroupData[{
Cell[144385, 3014, 167, 3, 49, "Subsubsection",ExpressionUUID->"55dc77f7-7215-4adb-bb05-0c0bc34d4765"],
Cell[144555, 3019, 464, 12, 52, "Text",ExpressionUUID->"336cc7a3-aee5-403f-b40d-680270b49427"],
Cell[CellGroupData[{
Cell[145044, 3035, 1210, 30, 157, "Input",ExpressionUUID->"0cccaf57-573f-4066-ab9c-87fb37727198"],
Cell[146257, 3067, 661, 12, 63, "Output",ExpressionUUID->"6d516ce9-2ca7-40ae-82f8-de66266cb181"]
}, Open  ]],
Cell[146933, 3082, 259, 4, 52, "Text",ExpressionUUID->"8d8fa1a6-0cca-4159-88dd-0fa983ee2eee"],
Cell[CellGroupData[{
Cell[147217, 3090, 455, 10, 63, "Input",ExpressionUUID->"26f3edaa-ebb1-4375-acb1-1ee0b75dbc6d"],
Cell[147675, 3102, 586, 9, 63, "Output",ExpressionUUID->"3dfa8fe8-4e21-4252-bd96-6c7d335ca888"]
}, Open  ]],
Cell[148276, 3114, 316, 10, 52, "Text",ExpressionUUID->"365dd819-9ac5-45c4-abef-e74ea29eeed9"],
Cell[CellGroupData[{
Cell[148617, 3128, 414, 10, 63, "Input",ExpressionUUID->"115d2364-e9a1-4569-90cf-3f71f1a8fe97"],
Cell[149034, 3140, 594, 10, 63, "Output",ExpressionUUID->"4fb2c9e6-cddb-45b7-8c96-8b22a2ab46ec"]
}, Open  ]],
Cell[149643, 3153, 291, 9, 52, "Text",ExpressionUUID->"40b3466a-14f2-4562-b6c7-2b0cffffc4cd"],
Cell[CellGroupData[{
Cell[149959, 3166, 443, 11, 63, "Input",ExpressionUUID->"f4fb44f7-c55a-46d8-965d-8ee71a48f15e"],
Cell[150405, 3179, 577, 10, 63, "Output",ExpressionUUID->"c7cd53a9-8d2a-44cd-99f7-4d7e913ee939"]
}, Open  ]],
Cell[150997, 3192, 630, 14, 87, "Text",ExpressionUUID->"cd6ebdd7-cda0-40b3-8a5c-9afa00abf531"],
Cell[CellGroupData[{
Cell[151652, 3210, 478, 13, 63, "Input",ExpressionUUID->"9d921c68-e503-4e96-8c3f-ac7d1590beff"],
Cell[152133, 3225, 484, 8, 63, "Output",ExpressionUUID->"1ec3f2ef-54c4-4d94-b748-dd9f15ed061c"]
}, Open  ]],
Cell[152632, 3236, 516, 9, 52, "Text",ExpressionUUID->"271e416d-6dab-413c-a48e-f871ebea167e"],
Cell[CellGroupData[{
Cell[153173, 3249, 560, 14, 63, "Input",ExpressionUUID->"ee8d484a-9a80-43d4-a941-ac452475bf67"],
Cell[153736, 3265, 528, 10, 63, "Output",ExpressionUUID->"6cdcb7a0-6aa4-4bee-b5bf-59e88fe19542"]
}, Open  ]],
Cell[154279, 3278, 511, 12, 52, "Text",ExpressionUUID->"e46e3a1f-0a81-411e-a419-9bd9c7cc09aa"],
Cell[CellGroupData[{
Cell[154815, 3294, 587, 14, 63, "Input",ExpressionUUID->"1b638e40-6a8a-4952-8a8f-2baac4bc938b"],
Cell[155405, 3310, 620, 11, 63, "Output",ExpressionUUID->"931870c2-1c6d-496a-a0f8-8fdc58b5d6b2"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[156086, 3328, 281, 4, 51, "Subsection",ExpressionUUID->"6089bdf5-050c-461b-a980-c1542df4cd30"],
Cell[156370, 3334, 745, 13, 87, "Text",ExpressionUUID->"95869b55-46cc-43ff-bac0-32e700d444b3"],
Cell[157118, 3349, 1251, 33, 157, "Input",ExpressionUUID->"68bba097-e53e-49dd-a539-240a2863c23e"],
Cell[158372, 3384, 324, 8, 52, "Text",ExpressionUUID->"194458d2-0618-431f-9544-4909d72e2ca5"],
Cell[CellGroupData[{
Cell[158721, 3396, 454, 9, 63, "Input",ExpressionUUID->"e9411849-e1d1-4aa1-92f2-b6d2f0a0f5d6"],
Cell[159178, 3407, 1014, 16, 63, "Output",ExpressionUUID->"1cd4f278-e5fc-4635-b7f0-0270f22efd7d"]
}, Open  ]],
Cell[160207, 3426, 260, 4, 52, "Text",ExpressionUUID->"b3b73d56-4ff6-41bc-8301-41b8f7709e9c"],
Cell[CellGroupData[{
Cell[160492, 3434, 274, 5, 63, "Input",ExpressionUUID->"32aa9960-f5df-4ed9-b893-bb86178568b1"],
Cell[160769, 3441, 467, 8, 63, "Output",ExpressionUUID->"557e0c9a-2d5d-4178-9cdd-57091c790a05"]
}, Open  ]],
Cell[161251, 3452, 236, 4, 52, "Text",ExpressionUUID->"1eea07db-1cf9-44c3-89cf-13f3f626470a"],
Cell[CellGroupData[{
Cell[161512, 3460, 229, 4, 63, "Input",ExpressionUUID->"c9acf2bd-f78a-4fbc-be1b-044c0e54b3a4"],
Cell[161744, 3466, 381, 6, 63, "Output",ExpressionUUID->"6198c641-fd2e-4e2f-a9bf-e86d116ff4fb"]
}, Open  ]],
Cell[162140, 3475, 386, 8, 52, "Text",ExpressionUUID->"bb2474be-0e2d-45b4-88df-9e33dfcff2ef"],
Cell[CellGroupData[{
Cell[162551, 3487, 576, 11, 63, "Input",ExpressionUUID->"7381477d-6bf1-4f07-9d36-3e4979eaf917"],
Cell[163130, 3500, 348, 6, 63, "Output",ExpressionUUID->"f08a1f69-6ac6-47a5-acf6-fb156ec33e24"]
}, Open  ]],
Cell[163493, 3509, 298, 10, 52, "Text",ExpressionUUID->"e2dada0c-baee-4574-98ab-ea872ec1e9ac"],
Cell[CellGroupData[{
Cell[163816, 3523, 207, 3, 63, "Input",ExpressionUUID->"3d0d66b6-e3d5-4ddf-97ae-f7ddf4f4d2b4"],
Cell[164026, 3528, 369, 6, 63, "Output",ExpressionUUID->"5fc3385b-df1b-4082-95e5-1b9d42f03b4e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[164444, 3540, 337, 5, 51, "Subsection",ExpressionUUID->"bcc1744d-0d1a-49bb-bee2-c4a020154d20"],
Cell[164784, 3547, 397, 6, 52, "Text",ExpressionUUID->"82b7b220-816a-471e-97ea-c974cde32a9e"],
Cell[165184, 3555, 1182, 32, 157, "Input",ExpressionUUID->"8aeef867-b114-4dd1-86c4-90498f862ecf"],
Cell[166369, 3589, 279, 8, 52, "Text",ExpressionUUID->"5c9a9879-f824-486f-93bc-76c74ffcc5ef"],
Cell[CellGroupData[{
Cell[166673, 3601, 257, 5, 63, "Input",ExpressionUUID->"53fc0274-01aa-42cf-9d16-b01db163f015"],
Cell[166933, 3608, 527, 8, 63, "Output",ExpressionUUID->"c435f528-cca8-48ba-9e94-2ccac6271115"]
}, Open  ]],
Cell[167475, 3619, 165, 3, 52, "Text",ExpressionUUID->"0c61b5a7-ff08-4ed3-934a-4d91692132fb"],
Cell[CellGroupData[{
Cell[167665, 3626, 350, 7, 63, "Input",ExpressionUUID->"fe1152b7-2198-4eb1-b547-dd79078fbb20"],
Cell[168018, 3635, 570, 10, 63, "Output",ExpressionUUID->"d51efc12-8bc5-4caf-a1cf-1a23719cfe8d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[168637, 3651, 221, 4, 51, "Subsection",ExpressionUUID->"bcd6b2ff-ecb8-4989-b9f5-57b6bf7a49bf"],
Cell[168861, 3657, 658, 13, 87, "Text",ExpressionUUID->"a7a4f2f1-c50f-4dcd-babf-eef9be074bd2"],
Cell[169522, 3672, 2076, 52, 374, "Input",ExpressionUUID->"aa0db890-517f-46a3-a7c1-26726cb4f1ff"],
Cell[171601, 3726, 818, 17, 87, "Text",ExpressionUUID->"924eba9d-f7c0-4bda-9966-e1ba24d95c0b"],
Cell[CellGroupData[{
Cell[172444, 3747, 359, 8, 63, "Input",ExpressionUUID->"37550ff3-3665-4eea-ba7b-86211adaa676"],
Cell[172806, 3757, 796, 13, 63, "Output",ExpressionUUID->"acc48ce8-b72d-42fd-9d96-4f658f081857"]
}, Open  ]],
Cell[173617, 3773, 282, 7, 52, "Text",ExpressionUUID->"1926390a-b005-40a8-8b90-518d6da8949e"],
Cell[CellGroupData[{
Cell[173924, 3784, 581, 10, 63, "Input",ExpressionUUID->"8eace226-ef82-4853-8968-b2ab855da44e"],
Cell[174508, 3796, 1028, 16, 63, "Output",ExpressionUUID->"5f05c78c-7a25-47b1-9c5d-d00a40cd1b18"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[175585, 3818, 425, 8, 51, "Subsection",ExpressionUUID->"93900db4-d08c-4100-aeef-09a1527ef278"],
Cell[176013, 3828, 732, 17, 87, "Text",ExpressionUUID->"e4bc7c8a-f0b3-4163-9d52-55b3ad565a55"],
Cell[176748, 3847, 2145, 52, 219, "Input",ExpressionUUID->"fcab1f44-9225-4ef7-9be1-c2e572f57d81"],
Cell[178896, 3901, 904, 17, 52, "Text",ExpressionUUID->"656afa1f-1926-487a-bece-9885e2c30def"],
Cell[179803, 3920, 896, 18, 52, "Text",ExpressionUUID->"8a9c7650-f622-4f78-9fa9-8eb7fcd6aa51"],
Cell[180702, 3940, 1080, 22, 156, "Text",ExpressionUUID->"1dc57bc9-5a05-4222-8e9a-32ebc4763d6c"],
Cell[181785, 3964, 1729, 41, 219, "Input",ExpressionUUID->"bdeb4570-e67b-4bef-8b1c-cc712694158c"],
Cell[183517, 4007, 275, 4, 52, "Text",ExpressionUUID->"5bf70756-239e-4fa9-8d65-4c9eb6647c26"],
Cell[CellGroupData[{
Cell[183817, 4015, 364, 7, 63, "Input",ExpressionUUID->"6cc156df-673d-49d4-be97-5a0ac1e33b02"],
Cell[184184, 4024, 696, 12, 63, "Output",ExpressionUUID->"4ca16111-8718-4886-9d61-2f014188ccfd"]
}, Open  ]],
Cell[184895, 4039, 774, 13, 87, "Text",ExpressionUUID->"f05122fb-2c24-4067-b823-23ee2b3650dd"],
Cell[CellGroupData[{
Cell[185694, 4056, 318, 6, 63, "Input",ExpressionUUID->"cbbd0185-4066-475a-b709-ad1646f868bb"],
Cell[186015, 4064, 1235, 32, 95, "Output",ExpressionUUID->"8650e13b-73f1-4e50-afa9-b800c8930990"]
}, Open  ]],
Cell[187265, 4099, 473, 10, 52, "Text",ExpressionUUID->"6323d708-2d5e-45db-812a-5ad9c34a7712"],
Cell[187741, 4111, 454, 11, 63, "Input",ExpressionUUID->"0f551e7a-4690-40d6-b7f9-2deea5edd9bb"],
Cell[CellGroupData[{
Cell[188220, 4126, 238, 4, 63, "Input",ExpressionUUID->"f6c132c0-f2d1-4b30-bd79-2d587d2ae4de"],
Cell[188461, 4132, 533, 9, 63, "Output",ExpressionUUID->"629627f5-fe6c-4e2b-9d3d-b26161863a59"]
}, Open  ]],
Cell[189009, 4144, 374, 12, 52, "Text",ExpressionUUID->"b6f33ba0-ffbf-40ee-8bd7-84bcdc948c27"],
Cell[CellGroupData[{
Cell[189408, 4160, 210, 3, 63, "Input",ExpressionUUID->"1d328c15-c576-4e7d-ace0-f0bd80af04e4"],
Cell[189621, 4165, 506, 8, 63, "Output",ExpressionUUID->"9a102f70-5634-4a05-b281-559498cbc0c7"]
}, Open  ]],
Cell[190142, 4176, 425, 10, 52, "Text",ExpressionUUID->"f3b6b134-481a-4598-b562-b314b1779179"],
Cell[CellGroupData[{
Cell[190592, 4190, 376, 7, 63, "Input",ExpressionUUID->"135701e7-2e18-4205-9bde-b3861dc35bbf"],
Cell[190971, 4199, 27939, 626, 232, "Output",ExpressionUUID->"f54644a0-3014-4e45-bb80-de12e8618fdf"]
}, Open  ]],
Cell[218925, 4828, 433, 12, 87, "Text",ExpressionUUID->"df2bb655-c4a2-4f38-b99a-4395430d97c2"],
Cell[CellGroupData[{
Cell[219383, 4844, 457, 10, 63, "Input",ExpressionUUID->"c5d2baef-c847-4bcf-997f-6eeb9e3dc716"],
Cell[219843, 4856, 507, 8, 63, "Output",ExpressionUUID->"635450df-8160-43b3-9e5f-a839d2c52865"]
}, Open  ]],
Cell[220365, 4867, 351, 7, 52, "Text",ExpressionUUID->"97fc31a0-9acf-4d10-8c9e-d63efc9fec2e"],
Cell[CellGroupData[{
Cell[220741, 4878, 457, 10, 63, "Input",ExpressionUUID->"f4b1f9c2-c6fc-49ab-8ad4-a8f81a035c2c"],
Cell[221201, 4890, 622, 10, 63, "Output",ExpressionUUID->"59eedf7d-de2f-4be7-9f9e-49f51daaa486"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[221884, 4907, 179, 4, 104, "Section",ExpressionUUID->"3b71ec4f-a45d-43c4-a24e-bfa0590ad064"],
Cell[CellGroupData[{
Cell[222088, 4915, 324, 5, 51, "Subsection",ExpressionUUID->"49b6b182-0f29-4ecb-beae-02326a99f1e9"],
Cell[222415, 4922, 965, 20, 121, "Text",ExpressionUUID->"b0b12749-b430-4213-a522-612d400df311"],
Cell[223383, 4944, 1651, 30, 156, "Text",ExpressionUUID->"d2fa342a-81dc-45fe-a05e-2634b25da3d7"],
Cell[225037, 4976, 898, 16, 87, "Text",ExpressionUUID->"cadcd96c-15d5-4860-aea9-3cef9caf58bc"],
Cell[225938, 4994, 291, 8, 52, "Text",ExpressionUUID->"0cbe84d6-ab3a-445a-acb7-69e6dbb3efd3"],
Cell[226232, 5004, 1163, 30, 188, "Input",ExpressionUUID->"dea5b70a-c989-4ae9-b337-1b9ae02513a0"],
Cell[227398, 5036, 459, 13, 52, "Text",ExpressionUUID->"e294cc38-7a37-4695-baa0-29cd911256fd"],
Cell[CellGroupData[{
Cell[227882, 5053, 400, 8, 63, "Input",ExpressionUUID->"cb024948-2bd2-41fb-aaea-d934985ded39"],
Cell[CellGroupData[{
Cell[228307, 5065, 516, 10, 36, "Print",ExpressionUUID->"1a4f4944-4a13-4877-adc3-9f71d1b3272a"],
Cell[228826, 5077, 515, 10, 36, "Print",ExpressionUUID->"ac651f40-d847-4d12-8a7b-82fd39afdbbf"],
Cell[229344, 5089, 516, 10, 36, "Print",ExpressionUUID->"ca843482-9ffa-4eee-b1e6-32bba852714b"],
Cell[229863, 5101, 518, 10, 36, "Print",ExpressionUUID->"c1c75309-3962-4bcd-b960-c17303b9cd08"],
Cell[230384, 5113, 518, 10, 36, "Print",ExpressionUUID->"aaac25b4-3335-4fd7-ae65-9ffadde84c87"],
Cell[230905, 5125, 516, 10, 36, "Print",ExpressionUUID->"b3d4eab7-9483-427e-9f36-45d2028e1d1d"],
Cell[231424, 5137, 519, 10, 36, "Print",ExpressionUUID->"970a2e1f-6831-4366-bf00-a852dc34ae88"],
Cell[231946, 5149, 520, 10, 36, "Print",ExpressionUUID->"eb003dce-10e5-4ee7-8c6e-68b57b64bc94"],
Cell[232469, 5161, 518, 10, 36, "Print",ExpressionUUID->"3086f7dc-14e3-497d-b97a-46bf5511c2f2"],
Cell[232990, 5173, 518, 10, 36, "Print",ExpressionUUID->"b0d65f61-5022-486e-bb19-a2d840d15f5e"],
Cell[233511, 5185, 520, 10, 36, "Print",ExpressionUUID->"b884bfb0-354e-4725-afa8-c9c829aa882a"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[234104, 5203, 156, 3, 104, "Section",ExpressionUUID->"440272b8-74cd-450a-9470-bd9d31134ba0"],
Cell[234263, 5208, 1959, 39, 225, "Text",ExpressionUUID->"656643de-f1d3-4f76-afa8-512ebe29ce67"],
Cell[236225, 5249, 1793, 33, 87, "Text",ExpressionUUID->"5932c106-306a-49ef-a7fe-3defadb9b012"],
Cell[238021, 5284, 1593, 26, 87, "Text",ExpressionUUID->"cf518a37-930c-4835-8a87-7ba838dfc946"],
Cell[CellGroupData[{
Cell[239639, 5314, 1216, 24, 95, "Input",ExpressionUUID->"c2ad6c86-edb6-437a-933a-cb0897a54110",
 CellID->1828271894],
Cell[240858, 5340, 406, 7, 63, "Output",ExpressionUUID->"54efde6c-078d-42e0-9c16-509bf41b6b4c"],
Cell[241267, 5349, 31357, 563, 143, "Output",ExpressionUUID->"a1b06f62-c1be-4bda-b08f-75cdf52d9f93"]
}, Open  ]],
Cell[272639, 5915, 685, 17, 121, "Text",ExpressionUUID->"3f64207e-373a-4e2f-a889-d9995ca4c104"],
Cell[CellGroupData[{
Cell[273349, 5936, 200, 3, 63, "Input",ExpressionUUID->"78256a8a-5432-4655-96f4-ebaa3f5a4769"],
Cell[273552, 5941, 291, 5, 63, "Output",ExpressionUUID->"74c615d3-0e77-4539-825c-160fbd86a315"]
}, Open  ]],
Cell[273858, 5949, 1091, 18, 121, "Text",ExpressionUUID->"9aff722a-0396-4e7c-8c3e-80634efc7bd5"],
Cell[274952, 5969, 1723, 39, 190, "Text",ExpressionUUID->"d9a3ea4b-f017-4b3f-b345-a89d9882aabb"],
Cell[CellGroupData[{
Cell[276700, 6012, 225, 4, 51, "Subsection",ExpressionUUID->"b8a7eae4-fa0b-4451-9e23-c52cf643af28"],
Cell[276928, 6018, 666, 15, 87, "Text",ExpressionUUID->"0cbfb604-bf8f-4ae1-b4a4-30e6bb264fc4"],
Cell[277597, 6035, 1523, 37, 312, "Input",ExpressionUUID->"9c9aff13-96af-40d5-811e-2470e5d8377e"],
Cell[279123, 6074, 311, 8, 52, "Text",ExpressionUUID->"1dc8d2c1-0259-448b-ba19-e0eb33cc81cb"],
Cell[CellGroupData[{
Cell[279459, 6086, 519, 11, 95, "Input",ExpressionUUID->"c2ceaf85-344c-4b69-a502-132aebd92d94"],
Cell[279981, 6099, 1236, 32, 95, "Output",ExpressionUUID->"d237b702-6f39-4544-8038-7f7e0fe1b402"]
}, Open  ]],
Cell[281232, 6134, 1094, 21, 156, "Text",ExpressionUUID->"0cc6f2af-e587-4bb0-9c6d-0a3fd140e2b5"],
Cell[282329, 6157, 273, 4, 52, "Text",ExpressionUUID->"bda8714c-dd58-4645-8c3a-75f9b99cb19b"],
Cell[CellGroupData[{
Cell[282627, 6165, 990, 25, 126, "Input",ExpressionUUID->"16265688-c451-48dd-a5a9-81a9ac740175"],
Cell[283620, 6192, 824, 12, 63, "Output",ExpressionUUID->"ab8ca073-c1bf-425a-bc05-6851ca60da80"]
}, Open  ]],
Cell[284459, 6207, 248, 4, 52, "Text",ExpressionUUID->"fa495c51-4093-46cc-bf9a-f78613ed5fa8"],
Cell[CellGroupData[{
Cell[284732, 6215, 200, 3, 63, "Input",ExpressionUUID->"6fde25a0-1489-4849-8716-e49d0f34ef53"],
Cell[284935, 6220, 31973, 571, 143, "Output",ExpressionUUID->"73a2a7aa-0281-4e76-b898-24d11e1a653a"]
}, Open  ]],
Cell[316923, 6794, 821, 19, 87, "Text",ExpressionUUID->"8b80d01b-89db-46ac-aa71-d99b7fe500b3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[317781, 6818, 329, 5, 51, "Subsection",ExpressionUUID->"f96e4621-eba9-46dc-b44c-a0ca77809771"],
Cell[318113, 6825, 453, 16, 52, "Text",ExpressionUUID->"353a304f-fca9-4303-bd50-3a5e70306cd6"],
Cell[318569, 6843, 1385, 26, 219, "Input",ExpressionUUID->"4f29620d-7d67-4ee2-ae34-70f6e5c4a19f"],
Cell[319957, 6871, 313, 7, 52, "Text",ExpressionUUID->"0a923628-f438-460b-b5d4-881e8a92f27a"],
Cell[CellGroupData[{
Cell[320295, 6882, 734, 14, 157, "Input",ExpressionUUID->"94156bce-fac0-4e5f-b279-c655911d4df7"],
Cell[321032, 6898, 601, 10, 63, "Output",ExpressionUUID->"9f0ee55e-1641-46d9-bb21-a15cf3c2135e"],
Cell[321636, 6910, 32462, 581, 143, "Output",ExpressionUUID->"25720c43-24a5-4df1-b510-81d9dd7ccac2"]
}, Open  ]],
Cell[354113, 7494, 595, 13, 157, "Input",ExpressionUUID->"6330c4e1-1328-4658-95dd-e8220ce3595a"],
Cell[CellGroupData[{
Cell[354733, 7511, 457, 10, 63, "Input",ExpressionUUID->"d12d1771-eefb-4f05-818c-3af7a05ff7e3"],
Cell[355193, 7523, 337, 6, 63, "Output",ExpressionUUID->"3761cca3-f082-4e11-b768-03733a3f0f52"]
}, Open  ]],
Cell[355545, 7532, 392, 9, 52, "Text",ExpressionUUID->"9aeca67f-653c-46e6-b9ee-cf79d95a20eb"],
Cell[355940, 7543, 1138, 29, 281, "Input",ExpressionUUID->"16c7bfcc-bdf6-4969-9d87-f4c62e7dcb6b"],
Cell[357081, 7574, 243, 4, 52, "Text",ExpressionUUID->"d996f833-f0cb-4da1-b527-0c65b3161171"],
Cell[CellGroupData[{
Cell[357349, 7582, 650, 15, 157, "Input",ExpressionUUID->"cdb0aac7-429a-4601-b1c4-72583d2817bf"],
Cell[358002, 7599, 622, 10, 63, "Output",ExpressionUUID->"ca0e02a3-6a3d-48cf-9bf8-76b84c7715e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[358661, 7614, 257, 4, 63, "Input",ExpressionUUID->"a1de1731-8123-468a-aa7d-d5e4ad7c5a71"],
Cell[358921, 7620, 32181, 576, 143, "Output",ExpressionUUID->"a266d6d9-5179-40ce-b333-2452283d0901"]
}, Open  ]],
Cell[CellGroupData[{
Cell[391139, 8201, 198, 3, 63, "Input",ExpressionUUID->"b71b9f58-a416-45a7-8e3e-0b8695e2323a"],
Cell[391340, 8206, 188, 3, 63, "Output",ExpressionUUID->"fb1080dd-6c79-413c-a861-17a01343e550"]
}, Open  ]],
Cell[391543, 8212, 1022, 25, 121, "Text",ExpressionUUID->"c0a08140-d593-4d07-be93-f5f0473ae71f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[392602, 8242, 292, 4, 51, "Subsection",ExpressionUUID->"2727edea-6432-4860-94dd-d4d29f61f3ec"],
Cell[392897, 8248, 1229, 32, 312, "Input",ExpressionUUID->"4382cbc0-5499-4172-be6d-e1d38fe8432d"],
Cell[394129, 8282, 288, 7, 52, "Text",ExpressionUUID->"3954ff3b-c146-418a-bd22-717ae1985dd9"],
Cell[CellGroupData[{
Cell[394442, 8293, 722, 17, 157, "Input",ExpressionUUID->"2b4550e3-31bc-4068-a8b4-87290aa98e5f"],
Cell[395167, 8312, 608, 10, 63, "Output",ExpressionUUID->"d01562e8-861f-43cd-acce-821322e72ed9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[395812, 8327, 259, 4, 63, "Input",ExpressionUUID->"c95b202e-a9e8-4170-a19f-696fa7e9349f"],
Cell[396074, 8333, 32855, 593, 144, "Output",ExpressionUUID->"55b3bd07-6f33-4c17-b6c9-708cfb736445"]
}, Open  ]],
Cell[CellGroupData[{
Cell[428966, 8931, 198, 3, 63, "Input",ExpressionUUID->"c23a2d5f-5dc6-4414-abae-dca1f964a081"],
Cell[429167, 8936, 190, 3, 63, "Output",ExpressionUUID->"5eba1c7f-9fac-4805-9551-5603e5cac0d5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[429406, 8945, 243, 4, 51, "Subsection",ExpressionUUID->"f252043b-986d-4959-94c9-d1b29dbac849"],
Cell[429652, 8951, 1582, 41, 158, "Text",ExpressionUUID->"56411f24-148b-4ba0-ac2f-92b7431eaa40"],
Cell[431237, 8994, 1260, 27, 157, "Input",ExpressionUUID->"4842264b-f6e4-444c-a86d-86c2843c4f4e"],
Cell[CellGroupData[{
Cell[432522, 9025, 727, 14, 95, "Input",ExpressionUUID->"9868846d-e639-40a1-9734-b9a6f4b77204"],
Cell[433252, 9041, 799, 12, 63, "Output",ExpressionUUID->"6d24f9c7-3991-454b-8b4f-eea1d0274b6d"]
}, Open  ]],
Cell[434066, 9056, 278, 6, 87, "Text",ExpressionUUID->"5ec8013d-2f3b-4f72-aa49-ff541f1be72a"],
Cell[CellGroupData[{
Cell[434369, 9066, 257, 5, 63, "Input",ExpressionUUID->"c5662f40-04a0-418c-a4fe-09db8de1f462"],
Cell[434629, 9073, 376, 7, 84, "Output",ExpressionUUID->"4750d80a-1b6b-4e42-af44-75e7c0b8b2f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[435042, 9085, 263, 5, 63, "Input",ExpressionUUID->"8bc95361-8ce3-45f0-ae01-95fa1479939b"],
Cell[435308, 9092, 32903, 594, 165, "Output",ExpressionUUID->"7b66db36-9eef-41d3-9d7c-417c194cf581"]
}, Open  ]],
Cell[CellGroupData[{
Cell[468248, 9691, 202, 4, 63, "Input",ExpressionUUID->"bf0079c2-df1c-4636-ab86-51021ab0d6e0"],
Cell[468453, 9697, 194, 4, 84, "Output",ExpressionUUID->"8cedd4a6-3a00-4638-b166-2768670cc0c5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[468696, 9707, 332, 5, 51, "Subsection",ExpressionUUID->"187f8673-6745-4d39-82cd-6b0c5b23b849"],
Cell[469031, 9714, 309, 9, 52, "Text",ExpressionUUID->"19e597bd-c064-4bd0-bddb-56f4e9735572"],
Cell[469343, 9725, 1238, 32, 281, "Input",ExpressionUUID->"91245056-dc1b-4ebf-a5c1-d43470427bef"],
Cell[470584, 9759, 161, 3, 52, "Text",ExpressionUUID->"3a0cbf6d-b953-43f8-81c4-60f206847b47"],
Cell[CellGroupData[{
Cell[470770, 9766, 753, 18, 157, "Input",ExpressionUUID->"2e9862ed-0ce0-4d03-ba2a-4d805f9733b8"],
Cell[471526, 9786, 384, 7, 84, "Output",ExpressionUUID->"61e87b99-35d2-4b1d-8496-313acd6381a0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[471947, 9798, 263, 5, 63, "Input",ExpressionUUID->"875c8921-2111-46da-b3bb-524d3e633eb7"],
Cell[472213, 9805, 32124, 576, 164, "Output",ExpressionUUID->"082c0dca-cc2e-45b8-a4c8-2fb6b30a9566"]
}, Open  ]],
Cell[CellGroupData[{
Cell[504374, 10386, 204, 4, 63, "Input",ExpressionUUID->"fa181177-34bf-46d9-854c-3f0f41533c3b"],
Cell[504581, 10392, 194, 4, 84, "Output",ExpressionUUID->"8508bf87-9ac3-40bf-8705-fc4234c62535"]
}, Open  ]],
Cell[504790, 10399, 372, 7, 52, "Text",ExpressionUUID->"7d76055d-5c7c-4e90-91e9-5e333651e4c8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[505199, 10411, 407, 8, 92, "Subsection",ExpressionUUID->"bfc547a4-de27-4612-b3f1-7587300b359e"],
Cell[505609, 10421, 1353, 33, 281, "Input",ExpressionUUID->"a05a7d4c-cdfd-40cf-9271-40fe9f4d9b58"],
Cell[CellGroupData[{
Cell[506987, 10458, 1359, 33, 250, "Input",ExpressionUUID->"0896483d-1c1d-40bf-8c53-1def7efede86"],
Cell[508349, 10493, 553, 10, 84, "Output",ExpressionUUID->"7ab842fc-ed14-410a-a349-18c0bc9a5603"]
}, Open  ]],
Cell[CellGroupData[{
Cell[508939, 10508, 264, 5, 63, "Input",ExpressionUUID->"4fcb1167-1353-404f-af77-9ce1d0c10627"],
Cell[509206, 10515, 32120, 576, 164, "Output",ExpressionUUID->"e492da3b-0a0d-444d-bf71-0cb01596898c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[541363, 11096, 202, 4, 63, "Input",ExpressionUUID->"bb14c903-05a1-4a45-8898-135b3e730e32"],
Cell[541568, 11102, 194, 4, 84, "Output",ExpressionUUID->"e28089d1-c805-4a25-8f49-42ce5fa04461"]
}, Open  ]],
Cell[541777, 11109, 286, 7, 52, "Text",ExpressionUUID->"cefa020c-e818-4ac4-bb55-177fdb531af6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[542112, 11122, 206, 4, 104, "Section",ExpressionUUID->"007cc137-edf8-4e3c-852e-e44d96b3a337"],
Cell[542321, 11128, 778, 17, 121, "Text",ExpressionUUID->"b1bb45f9-929c-460f-8276-e0190c4d2a7d"]
}, Open  ]]
}, Open  ]]
}
]
*)

