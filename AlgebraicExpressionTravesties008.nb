(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    479859,      11610]
NotebookOptionsPosition[    450515,      11163]
NotebookOutlinePosition[    451155,      11185]
CellTagsIndexPosition[    451112,      11182]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Algebraic Travesties", "Title",
 CellChangeTimes->{{3.5485827120798798`*^9, 3.548582715630885*^9}, {
  3.5486758274795203`*^9, 3.5486758354865203`*^9}, {3.5486818669031096`*^9, 
  3.5486818765251093`*^9}, {3.841245492423634*^9, 3.8412455004138117`*^9}, {
  3.8413984006634483`*^9, 3.841398431377946*^9}, {3.841399866569034*^9, 
  3.841399888000155*^9}, {3.841677147366501*^9, 3.841677178739687*^9}, {
  3.841687387036133*^9, 3.8416873923868628`*^9}, {3.841742494629508*^9, 
  3.841742494704925*^9}, {3.841747422827636*^9, 3.841747457282696*^9}, {
  3.841759918624181*^9, 3.8417599186868*^9}, {3.911254144972988*^9, 
  3.911254153407407*^9}, {3.911297591773931*^9, 3.9112975960182743`*^9}, {
  3.9112976333816853`*^9, 
  3.911297666878549*^9}},ExpressionUUID->"e69ed4d1-2852-407b-a4d7-\
ebd11ce6da7a"],

Cell["Brian Beckman\[LineSeparator]Dec 2023", "Subtitle",
 CellChangeTimes->{{3.5486756518965206`*^9, 3.5486756585195203`*^9}, {
   3.841157092469059*^9, 3.8411570960260963`*^9}, 3.841398438220071*^9, 
   3.841677184105061*^9, {3.841742515721157*^9, 3.841742516437627*^9}, {
   3.9112513648612328`*^9, 3.911251367826374*^9}, {3.912368823795223*^9, 
   3.912368828988701*^9}},ExpressionUUID->"0a45aa99-9a6b-4a8b-87c8-\
96d50b07cda3"],

Cell[CellGroupData[{

Cell["ABSTRACT", "Chapter",
 CellChangeTimes->{{3.841245701744459*^9, 3.841245702859004*^9}, {
  3.841677373237803*^9, 
  3.841677374823723*^9}},ExpressionUUID->"6f10638c-7ff3-4b8f-aaee-\
89dcd0cbfa99"],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " (or the Wolfram language) offers an exceptionally easy and straightforward \
way to ",
 StyleBox["generate",
  FontSlant->"Italic"],
 " tools like test generators, parsers, type-checkers, visualizers, and \
solvers from certain concise grammars. In this paper, we illustrate our \
methods with syntax-driven travesties (random utterances) and syntax-driven \
parser generation for an example grammar, ",
 StyleBox["F", "Input"],
 ", of algebraic expressions. Elsewhere, we tested our generators on bigger \
grammars, for instance, the famous game Wff-n-Proof game, with inferencing; \
and for a small programming language from \[OpenCurlyDoubleQuote]Types and \
Programming Languages\[CloseCurlyDoubleQuote] by Benjamin C. Pierce, with \
type checking."
}], "Text",
 CellChangeTimes->{{3.841485280266317*^9, 3.8414853552009*^9}, {
   3.841486073358988*^9, 3.841486302716445*^9}, {3.841487170454701*^9, 
   3.841487336957999*^9}, {3.841487367409369*^9, 3.841487451499804*^9}, {
   3.841487522356583*^9, 3.841487673872428*^9}, {3.841677229107499*^9, 
   3.841677230602058*^9}, {3.84167737779907*^9, 3.841677433957501*^9}, {
   3.841678556652316*^9, 3.841678568400806*^9}, {3.841678610874031*^9, 
   3.841678611352243*^9}, {3.841686866703055*^9, 3.8416868778529167`*^9}, 
   3.8417425223560047`*^9, {3.841742558037096*^9, 3.8417426296758013`*^9}, {
   3.8417427043845654`*^9, 3.841742721855731*^9}, {3.841746577151619*^9, 
   3.841746599778043*^9}, {3.841746759040452*^9, 3.841746832631297*^9}, {
   3.8417468840494013`*^9, 3.841747260193118*^9}, {3.8417474682646017`*^9, 
   3.841747562765829*^9}, {3.841748062769079*^9, 3.841748070674718*^9}, {
   3.841748357341868*^9, 3.841748410979306*^9}, {3.841748982337996*^9, 
   3.8417490941628103`*^9}, {3.841749140178247*^9, 3.841749164969161*^9}, {
   3.841749202555747*^9, 3.841749211772212*^9}, {3.91125151040959*^9, 
   3.9112515123585377`*^9}, {3.911297680908484*^9, 3.911297717913269*^9}, {
   3.91236885097726*^9, 
   3.9123688551423903`*^9}},ExpressionUUID->"bbda9b87-c4db-4655-a455-\
38e3805c54c5"],

Cell["\<\
(Wff-n-Proof is no longer easy to find on the internet, but physical copies \
abound on shopping sites.)\
\>", "Text",
 CellChangeTimes->{
  3.5501392166170464`*^9, {3.8414865762768*^9, 3.841486582474018*^9}, {
   3.911251466878063*^9, 3.911251484032041*^9}, {3.911297729200795*^9, 
   3.91129775053163*^9}, 
   3.9112981219102507`*^9},ExpressionUUID->"0aa8fa81-9ef7-47fb-b5d6-\
8761ace044fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["OVERVIEW", "Chapter",
 CellChangeTimes->{{3.8417484305144873`*^9, 
  3.8417484317436123`*^9}},ExpressionUUID->"4b6c4671-deb2-4ebd-9655-\
0d86c8023d9c"],

Cell[TextData[{
 StyleBox["Travesties",
  FontSlant->"Italic"],
 " are syntactically valid but random utterances, useful for testing. We \
could, for example, easily write a ",
 StyleBox["strategy",
  FontSlant->"Italic"],
 " in Python\[CloseCurlyQuote]s ",
 StyleBox["hypothesis",
  FontSlant->"Italic"],
 " testing library using methods from this paper \
(https://hypothesis.readthedocs.io/en/latest/ ). "
}], "Text",
 CellChangeTimes->{{3.841485280266317*^9, 3.8414853552009*^9}, {
   3.841486073358988*^9, 3.841486302716445*^9}, {3.841487170454701*^9, 
   3.841487336957999*^9}, {3.841487367409369*^9, 3.841487451499804*^9}, {
   3.841487522356583*^9, 3.841487673872428*^9}, {3.841677229107499*^9, 
   3.841677230602058*^9}, {3.84167737779907*^9, 3.841677433957501*^9}, {
   3.841678556652316*^9, 3.841678568400806*^9}, {3.841678610874031*^9, 
   3.841678611352243*^9}, {3.841686866703055*^9, 3.8416868778529167`*^9}, 
   3.8417425223560047`*^9, {3.841742558037096*^9, 3.8417426296758013`*^9}, {
   3.8417427043845654`*^9, 3.841742721855731*^9}, {3.841746577151619*^9, 
   3.841746599778043*^9}, {3.841746759040452*^9, 3.841746832631297*^9}, {
   3.8417468840494013`*^9, 3.8417471854519653`*^9}, {3.841747284944573*^9, 
   3.841747317458295*^9}, {3.841747350201457*^9, 3.8417474061385107`*^9}, {
   3.8417475748213043`*^9, 3.841747651424247*^9}, {3.841747919161834*^9, 
   3.841747967370729*^9}},ExpressionUUID->"d937f960-e89d-423c-aa98-\
28657fe651c0"],

Cell[TextData[{
 StyleBox["Parsers",
  FontSlant->"Italic"],
 " convert utterances (streams of tokens) into trees, imposing the recursive \
structure of the grammar. A ",
 StyleBox["parser generator",
  FontSlant->"Italic"],
 " produces a parser from a grammar. Parser generation is usually considered \
difficult. Think what it would take you to replicate ",
 StyleBox["yacc", "Input"],
 ". However, our ",
 StyleBox["yacc", "Input"],
 "-alike is trivialized because of the specific form we require of our \
grammars."
}], "Text",
 CellChangeTimes->{{3.841485280266317*^9, 3.8414853552009*^9}, {
   3.841486073358988*^9, 3.841486302716445*^9}, {3.841487170454701*^9, 
   3.841487336957999*^9}, {3.841487367409369*^9, 3.841487451499804*^9}, {
   3.841487522356583*^9, 3.841487673872428*^9}, {3.841677229107499*^9, 
   3.841677230602058*^9}, {3.84167737779907*^9, 3.841677433957501*^9}, {
   3.841678556652316*^9, 3.841678568400806*^9}, {3.841678610874031*^9, 
   3.841678611352243*^9}, {3.841686866703055*^9, 3.8416868778529167`*^9}, 
   3.8417425223560047`*^9, {3.841742558037096*^9, 3.8417426296758013`*^9}, {
   3.8417427043845654`*^9, 3.841742721855731*^9}, {3.841746577151619*^9, 
   3.841746599778043*^9}, {3.841746759040452*^9, 3.841746832631297*^9}, {
   3.8417468840494013`*^9, 3.8417471854519653`*^9}, {3.841747284944573*^9, 
   3.841747317458295*^9}, {3.841747350201457*^9, 3.8417474061385107`*^9}, {
   3.8417475748213043`*^9, 3.841747651424247*^9}, {3.841747919161834*^9, 
   3.841747925062989*^9}, {3.841748469517982*^9, 3.8417484776756477`*^9}, {
   3.841749242738154*^9, 3.841749267133212*^9}, {3.911251560573536*^9, 
   3.911251561555998*^9}},ExpressionUUID->"9c0e221e-02fd-4e7d-82d3-\
f8658c78f293"],

Cell[TextData[{
 "The grammars we found easy to process are in stripped-down Polish Prefix \
Form (PPF). In our version of PPF, each non-terminal in the grammar has a \
unique leading ",
 StyleBox["head",
  FontSlant->"Italic"],
 " symbol. ",
 StyleBox["Arities",
  FontSlant->"Italic"],
 " of functional forms, i.e., numbers of arguments, are fixed. No punctuation \
is needed or allowed because a head immediately dictates how many arguments: \
no curly braces, commas, semicolons, brackets, parentheses, etc. Also no \
operators, overloads, or precedence tables are needed or allowed. "
}], "Text",
 CellChangeTimes->{{3.841485280266317*^9, 3.8414853552009*^9}, {
   3.841486073358988*^9, 3.841486302716445*^9}, {3.841487170454701*^9, 
   3.841487336957999*^9}, {3.841487367409369*^9, 3.841487451499804*^9}, {
   3.841487522356583*^9, 3.841487673872428*^9}, {3.841677229107499*^9, 
   3.841677230602058*^9}, {3.84167737779907*^9, 3.841677433957501*^9}, {
   3.841678556652316*^9, 3.841678568400806*^9}, {3.841678610874031*^9, 
   3.841678611352243*^9}, {3.841686866703055*^9, 3.8416868778529167`*^9}, 
   3.8417425223560047`*^9, {3.841742558037096*^9, 3.8417426296758013`*^9}, {
   3.8417427043845654`*^9, 3.841742721855731*^9}, {3.841746577151619*^9, 
   3.841746599778043*^9}, {3.841746759040452*^9, 3.841746832631297*^9}, {
   3.8417468840494013`*^9, 3.841746896322073*^9}, {3.8417477499914703`*^9, 
   3.841747793079982*^9}, {3.8417479901684837`*^9, 3.841747997100086*^9}, {
   3.841748103168209*^9, 3.841748142137145*^9}, 3.841748320094808*^9, {
   3.8417485089103813`*^9, 3.841748513355585*^9}, {3.841748690597047*^9, 
   3.8417488526622963`*^9}, {3.841748894251588*^9, 3.841748943351853*^9}, {
   3.8417492887522078`*^9, 
   3.841749333356022*^9}},ExpressionUUID->"719ff646-967d-44d5-87c0-\
dba723377a69"],

Cell[TextData[{
 "We ",
 StyleBox["speculate",
  FontSlant->"Italic"],
 " that more complicated grammars, say those for C++, Python, or Haskell, can \
be translated into our PPF by a top-level, traditional parser that treats our \
PPF as an intermediate syntactical representation, completely internal to the \
parsing phase of a compiler. We further speculate that it might be worth the \
effort to transcribe complicated syntaxes into PPF because, stripped of \
syntactic noise, our PPFs ease the work of downstream language-processing \
tools like test generators, parsers, type-checkers, visualizers, and solvers."
}], "Text",
 CellChangeTimes->{{3.841485280266317*^9, 3.8414853552009*^9}, {
   3.841486073358988*^9, 3.841486302716445*^9}, {3.841487170454701*^9, 
   3.841487336957999*^9}, {3.841487367409369*^9, 3.841487451499804*^9}, {
   3.841487522356583*^9, 3.841487673872428*^9}, {3.841677229107499*^9, 
   3.841677230602058*^9}, {3.84167737779907*^9, 3.841677433957501*^9}, {
   3.841678556652316*^9, 3.841678568400806*^9}, {3.841678610874031*^9, 
   3.841678611352243*^9}, {3.841686866703055*^9, 3.8416868778529167`*^9}, 
   3.8417425223560047`*^9, {3.841742558037096*^9, 3.8417426296758013`*^9}, {
   3.8417427043845654`*^9, 3.841742721855731*^9}, {3.841746577151619*^9, 
   3.841746599778043*^9}, {3.841746759040452*^9, 3.841746832631297*^9}, {
   3.8417468840494013`*^9, 3.841746896322073*^9}, {3.8417477499914703`*^9, 
   3.841747793079982*^9}, {3.8417479901684837`*^9, 3.841747997100086*^9}, {
   3.841748103168209*^9, 3.841748142137145*^9}, 3.841748320094808*^9, {
   3.8417485089103813`*^9, 3.841748513355585*^9}, {3.841748690597047*^9, 
   3.8417488526622963`*^9}, {3.841748894251588*^9, 3.841748943351853*^9}, {
   3.8417492887522078`*^9, 3.8417493197336073`*^9}, {3.84174935019447*^9, 
   3.8417494066640663`*^9}, {3.912369452860203*^9, 
   3.9123694743313026`*^9}},ExpressionUUID->"b155b3fb-1f41-449b-a624-\
88737d14b1f0"],

Cell[TextData[{
 "We do not strive for academic rigor, preferring to illustrate by examples \
and to invite the reader to join the fun, to extend and apply our methods. We \
also state, up-front, that any novelty, here, comes from using ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ". Our techniques have been known to lisp programmers, for example, for a \
very long time (See my paper from 1989, \[OpenCurlyDoubleQuote]A Scheme for \
Interactive Graphics,\[CloseCurlyDoubleQuote] for example [link below]). The \
target audience, here, comprises programmers who are accustomed to working \
much too hard at too low a level of abstraction. "
}], "Text",
 CellChangeTimes->{{3.841749566665564*^9, 3.8417497640144653`*^9}, {
  3.841749820684848*^9, 3.841749872269896*^9}, {3.84174990283355*^9, 
  3.841749911906372*^9}, {3.841749943510578*^9, 3.841749944471648*^9}, {
  3.84175020540567*^9, 3.841750210743903*^9}, {3.841761556376607*^9, 
  3.841761558025326*^9}, {3.912369521564846*^9, 
  3.912369528131487*^9}},ExpressionUUID->"43f55824-d6df-4d5e-a261-\
1b42bce9948f"],

Cell["\<\
https://www.researchgate.net/publication/2319434_A_Scheme_for_Interactive_\
Graphics\
\>", "Text",
 CellChangeTimes->{{3.84174988222712*^9, 
  3.841749885372517*^9}},ExpressionUUID->"209d9897-2fab-4fcb-81e1-\
f38ea86c0744"]
}, Open  ]],

Cell[CellGroupData[{

Cell["PRELIMINARY PACKAGES", "Chapter",
 CellChangeTimes->{{3.84124565794427*^9, 3.841245665199665*^9}, {
  3.9112542042436113`*^9, 3.911254208096692*^9}, {3.91125444322156*^9, 
  3.911254448924737*^9}},ExpressionUUID->"0d758d12-92c3-4bc0-92b1-\
0c83967c71bb"],

Cell[BoxData[
 RowBox[{"<<", "Utilities`CleanSlate`"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.549536915366044*^9, 3.5495369233915033`*^9}},
 CellLabel->
  "In[263]:=",ExpressionUUID->"61746ed5-bbf8-41e4-b8f0-14c0ca47e0fb"],

Cell[TextData[{
 "If you like, move the following package onto your ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " ",
 StyleBox["$Path",
  FontSlant->"Italic"],
 ". The following unevaluatable cell shows where I put it on my system. I \
include a copy of this package here so anyone can just evaluate this notebook \
without installing packages. We don\[CloseCurlyQuote]t explain this code, \
here, we just use it. Close up this chapter so you don\[CloseCurlyQuote]t \
have to look at all this stuff."
}], "Text",
 CellChangeTimes->{{3.841245538638632*^9, 3.841245647324567*^9}, {
  3.84139870846646*^9, 3.8413987116890793`*^9}, {3.841749441285334*^9, 
  3.841749475793593*^9}, {3.911251785926512*^9, 3.911251809937158*^9}, {
  3.911254213855645*^9, 3.9112543003752117`*^9}, {3.911254456176429*^9, 
  3.9112544866868763`*^9}, {3.912369537601478*^9, 
  3.912369557306286*^9}},ExpressionUUID->"55d453db-05f8-4e44-ada6-\
95403f2d9ff5"],

Cell[BoxData[
 RowBox[{"<<", "\"\<~/Dropbox/MMA/Packages/Jacquard.m\>\""}]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.629505394618649*^9, 3.6295054078237057`*^9}, {
   3.645653564684004*^9, 3.645653570450636*^9}, {3.841153579311688*^9, 
   3.841153624246653*^9}, 
   3.911297436702623*^9},ExpressionUUID->"504ea0b2-cf1b-43f8-ae18-\
65a5cba5770d"],

Cell[CellGroupData[{

Cell["Jacquard.m", "Section",
 CellChangeTimes->{{3.9112519323520527`*^9, 
  3.911251934588236*^9}},ExpressionUUID->"b87a6a81-d0e3-4bb0-a83d-\
4adb3f5309f2"],

Cell[CellGroupData[{

Cell["Jacquard and JaqSON", "Subsection",ExpressionUUID->"01d377e3-b65c-4210-be0e-64ecc355db75"],

Cell["Serialized expressions for remote evaluation.", "Text",ExpressionUUID->"3f84a35f-ed36-45eb-af81-6834d13ef344"],

Cell["\<\
Brian Beckman
Februrary 2012
with ideas from Avi Bar-Zeev, Erik Meijer, and Savas Parastiditis\
\>", "Text",ExpressionUUID->"87a80c3e-3a02-4d3b-ac57-c89d0717ef5c"],

Cell["\<\
Copyright (c) 2012, Microsoft Corporation

   Licensed under the Apache License, Version 2.0 (the \"License\");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an \"AS IS\" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.\
\>", "Text",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"3c9ca2de-43a0-4ba5-9d78-de9fb6288a39"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Public Interface", "Subsection",ExpressionUUID->"165cc488-78b1-484a-903e-200209df4bd3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Mathematica", " ", "Package"}], " ", "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Created", " ", "by", " ", "the", " ", "Wolfram", " ", "Workbench", " ", 
     "Mar", " ", "8"}], ",", " ", "2012"}], " ", "*)"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"BeginPackage", "[", 
    RowBox[{"\"\<Jacquard`\>\"", ",", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<JLink`\>\"", ",", " ", "\"\<MiniData`\>\""}], "}"}]}], 
    "]"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"BeginPackage", "[", 
    RowBox[{"\"\<Jacquard`\>\"", ",", " ", 
     RowBox[{"{", "\"\<JLink`\>\"", "}"}]}], "]"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Exported", " ", "symbols", " ", "added", " ", "here", " ", "with", " ", 
     RowBox[{"SymbolName", "::", "usage"}]}], " ", "*)"}], " ", "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"gridExpression", "::", "usage"}], " ", "=", " ", 
     "\"\<Displays expressions in a hierarchical grid.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"gridCaptive", "::", "usage"}], " ", "=", " ", 
     "\"\<Displays captive expressions in a hierarchical grid.\>\""}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"gridCaptive2", "::", "usage"}], " ", "=", " ", 
     "\"\<Displays captive expressions in a hierarchical grid.\>\""}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"gridRules", "::", "usage"}], " ", "=", " ", 
     "\"\<Displays Lists of Rules and Lists of Lists of Rules in a \
hierarchical grid.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"traceView2", "::", "usage"}], " ", "=", " ", 
     "\"\<Presents Cascading OpenerViews of an expression trace.\>\""}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"traceView4", "::", "usage"}], " ", "=", " ", 
     "\"\<Presents interactive, button-driven view of an \
expression-evaluation trace.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"traceView5", "::", "usage"}], " ", "=", " ", 
     "\"\<Presents an abbreviated button-driven view of an \
expression-evaluation trace.\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SymbolQ", "::", "usage"}], " ", "=", " ", 
     "\"\<Tests whether its argument is a Symbol\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"KvpQ", "::", "usage"}], " ", "=", " ", 
     "\"\<Tests whether its argument is a KVPair or KVP, that is, a list of \
two values, the first of which is a string or symbol Key.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"KvpsQ", "::", "usage"}], " ", "=", " ", 
     "\"\<Tests whether its argument is an association list: that is, a list \
of key-value pairs where no key appears more than once.\>\""}], ";"}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"RulesQ", "::", "usage"}], " ", "=", " ", 
     "\"\<Tests whether its argument is a list of Rules, which is the \
Import/Export preferred representation for key-value pairs (the analog to \
'lookup' for rules is just 'Replace.')\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"RulessQ", "::", "usage"}], " ", "=", " ", 
     "\"\<Tests whether its argument is a list of list of Rules, which is the \
preferred representation for argument lists.\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Args", "::", "usage"}], " ", "=", " ", 
     "\"\<Produces all the arguments of a composite expression; counterpoint \
to built-in Head.\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"rulesFromExpression", "::", "usage"}], " ", "=", " ", 
     "\"\<Documentation TODO\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"rulesFromHeldExpression", "::", "usage"}], " ", "=", " ", 
     "\"\<Documentation TODO\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"rulesFromEvaluatableHeldExpression", "::", "usage"}], " ", "=", 
     " ", "\"\<Documentation TODO\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"expressionFromRules", "::", "usage"}], " ", "=", " ", 
     "\"\<Documentation TODO\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"stringifiedExpressionFromRules", "::", "usage"}], " ", "=", 
     " ", "\"\<Documentation TODO\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"jsonStringFromExpression", "::", "usage"}], " ", "=", " ", 
     "\"\<jsonStringFromExpression[expr]\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"jsonStringFromHeldExpression", "::", "usage"}], " ", "=", " ", 
     "\"\<jsonStringFromHeldExpression[expr]\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"expressionFromJsonString", "::", "usage"}], " ", "=", " ", 
     "\"\<expressionFromJsonString[str]\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"stringifiedExpressionFromJsonString", "::", "usage"}], " ", "=",
      " ", "\"\<stringifiedExpressionFromJsonString[str]\>\""}], ";"}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"jacquardPostRules", "::", "usage"}], " ", "=", " ", 
     "\"\<jacquardPostRules[rules, importer, url]\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"jacquardPostExpression", "::", "usage"}], " ", "=", " ", 
     "\"\<jacquardPostRules[rules, importer, url]\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"jacquardEvalExpression", "::", "usage"}], " ", "=", " ", 
     "\"\<jacquardPostExpression[expr, importer, url]\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"jacquardEvalHeldExpression", "::", "usage"}], " ", "=", " ", 
     "\"\<jacquardEvalHeldExpression[expr, importer, url]\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"jacquardEvalEvaluatableHeldExpression", "::", "usage"}], " ", 
     "=", " ", "\"\<jacquardEvalHeldExpression[expr, importer, url]\>\""}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"jacquardStringifiedEvalHeldExpression", "::", "usage"}], " ", 
     "=", " ", 
     "\"\<jacquardStringifiedEvalHeldExpression[expr, importer, url]\>\""}], 
    ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"During", " ", "Development"}], ",", " ", 
     RowBox[{"keep", " ", "these", " ", "symbols", " ", 
      RowBox[{"public", ".", "  ", "Pick"}], " ", "which", " ", "ones", "\n", 
      "   ", "to", " ", "make", " ", "permanently", " ", "public", " ", 
      RowBox[{"later", "."}]}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"insertCommaSeparators", "::", "usage"}], " ", "=", " ", 
     "\"\<Temporary.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"number2", "::", "usage"}], " ", "=", " ", 
     "\"\<Temporary.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"string2", "::", "usage"}], " ", "=", " ", 
     "\"\<Temporary.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"symbol2", "::", "usage"}], " ", "=", " ", 
     "\"\<Temporary.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"dpyCaptive2", "::", "usage"}], " ", "=", " ", 
     "\"\<Temporary.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"prefixes", "::", "usage"}], " ", "=", " ", 
     "\"\<Temporary.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"postfixes", "::", "usage"}], " ", "=", " ", 
     "\"\<Temporary.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"splits", "::", "usage"}], " ", "=", " ", "\"\<Temporary.\>\""}],
     ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"flat1", "::", "usage"}], " ", "=", " ", "\"\<Temporary.\>\""}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Pluck", "::", "usage"}], " ", "=", " ", 
     "\"\<Pluck[n] is a Function that produces the n-th Part of its \
input.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SelectMany", "::", "usage"}], " ", "=", " ", 
     "\"\<SelectMany[list, listFromElement]\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Zip", "::", "usage"}], " ", "=", " ", 
     "\"\<Zip[list1, list2, itemFromPair]\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ZipMany", "::", "usage"}], " ", "=", " ", 
     "\"\<ZipMany[list1, list2, listFromPair]\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"captive", "::", "usage"}], " ", "=", " ", 
     "\"\<Temporary.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"captive2", "::", "usage"}], " ", "=", " ", 
     "\"\<Temporary.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"RealQ", "::", "usage"}], " ", "=", " ", "\"\<Temporary.\>\""}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ComplexQ", "::", "usage"}], " ", "=", " ", 
     "\"\<Temporary.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"RationalQ", "::", "usage"}], " ", "=", " ", 
     "\"\<Temporary.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"numericSubtype", "::", "usage"}], " ", "=", " ", 
     "\"\<Temporary.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"pairsQ", "::", "usage"}], " ", "=", " ", "\"\<Temporary.\>\""}],
     ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"keys", "::", "usage"}], " ", "=", " ", "\"\<Temporary.\>\""}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"values", "::", "usage"}], " ", "=", " ", "\"\<Temporary.\>\""}],
     ";"}]}]}]], "Code",
 CellLabel->
  "In[264]:=",ExpressionUUID->"500b62a9-1a1e-4f53-9d90-cd4e46b87f86"],

Cell[BoxData["\<\"Jacquard`\"\>"], "Output",
 CellChangeTimes->{{3.911252420463434*^9, 3.9112524215062847`*^9}, {
   3.91125438105021*^9, 3.911254381392432*^9}, {3.911254645608398*^9, 
   3.911254645916486*^9}, {3.911297451317709*^9, 3.911297451557879*^9}, {
   3.912368778474472*^9, 3.9123687786643753`*^9}, {3.9123699328282747`*^9, 
   3.912369955036199*^9}, 3.912543581317498*^9, 3.912545374350491*^9},
 CellLabel->
  "Out[264]=",ExpressionUUID->"7796d4ad-2db0-4db0-af89-4716a3b8a09b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Implementation", " ", "of", " ", "the", " ", "package"}], " ", 
   "*)"}]}]}], "Code",
 CellLabel->
  "In[315]:=",ExpressionUUID->"c94d5995-6bbe-4314-b8ad-10821b7e72a7"],

Cell[BoxData["\<\"Jacquard`Private`\"\>"], "Output",
 CellChangeTimes->{{3.9112524204723883`*^9, 3.9112524215094852`*^9}, {
   3.911254381065897*^9, 3.9112543813949327`*^9}, {3.911254645615882*^9, 
   3.911254645923902*^9}, {3.9112974513282413`*^9, 3.911297451568139*^9}, {
   3.912368778476959*^9, 3.912368778669245*^9}, {3.9123699328305683`*^9, 
   3.912369955042194*^9}, 3.91254358131993*^9, 3.912545374352553*^9},
 CellLabel->
  "Out[315]=",ExpressionUUID->"f55f691f-777a-4fdb-80db-a7100f1ab39d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualization and Debugging Definitions", "Subsection",ExpressionUUID->"4e78ca56-0977-4500-ba23-3998924fdc76"],

Cell[CellGroupData[{

Cell["gridRules[ rules ]", "Subsubsection",ExpressionUUID->"3aa5eb10-d9b1-4b54-86d3-3c82d28a0708"],

Cell["\<\
Display rules generated from expressions and round-tripped through JSON. \
Update to handle Rule-Delayed.\
\>", "Text",ExpressionUUID->"c9440c6d-9860-474f-af4c-2db7e4abf22b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"gridRules", ",", "fopts"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{
    "allAreRulesQ", ",", "noneAreAtomsQ", ",", "noneAreAtomsOrListsQ"}], 
    "]"}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "A", " ", "\"\<HoldAll\>\"", " ", "version", " ", "of", " ", "the", " ", 
     "following"}], ",", " ", 
    RowBox[{"with", " ", "\"\<Unevaluated\>\"", " ", "everywhere"}], ",", " ", 
    RowBox[{"may", " ", "be", " ", 
     RowBox[{"required", "."}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"noneAreAtomsQ", "[", "candidates_List", "]"}], ":=", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{"AtomQ", "@", "#"}], "]"}], "&"}], "/@", "candidates"}], 
     ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"noneAreAtomsOrListsQ", "[", "candidates_List", "]"}], ":=", 
  RowBox[{"And", "@@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Not", "[", 
        RowBox[{
         RowBox[{"AtomQ", "@", "#"}], "||", 
         RowBox[{"ListQ", "@", "#"}]}], "]"}], ")"}], "&"}], "/@", 
     "candidates"}], ")"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"allAreRulesQ", "[", "candidates_List", "]"}], ":=", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"h", "=", 
           RowBox[{"Head", "@", "#"}]}], "}"}], ",", 
         RowBox[{
          RowBox[{"h", "===", "Rule"}], "||", 
          RowBox[{"h", "===", "RuleDelayed"}]}]}], "]"}], "&"}], "/@", 
      "candidates"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"fopts", "[", 
    RowBox[{"fcolor_", ",", "bcolor_"}], "]"}], ":=", 
   RowBox[{"Sequence", "[", 
    RowBox[{
     RowBox[{"Frame", " ", "->", " ", "All"}], ",", 
     RowBox[{"Alignment", " ", "->", " ", "Left"}], ",", 
     RowBox[{"FrameStyle", " ", "->", " ", "fcolor"}], ",", "\n", 
     RowBox[{"Background", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"LightOrange", ",", " ", 
         RowBox[{"{", "bcolor", "}"}]}], "}"}], "}"}]}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gridRules", "[", 
     RowBox[{"Rule", "[", 
      RowBox[{"key_", ",", " ", "val_"}], "]"}], "]"}], ":=", "\n", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"gridRules", "@", "key"}], ",", "Bold", ",", "Black"}], 
          "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"gridRules", " ", "@", " ", "val"}], ",", "Bold", ",", " ",
            "Blue"}], "]"}]}], "}"}], "}"}], ",", "\n", 
      RowBox[{"fopts", "[", 
       RowBox[{"Blue", ",", "LightYellow"}], "]"}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gridRules", "[", 
     RowBox[{"RuleDelayed", "[", 
      RowBox[{"key_", ",", " ", "val_"}], "]"}], "]"}], ":=", "\n", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"gridRules", "@", "key"}], ",", "Bold", ",", "Black"}], 
          "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"gridRules", " ", "@", " ", "val"}], ",", "Bold", ",", " ",
            "Red"}], "]"}]}], "}"}], "}"}], ",", "\n", 
      RowBox[{"fopts", "[", 
       RowBox[{"Red", ",", "LightYellow"}], "]"}]}], "]"}]}], ";"}], "\n", 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Put", " ", "lists", " ", "of", " ", "non"}], "-", 
     RowBox[{
     "atoms", " ", "vertically", " ", "and", " ", "joinGrids", " ", "them", 
      " ", "up"}]}], ",", " ", 
    RowBox[{"removing", " ", "one", " ", "level", " ", "of", " ", 
     RowBox[{"nesting", "."}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gridRules", "[", 
     RowBox[{"exprs_List", "?", "noneAreAtomsOrListsQ"}], "]"}], ":=", "\n", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"joinGrids", "@", 
        RowBox[{"Transpose", "@", 
         RowBox[{"{", 
          RowBox[{"gridRules", " ", "/@", " ", "exprs"}], "}"}]}]}], ")"}], 
      ",", "\n", 
      RowBox[{"Frame", "->", "All"}], ",", 
      RowBox[{"FrameStyle", "->", 
       RowBox[{"Darker", "[", "Green", "]"}]}], ",", 
      RowBox[{"Alignment", "->", "Left"}], ",", 
      RowBox[{"Background", "->", "LightGreen"}]}], "]"}]}], ";"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Put", " ", "other", " ", "lists", " ", "vertically", " ", "but", " ", 
    RowBox[{"DON", "'"}], "T", " ", "joinGrids", " ", "them", " ", 
    RowBox[{"up", "."}]}], " ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gridRules", "[", "exprs_List", "]"}], ":=", "\n", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Transpose", "@", 
        RowBox[{"{", 
         RowBox[{"gridRules", " ", "/@", " ", "exprs"}], "}"}]}], ")"}], ",", 
      "\n", 
      RowBox[{"Frame", "->", "All"}], ",", 
      RowBox[{"FrameStyle", "->", 
       RowBox[{"Darker", "[", "Green", "]"}]}], ",", 
      RowBox[{"Alignment", "->", "Left"}], ",", 
      RowBox[{"Background", "->", "LightGreen"}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gridRules", "[", 
     RowBox[{"h_", "[", "parts___", "]"}], "]"}], ":=", "\n", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"gridRules", "@", "h"}], ",", "Bold", ",", " ", 
           RowBox[{"Darker", "[", "Purple", "]"}]}], "]"}], "}"}], "~", 
        "Join", "~", 
        RowBox[{"(", 
         RowBox[{"gridRules", " ", "/@", " ", 
          RowBox[{"{", "parts", "}"}]}], ")"}]}], "}"}], ",", "\n", 
      RowBox[{"fopts", "[", 
       RowBox[{"Black", ",", "LightGreen"}], "]"}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gridRules", "[", 
     RowBox[{"any_", "?", "StringQ"}], "]"}], ":=", 
    RowBox[{"Style", "[", 
     RowBox[{
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", "any", "}"}], "}"}], ",", 
        RowBox[{"Alignment", "->", "Left"}]}], "]"}], ",", "Bold", ",", 
      RowBox[{"Darker", "[", "Red", "]"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gridRules", "[", 
     RowBox[{"any_", "?", "AtomQ"}], "]"}], ":=", 
    RowBox[{"Style", "[", 
     RowBox[{
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", "any", "}"}], "}"}], ",", 
        RowBox[{"Alignment", "->", "Left"}]}], "]"}], ",", "Bold"}], "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gridRules", "[", "any_", "]"}], ":=", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", "any", "}"}], "}"}], ",", 
      RowBox[{"Alignment", "->", "Left"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "joinGrids", "]"}], ";"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Arbitrarily", " ", "choose", " ", "the", " ", "first", " ", "of", " ", 
     "multiple", " ", "option", " ", "tails", " ", "z1"}], ",", " ", "z2", 
    ",", " ", 
    RowBox[{"...", " ", "."}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"joinGrids", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", "xs__", "}"}], ",", "z1___"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", "ys__", "}"}], ",", "z2___"}], "]"}], "}"}]}], "}"}], 
    "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "ys"}], "}"}], ",", "z1"}], "]"}], "}"}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"joinGrids", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", "xs__", "}"}], ",", "z1___"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", "ys__", "}"}], ",", "z2___"}], "]"}], "}"}], ",", " ", 
      "k__"}], "}"}], "]"}], ":=", 
   RowBox[{"joinGrids", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xs", ",", "ys"}], "}"}], ",", "z1"}], "]"}], "}"}], ",", 
      "k"}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"joinGrids", "[", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Grid", "[", "xs___", "]"}], "}"}], "}"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"Grid", "[", "xs", "]"}], "}"}], "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"joinGrids", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Grid", "[", 
          RowBox[{
           RowBox[{"{", "xs__", "}"}], ",", "z1___"}], "]"}], ",", 
         "sty1___"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Grid", "[", 
          RowBox[{
           RowBox[{"{", "ys__", "}"}], ",", "z2___"}], "]"}], ",", 
         "sty2___"}], "]"}], "}"}]}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xs", ",", "ys"}], "}"}], ",", "z1"}], "]"}], ",", "sty1"}],
       "]"}], "}"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"joinGrids", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", "xs__", "}"}], ",", "z1___"}], "]"}], ",", 
          "sty1___"}], "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", "ys__", "}"}], ",", "z2___"}], "]"}], ",", 
          "sty2___"}], "]"}], "}"}], ",", " ", "k__"}], "}"}], "]"}], ":=", 
    RowBox[{"joinGrids", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"xs", ",", "ys"}], "}"}], ",", "z1"}], "]"}], ",", 
          "sty1"}], "]"}], "}"}], ",", "k"}], "}"}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"joinGrids", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Grid", "[", 
          RowBox[{
           RowBox[{"{", "xs__", "}"}], ",", "z1___"}], "]"}], ",", 
         "sty1___"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", "ys__", "}"}], ",", "z2___"}], "]"}], "}"}]}], "}"}], 
    "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xs", ",", "ys"}], "}"}], ",", "z1"}], "]"}], ",", "sty1"}],
       "]"}], "}"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"joinGrids", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", "xs__", "}"}], ",", "z1___"}], "]"}], ",", 
          "sty1___"}], "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Grid", "[", 
         RowBox[{
          RowBox[{"{", "ys__", "}"}], ",", "z2___"}], "]"}], "}"}], ",", " ", 
       "k__"}], "}"}], "]"}], ":=", 
    RowBox[{"joinGrids", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"xs", ",", "ys"}], "}"}], ",", "z1"}], "]"}], ",", 
          "sty1"}], "]"}], "}"}], ",", "k"}], "}"}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"joinGrids", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", "xs__", "}"}], ",", "z1___"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Grid", "[", 
          RowBox[{
           RowBox[{"{", "ys__", "}"}], ",", "z2___"}], "]"}], ",", 
         "sty2___"}], "]"}], "}"}]}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xs", ",", "ys"}], "}"}], ",", "z1"}], "]"}], ",", "sty2"}],
       "]"}], "}"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"joinGrids", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Grid", "[", 
         RowBox[{
          RowBox[{"{", "xs__", "}"}], ",", "z1___"}], "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", "ys__", "}"}], ",", "z2___"}], "]"}], ",", 
          "sty2___"}], "]"}], "}"}], ",", " ", "k__"}], "}"}], "]"}], ":=", 
    RowBox[{"joinGrids", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"xs", ",", "ys"}], "}"}], ",", "z1"}], "]"}], ",", 
          "sty2"}], "]"}], "}"}], ",", "k"}], "}"}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"joinGrids", "[", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Grid", "[", "xs___", "]"}], ",", "sty___"}], "]"}], "}"}], 
      "}"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Grid", "[", "xs", "]"}], ",", "sty"}], "]"}], "}"}], "}"}]}],
    ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"joinGrids", "[", 
    RowBox[{"{", "}"}], "]"}], ":=", 
   RowBox[{"{", "}"}]}], ";"}]}], "Code",
 CellLabel->
  "In[316]:=",ExpressionUUID->"7f271bd2-6211-48c9-bd19-5314cfd7d516"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Private Display (dpy) Definitions", "Subsection",ExpressionUUID->"fef9798f-62f8-4a85-b1ac-cb9b784217c7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dpyNullary", "[", "ex_", "]"}], " ", ":=", "\n", "  ", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"ex", ",", " ", "\"\<\>\""}], "}"}], "}"}], ",", "\n", "   ", 
     RowBox[{"Frame", "      ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"All", ",", "False"}], "}"}]}], ",", "\n", "   ", 
     RowBox[{"Alignment", "  ", "->", " ", "Left"}], ",", "\n", "   ", 
     RowBox[{"Background", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"LightOrange", ",", 
         RowBox[{"{", "LightYellow", "}"}]}], "}"}], "}"}]}]}], "]"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[342]:=",ExpressionUUID->"168a115d-fc11-42fa-a18a-485728639349"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dpyMultiary", "[", 
    RowBox[{"key_", ",", " ", "vals_"}], "]"}], " ", ":=", "\n", "   ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c", " ", "=", " ", 
       RowBox[{"Length", " ", "@", " ", "vals"}]}], "}"}], ",", "\n", "    ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "\n", "      ", 
        RowBox[{
         RowBox[{"spans", " ", "=", " ", 
          RowBox[{"Table", "[", 
           RowBox[{"\"\<\>\"", ",", " ", 
            RowBox[{"{", "c", "}"}]}], "]"}]}], ",", "\n", "      ", 
         RowBox[{"slot", "  ", "=", " ", 
          RowBox[{"Floor", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", "c"}], ")"}], "/", "2"}], "]"}]}]}], "}"}], 
       ",", "\n", "     ", 
       RowBox[{
        RowBox[{
         RowBox[{"spans", "[", 
          RowBox[{"[", "slot", "]"}], "]"}], " ", "=", " ", "key"}], ";", 
        "\n", "     ", 
        RowBox[{"Grid", "[", 
         RowBox[{
          RowBox[{"MapThread", "[", 
           RowBox[{"List", ",", 
            RowBox[{"{", 
             RowBox[{"spans", ",", " ", "vals"}], "}"}]}], "]"}], ",", "\n", 
          "       ", 
          RowBox[{"Frame", "      ", "->", " ", 
           RowBox[{"{", 
            RowBox[{"All", ",", "False"}], "}"}]}], ",", "\n", "       ", 
          RowBox[{"Alignment", "  ", "->", " ", "Left"}], ",", "\n", 
          "       ", 
          RowBox[{"Background", " ", "->", " ", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"LightOrange", ",", 
              RowBox[{"{", "LightGreen", "}"}]}], "}"}], "}"}]}]}], "]"}]}]}],
       "\n", "      ", "]"}]}], "]"}]}], ";"}]], "Code",
 CellLabel->
  "In[343]:=",ExpressionUUID->"7990fc0f-e44a-44ef-9f1f-660e3c4a1973"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dpyAtom", "[", "ex_", "]"}], " ", ":=", " ", "\n", "  ", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Style", "[", 
        RowBox[{"ex", ",", "Bold"}], "]"}], "}"}], "}"}], ",", "\n", "   ", 
     RowBox[{"Frame", "      ", "->", " ", "All"}], ",", "\n", "   ", 
     RowBox[{"Alignment", "  ", "->", " ", "Left"}], ",", "\n", "   ", 
     RowBox[{"Background", " ", "->", "\n", "     ", 
      RowBox[{"Switch", "[", 
       RowBox[{
        RowBox[{"Head", " ", "@", " ", "ex"}], ",", "\n", "       ", "String",
         ",", "   ", "LightYellow", ",", "\n", "       ", "Symbol", ",", 
        "   ", "LightPurple", ",", "\n", "       ", "Integer", ",", "  ", 
        "LightBlue", ",", "\n", "       ", "Real", ",", "     ", "LightBlue", 
        ",", "\n", "       ", "Rational", ",", " ", "LightBlue", ",", "\n", 
        "       ", "Complex", ",", "  ", "LightBlue", ",", "\n", "       ", 
        "_", ",", "        ", "Red"}], "]"}]}]}], "]"}]}], ";"}]], "Code",
 CellLabel->
  "In[344]:=",ExpressionUUID->"8cb727dd-809b-4feb-9cb7-63c9ec894863"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dpyQuotedAtom", "[", 
    RowBox[{"number2", "[", "ex_", "]"}], "]"}], " ", ":=", " ", "\n", "  ", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Style", "[", 
        RowBox[{"ex", ",", "Bold", ",", "Blue"}], "]"}], "}"}], "}"}], ",", 
     "\n", "   ", 
     RowBox[{"Frame", "      ", "->", " ", "All"}], ",", "\n", "   ", 
     RowBox[{"Alignment", "  ", "->", " ", "Left"}], ",", "\n", "   ", 
     RowBox[{"Background", " ", "->", " ", "LightBlue"}]}], "]"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[345]:=",ExpressionUUID->"8558d62c-17ac-4fbb-80a5-faece94adbee"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dpyQuotedAtom", "[", 
    RowBox[{"string2", "[", "ex_", "]"}], "]"}], " ", ":=", " ", "\n", "  ", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Style", "[", 
        RowBox[{"ex", ",", "Bold", ",", "Green"}], "]"}], "}"}], "}"}], ",", 
     "\n", "   ", 
     RowBox[{"Frame", "      ", "->", " ", "All"}], ",", "\n", "   ", 
     RowBox[{"Alignment", "  ", "->", " ", "Left"}], ",", "\n", "   ", 
     RowBox[{"Background", " ", "->", " ", "LightYellow"}]}], "]"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[346]:=",ExpressionUUID->"cfabc3a6-6aac-4da4-9498-b305238cdee2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dpyQuotedAtom", "[", 
    RowBox[{"symbol2", "[", "ex_", "]"}], "]"}], " ", ":=", " ", "\n", "  ", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Style", "[", 
        RowBox[{"ex", ",", "Bold", ",", "Purple"}], "]"}], "}"}], "}"}], ",", 
     "\n", "   ", 
     RowBox[{"Frame", "      ", "->", " ", "All"}], ",", "\n", "   ", 
     RowBox[{"Alignment", "  ", "->", " ", "Left"}], ",", "\n", "   ", 
     RowBox[{"Background", " ", "->", " ", "LightPurple"}]}], "]"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[347]:=",ExpressionUUID->"63edef23-4062-4cea-8f2e-ca04b18815ad"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dpyEmpty", "[", "]"}], " ", ":=", "\n", "  ", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", "}"}], "}"}], ",", "\n", "   ", 
     RowBox[{"Frame", "      ", "->", " ", "All"}], ",", "\n", "   ", 
     RowBox[{"Alignment", "  ", "->", " ", "Left"}], ",", "\n", "   ", 
     RowBox[{"Background", " ", "->", " ", "White"}]}], "]"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[348]:=",ExpressionUUID->"19abb58a-e3f5-4047-a48d-b920c898c90c"],

Cell[CellGroupData[{

Cell["gridExpression[ expr ]", "Subsubsection",ExpressionUUID->"8293d681-c451-43e0-95e3-324b82f142c4"],

Cell["Display a gridded representation of an expression.", "Text",ExpressionUUID->"1a85e5af-dd6b-4112-8fcf-ad53241754a4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"gridExpression", "[", 
    RowBox[{"ex_", "[", "]"}], "]"}], "        ", ":=", " ", 
   RowBox[{"dpyNullary", "[", 
    RowBox[{"gridExpression", " ", "@", " ", "ex"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"gridExpression", "[", 
    RowBox[{"ex_", "[", "parts__", "]"}], "]"}], " ", ":=", " ", 
   RowBox[{"dpyMultiary", "[", 
    RowBox[{
     RowBox[{"gridExpression", " ", "@", " ", "ex"}], ",", " ", 
     RowBox[{"gridExpression", " ", "/@", " ", 
      RowBox[{"{", "parts", "}"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"gridExpression", "[", 
    RowBox[{"ex_", "?", "AtomQ"}], "]"}], "    ", ":=", " ", 
   RowBox[{"dpyAtom", "[", "ex", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"gridExpression", "[", "x___", "]"}], "         ", ":=", " ", 
   RowBox[{"Throw", "[", 
    RowBox[{"{", "x", "}"}], "]"}]}], ";"}]}], "Code",
 CellLabel->
  "In[349]:=",ExpressionUUID->"0a3234fc-a4c2-4c16-81fe-7ba48cb56b64"]
}, Open  ]],

Cell[CellGroupData[{

Cell["gridCaptive[ expr ]", "Subsubsection",ExpressionUUID->"b0697cd1-1ff2-48e2-8a27-d486d8816031"],

Cell["\<\
Display a gridded representation of a captive (quoted) expression.\
\>", "Text",ExpressionUUID->"1e74f2c3-4780-4533-b680-9719d6439283"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SetAttributes", "[", 
    RowBox[{"gridCaptive", ",", " ", "HoldAllComplete"}], "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dpyCaptive", "[", 
    RowBox[{"{", "ex_", "}"}], "]"}], "      ", ":=", " ", 
   RowBox[{"dpyNullary", "[", 
    RowBox[{"dpyCaptive", " ", "@", " ", "ex"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dpyCaptive", "[", 
    RowBox[{"{", 
     RowBox[{"a_", ",", " ", "as__"}], "}"}], "]"}], " ", ":=", " ", 
   RowBox[{"dpyMultiary", "[", 
    RowBox[{
     RowBox[{"dpyCaptive", " ", "@", " ", "a"}], ",", " ", 
     RowBox[{"dpyCaptive", " ", "/@", " ", 
      RowBox[{"{", "as", "}"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dpyCaptive", "[", 
    RowBox[{"ex_", "?", "AtomQ"}], "]"}], "  ", ":=", " ", 
   RowBox[{"dpyAtom", "[", "ex", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"dpyCaptive", "[", "x___", "]"}], "       ", ":=", " ", 
    RowBox[{"Throw", "[", 
     RowBox[{"Unevaluated", " ", "@", " ", 
      RowBox[{"{", "x", "}"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"gridCaptive", "[", "expr_", "]"}], ":=", " ", 
   RowBox[{"dpyCaptive", " ", "@", " ", 
    RowBox[{"captive", " ", "@", " ", "expr"}]}]}], ";"}]}], "Code",
 CellLabel->
  "In[353]:=",ExpressionUUID->"2fefa5f1-a6e8-4066-a66a-c738f5451191"]
}, Open  ]],

Cell[CellGroupData[{

Cell["captive2", "Subsubsection",ExpressionUUID->"aa6f7e20-3d0d-406e-9660-4c62a09655b2"],

Cell["TODO: deprecate the old captive", "Text",ExpressionUUID->"e22eb7e3-fe15-4a01-893b-2f226faff80a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"captive2", ",", " ", "HoldAllComplete"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"captive2", "[", 
   RowBox[{"expr_", " ", "/;", " ", 
    RowBox[{"NumberQ", " ", "@", " ", 
     RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}]}], "]"}], "           ",
   ":=", " ", 
  RowBox[{"number2", "[", 
   RowBox[{"ToString", "[", "expr", "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"captive2", "[", 
   RowBox[{"expr_", " ", "/;", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Head", " ", "@", " ", 
       RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}], " ", "===", " ", 
      "Symbol"}], ")"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"symbol2", "[", 
   RowBox[{"ToString", " ", "@", " ", 
    RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"captive2", "[", 
   RowBox[{"expr_", " ", "/;", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Head", " ", "@", " ", 
       RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}], " ", "===", " ", 
      "String"}], ")"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"string2", "[", 
   RowBox[{
   "\"\<\\\"\>\"", " ", "<>", " ", "expr", " ", "<>", " ", "\"\<\\\"\>\""}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"captive2", "[", 
   RowBox[{"head_", "[", "parts___", "]"}], "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"captive2", " ", "@", " ", "head"}], ",", " ", 
    RowBox[{"captive2", " ", "/@", " ", 
     RowBox[{"Unevaluated", " ", "@", " ", 
      RowBox[{"{", "parts", "}"}]}]}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"captive2", "[", "x___", "]"}], "           ", ":=", " ", 
   RowBox[{"Throw", " ", "@", " ", 
    RowBox[{"{", "x", "}"}]}]}], ";"}]}], "Code",
 CellLabel->
  "In[359]:=",ExpressionUUID->"17a20211-e84d-4d7c-afc2-8023af3000c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["gridCaptive2[ expr ]", "Subsubsection",ExpressionUUID->"c4318ce1-ebc2-4286-b51c-ba8334a3bdb0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SetAttributes", "[", 
    RowBox[{"gridCaptive2", ",", " ", "HoldAllComplete"}], "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dpyCaptive2", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"symbol2", "[", "\"\<List\>\"", "]"}], ",", " ", 
      RowBox[{"{", "}"}]}], "}"}], "]"}], " ", ":=", " ", 
   RowBox[{"dpyEmpty", "[", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dpyCaptive2", "[", 
    RowBox[{"{", 
     RowBox[{"ex_", ",", " ", 
      RowBox[{"{", "}"}]}], "}"}], "]"}], "             ", ":=", " ", 
   RowBox[{"dpyNullary", "[", 
    RowBox[{"dpyCaptive2", " ", "@", " ", "ex"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dpyCaptive2", "[", 
    RowBox[{"{", 
     RowBox[{"a_", ",", " ", 
      RowBox[{"{", "as__", "}"}]}], "}"}], "]"}], "          ", ":=", " ", 
   RowBox[{"dpyMultiary", "[", 
    RowBox[{
     RowBox[{"dpyCaptive2", " ", "@", " ", "a"}], ",", " ", 
     RowBox[{"dpyCaptive2", " ", "/@", " ", 
      RowBox[{"{", "as", "}"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dpyCaptive2", "[", 
    RowBox[{"number2", "[", "ex_", "]"}], "]"}], "          ", ":=", " ", 
   RowBox[{"dpyQuotedAtom", "[", 
    RowBox[{"number2", "[", "ex", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dpyCaptive2", "[", 
    RowBox[{"string2", "[", "ex_", "]"}], "]"}], "          ", ":=", " ", 
   RowBox[{"dpyQuotedAtom", "[", 
    RowBox[{"string2", "[", "ex", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dpyCaptive2", "[", 
    RowBox[{"symbol2", "[", "ex_", "]"}], "]"}], "          ", ":=", " ", 
   RowBox[{"dpyQuotedAtom", "[", 
    RowBox[{"symbol2", "[", "ex", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"dpyCaptive2", "[", "x___", "]"}], "                  ", ":=", 
    " ", 
    RowBox[{"Throw", "[", 
     RowBox[{"Unevaluated", " ", "@", " ", 
      RowBox[{"{", "x", "}"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"gridCaptive2", "[", "expr_", "]"}], " ", ":=", " ", 
   RowBox[{"dpyCaptive2", " ", "@", " ", 
    RowBox[{"captive2", " ", "@", " ", "expr"}]}]}], ";"}]}], "Code",
 CellLabel->
  "In[365]:=",ExpressionUUID->"f34b6bfc-9590-4e08-b871-d28936bee66f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["traceView2[ expr ]", "Subsubsection",ExpressionUUID->"5b11f8a7-cfb8-4b11-a17d-3e09ec245995"],

Cell["\<\
Display an interactive visualization of the trace of the evaluation of an \
expression. \
\>", "Text",ExpressionUUID->"2e44e189-101d-4eb3-858e-a80cedeea133"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"traceView2", "[", "expr_", "]"}], ":=", 
  RowBox[{"Module", "[", "\n", "  ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"steps", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"stack", "=", 
       RowBox[{"{", "}"}]}], ",", "pre", ",", "post", ",", "show", ",", 
      "dynamic"}], "}"}], ",", "\n", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{"pre", "[", "e_", "]"}], ":=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"stack", "=", 
         RowBox[{"{", 
          RowBox[{"steps", ",", "stack"}], "}"}]}], ";", 
        RowBox[{"steps", "=", 
         RowBox[{"{", "}"}]}]}], ")"}]}], ";", "\n", "  ", 
     RowBox[{
      RowBox[{"post", "[", 
       RowBox[{"e_", ",", "r_"}], "]"}], ":=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"steps", "=", 
         RowBox[{
          RowBox[{"First", "@", "stack"}], "~", "Join", "~", 
          RowBox[{"{", 
           RowBox[{"show", "[", 
            RowBox[{"e", ",", 
             RowBox[{"HoldForm", "[", "r", "]"}], ",", "steps"}], "]"}], 
           "}"}]}]}], ";", 
        RowBox[{"stack", "=", 
         RowBox[{"stack", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}]}], ";", "\n", "  ", 
     RowBox[{"SetAttributes", "[", 
      RowBox[{"post", ",", "HoldAllComplete"}], "]"}], ";", "\n", "  ", 
     RowBox[{
      RowBox[{"show", "[", 
       RowBox[{"e_", ",", "r_", ",", "steps_"}], "]"}], ":=", 
      RowBox[{"Grid", "[", "\n", "    ", 
       RowBox[{
        RowBox[{"steps", "/.", 
         RowBox[{"{", "\n", "      ", 
          RowBox[{
           RowBox[{
            RowBox[{"{", "}"}], "->", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\"\<Expr  \>\"", ",", 
               RowBox[{"Row", "[", 
                RowBox[{"{", 
                 RowBox[{"e", ",", "\"\< \>\"", ",", 
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<inert\>\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"Italic", ",", "Small"}], "}"}]}], "]"}]}], "}"}],
                 "]"}]}], "}"}], "}"}]}], ",", "\n", "      ", 
           RowBox[{"_", "->", 
            RowBox[{"{", "\n", "        ", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"\"\<Expr  \>\"", ",", "e"}], "}"}], ",", "\n", 
              "        ", 
              RowBox[{"{", 
               RowBox[{"\"\<Steps\>\"", ",", 
                RowBox[{"steps", "/.", 
                 RowBox[{"{", "\n", "          ", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", "}"}], "->", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<no definitions apply\>\"", ",", "Italic"}], 
                    "]"}]}], ",", "\n", "          ", 
                   RowBox[{"_", ":>", 
                    RowBox[{"OpenerView", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Length", "@", "steps"}], ",", 
                    RowBox[{"dynamic", "@", 
                    RowBox[{"Column", "[", "steps", "]"}]}]}], "}"}], 
                    "]"}]}]}], "}"}]}]}], "}"}], ",", "\n", "        ", 
              RowBox[{"{", 
               RowBox[{"\"\<Result\>\"", ",", "r"}], "}"}]}], "}"}]}]}], 
          "}"}]}], ",", "\n", "      ", 
        RowBox[{"Alignment", "->", "Left"}], ",", "\n", "      ", 
        RowBox[{"Frame", "->", "All"}], ",", "\n", "      ", 
        RowBox[{"Background", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "LightCyan", "}"}], ",", "None"}], "}"}]}]}], "]"}]}],
      ";", "\n", "    ", 
     RowBox[{"TraceScan", "[", 
      RowBox[{"pre", ",", "expr", ",", "___", ",", "post"}], "]"}], ";", "\n",
      "    ", 
     RowBox[{"Deploy", "@", 
      RowBox[{"Pane", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"steps", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "/.", 
         RowBox[{"dynamic", "->", "Dynamic"}]}], ",", 
        RowBox[{"ImageSize", "->", "10000"}]}], "]"}]}]}]}], "]"}]}], "\n", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"traceView2", ",", 
   RowBox[{"{", "HoldAllComplete", "}"}]}], "]"}]}], "Code",
 CellLabel->
  "In[374]:=",ExpressionUUID->"cb5263c0-b3df-4ac4-98f5-5e7af8299993"]
}, Open  ]],

Cell[CellGroupData[{

Cell["traceView4[ expr ]", "Subsubsection",ExpressionUUID->"0cd72aba-b0c2-4414-afbb-e89a4fdd4532"],

Cell["\<\
Display a compact interactive visualization of the trace of the evaluation of \
an expression.\
\>", "Text",ExpressionUUID->"a8eba8cc-52eb-447e-83a6-5384488b25d6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"traceView4", "[", "expr_", "]"}], ":=", 
  RowBox[{"Module", "[", "\n", "  ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"steps", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"stack", "=", 
       RowBox[{"{", "}"}]}], ",", "pre", ",", "post"}], "}"}], ",", "\n", 
    "  ", 
    RowBox[{
     RowBox[{
      RowBox[{"pre", "[", "e_", "]"}], ":=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"stack", "=", 
         RowBox[{"{", 
          RowBox[{"steps", ",", "stack"}], "}"}]}], ";", 
        RowBox[{"steps", "=", 
         RowBox[{"{", "}"}]}]}], ")"}]}], ";", "\n", "  ", 
     RowBox[{
      RowBox[{"post", "[", 
       RowBox[{"e_", ",", "r_"}], "]"}], ":=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"steps", "=", 
         RowBox[{
          RowBox[{"First", "@", "stack"}], "~", "Join", "~", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"e", ",", "steps", ",", 
             RowBox[{"HoldForm", "[", "r", "]"}]}], "}"}], "}"}]}]}], ";", 
        RowBox[{"stack", "=", 
         RowBox[{"stack", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}]}], ";", "\n", "  ", 
     RowBox[{"SetAttributes", "[", 
      RowBox[{"post", ",", "HoldAllComplete"}], "]"}], ";", "\n", "  ", 
     RowBox[{"TraceScan", "[", 
      RowBox[{"pre", ",", "expr", ",", "___", ",", "post"}], "]"}], ";", "\n",
      "  ", 
     RowBox[{"DynamicModule", "[", "\n", "    ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "focus", ",", "show", ",", "substep", ",", "enter", ",", "exit"}], 
        "}"}], ",", "\n", "    ", 
       RowBox[{
        RowBox[{"focus", "=", "steps"}], ";", "\n", "    ", 
        RowBox[{
         RowBox[{"substep", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e_", ",", 
             RowBox[{"{", "}"}], ",", "_"}], "}"}], ",", "_"}], "]"}], ":=", 
         RowBox[{"{", 
          RowBox[{"Null", ",", "e", ",", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<inert\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"Italic", ",", "Small"}], "}"}]}], "]"}]}], "}"}]}], 
        ";", "\n", "    ", 
        RowBox[{
         RowBox[{"substep", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e_", ",", "_", ",", "r_"}], "}"}], ",", "p_"}], "]"}], ":=", 
         RowBox[{"{", "\n", "      ", 
          RowBox[{
           RowBox[{"Button", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<show\>\"", ",", "Small"}], "]"}], ",", 
             RowBox[{"enter", "[", "p", "]"}]}], "]"}], ",", "\n", "      ", 
           "e", ",", "\n", "      ", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Row", "[", 
              RowBox[{"{", 
               RowBox[{"\"\<-> \>\"", ",", "r"}], "}"}], "]"}], ",", 
             "Small"}], "]"}]}], "}"}]}], ";", "\n", "    ", 
        RowBox[{
         RowBox[{"enter", "[", 
          RowBox[{"{", "p_", "}"}], "]"}], ":=", 
         RowBox[{"PrependTo", "[", 
          RowBox[{"focus", ",", 
           RowBox[{"focus", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2", ",", "p"}], "]"}], "]"}]}], "]"}]}], ";", 
        "\n", "    ", 
        RowBox[{
         RowBox[{"exit", "[", "]"}], ":=", 
         RowBox[{"focus", "=", 
          RowBox[{"Drop", "[", 
           RowBox[{"focus", ",", "1"}], "]"}]}]}], ";", "\n", "    ", 
        RowBox[{
         RowBox[{"show", "[", 
          RowBox[{"{", 
           RowBox[{"e_", ",", "s_", ",", "r_"}], "}"}], "]"}], ":=", 
         RowBox[{"Column", "[", 
          RowBox[{"{", "\n", "      ", 
           RowBox[{"Grid", "[", 
            RowBox[{
             RowBox[{"{", "\n", "        ", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\"\<Expression\>\"", ",", 
                 RowBox[{"Column", "@", 
                  RowBox[{"Reverse", "@", 
                   RowBox[{"focus", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}]}], "}"}], ",",
                "\n", "        ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Column", "[", 
                  RowBox[{"{", "\n", "          ", 
                   RowBox[{"\"\<Steps\>\"", ",", "\n", "          ", 
                    RowBox[{"focus", "/.", 
                    RowBox[{"{", "\n", "            ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", "_", "}"}], ":>", 
                    RowBox[{"Sequence", "[", "]"}]}], ",", "\n", 
                    "            ", 
                    RowBox[{"_", ":>", 
                    RowBox[{"Button", "[", 
                    RowBox[{"\"\<Back\>\"", ",", 
                    RowBox[{"exit", "[", "]"}], ",", 
                    RowBox[{"ImageSize", "->", "Automatic"}]}], "]"}]}]}], 
                    "}"}]}]}], "}"}], "]"}], ",", "\n", "         ", 
                 RowBox[{"Grid", "[", 
                  RowBox[{
                   RowBox[{"MapIndexed", "[", 
                    RowBox[{"substep", ",", "s"}], "]"}], ",", 
                   RowBox[{"Alignment", "->", "Left"}]}], "]"}]}], "}"}], ",",
                "\n", "\t\t", 
               RowBox[{"{", 
                RowBox[{"\"\<Result\>\"", ",", 
                 RowBox[{"Column", "@", 
                  RowBox[{"focus", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "3"}], "]"}], "]"}]}]}], "}"}]}], 
              "}"}], ",", "\n", "       ", 
             RowBox[{"Alignment", "->", "Left"}], ",", "\n", "       ", 
             RowBox[{"Frame", "->", "All"}], ",", "\n", "       ", 
             RowBox[{"Background", "->", 
              RowBox[{"{", 
               RowBox[{"{", "LightCyan", "}"}], "}"}]}]}], "]"}], "\n", 
           "     ", "}"}], "]"}]}], ";", "\n", "   ", 
        RowBox[{"Dynamic", "@", 
         RowBox[{"show", "@", 
          RowBox[{"focus", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}]}]}], "\n", "  ", "]"}]}]}], 
   "]"}]}], "\n", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"traceView4", ",", 
   RowBox[{"{", "HoldAllComplete", "}"}]}], "]"}]}], "Code",
 CellLabel->
  "In[376]:=",ExpressionUUID->"5e417c0b-f4dc-46e1-b7cd-dd3b64c342a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["traceView5[ expr ]", "Subsubsection",ExpressionUUID->"d2fcf693-8071-47bf-8713-74d3743d7f02"],

Cell["\<\
Display an alternative compact interactive visualization of the trace of the \
evaluation of an expression.\
\>", "Text",ExpressionUUID->"1147bdc0-e2d5-4e97-875b-64a42d24bb30"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"traceView5", ",", "HoldFirst"}], "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"traceView5", "[", 
   RowBox[{"e_", ",", "s___", ",", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "Trace", "]"}]}]}], "]"}], ":=", "\n", 
  "  ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "show2", "}"}], ",", "\n", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{"show2", "[", 
       RowBox[{"{", 
        RowBox[{"expr_", ",", "steps__"}], "}"}], "]"}], ":=", 
      RowBox[{"OpenerView", "[", 
       RowBox[{"{", 
        RowBox[{"expr", ",", 
         RowBox[{"Column", "[", 
          RowBox[{"show2", "/@", 
           RowBox[{"{", "steps", "}"}]}], "]"}]}], "}"}], "]"}]}], ";", "\n", 
     "  ", 
     RowBox[{
      RowBox[{"show2", "[", 
       RowBox[{"{", 
        RowBox[{"HoldForm", "[", "x_", "]"}], "}"}], "]"}], ":=", 
      RowBox[{"Row", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Opener", "[", 
          RowBox[{"True", ",", 
           RowBox[{"Enabled", "->", "False"}]}], "]"}], ",", 
         RowBox[{"HoldForm", "[", "x", "]"}]}], "}"}], "]"}]}], ";", "\n", 
     "  ", 
     RowBox[{
      RowBox[{"show2", "[", 
       RowBox[{"HoldForm", "[", "x_", "]"}], "]"}], ":=", 
      RowBox[{"HoldForm", "[", "x", "]"}]}], ";", "\n", "  ", 
     RowBox[{"show2", "[", 
      RowBox[{"Trace", "[", 
       RowBox[{
        RowBox[{"Unevaluated", "[", "e", "]"}], ",", "s", ",", "opts", ",", 
        RowBox[{"TraceOriginal", "->", "True"}]}], "]"}], "]"}]}]}], 
   "]"}]}]}], "Code",
 CellLabel->
  "In[378]:=",ExpressionUUID->"fd121ca3-5fa2-4bf0-af84-e6a33b68020a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Predicates and Helpers", "Subsection",ExpressionUUID->"73298867-8fff-49ec-9c57-b2fa723ad1e7"],

Cell[CellGroupData[{

Cell["KvpQ[ list ]", "Subsubsection",ExpressionUUID->"c7dbba06-fb2f-4729-aa8f-d6dcccacdf0a"],

Cell["\<\
Something is a Kvp (key-value pair) if it matches the pattern of a list of \
two items, the first of which is either a string or a symbol.\
\>", "Text",ExpressionUUID->"eb8983d9-c232-4b11-9c64-8b34580061a1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"KvpQ", "[", "kvp_List", "]"}], " ", ":=", " ", 
   RowBox[{"MatchQ", "[", 
    RowBox[{"kvp", ",", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"_Symbol", ",", " ", "_"}], "}"}], " ", "|", " ", 
      RowBox[{"{", 
       RowBox[{"_String", ",", " ", "_"}], "}"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"KvpQ", "[", "___", "]"}], " ", "=", " ", "False"}], 
  ";"}]}], "Code",
 CellLabel->
  "In[380]:=",ExpressionUUID->"6792d8ed-d8f7-4b83-9910-39185b5bee2c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["pairsQ[ list ]", "Subsubsection",ExpressionUUID->"c25bba10-c2de-4284-9187-9b9daeef0060"],

Cell["\<\
Something is a list of pairs if it is a list and every element is a pair.\
\>", "Text",ExpressionUUID->"2c6bbfd5-f129-4653-8576-5bbaf59ec88b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"pairsQ", "[", "list_List", "]"}], " ", ":=", " ", 
   RowBox[{"And", " ", "@@", " ", 
    RowBox[{"(", 
     RowBox[{"KvpQ", " ", "/@", " ", "list"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pairsQ", "[", "___", "]"}], " ", "=", " ", "False"}], 
  ";"}]}], "Code",
 CellLabel->
  "In[382]:=",ExpressionUUID->"4a72d879-70a0-4b0c-a7c7-ff116bcd5c4c"],

Cell["\<\
To fetch the keys from a list, map a function that takes the first part of \
every element over the list. Here, we don't need the presumably expensive \
check of ?pairsQ on the argument, just the cheap check of List, since this is \
an internal function.\
\>", "Text",ExpressionUUID->"882816fa-8b1f-4059-909f-e01f5d948942"]
}, Open  ]],

Cell[CellGroupData[{

Cell["keys[ list ]", "Subsubsection",ExpressionUUID->"a39501bf-c78c-4699-a799-add73907332c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"keys", "[", "list_List", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", "&"}], " ", "/@", " ", "list"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[384]:=",ExpressionUUID->"4e7d7f3e-a499-4e75-aeea-3362139d1f17"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"keysUniqueQ", "[", "list_List", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"Length", "@", 
     RowBox[{"Union", "@", 
      RowBox[{"keys", "@", "list"}]}]}], " ", "===", " ", 
    RowBox[{"Length", "@", 
     RowBox[{"keys", "@", "list"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"keysUniqueQ", "[", "___", "]"}], " ", "=", " ", "False"}], 
  ";"}]}], "Code",
 CellLabel->
  "In[385]:=",ExpressionUUID->"8cae289e-6891-4c0b-bf1c-58636adafac4"],

Cell["\<\
To fetch the values, map a function that picks the second element from each \
internal kvp.\
\>", "Text",ExpressionUUID->"d07400d8-9dca-4c87-a34b-587e1b3df0df"]
}, Open  ]],

Cell[CellGroupData[{

Cell["values[ list ]", "Subsubsection",ExpressionUUID->"690d697c-6bf4-4d15-bb18-7d868d347f09"],

Cell[BoxData[
 RowBox[{
  RowBox[{"values", "[", "list_List", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "[", 
     RowBox[{"[", "2", "]"}], "]"}], " ", "&"}], " ", "/@", " ", 
   "list"}]}]], "Code",
 CellLabel->
  "In[387]:=",ExpressionUUID->"b0c746cf-4f98-4687-9284-3474ca630f6b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["KvpsQ[ list ]", "Subsubsection",ExpressionUUID->"88131707-3a71-429a-aeb2-6c99c7c39c33"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"KvpsQ", "[", 
    RowBox[{"list_", "?", "pairsQ"}], "]"}], " ", ":=", " ", 
   RowBox[{"keysUniqueQ", "@", "list"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"KvpsQ", "[", "___", "]"}], " ", "=", " ", "False"}], 
  ";"}]}], "Code",
 CellLabel->
  "In[388]:=",ExpressionUUID->"b9594195-a4d3-4367-90c1-33ad65d15ae3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["SymbolQ[ symbol ]", "Subsubsection",ExpressionUUID->"93c58720-766f-406d-8ced-4d1f632669f3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SymbolQ", "[", "x_Symbol", "]"}], " ", "=", " ", "True"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SymbolQ", "[", "___", "]"}], " ", "=", " ", "False"}], 
  ";"}]}], "Code",
 CellLabel->
  "In[390]:=",ExpressionUUID->"200d8bc8-fa9b-460a-971e-90bbafa21114"]
}, Open  ]],

Cell[CellGroupData[{

Cell["RulesQ[ list ]", "Subsubsection",ExpressionUUID->"d4ca49c2-2795-4c21-a884-a6d4fb9baeaa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RulesQ", "[", "vs_List", "]"}], " ", ":=", " ", 
   RowBox[{"And", " ", "@@", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"MatchQ", "[", 
        RowBox[{"#", ",", " ", 
         RowBox[{"Rule", "[", 
          RowBox[{"_", ",", " ", "_"}], "]"}]}], "]"}], " ", "&"}], " ", "/@",
       " ", "vs"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RulesQ", "[", "___", "]"}], " ", "=", " ", "False"}], 
  ";"}]}], "Code",
 CellLabel->
  "In[392]:=",ExpressionUUID->"dfc2ae43-5afd-4722-8548-6a23b583caea"]
}, Open  ]],

Cell[CellGroupData[{

Cell["RulessQ[ lists ]", "Subsubsection",ExpressionUUID->"fd9ef2f7-b8d1-4626-8e51-b35fea8f5a7c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RulessQ", "[", "vss_List", "]"}], " ", ":=", " ", 
   RowBox[{"And", " ", "@@", " ", 
    RowBox[{"(", 
     RowBox[{"RulesQ", " ", "/@", " ", "vss"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RulessQ", "[", "___", "]"}], " ", "=", " ", "False"}], 
  ";"}]}], "Code",
 CellLabel->
  "In[394]:=",ExpressionUUID->"3b1765e2-5825-4668-8fc4-99c921e2a22b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Args[ list ]", "Subsubsection",ExpressionUUID->"fa47b82f-4248-4117-9365-877cc99f8e66"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Args", "[", "e_", "]"}], " ", ":=", " ", 
   RowBox[{"Level", "[", 
    RowBox[{"e", ",", " ", "1"}], "]"}]}], ";"}]], "Code",
 CellLabel->
  "In[396]:=",ExpressionUUID->"cd8b4fb3-41eb-4e2e-9856-d6bd9959d46e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["LinqSim", "Subsection",ExpressionUUID->"7509bc54-94d2-48b9-99ca-957740f52461"],

Cell["TODO: generalize these to arbitrary heads, not just to lists", "Text",ExpressionUUID->"c629731e-1099-4755-8da1-330ec0e5d94e"],

Cell[CellGroupData[{

Cell["Pluck[ n ]", "Subsubsection",ExpressionUUID->"da4294a3-c3c4-469e-875e-9c23fc948c7c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Pluck", "[", "n_", "]"}], " ", ":=", " ", 
   RowBox[{"Function", "[", 
    RowBox[{"item", ",", " ", 
     RowBox[{"item", "[", 
      RowBox[{"[", "n", "]"}], "]"}]}], "]"}]}], ";"}]], "Code",
 CellLabel->
  "In[397]:=",ExpressionUUID->"61a5c939-d8d9-4241-afbe-962c9d629006"]
}, Open  ]],

Cell[CellGroupData[{

Cell["flat1[ list ]", "Subsubsection",ExpressionUUID->"b7797b5e-877a-4eca-aad7-9b600f0aa948"],

Cell[BoxData[
 RowBox[{
  RowBox[{"flat1", " ", "=", " ", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"#", ",", " ", "1"}], "]"}], " ", "&"}]}], ";"}]], "Code",
 CellLabel->
  "In[398]:=",ExpressionUUID->"f730c576-deed-4244-93cc-48ce1281165f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["SelectMany[ lists, func ]", "Subsubsection",ExpressionUUID->"d9619a8e-8234-4de3-81d3-39c7502f80e8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SelectMany", "[", 
    RowBox[{"list_", ",", " ", "func_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{"func", ",", " ", "list"}], "]"}], " ", "//", " ", "flat1"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[399]:=",ExpressionUUID->"e6ffb523-8e9c-4aec-a7dc-1bdedc2eab74"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Zip[ list1, list2, itemFromPair ]", "Subsubsection",ExpressionUUID->"6a60a07c-59fd-4312-af3b-e9653b10125c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Zip", "[", 
   RowBox[{"list1_List", ",", " ", "list2_List", ",", " ", 
    RowBox[{"func_", ":", "List"}]}], "]"}], ":=", "\n", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"len", " ", "=", " ", 
      RowBox[{"Min", "[", 
       RowBox[{
        RowBox[{"Length", " ", "@", " ", "list1"}], ",", " ", 
        RowBox[{"Length", " ", "@", " ", "list2"}]}], "]"}]}], "}"}], ",", 
    "\n", "  ", 
    RowBox[{"MapThread", "[", 
     RowBox[{"func", ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Take", "[", 
         RowBox[{"#", ",", "len"}], "]"}], "&"}], " ", "/@", " ", 
       RowBox[{"{", 
        RowBox[{"list1", ",", " ", "list2"}], "}"}]}]}], "]"}]}], 
   "]"}]}]], "Code",
 CellLabel->
  "In[400]:=",ExpressionUUID->"bd1bc238-caf2-476c-ba63-b94f6de1af2c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ZipMany[list1, list2, listFromPair]", "Subsubsection",ExpressionUUID->"c05d6cc1-d84e-4dc5-b72d-1534cd013b17"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ZipMany", " ", "=", " ", 
  RowBox[{"Composition", "[", 
   RowBox[{"flat1", ",", " ", "Zip"}], "]"}]}]], "Code",
 CellLabel->
  "In[401]:=",ExpressionUUID->"6ffa52bf-3fce-4472-9a36-2579ef3b7da3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"#1", ",", "1"}], "]"}], "&"}], "@*", "Zip"}]], "Output",
 CellChangeTimes->{{3.9112524205500517`*^9, 3.911252421588769*^9}, {
   3.911254381141556*^9, 3.9112543814912167`*^9}, {3.911254645691099*^9, 
   3.9112546460024157`*^9}, {3.911297451410886*^9, 3.911297451650631*^9}, {
   3.912368778560707*^9, 3.9123687787321777`*^9}, {3.912369932893731*^9, 
   3.91236995510571*^9}, 3.9125435814109898`*^9, 3.91254537441967*^9},
 CellLabel->
  "Out[401]=",ExpressionUUID->"ba1ce181-cd56-4b41-aa7a-6295a2303c11"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["prefixes[ hd [ list___ ] ]", "Subsubsection",ExpressionUUID->"82f9f33e-8761-4bf9-9cca-e7dfcfd4f2fc"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"prefixes", "[", 
     RowBox[{"acc_", ",", " ", 
      RowBox[{"{", "}"}]}], "]"}], " ", ":=", " ", "acc"}], ";", "\n", 
   RowBox[{
    RowBox[{"prefixes", "[", 
     RowBox[{"acc_", ",", " ", 
      RowBox[{"{", 
       RowBox[{"f_", ",", " ", "r___"}], "}"}]}], "]"}], " ", ":=", "\n", 
    "  ", 
    RowBox[{"Join", "[", 
     RowBox[{"acc", ",", "\n", "    ", 
      RowBox[{"prefixes", "[", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Append", "[", 
            RowBox[{"#", ",", " ", "f"}], "]"}], "&"}], ",", " ", "acc"}], 
         "]"}], ",", " ", 
        RowBox[{"{", "r", "}"}]}], "]"}]}], "]"}]}], ";", "\n", 
   RowBox[{
    RowBox[{"prefixes", "[", "list_List", "]"}], " ", ":=", " ", 
    RowBox[{"prefixes", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", "}"}], "}"}], ",", " ", "list"}], "]"}]}], ";"}], 
  "*)"}]], "Code",
 CellLabel->
  "In[402]:=",ExpressionUUID->"2f0f54ab-6a78-434d-8043-d430a040b119"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"prefixes", "[", 
    RowBox[{"hd_", "[", "list___", "]"}], "]"}], " ", ":=", " ", "\n", "  ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{"Function", "[", 
      RowBox[{"sub", ",", " ", 
       RowBox[{"hd", " ", "@@", " ", 
        RowBox[{"Take", "[", 
         RowBox[{
          RowBox[{"{", "list", "}"}], ",", " ", "sub"}], "]"}]}]}], "]"}], 
     ",", "\n", "  ", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", " ", 
       RowBox[{"Length", "[", 
        RowBox[{"{", "list", "}"}], "]"}]}], "]"}]}], "]"}]}], ";"}]], "Code",
 CellLabel->
  "In[403]:=",ExpressionUUID->"072f464d-6e18-4302-b233-3bebc1dc1e65"]
}, Open  ]],

Cell[CellGroupData[{

Cell["postfixes[ hd [ list___ ] ]", "Subsubsection",ExpressionUUID->"491eb74a-e814-436e-9bfa-eff2ff36e86b"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"postfixes", "[", 
     RowBox[{"acc_", ",", " ", 
      RowBox[{"{", "}"}]}], "]"}], " ", ":=", " ", "acc"}], ";", "\n", 
   RowBox[{
    RowBox[{"postfixes", "[", 
     RowBox[{"acc_", ",", " ", 
      RowBox[{"{", 
       RowBox[{"h___", ",", " ", "l_"}], "}"}]}], "]"}], " ", ":=", "\n", 
    "  ", 
    RowBox[{"Join", "[", 
     RowBox[{"acc", ",", "\n", "    ", 
      RowBox[{"postfixes", "[", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Prepend", "[", 
            RowBox[{"#", ",", "l"}], "]"}], "&"}], ",", " ", "acc"}], "]"}], 
        ",", " ", 
        RowBox[{"{", "h", "}"}]}], "]"}]}], "]"}]}], ";", "\n", 
   RowBox[{
    RowBox[{"postfixes", "[", "list_List", "]"}], " ", ":=", " ", 
    RowBox[{"Reverse", " ", "@", " ", 
     RowBox[{"postfixes", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", "}"}], "}"}], ",", " ", "list"}], "]"}]}]}], ";"}], 
  "*)"}]], "Code",
 CellLabel->
  "In[404]:=",ExpressionUUID->"1e229e25-29d1-4fa6-8db9-05b966104299"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"postfixes", "[", 
    RowBox[{"hd_", "[", "list___", "]"}], "]"}], " ", ":=", "\n", "  ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"len", " ", "=", " ", 
       RowBox[{"Length", "[", 
        RowBox[{"{", "list", "}"}], "]"}]}], "}"}], ",", "\n", "    ", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{"Function", "[", 
        RowBox[{"sub", ",", " ", 
         RowBox[{"hd", " ", "@@", " ", 
          RowBox[{"Take", "[", 
           RowBox[{
            RowBox[{"{", "list", "}"}], ",", " ", 
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{"len", "-", "sub"}], ")"}]}]}], "]"}]}]}], "]"}], ",", 
       "\n", "    ", 
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", " ", "len"}], "]"}]}], "]"}]}], "]"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[405]:=",ExpressionUUID->"3d8b7954-e30f-4200-95b2-b17ff3e7c1c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["splits[ list ]", "Subsubsection",ExpressionUUID->"1a81c544-38c6-4a5e-8de3-71db6b28cdd3"],

Cell["\<\
TODO: a \"cute\" implementation is ReplaceList[list_List, \
{xs___,ys___}->{{xs},{ys}}]. Assess it for perf\
\>", "Text",ExpressionUUID->"e8c5af63-13f0-4c39-b1df-e0bc4a20c6ec"],

Cell[BoxData[
 RowBox[{
  RowBox[{"splits", "[", "list_List", "]"}], " ", ":=", " ", 
  RowBox[{"Zip", "[", 
   RowBox[{
    RowBox[{"prefixes", " ", "@", " ", "list"}], ",", " ", 
    RowBox[{"postfixes", " ", "@", " ", "list"}]}], "]"}]}]], "Code",
 CellLabel->
  "In[406]:=",ExpressionUUID->"cdc00838-2d04-42b0-8fae-2deb3e22c285"]
}, Open  ]],

Cell[CellGroupData[{

Cell["permutations[ list ]", "Subsubsection",ExpressionUUID->"60679aa2-c488-4930-8f53-6e0704bcbc33"],

Cell["TODO: make this work for arbitrary heads.", "Text",ExpressionUUID->"e15071b0-4445-44d8-9edb-4fabefaf5c1c"],

Cell["\<\
TODO: Consider this variation from the Haskell prelude:

-- | The 'permutations' function returns the list of all permutations of the \
argument.
--
-- > permutations \"abc\" == [\"abc\",\"bac\",\"cba\",\"bca\",\"cab\",\"acb\"]
permutations            :: [a] -> [[a]]
permutations xs0        =  xs0 : perms xs0 []
  where
    perms []     _  = []
    perms (t:ts) is = foldr interleave (perms ts (t:is)) (permutations is)
      where interleave    xs     r = let (_,zs) = interleave' id xs r in zs
            interleave' _ []     r = (ts, r)
            interleave' f (y:ys) r = let (us,zs) = interleave' (f . (y:)) ys r
                                     in  (y:us, f (t:y:us) : zs)\
\>", "Text",ExpressionUUID->"f2db20fb-0e70-43f8-bafe-28d829e6db7e"],

Cell["\<\
NOTE: this is for ILLUSTRATION only; the built-in Mathematica Permutations is \
MUCH more efficient.\
\>", "Text",ExpressionUUID->"efc0d484-5ca4-4882-883d-e2f334603869"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"permutations", "[", 
    RowBox[{"{", "}"}], "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"{", "}"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"permutations", "[", 
   RowBox[{"{", "args__", "}"}], "]"}], ":=", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Flatten", "-", 
    RowBox[{"1", " ", "of", " ", "Map", " ", "is", " ", "SelectMany"}]}], " ",
    "*)"}], "\n", " ", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"pos", ",", "\n", " ", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", "\n", "   ", 
           RowBox[{
            RowBox[{"elt", "=", 
             RowBox[{
              RowBox[{"{", "args", "}"}], "[", 
              RowBox[{"[", "pos", "]"}], "]"}]}], ",", "\n", "   ", 
            RowBox[{"rest", "=", 
             RowBox[{"Delete", "[", 
              RowBox[{
               RowBox[{"{", "args", "}"}], ",", " ", "pos"}], "]"}]}]}], 
           "}"}], ",", "\n", "  ", 
          RowBox[{"Map", "[", "\n", "   ", 
           RowBox[{
            RowBox[{"Function", "[", 
             RowBox[{"perm", ",", " ", 
              RowBox[{"Prepend", "[", 
               RowBox[{"perm", ",", " ", "elt"}], "]"}]}], "]"}], ",", "\n", 
            "   ", 
            RowBox[{"permutations", "[", "rest", "]"}]}], "]"}]}], "]"}]}], 
       "]"}], ",", "\n", "  ", 
      RowBox[{"Range", "[", 
       RowBox[{"Length", "[", 
        RowBox[{"{", "args", "}"}], "]"}], "]"}]}], "]"}], ",", "\n", " ", 
    "1"}], "]"}]}]}], "Code",
 CellLabel->
  "In[407]:=",ExpressionUUID->"7efadd26-c315-48a7-b22f-2a7966d1d13b"]
}, Open  ]]
}, Open  ]],

Cell["Quotes and Unquotes", "Subsection",ExpressionUUID->"0d603de4-9406-47a2-a7a9-0d08d2675747"],

Cell[CellGroupData[{

Cell["Numerical Subtypes", "Subsection",ExpressionUUID->"36aacbf0-6255-4e7a-bef6-249428975cd5"],

Cell[CellGroupData[{

Cell["RealQ[ x ]", "Subsubsection",ExpressionUUID->"6a74e123-7707-4d1e-947a-4bb0416c63b9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RealQ", "[", "x_Real", "]"}], " ", ":=", " ", "True"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RealQ", "[", "___", "]"}], " ", ":=", " ", "False"}], 
  ";"}]}], "Code",
 CellLabel->
  "In[409]:=",ExpressionUUID->"191fa8ba-5572-4d1e-ba07-2ed257306dd2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["RationalQ[ x ]", "Subsubsection",ExpressionUUID->"ee13e26e-4c1b-49eb-b914-fd486bfe1b59"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RationalQ", "[", "x_Rational", "]"}], " ", ":=", " ", "True"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RationalQ", "[", "___", "]"}], " ", ":=", " ", "False"}], 
  ";"}]}], "Code",
 CellLabel->
  "In[411]:=",ExpressionUUID->"afb13d6e-7af7-44aa-aa83-ef7ae8ba777f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ComplexQ[ x ]", "Subsubsection",ExpressionUUID->"36587a72-4958-4952-a65a-9fa35f3c274c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ComplexQ", "[", "x_Complex", "]"}], " ", ":=", " ", "True"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ComplexQ", "[", "___", "]"}], " ", ":=", " ", "False"}], 
  ";"}]}], "Code",
 CellLabel->
  "In[413]:=",ExpressionUUID->"e53255d9-75df-443d-a45b-30ee716a5699"]
}, Open  ]],

Cell[CellGroupData[{

Cell["numericSubtype[ x ]", "Subsubsection",ExpressionUUID->"0dcc5c12-5ef8-44a6-85ae-6f73cc6bb924"],

Cell[BoxData[
 RowBox[{
  RowBox[{"numericSubtype", "[", 
   RowBox[{"x_", "?", "NumberQ"}], "]"}], " ", ":=", "\n", "\t", 
  RowBox[{"Switch", "[", 
   RowBox[{
   "x", ",", "\n", "\t\t", "_Integer", ",", "  ", "\"\<Integer\>\"", ",", 
    "\n", "\t\t", "_Real", ",", "     ", "\"\<Real\>\"", ",", "\n", "\t\t", 
    "_Rational", ",", " ", "\"\<Rational\>\"", ",", "\n", "\t\t", "_Complex", 
    ",", "  ", "\"\<Complex\>\""}], "]"}]}]], "Code",
 CellLabel->
  "In[415]:=",ExpressionUUID->"1ad49457-48a9-482b-9489-ba6e1423f465"]
}, Open  ]],

Cell[CellGroupData[{

Cell["rulesFromExpression[ expr ]", "Subsubsection",ExpressionUUID->"0de24acc-a559-4766-9a46-fcaddc82c442"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rulesFromExpression", "[", 
   RowBox[{"expr_", "?", "NumberQ"}], "]"}], " ", ":=", " ", 
  RowBox[{"{", "\n", "\t", 
   RowBox[{"\"\<number\>\"", " ", "->", " ", 
    RowBox[{"{", "  ", 
     RowBox[{
      RowBox[{"\"\<subtype\>\"", " ", "->", " ", 
       RowBox[{"numericSubtype", " ", "@", " ", "expr"}]}], ",", "\n", 
      "                   ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "InputForm", " ", "reliable", " ", "for", " ", "roundtripping", " ", 
        "Rational"}], " ", "*)"}], "\n", "                   ", 
      RowBox[{"\"\<value\>\"", " ", "->", " ", 
       RowBox[{"ToString", " ", "@", " ", 
        RowBox[{"InputForm", " ", "@", " ", "expr"}]}]}]}], " ", "}"}]}], " ",
    "}"}]}], "\n", 
 RowBox[{
  RowBox[{"rulesFromExpression", "[", "expr_Symbol", "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{"\"\<symbol\>\"", " ", "->", " ", 
    RowBox[{"ToString", " ", "@", " ", "expr"}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{"rulesFromExpression", "[", "expr_String", "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{"\"\<string\>\"", " ", "->", " ", 
    RowBox[{"ToString", " ", "@", " ", "expr"}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rulesFromExpression", "[", 
    RowBox[{"head_", "[", "parts___", "]"}], "]"}], " ", ":=", " ", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"\"\<head\>\"", "   ", "->", " ", 
      RowBox[{"rulesFromExpression", "  ", "@", " ", "head"}]}], ",", " ", 
     "\n", "\t", 
     RowBox[{"\"\<parts\>\"", "  ", "->", " ", 
      RowBox[{"rulesFromExpression", " ", "/@", " ", 
       RowBox[{"{", "parts", "}"}]}]}]}], "}"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rulesFromExpression", "[", "x___", "]"}], " ", ":=", " ", 
   RowBox[{"Throw", "[", 
    RowBox[{"{", "x", "}"}], "]"}]}], ";"}]}], "Code",
 CellLabel->
  "In[416]:=",ExpressionUUID->"4a4ae9b4-6894-498e-9cd8-f9b24128b5a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["jsonStringFromExpression[ expr ]", "Subsubsection",ExpressionUUID->"3ed3d5bb-89f1-44e4-a6d9-e13d7995257b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"jsonStringFromExpression", "[", "expr_", "]"}], " ", ":=", "\n", 
   "  ", 
   RowBox[{
    RowBox[{"ExportString", "[", 
     RowBox[{
      RowBox[{"rulesFromExpression", "[", "expr", "]"}], ",", " ", 
      "\"\<JSON\>\""}], "]"}], " ", "//", " ", "\n", "    ", 
    RowBox[{
     RowBox[{"StringReplace", "[", 
      RowBox[{"#", ",", 
       RowBox[{"Whitespace", "->", "\"\<\>\""}]}], "]"}], "&"}]}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[421]:=",ExpressionUUID->"197ba930-dfaa-41a1-b2be-e484abb07cfb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["expressionFromRules[ expr ]", "Subsubsection",ExpressionUUID->"12b0e600-9ce5-4be8-9b42-d7595646d789"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"expressionFromRules", "[", 
    RowBox[{"{", 
     RowBox[{"___", ",", " ", 
      RowBox[{"\"\<symbol\>\"", " ", "->", " ", "sym_"}], ",", " ", "___"}], 
     "}"}], "]"}], " ", ":=", " ", 
   RowBox[{"ToExpression", " ", "@", " ", "sym"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"expressionFromRules", "[", 
    RowBox[{"{", 
     RowBox[{"___", ",", " ", 
      RowBox[{"\"\<string\>\"", " ", "->", " ", "str_"}], ",", " ", "___"}], 
     "}"}], "]"}], " ", ":=", " ", 
   RowBox[{"ToExpression", " ", "@", " ", "str"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"expressionFromRules", "[", 
    RowBox[{"{", 
     RowBox[{"___", ",", " ", 
      RowBox[{"\"\<number\>\"", " ", "->", " ", "val_"}], ",", " ", "___"}], 
     "}"}], "]"}], " ", ":=", " ", 
   RowBox[{"ToExpression", " ", "@", " ", 
    RowBox[{"(", 
     RowBox[{"\"\<value\>\"", " ", "/.", " ", "val"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"expressionFromRules", "[", "rules_", "]"}], " ", ":=", " ", "\n",
     "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MatchQ", "[", 
       RowBox[{"rules", ",", 
        RowBox[{"{", 
         RowBox[{"___", ",", 
          RowBox[{"\"\<parts\>\"", "->", "_"}], ",", "___"}], "}"}]}], "]"}], 
      ",", "\n", "      ", 
      RowBox[{"Apply", "[", "\n", "        ", 
       RowBox[{
        RowBox[{"expressionFromRules", "  ", "@", " ", 
         RowBox[{"(", 
          RowBox[{"\"\<head\>\"", " ", "/.", " ", "rules"}], ")"}]}], ",", 
        "\n", "        ", 
        RowBox[{"expressionFromRules", " ", "/@", " ", 
         RowBox[{"(", 
          RowBox[{"\"\<parts\>\"", " ", "/.", " ", "rules"}], ")"}]}]}], 
       "]"}], ",", "\n", "      ", 
      RowBox[{"Throw", "[", "rules", "]"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"expressionFromRules", "[", "x___", "]"}], " ", ":=", " ", 
   RowBox[{"Throw", "[", 
    RowBox[{"{", "x", "}"}], "]"}]}], ";"}]}], "Code",
 CellLabel->
  "In[422]:=",ExpressionUUID->"3fd3c5b0-3215-474a-8f06-c611522f439a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["stringifiedExpressionFromRules[ expr ]", "Subsubsection",ExpressionUUID->"04513e03-73b7-4818-b8bd-c2b931f9f15b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"insertCommaSeparators", "[", "ss_List", "]"}], " ", ":=", " ", 
    RowBox[{"StringJoin", " ", "@@", " ", 
     RowBox[{"Riffle", "[", 
      RowBox[{"ss", ",", " ", "\"\<, \>\""}], "]"}]}]}], ";"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"result", " ", "=", " ", "\"\<\>\""}], "}"}], ",", "\n", 
      "\t\t", 
      RowBox[{
       RowBox[{"MapIndexed", "[", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"string", ",", " ", "part"}], "}"}], ",", "\n", 
           "\t\t\t\t", 
           RowBox[{"result", " ", "=", " ", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"part", "[", 
                RowBox[{"[", "1", "]"}], "]"}], " ", ">", " ", "1"}], ",", 
              "\n", "\t\t\t\t\t", 
              RowBox[{
              "result", " ", "<>", " ", "\"\<, \>\"", " ", "<>", " ", 
               "string"}], ",", "\n", "\t\t\t\t\t", 
              RowBox[{"result", " ", "<>", " ", "string"}]}], "]"}]}]}], 
          "]"}], ",", "\n", "\t\t\t", "ss"}], "]"}], ";", "\n", "\t\t", 
       "result"}]}], "]"}], ";"}], " ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"insertCommaSeparators", "[", "x___", "]"}], " ", ":=", " ", 
   RowBox[{"Throw", "[", 
    RowBox[{"{", "x", "}"}], "]"}]}], ";"}]}], "Code",
 CellLabel->
  "In[427]:=",ExpressionUUID->"00f6220a-fb4f-48d1-bc88-4883398a907e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"stringifiedExpressionFromRules", "[", 
    RowBox[{"{", 
     RowBox[{"___", ",", " ", 
      RowBox[{"\"\<symbol\>\"", " ", "->", " ", "sym_"}], ",", " ", "___"}], 
     "}"}], "]"}], " ", ":=", " ", "sym"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stringifiedExpressionFromRules", "[", 
    RowBox[{"{", 
     RowBox[{"___", ",", " ", 
      RowBox[{"\"\<string\>\"", " ", "->", " ", "str_"}], ",", " ", "___"}], 
     "}"}], "]"}], " ", ":=", " ", 
   RowBox[{
   "\"\<\\\"\>\"", " ", "<>", " ", "str", " ", "<>", " ", "\"\<\\\"\>\""}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"stringifiedExpressionFromRules", "[", 
   RowBox[{"{", 
    RowBox[{"___", ",", " ", 
     RowBox[{"\"\<number\>\"", " ", "->", " ", "val_"}], ",", " ", "___"}], 
    "}"}], "]"}], " ", ":=", " ", "\n", "\t", 
  RowBox[{"Switch", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\"\<subtype\>\"", " ", "/.", " ", "val"}], ")"}], ",", "\n", 
    "\t\t", "\"\<Integer\>\"", ",", " ", 
    RowBox[{"(", 
     RowBox[{"\"\<value\>\"", " ", "/.", " ", "val"}], ")"}], ",", "\n", 
    "\t\t", "\"\<Real\>\"", ",", "    ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\"\<value\>\"", " ", "/.", " ", "val"}], ")"}], " ", "<>", 
     " ", "\"\<`\>\""}], ",", "\n", "\t\t", "\"\<Complex\>\"", ",", " ", "\n",
     "\t\t\t", 
    RowBox[{
     RowBox[{"Quiet", " ", "@", " ", 
      RowBox[{"StringReplace", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\"\<value\>\"", " ", "/.", " ", "val"}], ")"}], ",", "\n", 
        "\t\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"p", ":", "NumberString"}], ")"}], " ", "~~", " ", 
          "\"\< + \>\"", " ", "~~", " ", 
          RowBox[{"(", 
           RowBox[{"q", ":", "NumberString"}], ")"}], " ", "~~", " ", 
          "\"\<*I\>\""}], " ", "->", "\n", "\t\t\t\t", 
         RowBox[{
         "\"\<Complex[\>\"", " ", "<>", " ", "p", " ", "<>", " ", 
          "\"\<, \>\"", " ", "<>", " ", "q", " ", "<>", " ", 
          "\"\<]\>\""}]}]}], " ", "]"}]}], " ", "//", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"Quiet", " ", "@", " ", 
       RowBox[{"StringReplace", "[", 
        RowBox[{"#", ",", "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"p", ":", 
             RowBox[{"DigitCharacter", "..."}]}], ")"}], " ", "~~", " ", 
           "\"\<.\>\"", " ", "~~", " ", 
           RowBox[{"(", 
            RowBox[{"q", ":", 
             RowBox[{"DigitCharacter", ".."}]}], ")"}]}], " ", "->", " ", 
          "\n", "\t\t\t\t", 
          RowBox[{
          "p", " ", "<>", " ", "\"\<.\>\"", " ", "<>", " ", "q", " ", "<>", 
           " ", "\"\<`\>\""}]}]}], "]"}]}], " ", "&"}]}], ",", "\n", "\t\t", 
    "_", ",", "         ", 
    RowBox[{"Throw", "[", 
     RowBox[{"{", "val", "}"}], "]"}]}], "\n", "\t\t", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stringifiedExpressionFromRules", "[", "rules_", "]"}], " ", ":=",
     " ", "\n", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MatchQ", "[", 
       RowBox[{"rules", ",", 
        RowBox[{"{", 
         RowBox[{"___", ",", " ", 
          RowBox[{"\"\<parts\>\"", " ", "->", " ", "_"}], ",", " ", "___"}], 
         "}"}]}], "]"}], ",", "\n", "      ", 
      RowBox[{
       RowBox[{"stringifiedExpressionFromRules", "  ", "@", " ", 
        RowBox[{"(", 
         RowBox[{"\"\<head\>\"", " ", "/.", " ", "rules"}], ")"}]}], " ", "<>",
        " ", "\"\<[\>\"", " ", "<>", "\n", "      ", 
       RowBox[{"insertCommaSeparators", " ", "[", "\n", "\t\t", 
        RowBox[{"stringifiedExpressionFromRules", " ", "/@", " ", 
         RowBox[{"(", 
          RowBox[{"\"\<parts\>\"", " ", "/.", " ", "rules"}], ")"}]}], " ", 
        "]"}], " ", "<>", " ", "\"\<]\>\""}], ",", "\n", "      ", 
      RowBox[{"Throw", "[", "rules", "]"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stringifiedExpressionFromRules", "[", "x___", "]"}], " ", ":=", 
   " ", 
   RowBox[{"Throw", "[", 
    RowBox[{"{", "x", "}"}], "]"}]}], ";"}]}], "Code",
 CellLabel->
  "In[429]:=",ExpressionUUID->"5d14dfdb-f8e6-4f3e-a005-733b4d908917"]
}, Open  ]],

Cell[CellGroupData[{

Cell["rulesFromEvaluatableHeldExpression[ expr ]", "Subsubsection",ExpressionUUID->"72183c84-6dd8-43f9-b7ad-bcf2ed364545"],

Cell["\<\
Allows call of Evaluate inside the expression. Differs from \
\"rulesFromHeldExpression\" only in the Attributes -- \
rulesFromEvaluatableHeldExpression is HoldAll; rulesFromHeldExpression is \
HoldAllComplete. \
\>", "Text",ExpressionUUID->"70b0b71e-fee7-4aa0-a31e-dd590366e262"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SetAttributes", "[", 
    RowBox[{"rulesFromEvaluatableHeldExpression", ",", " ", "HoldAll"}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"rulesFromEvaluatableHeldExpression", "[", 
   RowBox[{"expr_", " ", "/;", " ", 
    RowBox[{"NumberQ", " ", "@", " ", 
     RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}]}], "]"}], " ", ":=", 
  " ", "\n", "\t", 
  RowBox[{"rulesFromExpression", "[", "expr", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"rulesFromEvaluatableHeldExpression", "[", 
   RowBox[{"expr_", " ", "/;", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Head", " ", "@", " ", 
        RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}], " ", "===", " ", 
       "Symbol"}], " ", "&&", " ", 
      RowBox[{
       RowBox[{"AtomQ", " ", "@", " ", 
        RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}], " ", "===", " ", 
       "True"}]}], ")"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"{", "\n", "\t", 
   RowBox[{"\"\<symbol\>\"", " ", "->", " ", 
    RowBox[{"ToString", " ", "@", " ", 
     RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{"rulesFromEvaluatableHeldExpression", "[", 
   RowBox[{"expr_", " ", "/;", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Head", " ", "@", " ", 
       RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}], " ", "===", " ", 
      "String"}], ")"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"{", "\n", "\t", 
   RowBox[{"\"\<string\>\"", " ", "->", " ", 
    RowBox[{"ToString", " ", "@", " ", 
     RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{"rulesFromEvaluatableHeldExpression", "[", 
   RowBox[{"head_", "[", "parts___", "]"}], "]"}], " ", ":=", " ", 
  RowBox[{"{", "\n", "\t", 
   RowBox[{
    RowBox[{"\"\<head\>\"", "  ", "->", " ", 
     RowBox[{"rulesFromEvaluatableHeldExpression", "  ", "@", " ", "head"}]}],
     ",", " ", "\n", "\t", 
    RowBox[{"\"\<parts\>\"", " ", "->", " ", 
     RowBox[{"rulesFromEvaluatableHeldExpression", " ", "/@", " ", 
      RowBox[{"Unevaluated", " ", "@", " ", 
       RowBox[{"{", "parts", "}"}]}]}]}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rulesFromEvaluatableHeldExpression", "[", "x___", "]"}], " ", ":=",
    " ", 
   RowBox[{"Throw", " ", "@", " ", 
    RowBox[{"{", "x", "}"}]}]}], ";"}]}], "Code",
 CellLabel->
  "In[434]:=",ExpressionUUID->"ffcadabf-cc7a-4b78-9ad9-77c2c7ead840"]
}, Open  ]],

Cell[CellGroupData[{

Cell["rulesFromHeldExpression[ expr ]", "Subsubsection",ExpressionUUID->"2fbde722-b584-4d96-8bc5-664db1cb0758"],

Cell["\<\
Applies maximal quoting to input expressions. Will even quote calls of \
\"Evaluate\". \
\>", "Text",ExpressionUUID->"84a7be90-768e-467e-bb4d-57da69029d7e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SetAttributes", "[", 
    RowBox[{"rulesFromHeldExpression", ",", " ", "HoldAllComplete"}], "]"}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"rulesFromHeldExpression", "[", 
   RowBox[{"expr_", " ", "/;", " ", 
    RowBox[{"NumberQ", " ", "@", " ", 
     RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}]}], "]"}], " ", ":=", 
  " ", "\n", "\t", 
  RowBox[{"rulesFromExpression", "[", "expr", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"rulesFromHeldExpression", "[", 
   RowBox[{"expr_", " ", "/;", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Head", " ", "@", " ", 
        RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}], " ", "===", " ", 
       "Symbol"}], " ", "&&", " ", 
      RowBox[{
       RowBox[{"AtomQ", " ", "@", " ", 
        RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}], " ", "===", " ", 
       "True"}]}], ")"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"{", "\n", "\t", 
   RowBox[{"\"\<symbol\>\"", " ", "->", " ", 
    RowBox[{"ToString", " ", "@", " ", 
     RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{"rulesFromHeldExpression", "[", 
   RowBox[{"expr_", " ", "/;", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Head", " ", "@", " ", 
       RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}], " ", "===", " ", 
      "String"}], ")"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"{", "\n", "\t", 
   RowBox[{"\"\<string\>\"", " ", "->", " ", 
    RowBox[{"ToString", " ", "@", " ", 
     RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{"rulesFromHeldExpression", "[", 
   RowBox[{"head_", "[", "parts___", "]"}], "]"}], " ", ":=", " ", 
  RowBox[{"{", "\n", "\t", 
   RowBox[{
    RowBox[{"\"\<head\>\"", "  ", "->", " ", 
     RowBox[{"rulesFromHeldExpression", "  ", "@", " ", "head"}]}], ",", " ", 
    "\n", "\t", 
    RowBox[{"\"\<parts\>\"", " ", "->", " ", 
     RowBox[{"rulesFromHeldExpression", " ", "/@", " ", 
      RowBox[{"Unevaluated", " ", "@", " ", 
       RowBox[{"{", "parts", "}"}]}]}]}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rulesFromHeldExpression", "[", "x___", "]"}], " ", ":=", " ", 
   RowBox[{"Throw", " ", "@", " ", 
    RowBox[{"{", "x", "}"}]}]}], ";"}]}], "Code",
 CellLabel->
  "In[440]:=",ExpressionUUID->"c24008e4-6b3f-4c4f-bee6-55f5cf2e69ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell["jsonStringFromHeldExpression[ expr ]", "Subsubsection",ExpressionUUID->"27c97463-6b04-4071-88fa-c764745a4684"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SetAttributes", "[", 
    RowBox[{"jsonStringFromHeldExpression", ",", " ", "HoldAllComplete"}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jsonStringFromHeldExpression", "[", "expr_", "]"}], " ", ":=", 
   "\n", "  ", 
   RowBox[{
    RowBox[{"ExportString", "[", 
     RowBox[{
      RowBox[{"rulesFromHeldExpression", "[", "expr", "]"}], ",", " ", 
      "\"\<JSON\>\""}], "]"}], " ", "//", " ", "\n", "    ", 
    RowBox[{
     RowBox[{"StringReplace", "[", 
      RowBox[{"#", ",", 
       RowBox[{"Whitespace", "->", "\"\<\>\""}]}], "]"}], "&"}]}]}], 
  ";"}]}], "Code",
 CellLabel->
  "In[446]:=",ExpressionUUID->"ba325467-dfed-44f3-9ea4-8a601c9c87ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell["expressionFromJsonString[ str ]", "Subsubsection",ExpressionUUID->"cc8d2c82-4b48-4368-a0c8-c6df16e33650"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"expressionFromJsonString", "[", "str_String", "]"}], " ", ":=", 
   "\n", "  ", 
   RowBox[{"expressionFromRules", " ", "@", " ", 
    RowBox[{"ImportString", "[", 
     RowBox[{"str", ",", " ", "\"\<JSON\>\""}], "]"}]}]}], ";"}]], "Code",
 CellLabel->
  "In[448]:=",ExpressionUUID->"58a7de99-4a13-4c40-aa81-3eada93263e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["captive[ expr ] -- a direct mapping to S-expressions", "Subsubsection",ExpressionUUID->"cfbd2610-83f0-44c2-a2eb-b50e5428c258"],

Cell["Less verbose output", "Text",ExpressionUUID->"646b6beb-0264-4fd2-a773-91f4c550651f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SetAttributes", "[", 
    RowBox[{"captive", ",", " ", "HoldAll"}], "]"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"NOT", " ", "HoldAllComplete"}], " ", "*)"}]}]], "Code",
 CellLabel->
  "In[449]:=",ExpressionUUID->"a714c516-9eea-4fc3-a5a1-9acc2f3e6119"],

Cell["Rules for Atoms", "Text",ExpressionUUID->"651d822f-e15e-46f0-ae66-55841bad84c3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"captive", "[", 
     RowBox[{"expr_", " ", "/;", " ", 
      RowBox[{"AtomQ", " ", "@", " ", 
       RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}]}], "]"}], " ", ":=", 
    " ", "\n", "  ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"Quiet", "[", 
       RowBox[{"ValueQ", " ", "@", " ", "expr"}], "]"}], ",", " ", 
      RowBox[{"captive", " ", "@", " ", 
       RowBox[{"Evaluate", " ", "@", " ", "expr"}]}], ",", " ", "expr"}], 
     "]"}]}], ";"}], " "}]], "Code",
 CellLabel->
  "In[450]:=",ExpressionUUID->"b2bdf701-5841-4baa-9c9e-c852485cdb02"],

Cell["Rules for non-Atoms", "Text",ExpressionUUID->"04c9dbc4-ad73-4a00-be6d-ddf08c7cd413"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"captive", "[", 
   RowBox[{"head_", "[", "parts___", "]"}], "]"}], " ", ":=", " ", "\n", "  ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"captive", " ", "@", " ", "head"}], "}"}], " ", "~", "Join", "~", 
   " ", 
   RowBox[{"(", 
    RowBox[{"captive", " ", "/@", " ", 
     RowBox[{"(", 
      RowBox[{"Unevaluated", " ", "@", " ", 
       RowBox[{"{", "parts", "}"}]}], ")"}]}], ")"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"captive", "[", "x___", "]"}], " ", ":=", " ", 
   RowBox[{"Throw", "[", 
    RowBox[{"{", "x", "}"}], "]"}]}], ";"}]}], "Code",
 CellLabel->
  "In[451]:=",ExpressionUUID->"2005d2c2-e9eb-4860-bf8c-c82326b67de1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
jaqCaptive[ expr ] -- TODO: a 
more Jacquard-ish captive\
\>", "Subsubsection",ExpressionUUID->"f3b24b55-2bb5-47d8-8bee-e3b88ff8f16e"],

Cell["Less verbose output", "Text",ExpressionUUID->"79a15d7c-efb0-4ffe-9100-38c27d6f4a05"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SetAttributes", "[", 
    RowBox[{"jaqCaptive", ",", " ", "HoldAll"}], "]"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"NOT", " ", "HoldAllComplete"}], " ", "*)"}]}]], "Code",
 CellLabel->
  "In[453]:=",ExpressionUUID->"9ea3d41d-4f64-4172-9054-d049a88e1c91"],

Cell["Rules for Atoms", "Text",ExpressionUUID->"79b09eba-a0aa-44b5-bab9-583361c9b144"],

Cell[BoxData[
 RowBox[{
  RowBox[{"jaqCaptive", "[", 
   RowBox[{"expr_", " ", "/;", " ", 
    RowBox[{"AtomQ", " ", "@", " ", 
     RowBox[{"Unevaluated", " ", "@", " ", "expr"}]}]}], "]"}], " ", ":=", 
  " ", "\n", "  ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"Quiet", "[", 
     RowBox[{"ValueQ", " ", "@", " ", "expr"}], "]"}], ",", " ", 
    RowBox[{"captive", " ", "@", " ", 
     RowBox[{"Evaluate", " ", "@", " ", "expr"}]}], ",", " ", "expr"}], 
   "]"}]}]], "Code",
 CellLabel->
  "In[454]:=",ExpressionUUID->"b35330a0-be2d-42ca-8c0a-163e910c245d"],

Cell["Rules for non-Atoms", "Text",ExpressionUUID->"f2102d95-8534-4528-91ad-13e58bde12d1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"jaqCaptive", "[", 
   RowBox[{"head_", "[", "parts___", "]"}], "]"}], " ", ":=", " ", "\n", "  ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"jaqCaptive", " ", "@", " ", "head"}], "}"}], " ", "~", "Join", 
   "~", " ", 
   RowBox[{"(", 
    RowBox[{"jaqCaptive", " ", "/@", " ", 
     RowBox[{"(", 
      RowBox[{"Unevaluated", " ", "@", " ", 
       RowBox[{"{", "parts", "}"}]}], ")"}]}], ")"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jaqCaptive", "[", "x___", "]"}], " ", ":=", " ", 
   RowBox[{"Throw", "[", 
    RowBox[{"{", "x", "}"}], "]"}]}], ";"}]}], "Code",
 CellLabel->
  "In[455]:=",ExpressionUUID->"94020f4c-a833-4991-96b5-fce65f6636e8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["HTTP Post Interfaces", "Subsection",ExpressionUUID->"12dbaf85-df85-42fb-a345-b6f685ca3826"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"jacquardPostExpression", ",", " ", "HoldFirst"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"jacquardPostExpression", "[", "\n", "    ", 
   RowBox[{"request_", ",", "\n", "    ", 
    RowBox[{"importer_", ":", "expressionFromRules"}], ",", "\n", "    ", 
    RowBox[{"url_", ":", " ", "\"\<http://127.0.0.1:5000/jacquard\>\""}]}], 
   "\n", "]"}], " ", ":=", "\n", "  ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\n", "      ", 
     RowBox[{
     "requestExprString", ",", "\n", "      ", "client", ",", " ", "method", 
      ",", "\n", "      ", "entity", ",", " ", "responseCode", ",", " ", 
      "response", ",", "\n", "      ", "responseRules", ",", " ", 
      "responseExpression"}], "}"}], ",", "\n", "    ", 
    RowBox[{"JavaBlock", "[", "\n", "      ", 
     RowBox[{
      RowBox[{"requestExprString", " ", "=", " ", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"Unevaluated", "[", "request", "]"}], ",", " ", 
         "InputForm"}], "]"}]}], ";", "\n", "      ", 
      RowBox[{"Print", "[", "requestExprString", "]"}], ";", "\n", "      ", 
      RowBox[{"client", "=", 
       RowBox[{
       "JavaNew", "[", "\n", "        ", 
        "\"\<org.apache.commons.httpclient.HttpClient\>\"", "]"}]}], ";", 
      "\n", "      ", 
      RowBox[{"method", "=", 
       RowBox[{"JavaNew", "[", "\n", "        ", 
        RowBox[{
        "\"\<org.apache.commons.httpclient.methods.PostMethod\>\"", ",", 
         "url"}], "]"}]}], ";", "\n", "      ", 
      RowBox[{"entity", "=", 
       RowBox[{"JavaNew", "[", "\n", "        ", 
        RowBox[{
        "\"\<org.apache.commons.httpclient.methods.StringRequestEntity\>\"", 
         ",", "\n", "        ", "requestExprString"}], "]"}]}], ";", "\n", 
      "      ", 
      RowBox[{"method", " ", "@", " ", 
       RowBox[{"setRequestHeader", "[", 
        RowBox[{"\"\<Content-Type\>\"", ",", " ", "\"\<text/plain\>\""}], 
        "]"}]}], ";", "\n", "      ", 
      RowBox[{"method", " ", "@", " ", 
       RowBox[{"setRequestEntity", "[", "entity", "]"}]}], ";", "\n", 
      "      ", 
      RowBox[{"responseCode", "=", 
       RowBox[{"client", " ", "@", " ", 
        RowBox[{"executeMethod", "[", "method", "]"}]}]}], ";", "\n", 
      "      ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"responseCode", " ", "===", " ", "200"}], ",", "\n", 
        "        ", 
        RowBox[{"(*", " ", "then", " ", "*)"}], "\n", "        ", 
        RowBox[{
         RowBox[{"response", " ", "=", " ", 
          RowBox[{"method", " ", "@", " ", 
           RowBox[{"getResponseBodyAsString", "[", "]"}]}]}], ";", "\n", 
         "        ", 
         RowBox[{"responseRules", " ", "=", " ", 
          RowBox[{"ImportString", "[", 
           RowBox[{"response", ",", "\"\<JSON\>\""}], "]"}]}], ";", "\n", 
         "        ", 
         RowBox[{"responseExpression", " ", "=", " ", 
          RowBox[{"importer", " ", "@", " ", "responseRules"}]}]}], ",", "\n",
         "        ", 
        RowBox[{"(*", " ", "else", " ", "*)"}], "\n", "        ", 
        RowBox[{
         RowBox[{"Message", "[", "\n", "          ", 
          RowBox[{
           RowBox[{"jacquardPostRules", "::", "httperr"}], ",", "\n", 
           "          ", "responseCode"}], "]"}], ";", "\n", "          ", 
         "$Failed"}]}], "\n", "        ", "]"}]}], "]"}]}], "]"}]}]}], "Code",
 CellLabel->
  "In[457]:=",ExpressionUUID->"3fe47434-7ab6-4ae8-be56-c9802ebc47bc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"jacquardPostRules", "[", "\n", "    ", 
   RowBox[{"request_", ",", "\n", "    ", 
    RowBox[{"importer_", ":", "expressionFromRules"}], ",", "\n", "    ", 
    RowBox[{"url_", ":", " ", "\"\<http://127.0.0.1:5000/jacquard\>\""}]}], 
   "\n", "]"}], " ", ":=", "\n", "  ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\n", "      ", 
     RowBox[{
     "requestJsonString", ",", "\n", "      ", "client", ",", " ", "method", 
      ",", "\n", "      ", "entity", ",", " ", "responseCode", ",", " ", 
      "response", ",", "\n", "      ", "responseRules", ",", " ", 
      "responseExpression"}], "}"}], ",", "\n", "    ", 
    RowBox[{"JavaBlock", "[", "\n", "      ", 
     RowBox[{
      RowBox[{"requestJsonString", "=", 
       RowBox[{"ExportString", "[", 
        RowBox[{"request", ",", "\"\<JSON\>\""}], "]"}]}], ";", "\n", 
      "      ", 
      RowBox[{"client", "=", 
       RowBox[{
       "JavaNew", "[", "\n", "        ", 
        "\"\<org.apache.commons.httpclient.HttpClient\>\"", "]"}]}], ";", 
      "\n", "      ", 
      RowBox[{"method", "=", 
       RowBox[{"JavaNew", "[", "\n", "        ", 
        RowBox[{
        "\"\<org.apache.commons.httpclient.methods.PostMethod\>\"", ",", 
         "url"}], "]"}]}], ";", "\n", "      ", 
      RowBox[{"entity", "=", 
       RowBox[{"JavaNew", "[", "\n", "        ", 
        RowBox[{
        "\"\<org.apache.commons.httpclient.methods.StringRequestEntity\>\"", 
         ",", "\n", "        ", "requestJsonString"}], "]"}]}], ";", "\n", 
      "      ", 
      RowBox[{"method", " ", "@", " ", 
       RowBox[{"setRequestHeader", "[", 
        RowBox[{
        "\"\<Content-Type\>\"", ",", " ", "\"\<application/json\>\""}], 
        "]"}]}], ";", "\n", "      ", 
      RowBox[{"method", " ", "@", " ", 
       RowBox[{"setRequestEntity", "[", "entity", "]"}]}], ";", "\n", 
      "      ", 
      RowBox[{"responseCode", "=", 
       RowBox[{"client", " ", "@", " ", 
        RowBox[{"executeMethod", "[", "method", "]"}]}]}], ";", "\n", 
      "      ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"responseCode", " ", "===", " ", "200"}], ",", "\n", 
        "        ", 
        RowBox[{"(*", " ", "then", " ", "*)"}], "\n", "        ", 
        RowBox[{
         RowBox[{"response", " ", "=", " ", 
          RowBox[{"method", " ", "@", " ", 
           RowBox[{"getResponseBodyAsString", "[", "]"}]}]}], ";", "\n", 
         "        ", 
         RowBox[{"responseRules", " ", "=", " ", 
          RowBox[{"ImportString", "[", 
           RowBox[{"response", ",", "\"\<JSON\>\""}], "]"}]}], ";", "\n", 
         "        ", 
         RowBox[{"responseExpression", " ", "=", " ", 
          RowBox[{"importer", " ", "@", " ", "responseRules"}]}]}], ",", "\n",
         "        ", 
        RowBox[{"(*", " ", "else", " ", "*)"}], "\n", "        ", 
        RowBox[{
         RowBox[{"Message", "[", "\n", "          ", 
          RowBox[{
           RowBox[{"jacquardPostRules", "::", "httperr"}], ",", "\n", 
           "          ", "responseCode"}], "]"}], ";", "\n", "          ", 
         "$Failed"}]}], "\n", "        ", "]"}]}], "]"}]}], "]"}]}]], "Code",
 CellLabel->
  "In[459]:=",ExpressionUUID->"2beb7c88-ee58-4b2f-a8c7-26516ff134d9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"jacquardEvalExpression", "[", "\n", "    ", 
    RowBox[{"requestExpr_", ",", "\n", "    ", 
     RowBox[{"importer_", ":", "expressionFromRules"}], ",", "\n", "    ", 
     RowBox[{"url_", ":", " ", "\"\<http://127.0.0.1:5000/jacquard\>\""}]}], 
    "]"}], " ", ":=", "\n", "  ", 
   RowBox[{"jacquardPostRules", "[", 
    RowBox[{
     RowBox[{"rulesFromExpression", " ", "@", " ", "requestExpr"}], ",", " ", 
     "importer", ",", " ", "url"}], "]"}]}], ";"}]], "Code",
 CellLabel->
  "In[460]:=",ExpressionUUID->"aa24f16e-3c7e-4593-b41c-b28ffed7c408"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"jacquardEvalHeldExpression", ",", "HoldAllComplete"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jacquardEvalHeldExpression", "[", "\n", "    ", 
    RowBox[{"requestExpr_", ",", "\n", "    ", 
     RowBox[{"importer_", ":", "expressionFromRules"}], ",", "\n", "    ", 
     RowBox[{"url_", ":", " ", "\"\<http://127.0.0.1:5000/jacquard\>\""}]}], 
    "]"}], " ", ":=", "\n", "  ", 
   RowBox[{"jacquardPostRules", "[", 
    RowBox[{
     RowBox[{"rulesFromHeldExpression", "[", "requestExpr", "]"}], ",", " ", 
     "importer", ",", " ", "url"}], "]"}]}], ";"}]}], "Code",
 CellLabel->
  "In[461]:=",ExpressionUUID->"2f2b06f3-67c7-410e-b29c-ac25457de37f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "jacquardEvalEvaluatableHeldExpression", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"jacquardEvalEvaluatableHeldExpression", ",", "HoldAllComplete"}], 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jacquardEvalEvaluatableHeldExpression", "[", "\n", "    ", 
    RowBox[{"requestExpr_", ",", "\n", "    ", 
     RowBox[{"importer_", ":", "expressionFromRules"}], ",", "\n", "    ", 
     RowBox[{"url_", ":", " ", "\"\<http://127.0.0.1:5000/jacquard\>\""}]}], 
    "]"}], " ", ":=", "\n", "  ", 
   RowBox[{"jacquardPostRules", "[", 
    RowBox[{
     RowBox[{"rulesFromEvaluatableHeldExpression", "[", "requestExpr", "]"}], 
     ",", " ", "importer", ",", " ", "url"}], "]"}]}], ";"}]}], "Code",
 CellLabel->
  "In[463]:=",ExpressionUUID->"39b10216-4d98-40eb-97e7-1a4384debb14"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"jacquardStringifiedEvalHeldExpression", ",", "HoldAllComplete"}], 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jacquardStringifiedEvalHeldExpression", "[", "\n", "    ", 
    RowBox[{"requestExpr_", ",", "\n", "    ", 
     RowBox[{"url_", ":", "\"\<http://127.0.0.1:5000/jacquard\>\""}]}], "]"}],
    " ", ":=", "\n", "  ", 
   RowBox[{"jacquardPostRules", "[", 
    RowBox[{
     RowBox[{"rulesFromHeldExpression", "[", "requestExpr", "]"}], ",", " ", 
     "stringifiedExpressionFromRules", ",", " ", "url"}], "]"}]}], 
  ";"}]}], "Code",
 CellLabel->
  "In[466]:=",ExpressionUUID->"71a88793-8edf-4983-82d8-831ea88d4777"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Ends", "Subsection",ExpressionUUID->"c67d4ef2-2ea2-47a9-b2c9-daf896e55f9b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"End", "[", "]"}], ";"}], 
  RowBox[{"(*", " ", "Private", " ", "*)"}]}]], "Code",
 CellLabel->
  "In[468]:=",ExpressionUUID->"05a08509-3638-4042-826b-c15c75f752a2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]], "Code",
 CellLabel->
  "In[469]:=",ExpressionUUID->"f9e99ad9-9af3-4074-9de3-82ccec9d220b"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["POLISH PREFIX GRAMMARS", "Chapter",
 CellChangeTimes->{{3.841316792633304*^9, 3.841316795651947*^9}, {
  3.841398725078986*^9, 
  3.841398729093936*^9}},ExpressionUUID->"c6fea088-9084-404a-9dbd-\
dfd1fc71b462"],

Cell[TextData[{
 "Our Polish prefix grammars (PPFs) are of the form ",
 StyleBox["[non-terminal] [some-fixed-number-of-arguments]", "Input"],
 ". Such grammars are easy to parse, and it\[CloseCurlyQuote]s easy to \
automatically generate parsers for such grammars. "
}], "Text",
 CellChangeTimes->{{3.841399950937957*^9, 3.84140008609688*^9}, 
   3.841677512696266*^9, {3.841749488316256*^9, 3.841749530272447*^9}, {
   3.9112524438359747`*^9, 
   3.911252444318129*^9}},ExpressionUUID->"df137a6f-012f-413e-9396-\
12deee535cde"],

Cell[CellGroupData[{

Cell["DEFINITIONS", "Section",
 CellChangeTimes->{{3.5486756660075207`*^9, 
  3.5486756701105204`*^9}},ExpressionUUID->"9cd88974-9d17-4a85-86cd-\
7ea469772cfd"],

Cell["Definitions are in bold-italics. ", "Text",
 CellChangeTimes->{{3.841245776796187*^9, 3.841245874555089*^9}, {
  3.8413990535098753`*^9, 3.8413990581361303`*^9}, {3.841677523089943*^9, 
  3.84167752559448*^9}, {3.8416780025341578`*^9, 3.8416780245145473`*^9}, {
  3.84167903671063*^9, 3.841679086896926*^9}, {3.841749537069208*^9, 
  3.8417495609544163`*^9}, {3.912369648345015*^9, 
  3.912369660935367*^9}},ExpressionUUID->"b6cab472-0ccd-46b5-9b0b-\
7a47c2c3739b"],

Cell[TextData[{
 "Let a ",
 StyleBox["grammar",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " be a function from ",
 StyleBox["non-terminal symbols",
  FontSlant->"Italic"],
 " to ",
 StyleBox["productions",
  FontSlant->"Italic"],
 ", each of which is a list as a ",
 StyleBox["suit",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " (",
 StyleBox["permutation",
  FontSlant->"Italic"],
 ", ordered, no duplicates",
 ") of ",
 StyleBox["alternatives",
  FontSlant->"Italic"],
 ". Alternatives are ordered for zipping with travesty-generation \
probabilities. Logically, alternatives are unordered, i.e., a ",
 StyleBox["set",
  FontSlant->"Italic"],
 " rather than a suit."
}], "Text",
 CellChangeTimes->CompressedData["
1:eJwdxUsow3EAB/B5jIOIy4oWY3nNLqZ5RluWUEvNSpvymHmsFBdpHinGYVq0
ZkYLhSEHtUQhtR3WGmZssTzSmjRjWnNywe/7P3z65CqGJL3xNBqNSeDJcN2g
Yjgs9OXsj2BR7YoWp3SX6fFGfdwqNv7dH+Pp9KdTzLZz7fgu/8aFTWb3FT6X
r2t6yJkzolmsDMssmLd3sYMN0i1jP7mvlWHGFS5/wgD5ycZLxdlfo34t2er2
UqvpSfx5cp1BRf3WJKjC5ayMGnxXZprDjoRvHdYMs3w6snvi9h5zK5QhfPZD
f8fyZ21ogZx4nRvFNPUMa5GctaspxqroFD/wFxY2VF5SNx7qJDjNFmrHnJes
FtPapzDmtVLrm6Uy7NGWdmCB2MoOkn9FJ9SBFQcHRz2CEnzwwbQLCiLCZWen
Ez+OizeXyH7lGPXDbySI57uSX3H1a1uekczcPqKOMSyFWD0qL8L/eljq/Q==

  "],ExpressionUUID->"4c8c4044-cfcf-4280-8e3c-8de099459c90"],

Cell[TextData[{
 "The productions of a ",
 StyleBox["context-free grammar",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " pertain anywhere in an ",
 StyleBox["utterance",
  FontSlant->"Italic"],
 " without regard to preceding or following input. Such grammars are the only \
ones of interest, here."
}], "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQXfvKLiep4JXjFfnVpSDaxXZmF4jmTjSeBKIXODPO
AtHT/l/fDqKbBO7sBtHKh3QOgehrqhdPgegZc86dBdH7oua3JANpyWaXVhCd
8ipyGYg2Wnl6OYieErJkWjqQTgsWmwOizU/dYM4A0ncOGvGCaLl35Te6gPSm
c5fBdCUrm2k3kLabkgmmn3k6WIJoMwVBaxB9zXhGG4g+xvy5F0S3FChc6QXS
52ouXQfROuYpL0D0np+sL0F01N2uF/1AOmKT+3sQXZHzJ+7h/1eOXu6JCSB6
z5Z3ao/nvXHUsZbWANEXv/72BNG3z1l6gWgANT2hgg==
  "],ExpressionUUID->"a8909ef6-0262-4e21-a15a-ec5479370da8"],

Cell[TextData[{
 StyleBox["F", "Input"],
 ", below, is our grammar for algebraic expressions. We assume an algebraic ",
 StyleBox["field",
  FontSlant->"Italic"],
 " with addition and multiplication following commutative, distributive, and \
associative laws. ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " automatically enforces these laws when simplifying expressions. \
Incidentally, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s simplifications freely annihilate expressions \
multiplied by zero without checking for non-zero denominators, so watch out \
for that!."
}], "Text",
 CellChangeTimes->{{3.841677885392058*^9, 3.84167798097466*^9}, {
  3.841678036351005*^9, 3.841678138734857*^9}, {3.8416782709144983`*^9, 
  3.841678272747715*^9}, {3.8417526150325947`*^9, 3.8417526410766*^9}, {
  3.911252519265645*^9, 3.9112525373431807`*^9}, {3.912369741592743*^9, 
  3.912369798022292*^9}, {3.912543557757122*^9, 
  3.912543569232367*^9}},ExpressionUUID->"e406e2a6-7d94-4149-a159-\
d41216a0b9d9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{
    "F", ",", "Expr", ",", "FSum", ",", "FInt", ",", "FVar", ",", "FProd", 
     ",", "Start"}], "]"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"for", " ", "\"\<Field\>\""}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"F", "[", "Expr", "]"}], "=", 
    RowBox[{"(", GridBox[{
       {"FSum"},
       {"FProd"},
       {"FVar"},
       {"FInt"}
      }], ")"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "\"\<Sum\>\"", " ", "collides", " ", "with", " ", "a", " ", "built"}], 
    "-", 
    RowBox[{"in", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"F", "[", "FSum", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"Plus", ",", "Expr", ",", "Expr"}], "}"}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Do", " ", "we", " ", "want", " ", "the", " ", "built"}], "-", 
    RowBox[{"in", " ", 
     RowBox[{"\"\<Plus\>\"", "?"}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"F", "[", "FInt", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"{", "RandomInteger", "}"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"F", "[", "FVar", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"(*", " ", 
     RowBox[{
     "explicit", " ", "inverses", " ", "to", " ", "avoid", " ", "an", " ", 
      "extra", " ", "term"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "x", "}"}], ",", 
     RowBox[{"{", "y", "}"}], ",", 
     RowBox[{"{", "z", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"-", "x"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"-", "y"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"-", "z"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", "/", "x"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", "/", "y"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", "/", "z"}], "}"}]}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{",", " ", 
      RowBox[{"make", " ", "as", " ", "many", " ", "as", " ", "you", " ", 
       RowBox[{"want", ":", " ", 
        RowBox[{"e", ".", "g", ".", " ", 
         RowBox[{"{", "u", "}"}]}]}]}], ",", 
      RowBox[{"{", "v", "}"}], ",", 
      RowBox[{"{", "w", "}"}], ",", 
      RowBox[{"{", "p", "}"}], ",", 
      RowBox[{"{", "q", "}"}], ",", 
      RowBox[{"{", "r", "}"}], ",", 
      RowBox[{"{", "s", "}"}], ",", 
      RowBox[{"{", "t", "}"}]}], "*)"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"F", "[", "FProd", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"Times", ",", "Expr", ",", "Expr"}], "}"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"F", "[", "Start", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"{", "Expr", "}"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8416788456218843`*^9, 3.84167889872832*^9}, {
  3.911252573728348*^9, 3.911252580838613*^9}, {3.912369909993601*^9, 
  3.912369922032449*^9}},
 CellLabel->
  "In[470]:=",ExpressionUUID->"ae668ba2-b16e-4471-a577-c2e070314a4d"],

Cell[TextData[{
 "In this example, ",
 StyleBox["F", "Input"],
 " is a function from the non-terminal symbols ",
 StyleBox["Expr", "Input"],
 ", ",
 StyleBox["FSum", "Input"],
 ", ",
 StyleBox["FInt", "Input"],
 ", ",
 StyleBox["FVar", "Input"],
 ", ",
 StyleBox["FProd", "Input"],
 "\.18, and ",
 StyleBox["Start", "Input"],
 ", each to a list (as a suit) of alternatives. "
}], "Text",
 CellChangeTimes->{{3.8416781491366243`*^9, 3.8416782557461576`*^9}, {
   3.84167831933119*^9, 3.84167832286122*^9}, {3.841678935211133*^9, 
   3.8416789534354362`*^9}, {3.8416793128892937`*^9, 3.841679323368597*^9}, {
   3.8417526658476267`*^9, 3.841752668282937*^9}, 3.912369845323018*^9, {
   3.912370052505703*^9, 3.912370057150762*^9}, {3.912370153065834*^9, 
   3.912370159023074*^9}, 
   3.912544013581812*^9},ExpressionUUID->"9fc65ee6-6873-4b2a-b23b-\
187ce91d6020"],

Cell[TextData[{
 "Each ",
 StyleBox["alternative",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " is a ",
 StyleBox["list, ",
  FontSlant->"Italic"],
 "as a ",
 StyleBox["sequence",
  FontSlant->"Italic"],
 " (ordered, duplicates allowed),",
 " of ",
 StyleBox["terms",
  FontSlant->"Italic"],
 ". The terms in an alternative must match, in both order and form, the terms \
in ",
 StyleBox["utterances",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.548582753966124*^9, 3.5485828293476353`*^9}, {
   3.5485829967887287`*^9, 3.548583057605596*^9}, {3.548583120039505*^9, 
   3.5485833587499495`*^9}, {3.548583390877015*^9, 3.5485834413986983`*^9}, {
   3.5485835105358686`*^9, 3.5485835344566154`*^9}, {3.548584996979827*^9, 
   3.548585002141003*^9}, {3.548585266809862*^9, 3.5485852783644037`*^9}, {
   3.5485933331353245`*^9, 3.5485933766976805`*^9}, {3.5485942067746844`*^9, 
   3.5485942815861645`*^9}, {3.548665539747817*^9, 3.5486655426189814`*^9}, {
   3.548666280188168*^9, 3.548666283299346*^9}, {3.548666314009021*^9, 
   3.5486663491746197`*^9}, 3.5486663822507567`*^9, {3.5486664856761036`*^9, 
   3.5486665491825275`*^9}, {3.5486665891494846`*^9, 3.548666617594344*^9}, {
   3.5486666695999413`*^9, 3.548666696143902*^9}, {3.548671691665735*^9, 
   3.5486717302717347`*^9}, {3.5486760097025204`*^9, 3.54867601630352*^9}, {
   3.623815676075409*^9, 3.623815734042601*^9}, 3.6238159722943*^9, {
   3.841153758596483*^9, 3.8411537652476063`*^9}, {3.841154093504404*^9, 
   3.8411541186164217`*^9}, {3.841245987755184*^9, 3.841246003925659*^9}, {
   3.841399189367806*^9, 3.841399196565268*^9}, {3.9125443100351467`*^9, 
   3.9125443125860167`*^9}, {3.912544462600853*^9, 3.9125444882482452`*^9}, 
   3.912544632607108*^9},ExpressionUUID->"7aecaa2d-5fa0-45dd-8896-\
36d54ffff7fd"],

Cell[TextData[{
 "A ",
 StyleBox["term",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " is either a ",
 StyleBox["terminal symbol",
  FontSlant->"Italic"],
 " or a ",
 StyleBox["non-terminal symbol",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.548582753966124*^9, 3.5485828293476353`*^9}, {
   3.5485829967887287`*^9, 3.548583057605596*^9}, {3.548583120039505*^9, 
   3.5485833587499495`*^9}, {3.548583390877015*^9, 3.5485834413986983`*^9}, {
   3.5485835105358686`*^9, 3.5485835344566154`*^9}, {3.548584996979827*^9, 
   3.548585002141003*^9}, {3.548585266809862*^9, 3.5485852783644037`*^9}, {
   3.5485933331353245`*^9, 3.5485933766976805`*^9}, {3.5485942067746844`*^9, 
   3.5485942815861645`*^9}, {3.548665539747817*^9, 3.5486655426189814`*^9}, {
   3.548666280188168*^9, 3.548666283299346*^9}, {3.548666314009021*^9, 
   3.5486663491746197`*^9}, 3.5486663822507567`*^9, {3.5486664856761036`*^9, 
   3.5486665491825275`*^9}, {3.5486665891494846`*^9, 3.548666617594344*^9}, {
   3.5486666695999413`*^9, 3.548666696143902*^9}, {3.548671691665735*^9, 
   3.5486717302717347`*^9}, {3.5486760097025204`*^9, 3.54867601630352*^9}, {
   3.623815676075409*^9, 3.623815734042601*^9}, 3.6238159722943*^9, {
   3.841153758596483*^9, 3.8411537652476063`*^9}, {3.841154093504404*^9, 
   3.8411541186164217`*^9}, {3.841245987755184*^9, 3.841246003925659*^9}, {
   3.841399189367806*^9, 3.841399196565268*^9}, {3.841677708658646*^9, 
   3.841677709013706*^9}, {3.841678402360271*^9, 3.841678473011051*^9}, {
   3.841679411806513*^9, 3.841679471066739*^9}, {3.84168662043617*^9, 
   3.841686769835307*^9}, {3.8417526969784203`*^9, 3.841752701662408*^9}, {
   3.912371131952601*^9, 3.912371135241218*^9}, {3.912371235161189*^9, 
   3.912371358296054*^9}},ExpressionUUID->"86c3e653-96cd-4e80-900d-\
99b6ec90a024"],

Cell[TextData[{
 "A ",
 StyleBox["terminal symbol",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " is a literal \[LongDash] a ",
 StyleBox["Symbol", "Input"],
 ", ",
 StyleBox["String", "Input"],
 ", or a ",
 StyleBox["Number", "Input"],
 " \[LongDash] a bottom-level expression like ",
 StyleBox["Plus", "Input"],
 ", ",
 StyleBox["42", "Input"],
 ", ",
 StyleBox["1/x", "Input"],
 ", or ",
 StyleBox["-y", "Input"],
 ". A terminal symbol must match exactly a ",
 StyleBox["token",
  FontSlant->"Italic"],
 " appearing in the input."
}], "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQXfvKLiep4JXjFfnVpSDaxXZmF4jmTjSeBKIXODPO
AtHT/l/fDqKbBO7sBtHKh3QOgehrqhdPgegZc86dBdH7oua3JANpyWaXVhCd
8ipyGYg2Wnl6OYieErJkWjqQTgsWmwOizU/dYM4A0ncOGvGCaLl35Te6gPSm
c5fBdCUrm2k3kLabkgmmn3k6WIJoY7YTjiBaKcT2Rz+QvjuX8xeIto5I1p4A
pBPifoDp/v/W5XPmvXEsOPQLTB9fe+Fx9vw3jj1vJr4E0VZfY+c4qr11FJtS
CqYv9Wy4MRVIHwl4CqbTso7YTgPSEjPUHUA0AODsnPg=
  "],ExpressionUUID->"bfe7cd85-f0a4-46e7-8e2d-54db03fe6e99"],

Cell[TextData[{
 "A ",
 StyleBox["non-terminal symbol",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " is any term in the grammar that is not a terminal symbol. An example is ",
 StyleBox["Expr", "Input"],
 ". A",
 " non-terminal symbol ",
 "recurses back into the grammar. It\[CloseCurlyQuote]s always of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " type ",
 StyleBox["Symbol", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.912544061940233*^9, 3.912544107276786*^9}, {
  3.912544199880512*^9, 
  3.912544201968457*^9}},ExpressionUUID->"ba4d9147-8b7d-4783-9693-\
d5154b2d4cf4"],

Cell[TextData[{
 "A ",
 StyleBox["production",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " is a suit of ",
 StyleBox["alternatives",
  FontSlant->"Italic"],
 ". The value ",
 StyleBox["F[Expr]", "Input"],
 " above, namely ",
 StyleBox["{{FSum}, {FProd}, {FVar}, {FInt}}", "Input"],
 ", is a production, and ",
 StyleBox["{FSum}", "Input"],
 ", ",
 StyleBox["{FProd}", "Input"],
 ", ",
 StyleBox["{FVar}", "Input"],
 ", ",
 StyleBox["{FInt}", "Input"],
 " are its alternatives. Each of these alternatives is ",
 StyleBox["nullary",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ", meaning it consists of a single term. An example of a ",
 StyleBox["binary term",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " is ",
 StyleBox["{Plus,Expr,Expr}", "Input"],
 " consisting of the terminal symbol ",
 StyleBox["Plus", "Input"],
 " and two non-terminal ",
 StyleBox["Expr", "Input"],
 " symbols."
}], "Text",
 CellChangeTimes->{{3.623407425245723*^9, 3.6234074316524*^9}, {
   3.6238156239724007`*^9, 3.623815666347084*^9}, 3.623815967367429*^9, {
   3.841153678466175*^9, 3.841153679772957*^9}, 3.841245979265031*^9, {
   3.841678335133233*^9, 3.8416783506903887`*^9}, {3.841678996379231*^9, 
   3.841678998763897*^9}, {3.841679339592622*^9, 3.841679356397003*^9}, {
   3.9112526365608253`*^9, 3.911252637272873*^9}, {3.912371379420849*^9, 
   3.9123713847487717`*^9}, {3.912543620033111*^9, 3.912543621428129*^9}, {
   3.9125436548291063`*^9, 3.912543668435964*^9}, {3.912543706871194*^9, 
   3.912543859083735*^9}},ExpressionUUID->"80269b5b-1d0e-46c8-88d6-\
8950d4deda8e"],

Cell[TextData[{
 "An ",
 StyleBox["utterance",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " is a list (as a stream) of terminals like ",
 StyleBox["{Plus, x, y}", "Input"],
 ", The utterance has the ",
 StyleBox["parse tree",
  FontSlant->"Italic"],
 " ",
 StyleBox["FSum[Plus,FVar[x],FVar[y]]", "Input"],
 ", which is a stand-in, written in our PPF grammar, for the algebraic \
expression ",
 StyleBox["x+y", "Input"],
 ". The parser, which we will generate automatically from the grammar, \
converts utterances into parse trees. Parse trees exhibit the recursive \
structure of utterances, a structure imposed by the grammar."
}], "Text",
 CellChangeTimes->{{3.548582753966124*^9, 3.5485828293476353`*^9}, {
   3.5485829967887287`*^9, 3.548583057605596*^9}, {3.548583120039505*^9, 
   3.5485833587499495`*^9}, {3.548583390877015*^9, 3.5485834413986983`*^9}, {
   3.5485835105358686`*^9, 3.5485835344566154`*^9}, {3.548584996979827*^9, 
   3.548585002141003*^9}, {3.548585266809862*^9, 3.5485852783644037`*^9}, {
   3.5485933331353245`*^9, 3.5485933766976805`*^9}, {3.5485942067746844`*^9, 
   3.5485942815861645`*^9}, {3.548665539747817*^9, 3.5486655426189814`*^9}, {
   3.548666280188168*^9, 3.548666283299346*^9}, {3.548666314009021*^9, 
   3.5486663491746197`*^9}, 3.5486663822507567`*^9, {3.5486664856761036`*^9, 
   3.5486665491825275`*^9}, {3.5486665891494846`*^9, 3.548666617594344*^9}, {
   3.5486666695999413`*^9, 3.548666696143902*^9}, {3.548671691665735*^9, 
   3.5486717302717347`*^9}, {3.5486760097025204`*^9, 3.54867601630352*^9}, {
   3.623815676075409*^9, 3.623815734042601*^9}, 3.6238159722943*^9, {
   3.841153758596483*^9, 3.8411537652476063`*^9}, {3.841154093504404*^9, 
   3.8411541186164217`*^9}, {3.841245987755184*^9, 3.841246003925659*^9}, {
   3.841399189367806*^9, 3.841399196565268*^9}, {3.841677708658646*^9, 
   3.841677709013706*^9}, {3.841678402360271*^9, 3.841678473011051*^9}, {
   3.841679411806513*^9, 3.841679471066739*^9}, {3.84168662043617*^9, 
   3.841686769835307*^9}, {3.8417526969784203`*^9, 3.841752701662408*^9}, 
   3.912371131952601*^9},ExpressionUUID->"5eeb37a0-4f41-496d-833f-\
fb2d5664e3f5"],

Cell[TextData[{
 "A ",
 StyleBox["token",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " is an atomic expression in the source language. Examples include a symbol, \
e.g., ",
 StyleBox["Plus", "Input"],
 " or ",
 StyleBox["FSum", "Input"],
 "; a ",
 StyleBox["String", "Input"],
 " (we don\[CloseCurlyQuote]t use strings here, but they work just fine); or \
an ",
 StyleBox["FInt", "Input"],
 " enclosing a literal integer."
}], "Text",
 CellChangeTimes->{{3.623407478106385*^9, 3.6234075046494226`*^9}, {
  3.841246337936664*^9, 3.841246389545138*^9}, {3.8412543450895967`*^9, 
  3.841254359008959*^9}, {3.8413992627796288`*^9, 3.841399286648327*^9}, {
  3.841677743600254*^9, 3.841677772959179*^9}, {3.841679223888805*^9, 
  3.841679269666603*^9}, {3.841679391905896*^9, 3.841679404222892*^9}, {
  3.841752741651045*^9, 3.8417527805876703`*^9}, {3.9125441694160233`*^9, 
  3.912544182856369*^9}},ExpressionUUID->"e3ae6d4c-5e44-482a-9157-\
6da7bac6e294"],

Cell[TextData[{
 "The ",
 StyleBox["start symbol",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " is the special, distinguished name and symbol ",
 StyleBox["Start", "Input"],
 ", not available for other uses. "
}], "Text",
 CellChangeTimes->{{3.548582753966124*^9, 3.5485828293476353`*^9}, {
   3.5485829967887287`*^9, 3.548583057605596*^9}, {3.548583120039505*^9, 
   3.5485833587499495`*^9}, {3.548583390877015*^9, 3.5485834413986983`*^9}, {
   3.5485835105358686`*^9, 3.5485835344566154`*^9}, {3.548584996979827*^9, 
   3.548585002141003*^9}, {3.548585266809862*^9, 3.5485852783644037`*^9}, {
   3.5485933331353245`*^9, 3.5485933766976805`*^9}, {3.5485942067746844`*^9, 
   3.5485942815861645`*^9}, {3.548665539747817*^9, 3.5486655426189814`*^9}, {
   3.548666280188168*^9, 3.548666283299346*^9}, {3.548666314009021*^9, 
   3.5486663156972017`*^9}, {3.5486663727851353`*^9, 
   3.5486663822517576`*^9}, {3.548671750518735*^9, 3.5486717954447346`*^9}, 
   3.548671827089735*^9, {3.5486760547485204`*^9, 3.54867605480352*^9}, {
   3.841254380033658*^9, 3.8412543866030073`*^9}, {3.841399322970133*^9, 
   3.841399357718349*^9}},ExpressionUUID->"9cd60e70-1465-4be6-9bdd-\
f54f5cf80bd2"],

Cell[TextData[{
 "How about a pretty display for ",
 StyleBox["F", "Input"],
 "? From the ",
 StyleBox["Jacquard",
  FontSlant->"Italic"],
 " library imported in the Preliminaries of this document, ",
 StyleBox["gridRules", "Input"],
 " exhibits ",
 StyleBox["Symbols", "Input"],
 " in dark blue, ",
 StyleBox["Lists", "Input"],
 " in green boxes, lists of lists in doubled green boxes, and ",
 StyleBox["String", "Input"],
 " terminals in dark red (we don\[CloseCurlyQuote]t have any strings in this \
example). This visual notation does not distinguish lists as suits, lists as \
sets, lists as sequences, or lists as bags. ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " ",
 StyleBox["Rules", "Input"],
 " have orange boxes on the left and light-yellow boxes on the right."
}], "Text",
 CellChangeTimes->{{3.841246707749188*^9, 3.841246713694433*^9}, {
   3.8412468004849567`*^9, 3.8412468544042597`*^9}, {3.841247496079574*^9, 
   3.841247501636218*^9}, {3.841247552189951*^9, 3.8412475874328957`*^9}, {
   3.841249323441228*^9, 3.841249351484261*^9}, {3.841254478935403*^9, 
   3.841254632783431*^9}, {3.841400236858873*^9, 3.841400354605666*^9}, {
   3.8416794917314777`*^9, 3.8416794930585938`*^9}, {3.84167974437351*^9, 
   3.8416797776413517`*^9}, {3.841685601584317*^9, 3.84168562865322*^9}, {
   3.841752813208398*^9, 3.841752869831164*^9}, {3.841752915666596*^9, 
   3.841753019406466*^9}, 3.8417603389342527`*^9, {3.8417604341311083`*^9, 
   3.841760484171379*^9}, {3.841760539528717*^9, 3.84176054841232*^9}, {
   3.91125274111861*^9, 3.911252777022004*^9}, 3.911252848056164*^9, {
   3.912371515606845*^9, 
   3.912371517490398*^9}},ExpressionUUID->"019d4216-3d1b-410e-a628-\
d00052ccc5a2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "visGrammar", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"visGrammar", "[", "g_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"d", "=", 
        RowBox[{"DownValues", "[", "g", "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Zip", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{"hp", ",", 
           RowBox[{"hp", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}]}], "]"}], "/@", 
         RowBox[{"Unevaluated", "/@", "d"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{"hp", ",", 
           RowBox[{"hp", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], "/@", "d"}], ",",
         "Rule"}], "]"}]}], "]"}], "//", 
    StyleBox["gridRules",
     Background->RGBColor[1, 1, 0]]}]}], ";"}], "\n", 
 RowBox[{"visGrammar", "[", "F", "]"}]}], "Input",
 CellChangeTimes->{{3.8413186309311037`*^9, 3.8413186901554623`*^9}, 
   3.8413314886568747`*^9, {3.841685585951541*^9, 3.841685587505118*^9}},
 CellLabel->
  "In[477]:=",ExpressionUUID->"b35bb83a-8d19-42b3-885d-2989c6369bbf"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          StyleBox[
           TagBox[GridBox[{
              {"Expr"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           StripOnInput->False,
           FontWeight->Bold],
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontWeight->Bold,
          FontColor->GrayLevel[0]], 
         StyleBox[
          TagBox[GridBox[{
             {
              TagBox[GridBox[{
                 {
                  StyleBox[
                   TagBox[GridBox[{
                    {"FSum"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                   StripOnInput->False,
                   FontWeight->Bold]}
                },
                AutoDelete->False,
                FrameStyle->RGBColor[0, 
                  Rational[2, 3], 0],
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]},
             {
              TagBox[GridBox[{
                 {
                  StyleBox[
                   TagBox[GridBox[{
                    {"FProd"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                   StripOnInput->False,
                   FontWeight->Bold]}
                },
                AutoDelete->False,
                FrameStyle->RGBColor[0, 
                  Rational[2, 3], 0],
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]},
             {
              TagBox[GridBox[{
                 {
                  StyleBox[
                   TagBox[GridBox[{
                    {"FVar"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                   StripOnInput->False,
                   FontWeight->Bold]}
                },
                AutoDelete->False,
                FrameStyle->RGBColor[0, 
                  Rational[2, 3], 0],
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]},
             {
              TagBox[GridBox[{
                 {
                  StyleBox[
                   TagBox[GridBox[{
                    {"FInt"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                   StripOnInput->False,
                   FontWeight->Bold]}
                },
                AutoDelete->False,
                FrameStyle->RGBColor[0, 
                  Rational[2, 3], 0],
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]}
            },
            AutoDelete->False,
            FrameStyle->RGBColor[0, 
              Rational[2, 3], 0],
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxBackground->{"Columns" -> {{
                 RGBColor[0.88, 1, 0.88]}}},
            GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
           "Grid"],
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontWeight->Bold,
          FontColor->RGBColor[0, 0, 1]]},
        {
         StyleBox[
          StyleBox[
           TagBox[GridBox[{
              {"FInt"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           StripOnInput->False,
           FontWeight->Bold],
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontWeight->Bold,
          FontColor->GrayLevel[0]], 
         StyleBox[
          TagBox[GridBox[{
             {
              TagBox[GridBox[{
                 {
                  StyleBox[
                   TagBox[GridBox[{
                    {"RandomInteger"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                   StripOnInput->False,
                   FontWeight->Bold]}
                },
                AutoDelete->False,
                FrameStyle->RGBColor[0, 
                  Rational[2, 3], 0],
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]}
            },
            AutoDelete->False,
            FrameStyle->RGBColor[0, 
              Rational[2, 3], 0],
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxBackground->{"Columns" -> {{
                 RGBColor[0.88, 1, 0.88]}}},
            GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
           "Grid"],
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontWeight->Bold,
          FontColor->RGBColor[0, 0, 1]]},
        {
         StyleBox[
          StyleBox[
           TagBox[GridBox[{
              {"FProd"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           StripOnInput->False,
           FontWeight->Bold],
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontWeight->Bold,
          FontColor->GrayLevel[0]], 
         StyleBox[
          TagBox[GridBox[{
             {
              TagBox[GridBox[{
                 {
                  StyleBox[
                   TagBox[GridBox[{
                    {"Times"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                   StripOnInput->False,
                   FontWeight->Bold]},
                 {
                  StyleBox[
                   TagBox[GridBox[{
                    {"Expr"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                   StripOnInput->False,
                   FontWeight->Bold]},
                 {
                  StyleBox[
                   TagBox[GridBox[{
                    {"Expr"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                   StripOnInput->False,
                   FontWeight->Bold]}
                },
                AutoDelete->False,
                FrameStyle->RGBColor[0, 
                  Rational[2, 3], 0],
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]}
            },
            AutoDelete->False,
            FrameStyle->RGBColor[0, 
              Rational[2, 3], 0],
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxBackground->{"Columns" -> {{
                 RGBColor[0.88, 1, 0.88]}}},
            GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
           "Grid"],
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontWeight->Bold,
          FontColor->RGBColor[0, 0, 1]]},
        {
         StyleBox[
          StyleBox[
           TagBox[GridBox[{
              {"FSum"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           StripOnInput->False,
           FontWeight->Bold],
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontWeight->Bold,
          FontColor->GrayLevel[0]], 
         StyleBox[
          TagBox[GridBox[{
             {
              TagBox[GridBox[{
                 {
                  StyleBox[
                   TagBox[GridBox[{
                    {"Plus"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                   StripOnInput->False,
                   FontWeight->Bold]},
                 {
                  StyleBox[
                   TagBox[GridBox[{
                    {"Expr"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                   StripOnInput->False,
                   FontWeight->Bold]},
                 {
                  StyleBox[
                   TagBox[GridBox[{
                    {"Expr"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                   StripOnInput->False,
                   FontWeight->Bold]}
                },
                AutoDelete->False,
                FrameStyle->RGBColor[0, 
                  Rational[2, 3], 0],
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]}
            },
            AutoDelete->False,
            FrameStyle->RGBColor[0, 
              Rational[2, 3], 0],
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxBackground->{"Columns" -> {{
                 RGBColor[0.88, 1, 0.88]}}},
            GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
           "Grid"],
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontWeight->Bold,
          FontColor->RGBColor[0, 0, 1]]},
        {
         StyleBox[
          StyleBox[
           TagBox[GridBox[{
              {"FVar"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           StripOnInput->False,
           FontWeight->Bold],
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontWeight->Bold,
          FontColor->GrayLevel[0]], 
         StyleBox[
          TagBox[GridBox[{
             {
              TagBox[GridBox[{
                 {
                  StyleBox[
                   TagBox[GridBox[{
                    {"x"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                   StripOnInput->False,
                   FontWeight->Bold]}
                },
                AutoDelete->False,
                FrameStyle->RGBColor[0, 
                  Rational[2, 3], 0],
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]},
             {
              TagBox[GridBox[{
                 {
                  StyleBox[
                   TagBox[GridBox[{
                    {"y"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                   StripOnInput->False,
                   FontWeight->Bold]}
                },
                AutoDelete->False,
                FrameStyle->RGBColor[0, 
                  Rational[2, 3], 0],
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]},
             {
              TagBox[GridBox[{
                 {
                  StyleBox[
                   TagBox[GridBox[{
                    {"z"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                   StripOnInput->False,
                   FontWeight->Bold]}
                },
                AutoDelete->False,
                FrameStyle->RGBColor[0, 
                  Rational[2, 3], 0],
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]},
             {
              TagBox[GridBox[{
                 {
                  TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"Times"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold],
                    StripOnInput->False,
                    
                    LineColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    
                    FrontFaceColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    
                    BackFaceColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    
                    GraphicsColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    FontWeight->Bold,
                    
                    FontColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`]], 
                    StyleBox[
                    TagBox[GridBox[{
                    {
                    RowBox[{"-", "1"}]}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold], 
                    StyleBox[
                    TagBox[GridBox[{
                    {"x"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold]}
                    },
                    AutoDelete->False,
                    FrameStyle->GrayLevel[0],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[1, 0.9, 0.8], {
                    RGBColor[0.88, 1, 0.88]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   "Grid"]}
                },
                AutoDelete->False,
                FrameStyle->RGBColor[0, 
                  Rational[2, 3], 0],
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]},
             {
              TagBox[GridBox[{
                 {
                  TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"Times"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold],
                    StripOnInput->False,
                    
                    LineColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    
                    FrontFaceColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    
                    BackFaceColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    
                    GraphicsColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    FontWeight->Bold,
                    
                    FontColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`]], 
                    StyleBox[
                    TagBox[GridBox[{
                    {
                    RowBox[{"-", "1"}]}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold], 
                    StyleBox[
                    TagBox[GridBox[{
                    {"y"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold]}
                    },
                    AutoDelete->False,
                    FrameStyle->GrayLevel[0],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[1, 0.9, 0.8], {
                    RGBColor[0.88, 1, 0.88]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   "Grid"]}
                },
                AutoDelete->False,
                FrameStyle->RGBColor[0, 
                  Rational[2, 3], 0],
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]},
             {
              TagBox[GridBox[{
                 {
                  TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"Times"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold],
                    StripOnInput->False,
                    
                    LineColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    
                    FrontFaceColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    
                    BackFaceColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    
                    GraphicsColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    FontWeight->Bold,
                    
                    FontColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`]], 
                    StyleBox[
                    TagBox[GridBox[{
                    {
                    RowBox[{"-", "1"}]}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold], 
                    StyleBox[
                    TagBox[GridBox[{
                    {"z"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold]}
                    },
                    AutoDelete->False,
                    FrameStyle->GrayLevel[0],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[1, 0.9, 0.8], {
                    RGBColor[0.88, 1, 0.88]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   "Grid"]}
                },
                AutoDelete->False,
                FrameStyle->RGBColor[0, 
                  Rational[2, 3], 0],
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]},
             {
              TagBox[GridBox[{
                 {
                  TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"Power"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold],
                    StripOnInput->False,
                    
                    LineColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    
                    FrontFaceColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    
                    BackFaceColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    
                    GraphicsColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    FontWeight->Bold,
                    
                    FontColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`]], 
                    StyleBox[
                    TagBox[GridBox[{
                    {"x"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold], 
                    StyleBox[
                    TagBox[GridBox[{
                    {
                    RowBox[{"-", "1"}]}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold]}
                    },
                    AutoDelete->False,
                    FrameStyle->GrayLevel[0],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[1, 0.9, 0.8], {
                    RGBColor[0.88, 1, 0.88]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   "Grid"]}
                },
                AutoDelete->False,
                FrameStyle->RGBColor[0, 
                  Rational[2, 3], 0],
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]},
             {
              TagBox[GridBox[{
                 {
                  TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"Power"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold],
                    StripOnInput->False,
                    
                    LineColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    
                    FrontFaceColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    
                    BackFaceColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    
                    GraphicsColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    FontWeight->Bold,
                    
                    FontColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`]], 
                    StyleBox[
                    TagBox[GridBox[{
                    {"y"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold], 
                    StyleBox[
                    TagBox[GridBox[{
                    {
                    RowBox[{"-", "1"}]}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold]}
                    },
                    AutoDelete->False,
                    FrameStyle->GrayLevel[0],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[1, 0.9, 0.8], {
                    RGBColor[0.88, 1, 0.88]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   "Grid"]}
                },
                AutoDelete->False,
                FrameStyle->RGBColor[0, 
                  Rational[2, 3], 0],
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]},
             {
              TagBox[GridBox[{
                 {
                  TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"Power"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold],
                    StripOnInput->False,
                    
                    LineColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    
                    FrontFaceColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    
                    BackFaceColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    
                    GraphicsColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    FontWeight->Bold,
                    
                    FontColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`]], 
                    StyleBox[
                    TagBox[GridBox[{
                    {"z"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold], 
                    StyleBox[
                    TagBox[GridBox[{
                    {
                    RowBox[{"-", "1"}]}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold]}
                    },
                    AutoDelete->False,
                    FrameStyle->GrayLevel[0],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[1, 0.9, 0.8], {
                    RGBColor[0.88, 1, 0.88]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   "Grid"]}
                },
                AutoDelete->False,
                FrameStyle->RGBColor[0, 
                  Rational[2, 3], 0],
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]}
            },
            AutoDelete->False,
            FrameStyle->RGBColor[0, 
              Rational[2, 3], 0],
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxBackground->{"Columns" -> {{
                 RGBColor[0.88, 1, 0.88]}}},
            GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
           "Grid"],
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontWeight->Bold,
          FontColor->RGBColor[0, 0, 1]]},
        {
         StyleBox[
          StyleBox[
           TagBox[GridBox[{
              {"Start"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           StripOnInput->False,
           FontWeight->Bold],
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontWeight->Bold,
          FontColor->GrayLevel[0]], 
         StyleBox[
          TagBox[GridBox[{
             {
              TagBox[GridBox[{
                 {
                  StyleBox[
                   TagBox[GridBox[{
                    {"Expr"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                   StripOnInput->False,
                   FontWeight->Bold]}
                },
                AutoDelete->False,
                FrameStyle->RGBColor[0, 
                  Rational[2, 3], 0],
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]}
            },
            AutoDelete->False,
            FrameStyle->RGBColor[0, 
              Rational[2, 3], 0],
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxBackground->{"Columns" -> {{
                 RGBColor[0.88, 1, 0.88]}}},
            GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
           "Grid"],
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontWeight->Bold,
          FontColor->RGBColor[0, 0, 1]]}
       },
       AutoDelete->False,
       FrameStyle->RGBColor[0, 0, 1],
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {
           RGBColor[1, 0.9, 0.8], {
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}
   },
   AutoDelete->False,
   FrameStyle->RGBColor[0, 
     Rational[2, 3], 0],
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[0.88, 1, 0.88]}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.841685588193446*^9, 3.841686489191524*^9, 3.8416873279791327`*^9, 
   3.841687409557972*^9, {3.8417530234102297`*^9, 3.841753031252117*^9}, 
   3.841754451700077*^9, {3.841760367218358*^9, 3.841760401673622*^9}, 
   3.911252420796282*^9, 3.9112543827111073`*^9, 3.911254646163576*^9, 
   3.911297451761372*^9, 3.912368778810218*^9, {3.912369932967946*^9, 
   3.9123699552018023`*^9}, 3.912544231061762*^9, 3.91254537449828*^9},
 CellLabel->
  "Out[479]=",ExpressionUUID->"a4cfc0d3-9f6f-495e-925b-c0084e0c0b26"]
}, Open  ]],

Cell[TextData[{
 "Fish out the non-terminals from the ",
 StyleBox["DownValues", "Code"],
 " of our grammar, ",
 StyleBox["F", "Input"],
 ":"
}], "Text",
 CellChangeTimes->{{3.84167953129498*^9, 3.841679541917779*^9}, {
  3.841753036033844*^9, 3.841753044819832*^9}, {3.912371563229581*^9, 
  3.9123715703320417`*^9}},ExpressionUUID->"00fc6a52-1e27-42d6-be8f-\
dd34b29b2151"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "nonTerminalsFromGrammar", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nonTerminalsFromGrammar", "[", "ps_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}], "&"}], "/@", 
   RowBox[{"DownValues", "[", "ps", "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"nonTerminalsFromGrammar", "[", "F", "]"}], ")"}], "//", 
  "InputForm"}]}], "Input",
 CellChangeTimes->{{3.5486700488395195`*^9, 3.548670140590694*^9}, {
   3.5486757552695203`*^9, 3.54867577428452*^9}, 3.841753056104786*^9},
 CellLabel->
  "In[480]:=",ExpressionUUID->"c8435255-caf6-40f1-af3d-12988e3b4b31"],

Cell["{Expr, FInt, FProd, FSum, FVar, Start}", "Output",
 CellChangeTimes->{
  3.841404202984797*^9, 3.841404363907819*^9, 3.841404587301454*^9, 
   3.841404744451675*^9, 3.841404847158416*^9, 3.841404998724312*^9, 
   3.8414053631210957`*^9, 3.841422364206171*^9, 3.841487793002376*^9, 
   3.84167955694561*^9, 3.841685500001581*^9, 3.841686489317182*^9, 
   3.841687328102478*^9, 3.841687410828158*^9, 3.841753057160017*^9, 
   3.841754451739359*^9, {3.841760382769202*^9, 3.841760401690503*^9}, 
   3.911252420800893*^9, 3.911254382714951*^9, 3.911254646167305*^9, 
   3.91129745176548*^9, 3.912368778813161*^9, {3.91236993297089*^9, 
   3.912369955205364*^9}, 3.912544882836878*^9, 3.912545374501378*^9},
 CellLabel->
  "Out[482]//InputForm=",ExpressionUUID->"eca7f91e-7c4c-4950-b489-\
732dad638bbb"]
}, Open  ]],

Cell["\<\
The terminals in a grammar is the complement of the non-terminals against the \
set of all symbols, which is the union of all the right-hand sides of the \
productions.\
\>", "Text",
 CellChangeTimes->{{3.5406436946496673`*^9, 3.5406436966886673`*^9}, {
   3.5486761169765205`*^9, 3.5486761759255204`*^9}, {3.5486764836945205`*^9, 
   3.5486764859375205`*^9}, 3.687638291845022*^9, {3.8412147104378443`*^9, 
   3.841214728797196*^9}, {3.8414004220921497`*^9, 
   3.841400422982233*^9}},ExpressionUUID->"7c8ace97-2057-40ce-8724-\
32a5c669c804"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "allSymbols", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"allSymbols", "[", "ps_", "]"}], ":=", 
  RowBox[{"Union", "@", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
     RowBox[{"DownValues", "[", "ps", "]"}]}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.54867021875951*^9, 3.54867031236687*^9}, {
  3.548670347458379*^9, 3.548670386442277*^9}, {3.5486757874835205`*^9, 
  3.5486757978425207`*^9}},
 CellLabel->
  "In[483]:=",ExpressionUUID->"e490d708-2abb-4def-9ce8-8a6ed2abc2ba"],

Cell[TextData[{
 "In our pretty display for ",
 StyleBox["allSymbols", "Input"],
 " via Jacquard\[CloseCurlyQuote]s ",
 StyleBox["gridExpression", "Input"],
 ", ",
 StyleBox["Symbols", "Input"],
 " are in a purple background and numbers are in a light-blue background; ",
 StyleBox["gridExpression", "Input"],
 " is a visual version of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s built-in ",
 StyleBox["FullForm", "Input"],
 ", so it shows the ",
 StyleBox["Head", "Input"],
 " ",
 StyleBox["List", "Input"],
 " explicitly, whereas ",
 StyleBox["gridRules", "Input"],
 " above exhibits lists as colored boxes without the explicit ",
 StyleBox["Head", "Input"],
 " ",
 StyleBox["List", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.841249439985693*^9, 3.841249483153432*^9}, {
   3.841254692841628*^9, 3.841254736293911*^9}, {3.841254769197891*^9, 
   3.841254770944068*^9}, {3.841400446486301*^9, 3.8414004608979816`*^9}, {
   3.8416795748258047`*^9, 3.841679591441864*^9}, {3.841679623893525*^9, 
   3.841679652615984*^9}, {3.841679971798435*^9, 3.841679974601063*^9}, {
   3.841760606975754*^9, 3.841760623106503*^9}, {3.911252895830819*^9, 
   3.911252915400495*^9}, 
   3.9123716085935802`*^9},ExpressionUUID->"c17595f9-8017-4fba-be6a-\
ee085fcc82e6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"allSymbols", "[", "F", "]"}], "//", "gridExpression"}]], "Input",
 CellChangeTimes->{{3.8412474472123547`*^9, 3.841247458134458*^9}, {
  3.8412476326682367`*^9, 3.84124764881878*^9}, {3.841679680864891*^9, 
  3.841679681600891*^9}},
 CellLabel->
  "In[485]:=",ExpressionUUID->"811aeb9a-9d90-4324-948e-bac779c8d6de"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["Expr",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.94, 0.88, 0.94]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["FInt",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.94, 0.88, 0.94]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["FProd",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.94, 0.88, 0.94]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["FSum",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.94, 0.88, 0.94]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["FVar",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.94, 0.88, 0.94]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["Plus",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.94, 0.88, 0.94]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["RandomInteger",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.94, 0.88, 0.94]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["Times",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.94, 0.88, 0.94]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         StyleBox["List",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.94, 0.88, 0.94]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {
             StyleBox["Power",
              StripOnInput->False,
              FontWeight->Bold]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{
                RGBColor[0.94, 0.88, 0.94]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"], 
         TagBox[GridBox[{
            {
             StyleBox["x",
              StripOnInput->False,
              FontWeight->Bold]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{
                RGBColor[0.94, 0.88, 0.94]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]},
        {"\<\"\"\>", 
         TagBox[GridBox[{
            {
             StyleBox[
              RowBox[{"-", "1"}],
              StripOnInput->False,
              FontWeight->Bold]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{
                RGBColor[0.87, 0.94, 1]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {
           RGBColor[1, 0.9, 0.8], {
            RGBColor[0.88, 1, 0.88]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> False},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {
             StyleBox["Times",
              StripOnInput->False,
              FontWeight->Bold]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{
                RGBColor[0.94, 0.88, 0.94]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"], 
         TagBox[GridBox[{
            {
             StyleBox[
              RowBox[{"-", "1"}],
              StripOnInput->False,
              FontWeight->Bold]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{
                RGBColor[0.87, 0.94, 1]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]},
        {"\<\"\"\>", 
         TagBox[GridBox[{
            {
             StyleBox["x",
              StripOnInput->False,
              FontWeight->Bold]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{
                RGBColor[0.94, 0.88, 0.94]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {
           RGBColor[1, 0.9, 0.8], {
            RGBColor[0.88, 1, 0.88]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> False},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["x",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.94, 0.88, 0.94]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {
             StyleBox["Power",
              StripOnInput->False,
              FontWeight->Bold]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{
                RGBColor[0.94, 0.88, 0.94]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"], 
         TagBox[GridBox[{
            {
             StyleBox["y",
              StripOnInput->False,
              FontWeight->Bold]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{
                RGBColor[0.94, 0.88, 0.94]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]},
        {"\<\"\"\>", 
         TagBox[GridBox[{
            {
             StyleBox[
              RowBox[{"-", "1"}],
              StripOnInput->False,
              FontWeight->Bold]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{
                RGBColor[0.87, 0.94, 1]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {
           RGBColor[1, 0.9, 0.8], {
            RGBColor[0.88, 1, 0.88]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> False},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {
             StyleBox["Times",
              StripOnInput->False,
              FontWeight->Bold]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{
                RGBColor[0.94, 0.88, 0.94]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"], 
         TagBox[GridBox[{
            {
             StyleBox[
              RowBox[{"-", "1"}],
              StripOnInput->False,
              FontWeight->Bold]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{
                RGBColor[0.87, 0.94, 1]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]},
        {"\<\"\"\>", 
         TagBox[GridBox[{
            {
             StyleBox["y",
              StripOnInput->False,
              FontWeight->Bold]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{
                RGBColor[0.94, 0.88, 0.94]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {
           RGBColor[1, 0.9, 0.8], {
            RGBColor[0.88, 1, 0.88]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> False},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["y",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.94, 0.88, 0.94]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {
             StyleBox["Power",
              StripOnInput->False,
              FontWeight->Bold]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{
                RGBColor[0.94, 0.88, 0.94]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"], 
         TagBox[GridBox[{
            {
             StyleBox["z",
              StripOnInput->False,
              FontWeight->Bold]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{
                RGBColor[0.94, 0.88, 0.94]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]},
        {"\<\"\"\>", 
         TagBox[GridBox[{
            {
             StyleBox[
              RowBox[{"-", "1"}],
              StripOnInput->False,
              FontWeight->Bold]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{
                RGBColor[0.87, 0.94, 1]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {
           RGBColor[1, 0.9, 0.8], {
            RGBColor[0.88, 1, 0.88]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> False},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {
             StyleBox["Times",
              StripOnInput->False,
              FontWeight->Bold]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{
                RGBColor[0.94, 0.88, 0.94]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"], 
         TagBox[GridBox[{
            {
             StyleBox[
              RowBox[{"-", "1"}],
              StripOnInput->False,
              FontWeight->Bold]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{
                RGBColor[0.87, 0.94, 1]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]},
        {"\<\"\"\>", 
         TagBox[GridBox[{
            {
             StyleBox["z",
              StripOnInput->False,
              FontWeight->Bold]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {{
                RGBColor[0.94, 0.88, 0.94]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {
           RGBColor[1, 0.9, 0.8], {
            RGBColor[0.88, 1, 0.88]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> False},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"\<\"\"\>", 
     TagBox[GridBox[{
        {
         StyleBox["z",
          StripOnInput->False,
          FontWeight->Bold]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.94, 0.88, 0.94]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {
       RGBColor[1, 0.9, 0.8], {
        RGBColor[0.88, 1, 0.88]}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> False},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.841404203018461*^9, 3.841404363944193*^9, 3.841404587341885*^9, 
   3.841404744489711*^9, 3.841404847201343*^9, 3.8414049987623262`*^9, 
   3.841405363166356*^9, 3.841422364242608*^9, 3.841487793055992*^9, {
   3.841679676876157*^9, 3.841679682309993*^9}, 3.841679884136066*^9, 
   3.841685500117898*^9, 3.841685651960826*^9, 3.841686489418437*^9, 
   3.841687328207452*^9, 3.8416874118494253`*^9, 3.841753087813986*^9, 
   3.8417544517958612`*^9, {3.841760382810637*^9, 3.8417604017277412`*^9}, 
   3.9112524208256817`*^9, 3.9112543829623547`*^9, 3.911254646182377*^9, 
   3.911297451781151*^9, 3.9123687788259087`*^9, {3.91236993298403*^9, 
   3.9123699552217617`*^9}, 3.912544907864029*^9, 3.912545374513874*^9},
 CellLabel->
  "Out[485]=",ExpressionUUID->"6e08a6cf-4a04-4310-af38-47c896247415"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s built-in ",
 StyleBox["InputForm", "Input"],
 " is another way to visualize data. "
}], "Text",
 CellChangeTimes->{{3.841247472386118*^9, 3.841247477887148*^9}, {
  3.841247605029209*^9, 3.841247655559569*^9}, {3.8412493819783573`*^9, 
  3.841249389078498*^9}, {3.8412547797065783`*^9, 3.841254798886444*^9}, {
  3.841400489192877*^9, 3.8414004960764713`*^9}, {3.841679701963686*^9, 
  3.841679713399848*^9}},ExpressionUUID->"119cf89d-1777-4b86-90bd-\
15d200583ce2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"allSymbols", "[", "F", "]"}], "//", "InputForm"}]], "Input",
 CellChangeTimes->{{3.8412494162542553`*^9, 3.841249429158533*^9}, 
   3.8416797177392883`*^9},
 CellLabel->
  "In[486]:=",ExpressionUUID->"e5ad9465-2130-4327-af87-803ec2800b75"],

Cell["\<\
{Expr, FInt, FProd, FSum, FVar, Plus, RandomInteger, Times, 
 x^(-1), -x, x, y^(-1), -y, y, z^(-1), -z, z}\
\>", "Output",
 CellChangeTimes->{
  3.841404211667523*^9, 3.841404363964327*^9, 3.8414045873666153`*^9, 
   3.841404744515789*^9, 3.841404847229362*^9, 3.841404998788783*^9, 
   3.841405363194268*^9, 3.841422364266972*^9, 3.841487793102005*^9, 
   3.841679718365655*^9, 3.8416798841960583`*^9, 3.841685500217772*^9, 
   3.841685654567358*^9, 3.841686489484223*^9, 3.841687328267655*^9, 
   3.841687412030109*^9, 3.841753093956361*^9, 3.841754451828156*^9, {
   3.841760382831168*^9, 3.841760401743548*^9}, 3.911252420830181*^9, 
   3.911254382966558*^9, 3.911254646185231*^9, 3.911297451789563*^9, 
   3.912368778828669*^9, {3.912369932986446*^9, 3.912369955230791*^9}, 
   3.912544917346966*^9, 3.912545374516726*^9},
 CellLabel->
  "Out[486]//InputForm=",ExpressionUUID->"ffe9662d-86c9-4fa2-8af3-\
50d7810e8d00"]
}, Open  ]],

Cell[TextData[{
 "Here are the terminals from our example grammar, ",
 StyleBox["F", "Input"],
 ", prettified by ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s automatic typesetting."
}], "Text",
 CellChangeTimes->{{3.841679837874045*^9, 3.841679847664761*^9}, {
  3.841679916629385*^9, 3.841679935693365*^9}, {3.841680004009923*^9, 
  3.841680009089197*^9}, {3.912371760473584*^9, 
  3.912371769271294*^9}},ExpressionUUID->"27dd5a6a-6038-466a-af06-\
59fa93ac1e75"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "terminalsFromGrammar", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"terminalsFromGrammar", "[", "ps_", "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Complement", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"allSymbols", " ", "@", " ", "ps"}], ",", "\[IndentingNewLine]", 
    RowBox[{"nonTerminalsFromGrammar", " ", "@", " ", "ps"}]}], "]"}]}], "\n", 
 RowBox[{"(", 
  RowBox[{"T", "=", 
   RowBox[{"terminalsFromGrammar", " ", "@", " ", "F"}]}], ")"}]}], "Input",
 CellChangeTimes->{{3.54064343798347*^9, 3.540643488938565*^9}, {
  3.5407349763478427`*^9, 3.5407349769948425`*^9}, {3.548670184405075*^9, 
  3.548670193999034*^9}, {3.5486758035395203`*^9, 3.5486758055945206`*^9}, {
  3.8416798586430807`*^9, 3.8416799086990347`*^9}},
 CellLabel->
  "In[487]:=",ExpressionUUID->"e1a30d71-ec62-4d9d-81de-e0234deb3007"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Plus", ",", "RandomInteger", ",", "Times", ",", 
   FractionBox["1", "x"], ",", 
   RowBox[{"-", "x"}], ",", "x", ",", 
   FractionBox["1", "y"], ",", 
   RowBox[{"-", "y"}], ",", "y", ",", 
   FractionBox["1", "z"], ",", 
   RowBox[{"-", "z"}], ",", "z"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8414042117267437`*^9, 3.841404364007596*^9, 3.841404587410448*^9, 
   3.841404744557275*^9, 3.8414048472768173`*^9, 3.841404998835649*^9, 
   3.841405363242601*^9, 3.841422364306138*^9, 3.841487793152171*^9, {
   3.8416798690600977`*^9, 3.841679909578326*^9}, 3.841685500300486*^9, 
   3.841685660085472*^9, 3.8416864895675364`*^9, 3.84168732831959*^9, 
   3.841687412166069*^9, 3.841753101126135*^9, 3.84175445186147*^9, {
   3.841760382854842*^9, 3.84176040176408*^9}, 3.911252420844265*^9, 
   3.9112543829769487`*^9, 3.911254646187809*^9, 3.911297451792533*^9, 
   3.912368778833762*^9, {3.912369932991805*^9, 3.912369955235983*^9}, 
   3.9125449242369967`*^9, 3.912545374521007*^9},
 CellLabel->
  "Out[489]=",ExpressionUUID->"609dbbe5-d0f9-43a2-ba94-9b2ec45bf69c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ANTI-PARSING: SYNTAX-DRIVEN TRAVESTIES", "Chapter",
 CellChangeTimes->{{3.540829537690338*^9, 3.5408295412993383`*^9}, {
  3.5486758191045203`*^9, 3.54867582164752*^9}, {3.5486818895421095`*^9, 
  3.5486818915981092`*^9}, {3.548758346109267*^9, 3.548758351775592*^9}, {
  3.549017250041628*^9, 
  3.549017253069344*^9}},ExpressionUUID->"de58f9e4-ce80-4697-a283-\
a7dce78e64b5"],

Cell[CellGroupData[{

Cell["Inject Probabilities into the Grammar", "Section",
 CellChangeTimes->{{3.540731388980681*^9, 3.5407314162944117`*^9}, {
  3.54867805339132*^9, 
  3.548678060463027*^9}},ExpressionUUID->"ac7cd585-7ee7-4b0d-b074-\
520964b4683f"],

Cell[TextData[{
 "Transform each alternative (sequence of terms) into a list of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " ",
 StyleBox["Rules", "Input"],
 ", one rule for the probability of choosing the alternative in a travesty \
and another rule for the original alternative itself. Generate the \
probabilities with a function that maps the alternatives to a zippable list. \
The orders of the alternatives and of the probabilities are important only \
for ",
 StyleBox["Zip", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.54867625681752*^9, 3.54867635173252*^9}, {
  3.548755911159999*^9, 3.5487559512670183`*^9}, {3.6234090247367153`*^9, 
  3.623409025128632*^9}, {3.623816307400713*^9, 3.623816341399294*^9}, {
  3.841214791868857*^9, 3.8412147955815687`*^9}, {3.841254841516295*^9, 
  3.841254894685729*^9}, {3.8414006178493357`*^9, 3.841400641566272*^9}, {
  3.841680037799033*^9, 3.841680063418792*^9}, {3.841753118079027*^9, 
  3.841753121601081*^9}, {3.911252973481763*^9, 3.911252974909865*^9}, {
  3.9123718029843693`*^9, 3.912371824701627*^9}, {3.912544946034012*^9, 
  3.9125449560190277`*^9}},ExpressionUUID->"0cf3ea91-98ba-4f77-bb8a-\
baefeb991566"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "injectGenerationProbabilities", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"injectGenerationProbabilities", "[", "\[IndentingNewLine]", 
     RowBox[{
     "grammar_", ",", "\[IndentingNewLine]", "probsFromAlternatives_"}], 
     "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"newTable", ",", 
        RowBox[{"nonTerminals", "=", 
         RowBox[{"nonTerminalsFromGrammar", "@", "grammar"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Scan", "[", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"Scan", " ", "is", " ", "like", " ", "Map"}], ",", " ", 
          RowBox[{
           RowBox[{"but", " ", "just", " ", "for", " ", "side"}], "-", 
           "effects"}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{"nonTerminal", ",", "\[IndentingNewLine]", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"alternatives", "=", 
                RowBox[{"grammar", "[", "nonTerminal", "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"probabilities", "=", 
                RowBox[{"probsFromAlternatives", "[", 
                 RowBox[{"grammar", "[", "nonTerminal", "]"}], "]"}]}]}], 
              "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"newTable", "[", "nonTerminal", "]"}], "=", 
              RowBox[{"(*", " ", 
               RowBox[{"side", "-", 
                RowBox[{"effect", " ", "this", " ", "definition"}]}], " ", 
               "*)"}], "\[IndentingNewLine]", 
              RowBox[{"Zip", "[", 
               RowBox[{
               "probabilities", ",", " ", "alternatives", ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Function", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"prob", ",", "alt"}], "}"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"\"\<probability\>\"", "\[Rule]", "prob"}], ",", 
                    RowBox[{"\"\<alternative\>\"", "\[Rule]", "alt"}]}], 
                   "}"}]}], "]"}]}], "]"}]}]}], "]"}]}], "]"}], ",", 
         "\[IndentingNewLine]", "nonTerminals"}], "]"}], ";", 
       RowBox[{"(*", " ", 
        RowBox[{"scan", " ", "over", " ", "this", " ", "list"}], " ", "*)"}], 
       "\[IndentingNewLine]", "newTable"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"return", " ", "the", " ", "side"}], "-", 
    RowBox[{"effected", " ", "table"}]}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.540731467557538*^9, 3.540731508540636*^9}, {
   3.540731557278509*^9, 3.540731621505931*^9}, {3.5407317089566755`*^9, 
   3.54073171370315*^9}, {3.540731776187398*^9, 3.5407318026760464`*^9}, {
   3.548584588104154*^9, 3.5485846003035016`*^9}, 3.5486657133317456`*^9, {
   3.5486718596857347`*^9, 3.548671976037735*^9}, {3.5486720145157347`*^9, 
   3.5486721179824276`*^9}, {3.5486721922268515`*^9, 3.548672202194848*^9}, {
   3.5486722774783754`*^9, 3.548672322376865*^9}, {3.548672383084935*^9, 
   3.5486724845220776`*^9}, {3.548672899767598*^9, 3.548672917728394*^9}, {
   3.5486731430849276`*^9, 3.5486731696055794`*^9}, {3.548673200645683*^9, 
   3.5486732016397824`*^9}, {3.548673257762394*^9, 3.5486732599136095`*^9}, 
   3.5486732941720343`*^9, {3.5486762166025205`*^9, 3.5486762191545205`*^9}, {
   3.549634458734583*^9, 3.5496344606327734`*^9}, {3.841217566468073*^9, 
   3.8412175743786488`*^9}, {3.841400661245524*^9, 3.8414007534356947`*^9}, 
   3.8414040831855927`*^9},
 CellLabel->
  "In[490]:=",ExpressionUUID->"32f333a9-f192-4fee-ac40-c53289832f66"],

Cell["\<\
The following function assigns equal probabilities to every element of a \
list. It\[CloseCurlyQuote]s the default. Use something else if you have \
better estimates of appropriate probabilities for travesty generation (our \
travesties for Wff-n-Proof, in another document, needed non-default \
probabilities to generate sufficient variety).\
\>", "Text",
 CellChangeTimes->{{3.548665705572302*^9, 3.5486657087594843`*^9}, {
  3.841254912124318*^9, 3.841254917612651*^9}, {3.841400761322077*^9, 
  3.841400832857114*^9}, {3.8416853789879227`*^9, 3.84168540345436*^9}, {
  3.841685457985376*^9, 3.8416854673575077`*^9}, {3.912371849519009*^9, 
  3.9123718804097233`*^9}},ExpressionUUID->"8335e098-b38b-472e-a387-\
e02f2bb9ccad"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "equiProbabilities", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"equiProbabilities", "[", "list_List", "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"l", "=", 
      RowBox[{"Length", "@", "list"}]}], "}"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"N", "[", 
       FractionBox["1", "l"], "]"}], ",", 
      RowBox[{"{", "l", "}"}]}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.5407321711368885`*^9, 3.540732228984673*^9}, {
   3.5408232585284705`*^9, 3.5408232636479826`*^9}, {3.5485846114508505`*^9, 
   3.548584620994145*^9}, 3.841685409259494*^9},
 CellLabel->
  "In[492]:=",ExpressionUUID->"f253462d-e344-472c-b1c0-1fbe75de0abd"],

Cell[TextData[{
 "Here is the grammar, ",
 StyleBox["F", "Input"],
 ", ",
 StyleBox["probabilized",
  FontSlant->"Italic"],
 ":"
}], "Text",
 CellChangeTimes->{{3.841753161579142*^9, 
  3.841753172382338*^9}},ExpressionUUID->"833b37b5-1ba7-4408-9624-\
758d1eb94ea9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"FProbabilized", "=", 
    RowBox[{"injectGenerationProbabilities", "[", 
     RowBox[{"F", ",", "\[IndentingNewLine]", "equiProbabilities"}], 
     "\[IndentingNewLine]", "]"}]}], ")"}], "//", "visGrammar"}]], "Input",
 CellChangeTimes->{{3.8415892977128077`*^9, 3.841589309985021*^9}, {
  3.841589361306075*^9, 3.841589376191196*^9}, {3.8416104169330273`*^9, 
  3.841610563359454*^9}, {3.841610593958315*^9, 3.841610602809819*^9}, {
  3.841610672436894*^9, 3.841610681883857*^9}, {3.8416856915206013`*^9, 
  3.841685698452063*^9}},
 CellLabel->
  "In[494]:=",ExpressionUUID->"2ee4e8a4-ea40-4970-a082-29c1733ad41b"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          StyleBox[
           TagBox[GridBox[{
              {"Expr"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           StripOnInput->False,
           FontWeight->Bold],
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontWeight->Bold,
          FontColor->GrayLevel[0]], 
         StyleBox[
          TagBox[GridBox[{
             {
              TagBox[GridBox[{
                 {
                  TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"probability\"\>"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FrontFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    BackFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    GraphicsColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FontWeight->Bold,
                    FontColor->RGBColor[
                    Rational[2, 3], 0, 0]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontWeight->Bold,
                    FontColor->GrayLevel[0]], 
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"0.25`"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold],
                    StripOnInput->False,
                    LineColor->RGBColor[0, 0, 1],
                    FrontFaceColor->RGBColor[0, 0, 1],
                    BackFaceColor->RGBColor[0, 0, 1],
                    GraphicsColor->RGBColor[0, 0, 1],
                    FontWeight->Bold,
                    FontColor->RGBColor[0, 0, 1]]},
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"alternative\"\>"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FrontFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    BackFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    GraphicsColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FontWeight->Bold,
                    FontColor->RGBColor[
                    Rational[2, 3], 0, 0]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontWeight->Bold,
                    FontColor->GrayLevel[0]], 
                    StyleBox[
                    TagBox[GridBox[{
                    {
                    StyleBox[
                    TagBox[GridBox[{
                    {"FSum"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold]}
                    },
                    AutoDelete->False,
                    FrameStyle->RGBColor[0, 
                    Rational[2, 3], 0],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[0, 0, 1],
                    FrontFaceColor->RGBColor[0, 0, 1],
                    BackFaceColor->RGBColor[0, 0, 1],
                    GraphicsColor->RGBColor[0, 0, 1],
                    FontWeight->Bold,
                    FontColor->RGBColor[0, 0, 1]]}
                    },
                    AutoDelete->False,
                    FrameStyle->RGBColor[0, 0, 1],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[1, 0.9, 0.8], {
                    RGBColor[1, 1, 0.85]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   "Grid"]}
                },
                AutoDelete->False,
                FrameStyle->RGBColor[0, 
                  Rational[2, 3], 0],
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]},
             {
              TagBox[GridBox[{
                 {
                  TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"probability\"\>"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FrontFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    BackFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    GraphicsColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FontWeight->Bold,
                    FontColor->RGBColor[
                    Rational[2, 3], 0, 0]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontWeight->Bold,
                    FontColor->GrayLevel[0]], 
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"0.25`"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold],
                    StripOnInput->False,
                    LineColor->RGBColor[0, 0, 1],
                    FrontFaceColor->RGBColor[0, 0, 1],
                    BackFaceColor->RGBColor[0, 0, 1],
                    GraphicsColor->RGBColor[0, 0, 1],
                    FontWeight->Bold,
                    FontColor->RGBColor[0, 0, 1]]},
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"alternative\"\>"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FrontFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    BackFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    GraphicsColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FontWeight->Bold,
                    FontColor->RGBColor[
                    Rational[2, 3], 0, 0]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontWeight->Bold,
                    FontColor->GrayLevel[0]], 
                    StyleBox[
                    TagBox[GridBox[{
                    {
                    StyleBox[
                    TagBox[GridBox[{
                    {"FProd"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold]}
                    },
                    AutoDelete->False,
                    FrameStyle->RGBColor[0, 
                    Rational[2, 3], 0],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[0, 0, 1],
                    FrontFaceColor->RGBColor[0, 0, 1],
                    BackFaceColor->RGBColor[0, 0, 1],
                    GraphicsColor->RGBColor[0, 0, 1],
                    FontWeight->Bold,
                    FontColor->RGBColor[0, 0, 1]]}
                    },
                    AutoDelete->False,
                    FrameStyle->RGBColor[0, 0, 1],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[1, 0.9, 0.8], {
                    RGBColor[1, 1, 0.85]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   "Grid"]}
                },
                AutoDelete->False,
                FrameStyle->RGBColor[0, 
                  Rational[2, 3], 0],
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]},
             {
              TagBox[GridBox[{
                 {
                  TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"probability\"\>"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FrontFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    BackFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    GraphicsColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FontWeight->Bold,
                    FontColor->RGBColor[
                    Rational[2, 3], 0, 0]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontWeight->Bold,
                    FontColor->GrayLevel[0]], 
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"0.25`"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold],
                    StripOnInput->False,
                    LineColor->RGBColor[0, 0, 1],
                    FrontFaceColor->RGBColor[0, 0, 1],
                    BackFaceColor->RGBColor[0, 0, 1],
                    GraphicsColor->RGBColor[0, 0, 1],
                    FontWeight->Bold,
                    FontColor->RGBColor[0, 0, 1]]},
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"alternative\"\>"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FrontFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    BackFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    GraphicsColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FontWeight->Bold,
                    FontColor->RGBColor[
                    Rational[2, 3], 0, 0]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontWeight->Bold,
                    FontColor->GrayLevel[0]], 
                    StyleBox[
                    TagBox[GridBox[{
                    {
                    StyleBox[
                    TagBox[GridBox[{
                    {"FVar"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold]}
                    },
                    AutoDelete->False,
                    FrameStyle->RGBColor[0, 
                    Rational[2, 3], 0],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[0, 0, 1],
                    FrontFaceColor->RGBColor[0, 0, 1],
                    BackFaceColor->RGBColor[0, 0, 1],
                    GraphicsColor->RGBColor[0, 0, 1],
                    FontWeight->Bold,
                    FontColor->RGBColor[0, 0, 1]]}
                    },
                    AutoDelete->False,
                    FrameStyle->RGBColor[0, 0, 1],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[1, 0.9, 0.8], {
                    RGBColor[1, 1, 0.85]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   "Grid"]}
                },
                AutoDelete->False,
                FrameStyle->RGBColor[0, 
                  Rational[2, 3], 0],
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]},
             {
              TagBox[GridBox[{
                 {
                  TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"probability\"\>"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FrontFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    BackFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    GraphicsColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FontWeight->Bold,
                    FontColor->RGBColor[
                    Rational[2, 3], 0, 0]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontWeight->Bold,
                    FontColor->GrayLevel[0]], 
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"0.25`"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold],
                    StripOnInput->False,
                    LineColor->RGBColor[0, 0, 1],
                    FrontFaceColor->RGBColor[0, 0, 1],
                    BackFaceColor->RGBColor[0, 0, 1],
                    GraphicsColor->RGBColor[0, 0, 1],
                    FontWeight->Bold,
                    FontColor->RGBColor[0, 0, 1]]},
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"alternative\"\>"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FrontFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    BackFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    GraphicsColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FontWeight->Bold,
                    FontColor->RGBColor[
                    Rational[2, 3], 0, 0]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontWeight->Bold,
                    FontColor->GrayLevel[0]], 
                    StyleBox[
                    TagBox[GridBox[{
                    {
                    StyleBox[
                    TagBox[GridBox[{
                    {"FInt"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold]}
                    },
                    AutoDelete->False,
                    FrameStyle->RGBColor[0, 
                    Rational[2, 3], 0],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[0, 0, 1],
                    FrontFaceColor->RGBColor[0, 0, 1],
                    BackFaceColor->RGBColor[0, 0, 1],
                    GraphicsColor->RGBColor[0, 0, 1],
                    FontWeight->Bold,
                    FontColor->RGBColor[0, 0, 1]]}
                    },
                    AutoDelete->False,
                    FrameStyle->RGBColor[0, 0, 1],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[1, 0.9, 0.8], {
                    RGBColor[1, 1, 0.85]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   "Grid"]}
                },
                AutoDelete->False,
                FrameStyle->RGBColor[0, 
                  Rational[2, 3], 0],
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]}
            },
            AutoDelete->False,
            FrameStyle->RGBColor[0, 
              Rational[2, 3], 0],
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxBackground->{"Columns" -> {{
                 RGBColor[0.88, 1, 0.88]}}},
            GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
           "Grid"],
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontWeight->Bold,
          FontColor->RGBColor[0, 0, 1]]},
        {
         StyleBox[
          StyleBox[
           TagBox[GridBox[{
              {"FInt"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           StripOnInput->False,
           FontWeight->Bold],
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontWeight->Bold,
          FontColor->GrayLevel[0]], 
         StyleBox[
          TagBox[GridBox[{
             {
              TagBox[GridBox[{
                 {
                  TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"probability\"\>"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FrontFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    BackFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    GraphicsColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FontWeight->Bold,
                    FontColor->RGBColor[
                    Rational[2, 3], 0, 0]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontWeight->Bold,
                    FontColor->GrayLevel[0]], 
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"1.`"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold],
                    StripOnInput->False,
                    LineColor->RGBColor[0, 0, 1],
                    FrontFaceColor->RGBColor[0, 0, 1],
                    BackFaceColor->RGBColor[0, 0, 1],
                    GraphicsColor->RGBColor[0, 0, 1],
                    FontWeight->Bold,
                    FontColor->RGBColor[0, 0, 1]]},
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"alternative\"\>"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FrontFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    BackFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    GraphicsColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FontWeight->Bold,
                    FontColor->RGBColor[
                    Rational[2, 3], 0, 0]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontWeight->Bold,
                    FontColor->GrayLevel[0]], 
                    StyleBox[
                    TagBox[GridBox[{
                    {
                    StyleBox[
                    TagBox[GridBox[{
                    {"RandomInteger"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold]}
                    },
                    AutoDelete->False,
                    FrameStyle->RGBColor[0, 
                    Rational[2, 3], 0],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[0, 0, 1],
                    FrontFaceColor->RGBColor[0, 0, 1],
                    BackFaceColor->RGBColor[0, 0, 1],
                    GraphicsColor->RGBColor[0, 0, 1],
                    FontWeight->Bold,
                    FontColor->RGBColor[0, 0, 1]]}
                    },
                    AutoDelete->False,
                    FrameStyle->RGBColor[0, 0, 1],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[1, 0.9, 0.8], {
                    RGBColor[1, 1, 0.85]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   "Grid"]}
                },
                AutoDelete->False,
                FrameStyle->RGBColor[0, 
                  Rational[2, 3], 0],
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]}
            },
            AutoDelete->False,
            FrameStyle->RGBColor[0, 
              Rational[2, 3], 0],
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxBackground->{"Columns" -> {{
                 RGBColor[0.88, 1, 0.88]}}},
            GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
           "Grid"],
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontWeight->Bold,
          FontColor->RGBColor[0, 0, 1]]},
        {
         StyleBox[
          StyleBox[
           TagBox[GridBox[{
              {"FProd"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           StripOnInput->False,
           FontWeight->Bold],
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontWeight->Bold,
          FontColor->GrayLevel[0]], 
         StyleBox[
          TagBox[GridBox[{
             {
              TagBox[GridBox[{
                 {
                  TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"probability\"\>"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FrontFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    BackFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    GraphicsColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FontWeight->Bold,
                    FontColor->RGBColor[
                    Rational[2, 3], 0, 0]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontWeight->Bold,
                    FontColor->GrayLevel[0]], 
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"1.`"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold],
                    StripOnInput->False,
                    LineColor->RGBColor[0, 0, 1],
                    FrontFaceColor->RGBColor[0, 0, 1],
                    BackFaceColor->RGBColor[0, 0, 1],
                    GraphicsColor->RGBColor[0, 0, 1],
                    FontWeight->Bold,
                    FontColor->RGBColor[0, 0, 1]]},
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"alternative\"\>"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FrontFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    BackFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    GraphicsColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FontWeight->Bold,
                    FontColor->RGBColor[
                    Rational[2, 3], 0, 0]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontWeight->Bold,
                    FontColor->GrayLevel[0]], 
                    StyleBox[
                    TagBox[GridBox[{
                    {
                    StyleBox[
                    TagBox[GridBox[{
                    {"Times"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold]},
                    {
                    StyleBox[
                    TagBox[GridBox[{
                    {"Expr"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold]},
                    {
                    StyleBox[
                    TagBox[GridBox[{
                    {"Expr"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold]}
                    },
                    AutoDelete->False,
                    FrameStyle->RGBColor[0, 
                    Rational[2, 3], 0],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[0, 0, 1],
                    FrontFaceColor->RGBColor[0, 0, 1],
                    BackFaceColor->RGBColor[0, 0, 1],
                    GraphicsColor->RGBColor[0, 0, 1],
                    FontWeight->Bold,
                    FontColor->RGBColor[0, 0, 1]]}
                    },
                    AutoDelete->False,
                    FrameStyle->RGBColor[0, 0, 1],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[1, 0.9, 0.8], {
                    RGBColor[1, 1, 0.85]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   "Grid"]}
                },
                AutoDelete->False,
                FrameStyle->RGBColor[0, 
                  Rational[2, 3], 0],
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]}
            },
            AutoDelete->False,
            FrameStyle->RGBColor[0, 
              Rational[2, 3], 0],
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxBackground->{"Columns" -> {{
                 RGBColor[0.88, 1, 0.88]}}},
            GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
           "Grid"],
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontWeight->Bold,
          FontColor->RGBColor[0, 0, 1]]},
        {
         StyleBox[
          StyleBox[
           TagBox[GridBox[{
              {"FSum"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           StripOnInput->False,
           FontWeight->Bold],
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontWeight->Bold,
          FontColor->GrayLevel[0]], 
         StyleBox[
          TagBox[GridBox[{
             {
              TagBox[GridBox[{
                 {
                  TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"probability\"\>"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FrontFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    BackFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    GraphicsColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FontWeight->Bold,
                    FontColor->RGBColor[
                    Rational[2, 3], 0, 0]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontWeight->Bold,
                    FontColor->GrayLevel[0]], 
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"1.`"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold],
                    StripOnInput->False,
                    LineColor->RGBColor[0, 0, 1],
                    FrontFaceColor->RGBColor[0, 0, 1],
                    BackFaceColor->RGBColor[0, 0, 1],
                    GraphicsColor->RGBColor[0, 0, 1],
                    FontWeight->Bold,
                    FontColor->RGBColor[0, 0, 1]]},
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"alternative\"\>"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FrontFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    BackFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    GraphicsColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FontWeight->Bold,
                    FontColor->RGBColor[
                    Rational[2, 3], 0, 0]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontWeight->Bold,
                    FontColor->GrayLevel[0]], 
                    StyleBox[
                    TagBox[GridBox[{
                    {
                    StyleBox[
                    TagBox[GridBox[{
                    {"Plus"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold]},
                    {
                    StyleBox[
                    TagBox[GridBox[{
                    {"Expr"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold]},
                    {
                    StyleBox[
                    TagBox[GridBox[{
                    {"Expr"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold]}
                    },
                    AutoDelete->False,
                    FrameStyle->RGBColor[0, 
                    Rational[2, 3], 0],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[0, 0, 1],
                    FrontFaceColor->RGBColor[0, 0, 1],
                    BackFaceColor->RGBColor[0, 0, 1],
                    GraphicsColor->RGBColor[0, 0, 1],
                    FontWeight->Bold,
                    FontColor->RGBColor[0, 0, 1]]}
                    },
                    AutoDelete->False,
                    FrameStyle->RGBColor[0, 0, 1],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[1, 0.9, 0.8], {
                    RGBColor[1, 1, 0.85]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   "Grid"]}
                },
                AutoDelete->False,
                FrameStyle->RGBColor[0, 
                  Rational[2, 3], 0],
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]}
            },
            AutoDelete->False,
            FrameStyle->RGBColor[0, 
              Rational[2, 3], 0],
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxBackground->{"Columns" -> {{
                 RGBColor[0.88, 1, 0.88]}}},
            GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
           "Grid"],
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontWeight->Bold,
          FontColor->RGBColor[0, 0, 1]]},
        {
         StyleBox[
          StyleBox[
           TagBox[GridBox[{
              {"FVar"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           StripOnInput->False,
           FontWeight->Bold],
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontWeight->Bold,
          FontColor->GrayLevel[0]], 
         StyleBox[
          TagBox[GridBox[{
             {
              TagBox[GridBox[{
                 {
                  TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"probability\"\>"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FrontFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    BackFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    GraphicsColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FontWeight->Bold,
                    FontColor->RGBColor[
                    Rational[2, 3], 0, 0]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontWeight->Bold,
                    FontColor->GrayLevel[0]], 
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"0.1111111111111111`"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold],
                    StripOnInput->False,
                    LineColor->RGBColor[0, 0, 1],
                    FrontFaceColor->RGBColor[0, 0, 1],
                    BackFaceColor->RGBColor[0, 0, 1],
                    GraphicsColor->RGBColor[0, 0, 1],
                    FontWeight->Bold,
                    FontColor->RGBColor[0, 0, 1]]},
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"alternative\"\>"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FrontFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    BackFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    GraphicsColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FontWeight->Bold,
                    FontColor->RGBColor[
                    Rational[2, 3], 0, 0]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontWeight->Bold,
                    FontColor->GrayLevel[0]], 
                    StyleBox[
                    TagBox[GridBox[{
                    {
                    StyleBox[
                    TagBox[GridBox[{
                    {"x"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold]}
                    },
                    AutoDelete->False,
                    FrameStyle->RGBColor[0, 
                    Rational[2, 3], 0],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[0, 0, 1],
                    FrontFaceColor->RGBColor[0, 0, 1],
                    BackFaceColor->RGBColor[0, 0, 1],
                    GraphicsColor->RGBColor[0, 0, 1],
                    FontWeight->Bold,
                    FontColor->RGBColor[0, 0, 1]]}
                    },
                    AutoDelete->False,
                    FrameStyle->RGBColor[0, 0, 1],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[1, 0.9, 0.8], {
                    RGBColor[1, 1, 0.85]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   "Grid"]}
                },
                AutoDelete->False,
                FrameStyle->RGBColor[0, 
                  Rational[2, 3], 0],
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]},
             {
              TagBox[GridBox[{
                 {
                  TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"probability\"\>"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FrontFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    BackFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    GraphicsColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FontWeight->Bold,
                    FontColor->RGBColor[
                    Rational[2, 3], 0, 0]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontWeight->Bold,
                    FontColor->GrayLevel[0]], 
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"0.1111111111111111`"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold],
                    StripOnInput->False,
                    LineColor->RGBColor[0, 0, 1],
                    FrontFaceColor->RGBColor[0, 0, 1],
                    BackFaceColor->RGBColor[0, 0, 1],
                    GraphicsColor->RGBColor[0, 0, 1],
                    FontWeight->Bold,
                    FontColor->RGBColor[0, 0, 1]]},
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"alternative\"\>"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FrontFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    BackFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    GraphicsColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FontWeight->Bold,
                    FontColor->RGBColor[
                    Rational[2, 3], 0, 0]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontWeight->Bold,
                    FontColor->GrayLevel[0]], 
                    StyleBox[
                    TagBox[GridBox[{
                    {
                    StyleBox[
                    TagBox[GridBox[{
                    {"y"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold]}
                    },
                    AutoDelete->False,
                    FrameStyle->RGBColor[0, 
                    Rational[2, 3], 0],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[0, 0, 1],
                    FrontFaceColor->RGBColor[0, 0, 1],
                    BackFaceColor->RGBColor[0, 0, 1],
                    GraphicsColor->RGBColor[0, 0, 1],
                    FontWeight->Bold,
                    FontColor->RGBColor[0, 0, 1]]}
                    },
                    AutoDelete->False,
                    FrameStyle->RGBColor[0, 0, 1],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[1, 0.9, 0.8], {
                    RGBColor[1, 1, 0.85]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   "Grid"]}
                },
                AutoDelete->False,
                FrameStyle->RGBColor[0, 
                  Rational[2, 3], 0],
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]},
             {
              TagBox[GridBox[{
                 {
                  TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"probability\"\>"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FrontFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    BackFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    GraphicsColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FontWeight->Bold,
                    FontColor->RGBColor[
                    Rational[2, 3], 0, 0]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontWeight->Bold,
                    FontColor->GrayLevel[0]], 
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"0.1111111111111111`"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold],
                    StripOnInput->False,
                    LineColor->RGBColor[0, 0, 1],
                    FrontFaceColor->RGBColor[0, 0, 1],
                    BackFaceColor->RGBColor[0, 0, 1],
                    GraphicsColor->RGBColor[0, 0, 1],
                    FontWeight->Bold,
                    FontColor->RGBColor[0, 0, 1]]},
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"alternative\"\>"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FrontFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    BackFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    GraphicsColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FontWeight->Bold,
                    FontColor->RGBColor[
                    Rational[2, 3], 0, 0]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontWeight->Bold,
                    FontColor->GrayLevel[0]], 
                    StyleBox[
                    TagBox[GridBox[{
                    {
                    StyleBox[
                    TagBox[GridBox[{
                    {"z"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold]}
                    },
                    AutoDelete->False,
                    FrameStyle->RGBColor[0, 
                    Rational[2, 3], 0],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[0, 0, 1],
                    FrontFaceColor->RGBColor[0, 0, 1],
                    BackFaceColor->RGBColor[0, 0, 1],
                    GraphicsColor->RGBColor[0, 0, 1],
                    FontWeight->Bold,
                    FontColor->RGBColor[0, 0, 1]]}
                    },
                    AutoDelete->False,
                    FrameStyle->RGBColor[0, 0, 1],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[1, 0.9, 0.8], {
                    RGBColor[1, 1, 0.85]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   "Grid"]}
                },
                AutoDelete->False,
                FrameStyle->RGBColor[0, 
                  Rational[2, 3], 0],
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]},
             {
              TagBox[GridBox[{
                 {
                  TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"probability\"\>"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FrontFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    BackFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    GraphicsColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FontWeight->Bold,
                    FontColor->RGBColor[
                    Rational[2, 3], 0, 0]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontWeight->Bold,
                    FontColor->GrayLevel[0]], 
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"0.1111111111111111`"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold],
                    StripOnInput->False,
                    LineColor->RGBColor[0, 0, 1],
                    FrontFaceColor->RGBColor[0, 0, 1],
                    BackFaceColor->RGBColor[0, 0, 1],
                    GraphicsColor->RGBColor[0, 0, 1],
                    FontWeight->Bold,
                    FontColor->RGBColor[0, 0, 1]]},
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"alternative\"\>"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FrontFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    BackFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    GraphicsColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FontWeight->Bold,
                    FontColor->RGBColor[
                    Rational[2, 3], 0, 0]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontWeight->Bold,
                    FontColor->GrayLevel[0]], 
                    StyleBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"Times"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold],
                    StripOnInput->False,
                    
                    LineColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    
                    FrontFaceColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    
                    BackFaceColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    
                    GraphicsColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    FontWeight->Bold,
                    
                    FontColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`]], 
                    StyleBox[
                    TagBox[GridBox[{
                    {
                    RowBox[{"-", "1"}]}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold], 
                    StyleBox[
                    TagBox[GridBox[{
                    {"x"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold]}
                    },
                    AutoDelete->False,
                    FrameStyle->GrayLevel[0],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[1, 0.9, 0.8], {
                    RGBColor[0.88, 1, 0.88]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    AutoDelete->False,
                    FrameStyle->RGBColor[0, 
                    Rational[2, 3], 0],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[0, 0, 1],
                    FrontFaceColor->RGBColor[0, 0, 1],
                    BackFaceColor->RGBColor[0, 0, 1],
                    GraphicsColor->RGBColor[0, 0, 1],
                    FontWeight->Bold,
                    FontColor->RGBColor[0, 0, 1]]}
                    },
                    AutoDelete->False,
                    FrameStyle->RGBColor[0, 0, 1],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[1, 0.9, 0.8], {
                    RGBColor[1, 1, 0.85]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   "Grid"]}
                },
                AutoDelete->False,
                FrameStyle->RGBColor[0, 
                  Rational[2, 3], 0],
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]},
             {
              TagBox[GridBox[{
                 {
                  TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"probability\"\>"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FrontFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    BackFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    GraphicsColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FontWeight->Bold,
                    FontColor->RGBColor[
                    Rational[2, 3], 0, 0]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontWeight->Bold,
                    FontColor->GrayLevel[0]], 
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"0.1111111111111111`"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold],
                    StripOnInput->False,
                    LineColor->RGBColor[0, 0, 1],
                    FrontFaceColor->RGBColor[0, 0, 1],
                    BackFaceColor->RGBColor[0, 0, 1],
                    GraphicsColor->RGBColor[0, 0, 1],
                    FontWeight->Bold,
                    FontColor->RGBColor[0, 0, 1]]},
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"alternative\"\>"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FrontFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    BackFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    GraphicsColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FontWeight->Bold,
                    FontColor->RGBColor[
                    Rational[2, 3], 0, 0]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontWeight->Bold,
                    FontColor->GrayLevel[0]], 
                    StyleBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"Times"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold],
                    StripOnInput->False,
                    
                    LineColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    
                    FrontFaceColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    
                    BackFaceColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    
                    GraphicsColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    FontWeight->Bold,
                    
                    FontColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`]], 
                    StyleBox[
                    TagBox[GridBox[{
                    {
                    RowBox[{"-", "1"}]}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold], 
                    StyleBox[
                    TagBox[GridBox[{
                    {"y"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold]}
                    },
                    AutoDelete->False,
                    FrameStyle->GrayLevel[0],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[1, 0.9, 0.8], {
                    RGBColor[0.88, 1, 0.88]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    AutoDelete->False,
                    FrameStyle->RGBColor[0, 
                    Rational[2, 3], 0],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[0, 0, 1],
                    FrontFaceColor->RGBColor[0, 0, 1],
                    BackFaceColor->RGBColor[0, 0, 1],
                    GraphicsColor->RGBColor[0, 0, 1],
                    FontWeight->Bold,
                    FontColor->RGBColor[0, 0, 1]]}
                    },
                    AutoDelete->False,
                    FrameStyle->RGBColor[0, 0, 1],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[1, 0.9, 0.8], {
                    RGBColor[1, 1, 0.85]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   "Grid"]}
                },
                AutoDelete->False,
                FrameStyle->RGBColor[0, 
                  Rational[2, 3], 0],
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]},
             {
              TagBox[GridBox[{
                 {
                  TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"probability\"\>"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FrontFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    BackFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    GraphicsColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FontWeight->Bold,
                    FontColor->RGBColor[
                    Rational[2, 3], 0, 0]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontWeight->Bold,
                    FontColor->GrayLevel[0]], 
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"0.1111111111111111`"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold],
                    StripOnInput->False,
                    LineColor->RGBColor[0, 0, 1],
                    FrontFaceColor->RGBColor[0, 0, 1],
                    BackFaceColor->RGBColor[0, 0, 1],
                    GraphicsColor->RGBColor[0, 0, 1],
                    FontWeight->Bold,
                    FontColor->RGBColor[0, 0, 1]]},
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"alternative\"\>"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FrontFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    BackFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    GraphicsColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FontWeight->Bold,
                    FontColor->RGBColor[
                    Rational[2, 3], 0, 0]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontWeight->Bold,
                    FontColor->GrayLevel[0]], 
                    StyleBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"Times"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold],
                    StripOnInput->False,
                    
                    LineColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    
                    FrontFaceColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    
                    BackFaceColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    
                    GraphicsColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    FontWeight->Bold,
                    
                    FontColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`]], 
                    StyleBox[
                    TagBox[GridBox[{
                    {
                    RowBox[{"-", "1"}]}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold], 
                    StyleBox[
                    TagBox[GridBox[{
                    {"z"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold]}
                    },
                    AutoDelete->False,
                    FrameStyle->GrayLevel[0],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[1, 0.9, 0.8], {
                    RGBColor[0.88, 1, 0.88]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    AutoDelete->False,
                    FrameStyle->RGBColor[0, 
                    Rational[2, 3], 0],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[0, 0, 1],
                    FrontFaceColor->RGBColor[0, 0, 1],
                    BackFaceColor->RGBColor[0, 0, 1],
                    GraphicsColor->RGBColor[0, 0, 1],
                    FontWeight->Bold,
                    FontColor->RGBColor[0, 0, 1]]}
                    },
                    AutoDelete->False,
                    FrameStyle->RGBColor[0, 0, 1],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[1, 0.9, 0.8], {
                    RGBColor[1, 1, 0.85]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   "Grid"]}
                },
                AutoDelete->False,
                FrameStyle->RGBColor[0, 
                  Rational[2, 3], 0],
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]},
             {
              TagBox[GridBox[{
                 {
                  TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"probability\"\>"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FrontFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    BackFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    GraphicsColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FontWeight->Bold,
                    FontColor->RGBColor[
                    Rational[2, 3], 0, 0]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontWeight->Bold,
                    FontColor->GrayLevel[0]], 
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"0.1111111111111111`"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold],
                    StripOnInput->False,
                    LineColor->RGBColor[0, 0, 1],
                    FrontFaceColor->RGBColor[0, 0, 1],
                    BackFaceColor->RGBColor[0, 0, 1],
                    GraphicsColor->RGBColor[0, 0, 1],
                    FontWeight->Bold,
                    FontColor->RGBColor[0, 0, 1]]},
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"alternative\"\>"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FrontFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    BackFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    GraphicsColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FontWeight->Bold,
                    FontColor->RGBColor[
                    Rational[2, 3], 0, 0]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontWeight->Bold,
                    FontColor->GrayLevel[0]], 
                    StyleBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"Power"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold],
                    StripOnInput->False,
                    
                    LineColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    
                    FrontFaceColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    
                    BackFaceColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    
                    GraphicsColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    FontWeight->Bold,
                    
                    FontColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`]], 
                    StyleBox[
                    TagBox[GridBox[{
                    {"x"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold], 
                    StyleBox[
                    TagBox[GridBox[{
                    {
                    RowBox[{"-", "1"}]}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold]}
                    },
                    AutoDelete->False,
                    FrameStyle->GrayLevel[0],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[1, 0.9, 0.8], {
                    RGBColor[0.88, 1, 0.88]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    AutoDelete->False,
                    FrameStyle->RGBColor[0, 
                    Rational[2, 3], 0],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[0, 0, 1],
                    FrontFaceColor->RGBColor[0, 0, 1],
                    BackFaceColor->RGBColor[0, 0, 1],
                    GraphicsColor->RGBColor[0, 0, 1],
                    FontWeight->Bold,
                    FontColor->RGBColor[0, 0, 1]]}
                    },
                    AutoDelete->False,
                    FrameStyle->RGBColor[0, 0, 1],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[1, 0.9, 0.8], {
                    RGBColor[1, 1, 0.85]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   "Grid"]}
                },
                AutoDelete->False,
                FrameStyle->RGBColor[0, 
                  Rational[2, 3], 0],
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]},
             {
              TagBox[GridBox[{
                 {
                  TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"probability\"\>"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FrontFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    BackFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    GraphicsColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FontWeight->Bold,
                    FontColor->RGBColor[
                    Rational[2, 3], 0, 0]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontWeight->Bold,
                    FontColor->GrayLevel[0]], 
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"0.1111111111111111`"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold],
                    StripOnInput->False,
                    LineColor->RGBColor[0, 0, 1],
                    FrontFaceColor->RGBColor[0, 0, 1],
                    BackFaceColor->RGBColor[0, 0, 1],
                    GraphicsColor->RGBColor[0, 0, 1],
                    FontWeight->Bold,
                    FontColor->RGBColor[0, 0, 1]]},
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"alternative\"\>"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FrontFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    BackFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    GraphicsColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FontWeight->Bold,
                    FontColor->RGBColor[
                    Rational[2, 3], 0, 0]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontWeight->Bold,
                    FontColor->GrayLevel[0]], 
                    StyleBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"Power"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold],
                    StripOnInput->False,
                    
                    LineColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    
                    FrontFaceColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    
                    BackFaceColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    
                    GraphicsColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    FontWeight->Bold,
                    
                    FontColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`]], 
                    StyleBox[
                    TagBox[GridBox[{
                    {"y"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold], 
                    StyleBox[
                    TagBox[GridBox[{
                    {
                    RowBox[{"-", "1"}]}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold]}
                    },
                    AutoDelete->False,
                    FrameStyle->GrayLevel[0],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[1, 0.9, 0.8], {
                    RGBColor[0.88, 1, 0.88]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    AutoDelete->False,
                    FrameStyle->RGBColor[0, 
                    Rational[2, 3], 0],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[0, 0, 1],
                    FrontFaceColor->RGBColor[0, 0, 1],
                    BackFaceColor->RGBColor[0, 0, 1],
                    GraphicsColor->RGBColor[0, 0, 1],
                    FontWeight->Bold,
                    FontColor->RGBColor[0, 0, 1]]}
                    },
                    AutoDelete->False,
                    FrameStyle->RGBColor[0, 0, 1],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[1, 0.9, 0.8], {
                    RGBColor[1, 1, 0.85]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   "Grid"]}
                },
                AutoDelete->False,
                FrameStyle->RGBColor[0, 
                  Rational[2, 3], 0],
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]},
             {
              TagBox[GridBox[{
                 {
                  TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"probability\"\>"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FrontFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    BackFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    GraphicsColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FontWeight->Bold,
                    FontColor->RGBColor[
                    Rational[2, 3], 0, 0]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontWeight->Bold,
                    FontColor->GrayLevel[0]], 
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"0.1111111111111111`"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold],
                    StripOnInput->False,
                    LineColor->RGBColor[0, 0, 1],
                    FrontFaceColor->RGBColor[0, 0, 1],
                    BackFaceColor->RGBColor[0, 0, 1],
                    GraphicsColor->RGBColor[0, 0, 1],
                    FontWeight->Bold,
                    FontColor->RGBColor[0, 0, 1]]},
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"alternative\"\>"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FrontFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    BackFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    GraphicsColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FontWeight->Bold,
                    FontColor->RGBColor[
                    Rational[2, 3], 0, 0]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontWeight->Bold,
                    FontColor->GrayLevel[0]], 
                    StyleBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"Power"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold],
                    StripOnInput->False,
                    
                    LineColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    
                    FrontFaceColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    
                    BackFaceColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    
                    GraphicsColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`],
                    FontWeight->Bold,
                    
                    FontColor->RGBColor[
                    0.33333333333333337`, 0, 0.33333333333333337`]], 
                    StyleBox[
                    TagBox[GridBox[{
                    {"z"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold], 
                    StyleBox[
                    TagBox[GridBox[{
                    {
                    RowBox[{"-", "1"}]}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold]}
                    },
                    AutoDelete->False,
                    FrameStyle->GrayLevel[0],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[1, 0.9, 0.8], {
                    RGBColor[0.88, 1, 0.88]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    AutoDelete->False,
                    FrameStyle->RGBColor[0, 
                    Rational[2, 3], 0],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[0, 0, 1],
                    FrontFaceColor->RGBColor[0, 0, 1],
                    BackFaceColor->RGBColor[0, 0, 1],
                    GraphicsColor->RGBColor[0, 0, 1],
                    FontWeight->Bold,
                    FontColor->RGBColor[0, 0, 1]]}
                    },
                    AutoDelete->False,
                    FrameStyle->RGBColor[0, 0, 1],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[1, 0.9, 0.8], {
                    RGBColor[1, 1, 0.85]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   "Grid"]}
                },
                AutoDelete->False,
                FrameStyle->RGBColor[0, 
                  Rational[2, 3], 0],
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]}
            },
            AutoDelete->False,
            FrameStyle->RGBColor[0, 
              Rational[2, 3], 0],
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxBackground->{"Columns" -> {{
                 RGBColor[0.88, 1, 0.88]}}},
            GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
           "Grid"],
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontWeight->Bold,
          FontColor->RGBColor[0, 0, 1]]},
        {
         StyleBox[
          StyleBox[
           TagBox[GridBox[{
              {"Start"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           StripOnInput->False,
           FontWeight->Bold],
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontWeight->Bold,
          FontColor->GrayLevel[0]], 
         StyleBox[
          TagBox[GridBox[{
             {
              TagBox[GridBox[{
                 {
                  TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"probability\"\>"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FrontFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    BackFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    GraphicsColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FontWeight->Bold,
                    FontColor->RGBColor[
                    Rational[2, 3], 0, 0]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontWeight->Bold,
                    FontColor->GrayLevel[0]], 
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"1.`"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold],
                    StripOnInput->False,
                    LineColor->RGBColor[0, 0, 1],
                    FrontFaceColor->RGBColor[0, 0, 1],
                    BackFaceColor->RGBColor[0, 0, 1],
                    GraphicsColor->RGBColor[0, 0, 1],
                    FontWeight->Bold,
                    FontColor->RGBColor[0, 0, 1]]},
                    {
                    StyleBox[
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"alternative\"\>"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FrontFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    BackFaceColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    GraphicsColor->RGBColor[
                    Rational[2, 3], 0, 0],
                    FontWeight->Bold,
                    FontColor->RGBColor[
                    Rational[2, 3], 0, 0]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontWeight->Bold,
                    FontColor->GrayLevel[0]], 
                    StyleBox[
                    TagBox[GridBox[{
                    {
                    StyleBox[
                    TagBox[GridBox[{
                    {"Expr"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    FontWeight->Bold]}
                    },
                    AutoDelete->False,
                    FrameStyle->RGBColor[0, 
                    Rational[2, 3], 0],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    StripOnInput->False,
                    LineColor->RGBColor[0, 0, 1],
                    FrontFaceColor->RGBColor[0, 0, 1],
                    BackFaceColor->RGBColor[0, 0, 1],
                    GraphicsColor->RGBColor[0, 0, 1],
                    FontWeight->Bold,
                    FontColor->RGBColor[0, 0, 1]]}
                    },
                    AutoDelete->False,
                    FrameStyle->RGBColor[0, 0, 1],
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[1, 0.9, 0.8], {
                    RGBColor[1, 1, 0.85]}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   "Grid"]}
                },
                AutoDelete->False,
                FrameStyle->RGBColor[0, 
                  Rational[2, 3], 0],
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxBackground->{"Columns" -> {{
                    RGBColor[0.88, 1, 0.88]}}},
                GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]}
            },
            AutoDelete->False,
            FrameStyle->RGBColor[0, 
              Rational[2, 3], 0],
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxBackground->{"Columns" -> {{
                 RGBColor[0.88, 1, 0.88]}}},
            GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
           "Grid"],
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontWeight->Bold,
          FontColor->RGBColor[0, 0, 1]]}
       },
       AutoDelete->False,
       FrameStyle->RGBColor[0, 0, 1],
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {
           RGBColor[1, 0.9, 0.8], {
            RGBColor[1, 1, 0.85]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}
   },
   AutoDelete->False,
   FrameStyle->RGBColor[0, 
     Rational[2, 3], 0],
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[0.88, 1, 0.88]}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.8416854940002317`*^9, 3.841685500434601*^9}, {
   3.841685681614153*^9, 3.841685701203434*^9}, 3.841686489759612*^9, 
   3.841687328538239*^9, 3.841687412614604*^9, 3.841753180271824*^9, 
   3.8417544520142937`*^9, {3.8417603829353313`*^9, 3.841760401846746*^9}, 
   3.9112524208901443`*^9, 3.911254383011847*^9, 3.9112546472611303`*^9, 
   3.9112974518270197`*^9, 3.9123687788688726`*^9, {3.9123699330262527`*^9, 
   3.912369955271851*^9}, 3.912545003004271*^9, 3.912545374561796*^9},
 CellLabel->
  "Out[494]=",ExpressionUUID->"9d76b149-92bf-497e-bcb6-57d7b9f5c74f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Choose From Alternatives", "Section",
 CellChangeTimes->{{3.548667384118556*^9, 
  3.548667389406556*^9}},ExpressionUUID->"0054a0ba-857f-47c4-910f-\
7bec8952e275"],

Cell["\<\
We need a function from probabilized alternatives to a particular choice, \
given an input die roll.\
\>", "Text",
 CellChangeTimes->{{3.841215273012089*^9, 3.8412152991513433`*^9}, {
  3.8417531904304028`*^9, 
  3.841753192888517*^9}},ExpressionUUID->"4416d463-87e5-4652-98ad-\
5a9157c19230"],

Cell[TextData[{
 "If there is only one alternative, choose it. Access the key \
\[OpenCurlyDoubleQuote]alternative\[CloseCurlyDoubleQuote] in the lookup \
table by applying the rules via ",
 StyleBox["/.", "Input"],
 ", ",
 StyleBox["ReplaceAll", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.540731846004379*^9, 3.5407318686456428`*^9}, {
   3.5407319701157885`*^9, 3.5407320037881556`*^9}, {3.54073225365714*^9, 
   3.5407323097957535`*^9}, {3.540732343238097*^9, 3.5407324432020926`*^9}, {
   3.540732559608732*^9, 3.54073266473202*^9}, {3.540732893483841*^9, 
   3.5407329047638407`*^9}, {3.5407339649598427`*^9, 3.540733985286843*^9}, {
   3.5407340565318427`*^9, 3.5407340661388426`*^9}, {3.540734290543843*^9, 
   3.540734336733843*^9}, {3.5407343690278425`*^9, 3.540734394818843*^9}, {
   3.5407351740588427`*^9, 3.5407351755068426`*^9}, {3.540743560045554*^9, 
   3.540743566685218*^9}, {3.5408223913605576`*^9, 3.540822459032324*^9}, {
   3.540822651246354*^9, 3.5408226681573544`*^9}, {3.540822955918354*^9, 
   3.5408229858883543`*^9}, {3.540823034727354*^9, 3.540823080483668*^9}, {
   3.5408234302566414`*^9, 3.5408234332239385`*^9}, {3.54082347354597*^9, 
   3.5408235701316276`*^9}, {3.540824100732349*^9, 3.540824125582349*^9}, {
   3.540824160958349*^9, 3.5408242890883493`*^9}, {3.540824367965349*^9, 
   3.540824468178349*^9}, {3.540824577100349*^9, 3.540824580431349*^9}, 
   3.5408246391213493`*^9, {3.540824705083349*^9, 3.5408247146023493`*^9}, {
   3.540824748672349*^9, 3.540824787528349*^9}, {3.540825034369349*^9, 
   3.540825065082349*^9}, {3.540825107920349*^9, 3.5408251520866957`*^9}, {
   3.5408252115185795`*^9, 3.540825274660206*^9}, {3.5408253096261973`*^9, 
   3.5408254328270893`*^9}, {3.5408254755263586`*^9, 
   3.5408255272375298`*^9}, {3.540825589667772*^9, 3.540825597138519*^9}, {
   3.540825652575062*^9, 3.540825711689973*^9}, {3.540825769795783*^9, 
   3.5408259478215837`*^9}, {3.5408259969004908`*^9, 3.540826030185819*^9}, {
   3.5408261748574004`*^9, 3.540826199469939*^9}, {3.5408262549393916`*^9, 
   3.540826306508234*^9}, {3.540826514962345*^9, 3.5408265203823447`*^9}, {
   3.5408292150523376`*^9, 3.540829232204338*^9}, {3.5409019408186607`*^9, 
   3.5409019515115223`*^9}, {3.548584683161171*^9, 3.548584691723443*^9}, {
   3.5485934460698795`*^9, 3.5485935114288797`*^9}, {3.5486657788074903`*^9, 
   3.5486657966045084`*^9}, {3.84125505084779*^9, 3.841255153930736*^9}, {
   3.841319816422351*^9, 3.8413198186302*^9}, {3.8416857473521976`*^9, 
   3.8416857949718113`*^9}, {3.841753210834668*^9, 3.841753231844926*^9}, {
   3.912371955155981*^9, 3.9123720005928373`*^9}, {3.912545017738838*^9, 
   3.912545018937978*^9}},ExpressionUUID->"b3186b13-6ab5-417c-8eab-\
99ebcdbdf7c3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "chooseFromAlternatives", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"chooseFromAlternatives", "[", 
    RowBox[{
     RowBox[{"{", "probabilizedAlternative_", "}"}], ",", "dieRoll_"}], "]"}],
    ":=", 
   RowBox[{"\"\<alternative\>\"", "/.", "probabilizedAlternative"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.540731846004379*^9, 3.5407318686456428`*^9}, {
   3.5407319701157885`*^9, 3.5407320037881556`*^9}, {3.54073225365714*^9, 
   3.5407323097957535`*^9}, {3.540732343238097*^9, 3.5407324432020926`*^9}, {
   3.540732559608732*^9, 3.54073266473202*^9}, {3.540732893483841*^9, 
   3.5407329047638407`*^9}, {3.5407339649598427`*^9, 3.540733985286843*^9}, {
   3.5407340565318427`*^9, 3.5407340661388426`*^9}, {3.540734290543843*^9, 
   3.540734336733843*^9}, {3.5407343690278425`*^9, 3.540734394818843*^9}, {
   3.5407351740588427`*^9, 3.5407351755068426`*^9}, {3.540743560045554*^9, 
   3.540743566685218*^9}, {3.5408223913605576`*^9, 3.540822459032324*^9}, {
   3.540822651246354*^9, 3.5408226681573544`*^9}, {3.540822955918354*^9, 
   3.5408229858883543`*^9}, {3.540823034727354*^9, 3.540823080483668*^9}, {
   3.5408234302566414`*^9, 3.5408234332239385`*^9}, {3.54082347354597*^9, 
   3.5408235701316276`*^9}, {3.540824100732349*^9, 3.540824125582349*^9}, {
   3.540824160958349*^9, 3.5408242890883493`*^9}, {3.540824367965349*^9, 
   3.540824468178349*^9}, {3.540824577100349*^9, 3.540824580431349*^9}, 
   3.5408246391213493`*^9, {3.540824705083349*^9, 3.5408247146023493`*^9}, {
   3.540824748672349*^9, 3.540824787528349*^9}, {3.540825034369349*^9, 
   3.540825065082349*^9}, {3.540825107920349*^9, 3.5408251520866957`*^9}, {
   3.5408252115185795`*^9, 3.540825274660206*^9}, {3.5408253096261973`*^9, 
   3.5408254328270893`*^9}, {3.5408254755263586`*^9, 
   3.5408255272375298`*^9}, {3.540825589667772*^9, 3.540825597138519*^9}, {
   3.540825652575062*^9, 3.540825711689973*^9}, {3.540825769795783*^9, 
   3.5408259478215837`*^9}, {3.5408259969004908`*^9, 3.540826030185819*^9}, {
   3.5408261748574004`*^9, 3.540826199469939*^9}, {3.5408262549393916`*^9, 
   3.540826306508234*^9}, {3.540826514962345*^9, 3.5408265203823447`*^9}, {
   3.5408292150523376`*^9, 3.540829232204338*^9}, {3.5409019408186607`*^9, 
   3.5409019515115223`*^9}, {3.548584683161171*^9, 3.548584691723443*^9}, {
   3.5485934460698795`*^9, 3.5485935114288797`*^9}, {3.5486657788074903`*^9, 
   3.548665782930726*^9}, {3.548673718855544*^9, 3.548673720030427*^9}, {
   3.5486741209475255`*^9, 3.5486741550105257`*^9}, {3.548675234702267*^9, 
   3.548675236022399*^9}, {3.841400944334983*^9, 3.841400945551803*^9}},
 CellLabel->
  "In[495]:=",ExpressionUUID->"f5707359-66ac-4c45-9776-e8ddc176aeb5"],

Cell[TextData[{
 "If there are many alternatives, pick the first whose cumulative probability \
is greater than or equal to ",
 StyleBox["dieRoll", "Input"],
 ". Track the cumulative probability by decrementing ",
 StyleBox["dieRoll", "Input"],
 " by each looked-up probability as we recurse down the alternatives. "
}], "Text",
 CellChangeTimes->{{3.540731846004379*^9, 3.5407318686456428`*^9}, {
   3.5407319701157885`*^9, 3.5407320037881556`*^9}, {3.54073225365714*^9, 
   3.5407323097957535`*^9}, {3.540732343238097*^9, 3.5407324432020926`*^9}, {
   3.540732559608732*^9, 3.54073266473202*^9}, {3.540732893483841*^9, 
   3.5407329047638407`*^9}, {3.5407339649598427`*^9, 3.540733985286843*^9}, {
   3.5407340565318427`*^9, 3.5407340661388426`*^9}, {3.540734290543843*^9, 
   3.540734336733843*^9}, {3.5407343690278425`*^9, 3.540734394818843*^9}, {
   3.5407351740588427`*^9, 3.5407351755068426`*^9}, {3.540743560045554*^9, 
   3.540743566685218*^9}, {3.5408223913605576`*^9, 3.540822459032324*^9}, {
   3.540822651246354*^9, 3.5408226681573544`*^9}, {3.540822955918354*^9, 
   3.5408229858883543`*^9}, {3.540823034727354*^9, 3.540823080483668*^9}, {
   3.5408234302566414`*^9, 3.5408234332239385`*^9}, {3.54082347354597*^9, 
   3.5408235701316276`*^9}, {3.540824100732349*^9, 3.540824125582349*^9}, {
   3.540824160958349*^9, 3.5408242890883493`*^9}, {3.540824367965349*^9, 
   3.540824468178349*^9}, {3.540824577100349*^9, 3.540824580431349*^9}, 
   3.5408246391213493`*^9, {3.540824705083349*^9, 3.5408247146023493`*^9}, {
   3.540824748672349*^9, 3.540824787528349*^9}, {3.540825034369349*^9, 
   3.540825065082349*^9}, {3.540825107920349*^9, 3.5408251520866957`*^9}, {
   3.5408252115185795`*^9, 3.540825274660206*^9}, {3.5408253096261973`*^9, 
   3.5408254328270893`*^9}, {3.5408254755263586`*^9, 
   3.5408255272375298`*^9}, {3.540825589667772*^9, 3.540825597138519*^9}, {
   3.540825652575062*^9, 3.540825711689973*^9}, {3.540825769795783*^9, 
   3.5408259478215837`*^9}, {3.5408259969004908`*^9, 3.540826030185819*^9}, {
   3.5408261748574004`*^9, 3.540826199469939*^9}, {3.5408262549393916`*^9, 
   3.540826306508234*^9}, {3.540826514962345*^9, 3.5408265203823447`*^9}, {
   3.5408292150523376`*^9, 3.540829232204338*^9}, {3.5409019408186607`*^9, 
   3.5409019515115223`*^9}, {3.548584683161171*^9, 3.548584691723443*^9}, {
   3.5485934460698795`*^9, 3.5485935114288797`*^9}, {3.5486657788074903`*^9, 
   3.5486658109133267`*^9}, {3.5486765445315204`*^9, 
   3.5486766058135767`*^9}, {3.6238167308634243`*^9, 3.623816743518765*^9}, {
   3.8412551751920013`*^9, 3.841255175922277*^9}, {3.8413198369662333`*^9, 
   3.841319902969861*^9}, {3.8416858097689238`*^9, 3.8416858631513453`*^9}, {
   3.841753299553361*^9, 3.841753304911192*^9}, 
   3.912372022793*^9},ExpressionUUID->"28756831-3542-40d1-aa60-483c3a4cd0bd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["chooseFromAlternatives",
     Background->RGBColor[1, 1, 0]], "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"probabilizedAlternative_", ",", "rest___"}], "}"}], ",", 
     "dieRoll_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p", "=", 
       RowBox[{"\"\<probability\>\"", "/.", "probabilizedAlternative"}]}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"dieRoll", "<", "p"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", "then", " ", "*)"}], 
       RowBox[{"\"\<alternative\>\"", "/.", "probabilizedAlternative"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", "else", " ", "*)"}], 
       RowBox[{
        StyleBox["chooseFromAlternatives",
         Background->RGBColor[1, 1, 0]], "[", 
        RowBox[{
         RowBox[{"{", "rest", "}"}], ",", 
         RowBox[{"dieRoll", "-", "p"}]}], "]"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["chooseFromAlternatives",
     Background->RGBColor[1, 1, 0]], "[", "badArgs___", "]"}], ":=", 
   RowBox[{"Throw", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<CHOOSE:BADARGS: \>\"", ",", 
      RowBox[{"{", "badArgs", "}"}]}], "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.540731846004379*^9, 3.5407318686456428`*^9}, {
   3.5407319701157885`*^9, 3.5407320037881556`*^9}, {3.54073225365714*^9, 
   3.5407323097957535`*^9}, {3.540732343238097*^9, 3.5407324432020926`*^9}, {
   3.540732559608732*^9, 3.54073266473202*^9}, {3.540732893483841*^9, 
   3.5407329047638407`*^9}, {3.5407339649598427`*^9, 3.540733985286843*^9}, {
   3.5407340565318427`*^9, 3.5407340661388426`*^9}, {3.540734290543843*^9, 
   3.540734336733843*^9}, {3.5407343690278425`*^9, 3.540734394818843*^9}, {
   3.5407351740588427`*^9, 3.5407351755068426`*^9}, {3.540743560045554*^9, 
   3.540743566685218*^9}, {3.5408223913605576`*^9, 3.540822459032324*^9}, {
   3.540822651246354*^9, 3.5408226681573544`*^9}, {3.540822955918354*^9, 
   3.5408229858883543`*^9}, {3.540823034727354*^9, 3.540823080483668*^9}, {
   3.5408234302566414`*^9, 3.5408234332239385`*^9}, {3.54082347354597*^9, 
   3.5408235701316276`*^9}, {3.540824100732349*^9, 3.540824125582349*^9}, {
   3.540824160958349*^9, 3.5408242890883493`*^9}, {3.540824367965349*^9, 
   3.540824468178349*^9}, {3.540824577100349*^9, 3.540824580431349*^9}, 
   3.5408246391213493`*^9, {3.540824705083349*^9, 3.5408247146023493`*^9}, {
   3.540824748672349*^9, 3.540824787528349*^9}, {3.540825034369349*^9, 
   3.540825065082349*^9}, {3.540825107920349*^9, 3.5408251520866957`*^9}, {
   3.5408252115185795`*^9, 3.540825274660206*^9}, {3.5408253096261973`*^9, 
   3.5408254328270893`*^9}, {3.5408254755263586`*^9, 
   3.5408255272375298`*^9}, {3.540825589667772*^9, 3.540825597138519*^9}, {
   3.540825652575062*^9, 3.540825711689973*^9}, {3.540825769795783*^9, 
   3.5408259478215837`*^9}, {3.5408259969004908`*^9, 3.540826030185819*^9}, {
   3.5408261748574004`*^9, 3.540826199469939*^9}, {3.5408262549393916`*^9, 
   3.540826306508234*^9}, {3.540826514962345*^9, 3.5408265203823447`*^9}, {
   3.5408292150523376`*^9, 3.540829232204338*^9}, {3.5409019408186607`*^9, 
   3.5409019515115223`*^9}, {3.548584683161171*^9, 3.548584691723443*^9}, {
   3.5485934460698795`*^9, 3.5485935114288797`*^9}, {3.5486657788074903`*^9, 
   3.5486657845818205`*^9}, {3.5486741703235254`*^9, 
   3.5486742081305256`*^9}, {3.5486742394085255`*^9, 
   3.5486742610945253`*^9}, {3.5486743360915256`*^9, 3.548674381291526*^9}, 
   3.5486744130645256`*^9, {3.5486744509265256`*^9, 3.5486744521985254`*^9}, {
   3.5486744901645255`*^9, 3.5486745223010345`*^9}, 3.5486752308248796`*^9},
 CellLabel->
  "In[497]:=",ExpressionUUID->"cfc9d35c-953c-4520-bc5c-b43e6dc6c33d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
generateSentences [ probabilizedGrammar, groundTerm, terminalSymbols, \
recursionLimit:100 ]\
\>", "Section",
 CellChangeTimes->{{3.5407347948748426`*^9, 3.5407348192498426`*^9}, {
   3.5407356569756083`*^9, 3.5407356579747086`*^9}, {3.540835342182508*^9, 
   3.540835370282508*^9}, {3.548668060623556*^9, 3.548668063768556*^9}, {
   3.548674630926896*^9, 3.5486746359984026`*^9}, 
   3.6234092278003883`*^9},ExpressionUUID->"613354b5-bbd3-4abd-bf80-\
6d92f5128966"],

Cell[TextData[{
 "The ",
 StyleBox["ground term",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " is the term to force when the recursion limit is exceeded. The default \
recursion limit is 100. That\[CloseCurlyQuote]s too big for algebraic \
expressions, where 30 is ample. But 100 or even 500 is useful in other \
applications."
}], "Text",
 CellChangeTimes->{{3.5486745590597095`*^9, 3.5486746246942725`*^9}, {
  3.548674663928196*^9, 3.54867466917572*^9}, {3.5486780913291135`*^9, 
  3.5486780930702877`*^9}, {3.841255242675729*^9, 3.841255257484296*^9}, {
  3.841685877317513*^9, 3.8416859062018013`*^9}, {3.912545104782*^9, 
  3.912545104887889*^9}, {3.912545720168186*^9, 
  3.912545720280828*^9}},ExpressionUUID->"d7f99f2e-af13-4274-86ee-\
0b648bf64556"],

Cell[CellGroupData[{

Cell["debugPrint: helper", "Subsection",
 CellChangeTimes->{{3.5486746451353164`*^9, 3.548674655703373*^9}, {
  3.912546137644266*^9, 
  3.912546140070244*^9}},ExpressionUUID->"77f478ec-bc47-4fd1-a1e1-\
3445e73f9f2c"],

Cell[TextData[{
 "It\[CloseCurlyQuote]s debatable whether to have a symbol like ",
 StyleBox["debugPrint", "Input"],
 " for ",
 StyleBox["Print", "Input"],
 " debugging, or to use ",
 StyleBox["Block[{Print=Identity},...]", "Input"],
 " to switch off printing. We opt for the former."
}], "Text",
 CellChangeTimes->{{3.8412202226041594`*^9, 3.841220251071516*^9}, {
  3.841255275512965*^9, 3.84125527739074*^9}, {3.841753898184635*^9, 
  3.841753901986697*^9}},ExpressionUUID->"a3d0e713-e4dd-4b67-8e8d-\
973b0e1a98bf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "debugPrint", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"debugPrint", "=", "Identity"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Set", " ", "it", " ", "to", " ", "Print", " ", "when", " ", 
     "debugging"}], ",", " ", 
    RowBox[{"to", " ", "Identity", " ", "when", " ", "not", " ", 
     RowBox[{"debugging", "."}]}]}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.841218254425345*^9, 3.841218280727948*^9}, {
  3.841255916119547*^9, 3.841255919940748*^9}, {3.841256424045286*^9, 
  3.841256436620038*^9}},
 CellLabel->
  "In[499]:=",ExpressionUUID->"7bdb4e0e-503a-42bd-8247-d309af24c67a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["chainExpansion", "Subsection",
 CellChangeTimes->{{3.5486746451353164`*^9, 3.548674655703373*^9}, {
  3.912545146142769*^9, 3.912545147044119*^9}, {3.912545215050528*^9, 
  3.912545217410205*^9}},ExpressionUUID->"b3e91311-6b80-4fdc-8da8-\
6d08e630f9c6"],

Cell["\<\
This has several branches \[LongDash] rewrite rules. First, clear them all \
out in case we\[CloseCurlyQuote]ve been messing around elsewhere in the \
notebook.\
\>", "Text",
 CellChangeTimes->{{3.9125451556600943`*^9, 
  3.912545199535306*^9}},ExpressionUUID->"be91e04b-5f2e-4635-a3fb-\
fd61125596f6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClearAll", "[", "chainExpansion", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.5407438828908353`*^9, 3.5407439815457*^9}, {
   3.5407440339499397`*^9, 3.540744037613306*^9}, {3.5407440702705717`*^9, 
   3.5407440765912037`*^9}, {3.5407441081763616`*^9, 
   3.5407441101455584`*^9}, {3.5407441627488184`*^9, 
   3.5407441661881623`*^9}, {3.5407445010372214`*^9, 
   3.5407446264092216`*^9}, {3.540744656455221*^9, 3.5407447811192217`*^9}, {
   3.5407448166692214`*^9, 3.5407449578472214`*^9}, {3.5407450369673114`*^9, 
   3.540745037382353*^9}, {3.540745237945407*^9, 3.5407452433699493`*^9}, {
   3.5407454681094213`*^9, 3.540745550841694*^9}, {3.5407456117647853`*^9, 
   3.54074578172822*^9}, {3.54074585762922*^9, 3.54074590916322*^9}, {
   3.54074605385122*^9, 3.54074608543322*^9}, {3.540822038559281*^9, 
   3.54082212495792*^9}, 3.540822378298251*^9, {3.540824799571349*^9, 
   3.540824833473349*^9}, {3.540824864931349*^9, 3.540824943763349*^9}, {
   3.5408265621733446`*^9, 3.540826570603345*^9}, {3.540828917969338*^9, 
   3.5408290426773376`*^9}, {3.540829110002338*^9, 3.5408291589313383`*^9}, {
   3.540829680303338*^9, 3.5408296840373383`*^9}, {3.540829723209338*^9, 
   3.540829812362338*^9}, {3.5408299402693377`*^9, 3.540829948524338*^9}, 
   3.5409021808866377`*^9, {3.540902213097785*^9, 3.540902218338261*^9}, {
   3.548584898452877*^9, 3.5485849001509743`*^9}, {3.548585429361134*^9, 
   3.5485854303621435`*^9}, {3.548585463554261*^9, 3.5485854655133204`*^9}, {
   3.548585633427575*^9, 3.5485857154143305`*^9}, {3.5485933082238336`*^9, 
   3.5485933172087317`*^9}, {3.5485935661808796`*^9, 
   3.5485935846118793`*^9}, {3.5485941512881365`*^9, 3.548594199319939*^9}, {
   3.5485943220852146`*^9, 3.548594416077613*^9}, 3.548594446661274*^9, {
   3.548594489818274*^9, 3.5485945623892736`*^9}, {3.5486040094162254`*^9, 
   3.548604030985382*^9}, {3.5486042065129337`*^9, 3.5486042085881405`*^9}, 
   3.5486671701860685`*^9, {3.548667883546556*^9, 3.548667886882556*^9}, 
   3.5486746811879215`*^9, {3.5486747320760098`*^9, 3.5486747873035316`*^9}, {
   3.5486748637461753`*^9, 3.54867486489029*^9}},
 CellLabel->
  "In[501]:=",ExpressionUUID->"5a3b8b5d-1c30-4787-a065-64e756d1f0f5"],

Cell["\<\
Iterate down the terms, randomly choosing a branch to explore.\
\>", "Text",
 CellChangeTimes->{{3.5486746923540382`*^9, 3.5486747011139135`*^9}, {
  3.5486749045642567`*^9, 3.548674924173218*^9}, {3.623816805941064*^9, 
  3.623816817363608*^9}, {3.841404028926012*^9, 
  3.841404032474373*^9}},ExpressionUUID->"ade8db40-6411-4aaa-8533-\
872310a7916b"],

Cell["Case: exhausted the production:", "Text",
 CellChangeTimes->{{3.548674868434644*^9, 3.5486748768424845`*^9}, {
  3.5486750093047295`*^9, 
  3.5486750258023796`*^9}},ExpressionUUID->"dc011c32-cbb7-4120-880b-\
e3012322489a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"chainExpansion", "[", 
    RowBox[{"iP_", ",", "groundTerm_", ",", "T_", ",", 
     RowBox[{"production", ":", 
      RowBox[{"{", "}"}]}], ",", "sentence_", ",", "\[IndentingNewLine]", 
     "i_", ",", "iLim_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"debugPrint", "[", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<branch\>\"", "\[Rule]", "\"\<exhausted\>\""}], ",", 
         RowBox[{"\"\<i\>\"", "\[Rule]", "i"}], ",", 
         RowBox[{"\"\<production\>\"", "\[Rule]", "production"}], ",", 
         RowBox[{"\"\<sentence\>\"", "\[Rule]", "sentence"}]}], "|>"}], "]"}],
       ";", "\[IndentingNewLine]", "sentence"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5407438828908353`*^9, 3.5407439815457*^9}, {
   3.5407440339499397`*^9, 3.540744037613306*^9}, {3.5407440702705717`*^9, 
   3.5407440765912037`*^9}, {3.5407441081763616`*^9, 
   3.5407441101455584`*^9}, {3.5407441627488184`*^9, 
   3.5407441661881623`*^9}, {3.5407445010372214`*^9, 
   3.5407446264092216`*^9}, {3.540744656455221*^9, 3.5407447811192217`*^9}, {
   3.5407448166692214`*^9, 3.5407449578472214`*^9}, {3.5407450369673114`*^9, 
   3.540745037382353*^9}, {3.540745237945407*^9, 3.5407452433699493`*^9}, {
   3.5407454681094213`*^9, 3.540745550841694*^9}, {3.5407456117647853`*^9, 
   3.54074578172822*^9}, {3.54074585762922*^9, 3.54074590916322*^9}, {
   3.54074605385122*^9, 3.54074608543322*^9}, {3.540822038559281*^9, 
   3.54082212495792*^9}, 3.540822378298251*^9, {3.540824799571349*^9, 
   3.540824833473349*^9}, {3.540824864931349*^9, 3.540824943763349*^9}, {
   3.5408265621733446`*^9, 3.540826570603345*^9}, {3.540828917969338*^9, 
   3.5408290426773376`*^9}, {3.540829110002338*^9, 3.5408291589313383`*^9}, {
   3.540829680303338*^9, 3.5408296840373383`*^9}, {3.540829723209338*^9, 
   3.540829812362338*^9}, {3.5408299402693377`*^9, 3.540829948524338*^9}, 
   3.5409021808866377`*^9, {3.540902213097785*^9, 3.540902218338261*^9}, {
   3.548584898452877*^9, 3.5485849001509743`*^9}, {3.548585429361134*^9, 
   3.5485854303621435`*^9}, {3.548585463554261*^9, 3.5485854655133204`*^9}, {
   3.548585633427575*^9, 3.5485857154143305`*^9}, {3.5485933082238336`*^9, 
   3.5485933172087317`*^9}, {3.5485935661808796`*^9, 
   3.5485935846118793`*^9}, {3.5485941512881365`*^9, 3.548594199319939*^9}, {
   3.5485943220852146`*^9, 3.548594416077613*^9}, 3.548594446661274*^9, {
   3.548594489818274*^9, 3.5485945623892736`*^9}, {3.5486040094162254`*^9, 
   3.548604030985382*^9}, {3.5486042065129337`*^9, 3.5486042085881405`*^9}, 
   3.5486671701860685`*^9, {3.548667883546556*^9, 3.548667886882556*^9}, 
   3.5486746811879215`*^9, {3.5486747320760098`*^9, 3.5486747873035316`*^9}, {
   3.5486748637461753`*^9, 3.54867486489029*^9}, {3.54867512161696*^9, 
   3.5486751222490234`*^9}, {3.5486769198319755`*^9, 3.5486769210861006`*^9}, 
   3.5486770239733887`*^9, {3.623409258495041*^9, 3.623409270805382*^9}, {
   3.841167861234568*^9, 3.841167862322069*^9}, {3.841175573773219*^9, 
   3.841175590926634*^9}, {3.841175879274828*^9, 3.841175904088496*^9}, {
   3.8412182852524157`*^9, 3.84121828595156*^9}, {3.841319973349275*^9, 
   3.8413199958065243`*^9}, {3.841320970501375*^9, 3.8413209715076017`*^9}, {
   3.8413210155540648`*^9, 3.841321021250476*^9}, 3.841321051653203*^9, {
   3.8413212519762573`*^9, 3.841321278554192*^9}, 3.8413216331619167`*^9, {
   3.841337179626584*^9, 3.841337184708152*^9}, 3.841339789744905*^9, {
   3.841350515160722*^9, 3.8413505192905083`*^9}},
 CellLabel->
  "In[502]:=",ExpressionUUID->"09c9a31f-d33c-41ed-b1c9-0ff028a1d006"],

Cell["Case: we have a term in the production:", "Text",
 CellChangeTimes->{{3.548674883083109*^9, 3.5486749018599863`*^9}, {
  3.5486750289856977`*^9, 3.548675043923191*^9}, {3.6238168583424063`*^9, 
  3.623816859330482*^9}},ExpressionUUID->"3a3a4cee-fb44-45c2-b794-\
9e916f47f6b0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     StyleBox["chainExpansion",
      Background->RGBColor[1, 1, 0]], "[", 
     RowBox[{"iP_", ",", "gd_", ",", "T_", ",", "\[IndentingNewLine]", 
      RowBox[{"production", ":", 
       RowBox[{"{", 
        RowBox[{"term_", ",", "rest___"}], "}"}]}], ",", 
      "\[IndentingNewLine]", "sentence_", ",", "i_", ",", "iLim_"}], "]"}], "/;", 
    RowBox[{"(", 
     RowBox[{"i", "<", "iLim"}], ")"}]}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"terminal", " ", "symbol"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{"T", ",", "term"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"subtrees", ",", "result"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "handle", " ", "something", " ", "like", " ", 
           "\"\<if Term then Term else Term\>\""}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"subtrees", "=", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{"T", ",", "#"}], "]"}], ",", 
               RowBox[{"{", "#", "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                StyleBox["chainExpansion",
                 Background->RGBColor[1, 1, 0]], "[", 
                RowBox[{"iP", ",", "gd", ",", "T", ",", 
                 RowBox[{"{", "#", "}"}], ",", 
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"i", "+", "1"}], ",", "iLim"}], "]"}]}], "]"}], 
             "&"}], "/@", 
            RowBox[{"{", "rest", "}"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"result", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"sentence", ",", 
             RowBox[{"{", "term", "}"}], ",", 
             RowBox[{"Flatten", "[", 
              RowBox[{"subtrees", ",", "1"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"debugPrint", "[", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<branch\>\"", "\[Rule]", "\"\<term\>\""}], ",", 
             RowBox[{"\"\<i\>\"", "\[Rule]", "i"}], ",", 
             RowBox[{"\"\<prodn\>\"", "\[Rule]", "production"}], ",", 
             RowBox[{"\"\<term\>\"", "\[Rule]", "term"}], ",", 
             RowBox[{"\"\<rest\>\"", "\[Rule]", 
              RowBox[{"{", "rest", "}"}]}], ",", 
             RowBox[{"\"\<sub\>\"", "\[Rule]", "subtrees"}], ",", 
             RowBox[{"\"\<res\>\"", "\[Rule]", "result"}]}], "|>"}], "]"}], 
          ";", "\[IndentingNewLine]", "result"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"non", "-", 
         RowBox[{"terminal", " ", "symbol"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"choice", "=", 
            RowBox[{
             StyleBox["chooseFromAlternatives",
              Background->RGBColor[1, 0.85, 0.85]], "[", 
             RowBox[{
              RowBox[{"iP", "[", "term", "]"}], ",", 
              RowBox[{"RandomReal", "[", "]"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", "replacement", ",", "result"}], "}"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"replacement", "=", 
           RowBox[{
            StyleBox["chainExpansion",
             Background->RGBColor[1, 1, 0]], "[", 
            RowBox[{"iP", ",", "gd", ",", "T", ",", "choice", ",", 
             RowBox[{"{", "}"}], ",", 
             RowBox[{"i", "+", "1"}], ",", "iLim"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"result", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"sentence", ",", "replacement"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"debugPrint", "[", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<branch\>\"", "\[Rule]", "\"\<nterm\>\""}], ",", 
             RowBox[{"\"\<i\>\"", "\[Rule]", "i"}], ",", 
             RowBox[{"\"\<prodn\>\"", "\[Rule]", "production"}], ",", 
             RowBox[{"\"\<term\>\"", "\[Rule]", "term"}], ",", 
             RowBox[{"\"\<rest\>\"", "\[Rule]", 
              RowBox[{"{", "rest", "}"}]}], ",", 
             RowBox[{"\"\<choice\>\"", "\[Rule]", "choice"}], ",", 
             RowBox[{"\"\<repl\>\"", "\[Rule]", "replacement"}], ",", 
             RowBox[{"\"\<res\>\"", "\[Rule]", "result"}]}], "|>"}], "]"}], 
          ";", "\[IndentingNewLine]", "result"}]}], "\[IndentingNewLine]", 
        "]"}]}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.841176264328454*^9, 3.841176273171339*^9}, {
   3.841176305241989*^9, 3.841176510088317*^9}, {3.8411779102056828`*^9, 
   3.84117791834796*^9}, {3.8411779551116457`*^9, 3.841178143238062*^9}, {
   3.841178209715444*^9, 3.8411783447145367`*^9}, {3.841178521975874*^9, 
   3.8411785947128277`*^9}, {3.841178639533242*^9, 3.841178643979718*^9}, {
   3.8411786875391006`*^9, 3.841178697071862*^9}, {3.8412182910574017`*^9, 
   3.841218297150985*^9}, {3.841218338778349*^9, 3.8412183453286953`*^9}, {
   3.8412183977694407`*^9, 3.841218407071632*^9}, {3.841255324303321*^9, 
   3.8412553621899147`*^9}, 3.841320027032838*^9, {3.8413200630993547`*^9, 
   3.841320082972632*^9}, {3.841320674179637*^9, 3.8413207051134653`*^9}, {
   3.841320767461033*^9, 3.8413207698314943`*^9}, {3.841320851351839*^9, 
   3.84132090270226*^9}, 3.841320945325808*^9, {3.8413210887448177`*^9, 
   3.841321089762931*^9}, 3.841321131951105*^9, {3.8413212189438953`*^9, 
   3.8413212416541853`*^9}, {3.84132164453323*^9, 3.8413216832814627`*^9}, 
   3.8413350265822363`*^9, {3.841335742524428*^9, 3.841335743214775*^9}, {
   3.841336288974803*^9, 3.841336356388628*^9}, {3.841336393414267*^9, 
   3.841336417082097*^9}, {3.84133646575968*^9, 3.8413364711410646`*^9}, {
   3.841336508335896*^9, 3.841336532018125*^9}, {3.8413365655454483`*^9, 
   3.841336580884849*^9}, {3.84133673701497*^9, 3.8413370084459343`*^9}, {
   3.841337058164521*^9, 3.841337058237864*^9}, {3.841337193344139*^9, 
   3.841337202206134*^9}, {3.841337396331944*^9, 3.84133740878541*^9}, {
   3.841337502672978*^9, 3.841337531710102*^9}, {3.8413375620843973`*^9, 
   3.841337593856257*^9}, {3.841337668002029*^9, 3.8413376806329536`*^9}, {
   3.841337713011259*^9, 3.841337823853856*^9}, {3.841337854854043*^9, 
   3.841337859532714*^9}, {3.841337917905477*^9, 3.8413379796325493`*^9}, {
   3.8413380283967667`*^9, 3.841338151579906*^9}, {3.841338193871572*^9, 
   3.8413382329258957`*^9}, {3.8413382935803223`*^9, 3.841338306256666*^9}, {
   3.841338344486017*^9, 3.841338370339818*^9}, 3.841338449381003*^9, {
   3.8413385666488323`*^9, 3.841338572656899*^9}, {3.841338642340341*^9, 
   3.8413386449057913`*^9}, {3.8413386773329268`*^9, 3.841338684401613*^9}, {
   3.841338716517643*^9, 3.8413387176990433`*^9}, {3.841338960258355*^9, 
   3.841338961449428*^9}, {3.8413389924202547`*^9, 3.841338993504328*^9}, {
   3.841339120285305*^9, 3.8413391214744673`*^9}, 3.841339286387097*^9, {
   3.841339334068489*^9, 3.841339439657683*^9}, {3.841339469783032*^9, 
   3.8413395392539167`*^9}, {3.84133959188839*^9, 3.841339666076672*^9}, {
   3.841339696796421*^9, 3.8413396981979837`*^9}, {3.841339849610125*^9, 
   3.841339869573475*^9}, {3.841339977490213*^9, 3.8413399896692038`*^9}, {
   3.8413400390364943`*^9, 3.8413400972887077`*^9}, {3.841340221878573*^9, 
   3.841340224021961*^9}, {3.841340434486306*^9, 3.8413404367265787`*^9}, {
   3.8413405179443617`*^9, 3.841340519888699*^9}, {3.841340674759364*^9, 
   3.8413406784967527`*^9}, {3.841340996362259*^9, 3.841340999501748*^9}, {
   3.841341063028633*^9, 3.84134107125673*^9}, {3.8413411139350853`*^9, 
   3.841341115053*^9}, {3.8413414475024347`*^9, 3.8413414645819397`*^9}, {
   3.841341598681039*^9, 3.841341690299048*^9}, {3.841350534516512*^9, 
   3.841350548841456*^9}, {3.841350895259501*^9, 3.8413511103468733`*^9}, {
   3.841351354720818*^9, 3.8413513862221622`*^9}, {3.8413515505842857`*^9, 
   3.8413515517099648`*^9}, 3.841351807659697*^9, {3.841351897394552*^9, 
   3.84135192985179*^9}, {3.8414036213849163`*^9, 3.8414036239014397`*^9}, 
   3.841403987382889*^9},
 CellLabel->
  "In[503]:=",ExpressionUUID->"f2aaf48e-9741-463f-97cc-829ea378b918"],

Cell["Case: exceeded the recursion limit:", "Text",
 CellChangeTimes->{{3.5407438828908353`*^9, 3.5407439815457*^9}, {
   3.5407440339499397`*^9, 3.540744037613306*^9}, {3.5407440702705717`*^9, 
   3.5407440765912037`*^9}, {3.5407441081763616`*^9, 
   3.5407441101455584`*^9}, {3.5407441627488184`*^9, 
   3.5407441661881623`*^9}, {3.5407445010372214`*^9, 
   3.5407446264092216`*^9}, {3.540744656455221*^9, 3.5407447811192217`*^9}, {
   3.5407448166692214`*^9, 3.5407449578472214`*^9}, {3.5407450369673114`*^9, 
   3.540745037382353*^9}, {3.540745237945407*^9, 3.5407452433699493`*^9}, {
   3.5407454681094213`*^9, 3.540745550841694*^9}, {3.5407456117647853`*^9, 
   3.54074578172822*^9}, {3.54074585762922*^9, 3.54074590916322*^9}, {
   3.54074605385122*^9, 3.54074608543322*^9}, {3.540822038559281*^9, 
   3.54082212495792*^9}, 3.540822378298251*^9, {3.540824799571349*^9, 
   3.540824833473349*^9}, {3.540824864931349*^9, 3.540824943763349*^9}, {
   3.5408265621733446`*^9, 3.540826570603345*^9}, {3.540828917969338*^9, 
   3.5408290426773376`*^9}, {3.540829110002338*^9, 3.5408291589313383`*^9}, {
   3.540829680303338*^9, 3.5408296840373383`*^9}, {3.540829723209338*^9, 
   3.540829812362338*^9}, {3.5408299402693377`*^9, 3.540829948524338*^9}, 
   3.5409021808866377`*^9, {3.540902213097785*^9, 3.540902218338261*^9}, {
   3.548584898452877*^9, 3.5485849001509743`*^9}, {3.548585429361134*^9, 
   3.5485854303621435`*^9}, {3.548585463554261*^9, 3.5485854655133204`*^9}, {
   3.548585633427575*^9, 3.5485857154143305`*^9}, {3.5485933082238336`*^9, 
   3.5485933172087317`*^9}, {3.5485935661808796`*^9, 
   3.5485935846118793`*^9}, {3.5485941512881365`*^9, 3.548594199319939*^9}, {
   3.5485943220852146`*^9, 3.548594416077613*^9}, 3.548594446661274*^9, {
   3.548594489818274*^9, 3.5485945623892736`*^9}, {3.5486040094162254`*^9, 
   3.548604030985382*^9}, {3.5486042065129337`*^9, 3.5486042085881405`*^9}, {
   3.5486671701860685`*^9, 3.5486671719692464`*^9}, {3.548667250300079*^9, 
   3.5486672855696054`*^9}, {3.548667894245556*^9, 3.548667940192556*^9}, {
   3.548668100764556*^9, 3.548668168967556*^9}, {3.548668209365556*^9, 
   3.548668261385556*^9}, {3.548668464301596*^9, 3.5486684755638485`*^9}, {
   3.5486749998967896`*^9, 3.5486750041862183`*^9}, {3.548675048267626*^9, 
   3.548675049787778*^9}},ExpressionUUID->"7572c186-9387-4870-bbc8-\
66e830432a00"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"chainExpansion", "[", 
    RowBox[{
    "iP_", ",", "gd_", ",", "T_", ",", "production_", ",", "sentence_", ",", 
     "i_", ",", "iLim_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"choice", "=", 
        RowBox[{
         StyleBox["chooseFromAlternatives",
          Background->RGBColor[1, 0.85, 0.85]], "[", 
         RowBox[{
          RowBox[{"iP", "[", "gd", "]"}], ",", 
          RowBox[{"RandomReal", "[", "]"}]}], "]"}]}], ",", "result"}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"result", "=", 
       RowBox[{"Join", "[", 
        RowBox[{"sentence", ",", "choice"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<branch\>\"", "\[Rule]", "\"\<exceeded\>\""}], ",", 
         RowBox[{"\"\<i\>\"", "\[Rule]", "i"}], ",", 
         RowBox[{"\"\<sen\>\"", "\[Rule]", "sentence"}], ",", 
         RowBox[{"\"\<choice\>\"", "\[Rule]", "choice"}], ",", 
         RowBox[{"\"\<prodn\>\"", "\[Rule]", "production"}], ",", 
         RowBox[{"\"\<res\>\"", "\[Rule]", "result"}]}], "|>"}], "]"}], ";", 
      "\[IndentingNewLine]", "result"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5407438828908353`*^9, 3.5407439815457*^9}, {
   3.5407440339499397`*^9, 3.540744037613306*^9}, {3.5407440702705717`*^9, 
   3.5407440765912037`*^9}, {3.5407441081763616`*^9, 
   3.5407441101455584`*^9}, {3.5407441627488184`*^9, 
   3.5407441661881623`*^9}, {3.5407445010372214`*^9, 
   3.5407446264092216`*^9}, {3.540744656455221*^9, 3.5407447811192217`*^9}, {
   3.5407448166692214`*^9, 3.5407449578472214`*^9}, {3.5407450369673114`*^9, 
   3.540745037382353*^9}, {3.540745237945407*^9, 3.5407452433699493`*^9}, {
   3.5407454681094213`*^9, 3.540745550841694*^9}, {3.5407456117647853`*^9, 
   3.54074578172822*^9}, {3.54074585762922*^9, 3.54074590916322*^9}, {
   3.54074605385122*^9, 3.54074608543322*^9}, {3.540822038559281*^9, 
   3.54082212495792*^9}, 3.540822378298251*^9, {3.540824799571349*^9, 
   3.540824833473349*^9}, {3.540824864931349*^9, 3.540824943763349*^9}, {
   3.5408265621733446`*^9, 3.540826570603345*^9}, {3.540828917969338*^9, 
   3.5408290426773376`*^9}, {3.540829110002338*^9, 3.5408291589313383`*^9}, {
   3.540829680303338*^9, 3.5408296840373383`*^9}, {3.540829723209338*^9, 
   3.540829812362338*^9}, {3.5408299402693377`*^9, 3.540829948524338*^9}, 
   3.5409021808866377`*^9, {3.540902213097785*^9, 3.540902218338261*^9}, {
   3.548584898452877*^9, 3.5485849001509743`*^9}, {3.548585429361134*^9, 
   3.5485854303621435`*^9}, {3.548585463554261*^9, 3.5485854655133204`*^9}, {
   3.548585633427575*^9, 3.5485857154143305`*^9}, {3.5485933082238336`*^9, 
   3.5485933172087317`*^9}, {3.5485935661808796`*^9, 
   3.5485935846118793`*^9}, {3.5485941512881365`*^9, 3.548594199319939*^9}, {
   3.5485943220852146`*^9, 3.548594416077613*^9}, 3.548594446661274*^9, {
   3.548594489818274*^9, 3.5485945623892736`*^9}, {3.5486040094162254`*^9, 
   3.548604030985382*^9}, {3.5486042065129337`*^9, 3.5486042085881405`*^9}, {
   3.5486671701860685`*^9, 3.5486671719692464`*^9}, {3.548667250300079*^9, 
   3.5486672855696054`*^9}, {3.548667894245556*^9, 3.548667940192556*^9}, {
   3.548668100764556*^9, 3.548668168967556*^9}, {3.548668209365556*^9, 
   3.548668261385556*^9}, {3.548668464301596*^9, 3.5486684656278615`*^9}, {
   3.548668638372403*^9, 3.548668644892707*^9}, {3.548674801033905*^9, 
   3.548674848300631*^9}, {3.5486751318819866`*^9, 3.5486751324180403`*^9}, 
   3.5486766936773624`*^9, 3.5486769391299047`*^9, {3.645747875725647*^9, 
   3.645747887292137*^9}, {3.84117554556209*^9, 3.841175564910424*^9}, {
   3.841175666566979*^9, 3.841175666687065*^9}, {3.841218451498085*^9, 
   3.8412184529442873`*^9}, {3.841220315463463*^9, 3.84122033838*^9}, {
   3.8412553739523487`*^9, 3.841255397157498*^9}, {3.8412570937377768`*^9, 
   3.8412570981230383`*^9}, 3.841320088584989*^9, {3.841320121814685*^9, 
   3.8413201417110357`*^9}, {3.841320641914757*^9, 3.841320668604266*^9}, 
   3.8413217036527357`*^9, 3.841324739932773*^9, {3.841324974739161*^9, 
   3.841324976017132*^9}, 3.8413372133620234`*^9, {3.841350572385562*^9, 
   3.841350576314876*^9}, {3.841350703862301*^9, 3.8413508293790894`*^9}, {
   3.8413508639383802`*^9, 3.841350876089671*^9}, 3.8413512676772137`*^9},
 CellLabel->
  "In[504]:=",ExpressionUUID->"864691ab-c843-4e7e-bb8c-16581c848d66"]
}, Open  ]],

Cell[CellGroupData[{

Cell["generateSentence [ iP, groundTerm, T, recursionLimit ]", "Subsection",
 CellChangeTimes->{{3.623816994820166*^9, 
  3.623817028827552*^9}},ExpressionUUID->"c04cef19-7726-4b2a-a30b-\
ff89946c6072"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClearAll", "[", "generateSentence", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.5407347419098425`*^9, 3.540734793948843*^9}, {
   3.540734864760843*^9, 3.540734942549843*^9}, {3.5407349786668425`*^9, 
   3.540734986443843*^9}, {3.5407351508038425`*^9, 3.5407351582588425`*^9}, {
   3.5407351960018425`*^9, 3.5407352961008425`*^9}, {3.5407353358361616`*^9, 
   3.540735338931781*^9}, {3.5407353881316185`*^9, 3.540735401013194*^9}, {
   3.5407354372834473`*^9, 3.5407355623104477`*^9}, {3.540735596395263*^9, 
   3.540735613541692*^9}, {3.540735666746585*^9, 3.540735668569768*^9}, 
   3.5407357313170414`*^9, {3.5407358407949886`*^9, 3.5407360187237797`*^9}, 
   3.540736285634468*^9, {3.540743574552005*^9, 3.540743589168466*^9}, 
   3.5407437453290806`*^9, {3.5407449693432217`*^9, 3.5407450477913933`*^9}, 
   3.5408100116315627`*^9, {3.5408271337343445`*^9, 3.5408272125682664`*^9}, {
   3.5408272470237117`*^9, 3.540827249487958*^9}, 3.540829853374338*^9, {
   3.540834536711508*^9, 3.540834549818508*^9}, {3.540835376075508*^9, 
   3.5408353791065083`*^9}, {3.5486680085955563`*^9, 3.548668021375556*^9}, {
   3.548675078320631*^9, 3.5486751087606745`*^9}, {3.5486778242394075`*^9, 
   3.5486778337023535`*^9}, 3.5489730781165695`*^9, 3.623816984623373*^9},
 CellLabel->
  "In[505]:=",ExpressionUUID->"71b720d9-659a-45c9-b0f6-40fdd31ca60b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"generateSentence", "[", 
   RowBox[{"iP_", ",", "groundTerm_", ",", "T_", ",", 
    RowBox[{"recursionLimit_", ":", "100"}]}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"$RecursionLimit", "=", "4096"}], "}"}], ",", 
    RowBox[{"(*", 
     RowBox[{
     "supports", " ", "recursionLimits", " ", "up", " ", "to", " ", "500"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     StyleBox["chainExpansion",
      Background->RGBColor[1, 0.85, 0.85]], "[", 
     RowBox[{"iP", ",", "groundTerm", ",", "T", ",", 
      RowBox[{"{", "Start", "}"}], ",", 
      RowBox[{"{", "}"}], ",", "0", ",", "recursionLimit"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5407347419098425`*^9, 3.540734793948843*^9}, {
   3.540734864760843*^9, 3.540734942549843*^9}, {3.5407349786668425`*^9, 
   3.540734986443843*^9}, {3.5407351508038425`*^9, 3.5407351582588425`*^9}, {
   3.5407351960018425`*^9, 3.5407352961008425`*^9}, {3.5407353358361616`*^9, 
   3.540735338931781*^9}, {3.5407353881316185`*^9, 3.540735401013194*^9}, {
   3.5407354372834473`*^9, 3.5407355623104477`*^9}, {3.540735596395263*^9, 
   3.540735613541692*^9}, {3.540735666746585*^9, 3.540735668569768*^9}, 
   3.5407357313170414`*^9, {3.5407358407949886`*^9, 3.5407360187237797`*^9}, 
   3.540736285634468*^9, {3.540743574552005*^9, 3.540743589168466*^9}, 
   3.5407437453290806`*^9, {3.5407449693432217`*^9, 3.5407450477913933`*^9}, 
   3.5408100116315627`*^9, {3.5408271337343445`*^9, 3.5408272125682664`*^9}, {
   3.5408272470237117`*^9, 3.540827249487958*^9}, 3.540829853374338*^9, {
   3.540834536711508*^9, 3.540834549818508*^9}, {3.540835376075508*^9, 
   3.5408353791065083`*^9}, {3.5486680085955563`*^9, 3.548668021375556*^9}, {
   3.548675078320631*^9, 3.5486751087606745`*^9}, {3.5486778242394075`*^9, 
   3.5486778337023535`*^9}, 3.5489730781165695`*^9, 3.623816984623373*^9, {
   3.841307771558899*^9, 3.8413078263935432`*^9}, {3.84132017295686*^9, 
   3.841320189357894*^9}, {3.841320258954052*^9, 3.841320264709002*^9}, {
   3.841321715959915*^9, 3.841321722347062*^9}, {3.841325212718853*^9, 
   3.8413252260432587`*^9}},
 CellLabel->
  "In[506]:=",ExpressionUUID->"e9be814a-67ce-480d-ab13-498a1120acf8"],

Cell["\<\
Let' s have a button to generate random sentences. We\[CloseCurlyQuote]ll be \
much more interesting a little bit below, but unit-test the gadgetry so far. \
Press this button as many times as you like.\
\>", "Text",
 CellChangeTimes->{{3.841686444668406*^9, 3.841686480785296*^9}, {
  3.911254708961878*^9, 3.911254765383222*^9}, {3.911297547266473*^9, 
  3.911297548608899*^9}},ExpressionUUID->"6e79fccb-9016-4d0b-860b-\
d131f326a361"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"gengen", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"generateSentence", "[", 
         RowBox[{"FProbabilized", ",", "FVar", ",", 
          RowBox[{"terminalsFromGrammar", "@", "F"}], ",", "10"}], "]"}], "//",
         "InputForm"}], ")"}], "&"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"DynamicModule", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"foo", "=", 
       RowBox[{"gengen", "[", "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Manipulate", "[", 
      RowBox[{"foo", ",", 
       RowBox[{"Button", "[", 
        RowBox[{"\"\<GEN\>\"", ",", 
         RowBox[{"foo", "=", 
          RowBox[{"gengen", "[", "]"}]}]}], "]"}]}], "]"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.84158939501011*^9, 3.8415894024582977`*^9}, {
  3.841594148962861*^9, 3.841594201482233*^9}, {3.841611020731133*^9, 
  3.841611156617223*^9}, {3.8416111929794416`*^9, 3.8416112669821997`*^9}, {
  3.84161179155472*^9, 3.841611837320256*^9}, {3.841611904837119*^9, 
  3.841611911905628*^9}, {3.911297472005267*^9, 3.911297536740953*^9}},
 CellLabel->
  "In[507]:=",ExpressionUUID->"3746a2c7-605e-4e00-bf50-ad538a4fec9c"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`foo$$ = 
  InputForm[{Times, -$CellContext`y, $CellContext`x^(-1)}]}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
     Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
     1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
       Hold[
        Button["GEN", $CellContext`foo$$ = (InputForm[
           $CellContext`generateSentence[$CellContext`FProbabilized, \
$CellContext`FVar, 
            $CellContext`terminalsFromGrammar[$CellContext`F], 10]]& )[]]], 
       Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
     233., {4.1535, 13.962}}, Typeset`update$$ = 0, Typeset`initDone$$, 
     Typeset`skipInitDone$$ = True}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, "Variables" :> {}, "ControllerVariables" :> {}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, 
       "Body" :> $CellContext`foo$$, "Specifications" :> {
         Button["GEN", $CellContext`foo$$ = (InputForm[
            $CellContext`generateSentence[$CellContext`FProbabilized, \
$CellContext`FVar, 
             $CellContext`terminalsFromGrammar[$CellContext`F], 10]]& )[]]}, 
       "Options" :> {}, "DefaultOptions" :> {}],
      ImageSizeCache->{299., {78., 86.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{{3.84161179605304*^9, 3.841611819985276*^9}, {
   3.841611889800503*^9, 3.841611912811335*^9}, 3.841613465508382*^9, 
   3.84161354655009*^9, 3.841648962126099*^9, 3.8416490317486134`*^9, 
   3.841649119416573*^9, 3.841649295137373*^9, 3.8416864899709377`*^9, 
   3.8416873289142447`*^9, 3.841687413538128*^9, 3.841753963543186*^9, 
   3.841754452194365*^9, {3.841760382996584*^9, 3.841760401929223*^9}, 
   3.911252420951803*^9, 3.9112543830549593`*^9, 3.911254647293797*^9, 
   3.911297451864938*^9, 3.911297537772089*^9, 3.91236877889635*^9, {
   3.912369933054652*^9, 3.912369955312078*^9}, {3.9125453556477213`*^9, 
   3.912545374590189*^9}},
 CellLabel->
  "Out[507]=",ExpressionUUID->"e0a3d009-7f06-437b-9ba6-299e75117049"]
}, Open  ]],

Cell["\<\
Now we have utterances in the grammar. Let\[CloseCurlyQuote]s parse them and \
display them.\
\>", "Text",
 CellChangeTimes->{{3.841686512821446*^9, 
  3.841686527286091*^9}},ExpressionUUID->"3e75b929-8e73-4998-9ba4-\
ddb3bc9bebcf"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["DATA-DRIVEN PARSING", "Chapter",
 CellChangeTimes->{{3.5486819478251095`*^9, 3.548681952882109*^9}, {
  3.548758326382139*^9, 
  3.5487583300153465`*^9}},ExpressionUUID->"d92ffcbc-9f80-4bef-bc3e-\
c04e4499c54a"],

Cell[TextData[{
 "Can we write ",
 StyleBox["parserFromGrammar", "Input"],
 ", a function that writes a parser from a grammar? Such a thing is analogous \
to ",
 StyleBox["yacc", "Input"],
 ", but our version is gracefully short because it exploits convenient \
properties of PPF. Implementing a general-purpose parser generator is a large \
task. Our objective, here, is to show the straightforward principles behind \
such a task."
}], "Text",
 CellChangeTimes->{{3.5487554380390053`*^9, 3.548755477067683*^9}, {
  3.5487555092723417`*^9, 3.548755543793695*^9}, {3.548762506442221*^9, 
  3.5487625532869053`*^9}, {3.549361448425909*^9, 3.5493614546212635`*^9}, {
  3.841686563935006*^9, 3.8416865948679543`*^9}, {3.8416868049188004`*^9, 
  3.841686836320619*^9}, {3.84175398040324*^9, 3.841754005342433*^9}, {
  3.841754171145508*^9, 3.841754186794711*^9}, {3.911253149087906*^9, 
  3.911253151110777*^9}, {3.912372113740757*^9, 
  3.912372155627091*^9}},ExpressionUUID->"524e96a9-af81-44bd-ad9b-\
48f2386f9495"],

Cell["\<\
Any of our parsers takes a stream of tokens (an utterance) and a tree, then \
iteratively augments the tree by side effect. We don\[CloseCurlyQuote]t write \
down the function signature for a parser explicitly; just remember it.\
\>", "Text",
 CellChangeTimes->{{3.5487554380390053`*^9, 3.548755477067683*^9}, {
   3.5487555092723417`*^9, 3.548755543793695*^9}, {3.548762506442221*^9, 
   3.5487625532869053`*^9}, {3.549361448425909*^9, 3.5493614546212635`*^9}, {
   3.841686563935006*^9, 3.8416865948679543`*^9}, {3.8416868049188004`*^9, 
   3.841686836320619*^9}, {3.84175398040324*^9, 3.841754005342433*^9}, {
   3.841754171145508*^9, 3.841754206768612*^9}, {3.841760116956628*^9, 
   3.841760133119079*^9}, 
   3.91125323593677*^9},ExpressionUUID->"82079b4d-a9ac-43dc-a4df-\
df03ba09c575"],

Cell[TextData[{
 "Here is a ",
 StyleBox["parserFromGrammar", "Input"],
 " that works on any of our PPF grammars:"
}], "Text",
 CellChangeTimes->{{3.548762856688242*^9, 3.5487629211676893`*^9}, 
   3.5493614686050634`*^9, 3.6456560697146482`*^9, {3.841220551678124*^9, 
   3.841220554222797*^9}, {3.841311363879964*^9, 3.8413114080731792`*^9}, {
   3.84140509485247*^9, 3.841405105874873*^9}, {3.841686012453442*^9, 
   3.84168601675589*^9}, 3.841686296385582*^9, {3.841754011117882*^9, 
   3.841754056782137*^9}},ExpressionUUID->"f60a7c78-847c-46bd-9552-\
2906164d5936"],

Cell["First, inspect an example grammar to guide our work:", "Text",
 CellChangeTimes->{{3.548762588766453*^9, 3.548762593414918*^9}, {
  3.8417540619901047`*^9, 
  3.841754076817752*^9}},ExpressionUUID->"3e16c00a-bd9d-497c-a778-\
a97c11c9d4b7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DownValues", "[", "F", "]"}], "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.5487625599515715`*^9, 3.5487625668232584`*^9}, {
  3.5487630130858803`*^9, 3.5487630150450764`*^9}, {3.62384938602829*^9, 
  3.623849420254168*^9}, {3.841686021068759*^9, 3.841686027818789*^9}},
 CellLabel->
  "In[508]:=",ExpressionUUID->"80672418-2dc1-4b80-b419-c850f8d30180"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{"HoldPattern", "[", 
        RowBox[{"F", "[", "Expr", "]"}], "]"}], "\[RuleDelayed]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "FSum", "}"}], ",", 
         RowBox[{"{", "FProd", "}"}], ",", 
         RowBox[{"{", "FVar", "}"}], ",", 
         RowBox[{"{", "FInt", "}"}]}], "}"}]}]},
     {
      RowBox[{
       RowBox[{"HoldPattern", "[", 
        RowBox[{"F", "[", "FInt", "]"}], "]"}], "\[RuleDelayed]", 
       RowBox[{"{", 
        RowBox[{"{", "RandomInteger", "}"}], "}"}]}]},
     {
      RowBox[{
       RowBox[{"HoldPattern", "[", 
        RowBox[{"F", "[", "FProd", "]"}], "]"}], "\[RuleDelayed]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"Times", ",", "Expr", ",", "Expr"}], "}"}], "}"}]}]},
     {
      RowBox[{
       RowBox[{"HoldPattern", "[", 
        RowBox[{"F", "[", "FSum", "]"}], "]"}], "\[RuleDelayed]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"Plus", ",", "Expr", ",", "Expr"}], "}"}], "}"}]}]},
     {
      RowBox[{
       RowBox[{"HoldPattern", "[", 
        RowBox[{"F", "[", "FVar", "]"}], "]"}], "\[RuleDelayed]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "x", "}"}], ",", 
         RowBox[{"{", "y", "}"}], ",", 
         RowBox[{"{", "z", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"-", "x"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"-", "y"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"-", "z"}], "}"}], ",", 
         RowBox[{"{", 
          FractionBox["1", "x"], "}"}], ",", 
         RowBox[{"{", 
          FractionBox["1", "y"], "}"}], ",", 
         RowBox[{"{", 
          FractionBox["1", "z"], "}"}]}], "}"}]}]},
     {
      RowBox[{
       RowBox[{"HoldPattern", "[", 
        RowBox[{"F", "[", "Start", "]"}], "]"}], "\[RuleDelayed]", 
       RowBox[{"{", 
        RowBox[{"{", "Expr", "}"}], "}"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.5487625675613327`*^9, 3.5487630157541475`*^9, 3.5487631756511354`*^9, 
   3.5487636898375487`*^9, 3.548775160984688*^9, 3.5487814732573595`*^9, 
   3.5487896621707387`*^9, 3.5487897433450837`*^9, 3.548790088414831*^9, 
   3.548790149074897*^9, 3.548790251859174*^9, 3.5487916106652565`*^9, 
   3.548900644642945*^9, 3.5489349289270716`*^9, 3.5489692689286966`*^9, 
   3.5489723835578427`*^9, 3.548972507323922*^9, 3.5489730905742817`*^9, 
   3.5489848962275267`*^9, 3.5490190922731657`*^9, 3.5490209307053375`*^9, 
   3.5490210483743525`*^9, 3.5490485361934175`*^9, 3.549361135952037*^9, 
   3.549503329767058*^9, 3.5495890812217607`*^9, 3.549633476939409*^9, 
   3.54963436869458*^9, 3.5496347061923265`*^9, 3.5496349943624983`*^9, 
   3.5496360758748393`*^9, 3.549652448097766*^9, {3.5499647875479794`*^9, 
   3.5499648022678213`*^9}, 3.5499649110180416`*^9, 3.549970213889349*^9, 
   3.5500678477869887`*^9, 3.55014628718946*^9, 3.550148470480337*^9, 
   3.5501529402311683`*^9, 3.55015302225486*^9, 3.550153154501424*^9, 
   3.550221812646269*^9, 3.55022432574501*^9, 3.5503645237328806`*^9, 
   3.5504120024856024`*^9, 3.5507106075569477`*^9, 3.6234098607025023`*^9, {
   3.623849395843594*^9, 3.623849421032383*^9}, 3.623890754733069*^9, 
   3.624409979137361*^9, 3.629583252409712*^9, 3.6295841313051643`*^9, 
   3.645653953849681*^9, 3.6456562489491053`*^9, 3.645748032734416*^9, {
   3.687638569921071*^9, 3.687638584837092*^9}, 3.84115521417316*^9, 
   3.841163857056876*^9, 3.841164030198409*^9, 3.841164605719864*^9, 
   3.841166569754738*^9, 3.841166679330228*^9, 3.841166860497567*^9, 
   3.841166896146455*^9, 3.841220348245702*^9, 3.8412288861433363`*^9, 
   3.841230084860323*^9, 3.8412301947716722`*^9, 3.841230306815106*^9, 
   3.8412489716106043`*^9, 3.8412490273685493`*^9, 3.8412490743645287`*^9, 
   3.841311421211934*^9, 3.841318269576458*^9, 3.841322099259945*^9, 
   3.8413224025820007`*^9, 3.841324757596486*^9, 3.8413249872556973`*^9, 
   3.84133292386726*^9, 3.841350163878641*^9, 3.841352237348186*^9, 
   3.8414034422031603`*^9, 3.8414051083421*^9, 3.841405364566124*^9, 
   3.841422365600792*^9, {3.841686022779428*^9, 3.841686028720346*^9}, 
   3.8416873290036297`*^9, 3.8416874136751947`*^9, 3.841754078820485*^9, 
   3.84175445226657*^9, {3.8417603830399218`*^9, 3.841760401962646*^9}, 
   3.9112524209723587`*^9, 3.911254383075932*^9, 3.911254647540243*^9, 
   3.911297451885611*^9, 3.912368778913438*^9, {3.912369933076076*^9, 
   3.912369955336659*^9}, 3.9125454169712563`*^9},
 CellLabel->
  "Out[508]//TableForm=",ExpressionUUID->"ab6b7afb-db62-4f8c-8728-\
2a4266c32622"]
}, Open  ]],

Cell["\<\
Next, we need functions to disassemble an utterance into its constituent \
pieces. \
\>", "Text",
 CellChangeTimes->{{3.8416865413694267`*^9, 3.8416865582520437`*^9}, {
  3.841760147527206*^9, 
  3.8417601719867687`*^9}},ExpressionUUID->"ebf99490-484d-4750-ab27-\
6d656f0d0451"],

Cell[CellGroupData[{

Cell["\<\
prefix, 
suffix, 
terminalsFromRule, 
nonTerminalHeadFromRule, 
arityFromPrefixRule\
\>", "Section",
 CellChangeTimes->{{3.5487626174793234`*^9, 3.548762630336609*^9}, {
  3.548765860793623*^9, 3.548765868259369*^9}, {3.5490189989361715`*^9, 
  3.5490190341765385`*^9}},ExpressionUUID->"36e32a9d-5bcc-4960-b4fd-\
405da8b8b783"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClearAll", "[", "\[IndentingNewLine]", 
   RowBox[{
   "prefix", ",", "suffix", ",", "\[IndentingNewLine]", "terminalsFromRule", 
    ",", "\[IndentingNewLine]", "nonTerminalHeadFromRule", ",", 
    "\[IndentingNewLine]", "arityFromPrefixRule"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.5487629341629887`*^9, 3.548762939064479*^9}, {
  3.5487630046040325`*^9, 3.5487630093645086`*^9}, {3.5487635846270285`*^9, 
  3.548763628755441*^9}, {3.548763659085474*^9, 3.548763717217286*^9}, {
  3.5487637576023245`*^9, 3.5487637693554997`*^9}, {3.5487638266782317`*^9, 
  3.5487639483303957`*^9}, {3.548764013751937*^9, 3.548764030776639*^9}, {
  3.5487640706826296`*^9, 3.5487641701285734`*^9}, {3.5487642124928093`*^9, 
  3.548764212763836*^9}, {3.548764743316886*^9, 3.5487648898635397`*^9}, {
  3.548765687999345*^9, 3.5487658401675606`*^9}, {3.5487823848683596`*^9, 
  3.5487823961723595`*^9}, {3.623409924055402*^9, 3.62340992582513*^9}},
 CellLabel->
  "In[509]:=",ExpressionUUID->"aebe5819-f0cb-456b-89e3-74f23ecda387"],

Cell[BoxData[
 RowBox[{
  RowBox[{"prefix", "=", "First"}], ";", 
  RowBox[{"suffix", "=", "Rest"}], ";"}]], "Input",
 CellChangeTimes->{{3.5487629341629887`*^9, 3.548762939064479*^9}, {
   3.5487630046040325`*^9, 3.5487630093645086`*^9}, {3.5487635846270285`*^9, 
   3.548763628755441*^9}, {3.548763659085474*^9, 3.548763717217286*^9}, {
   3.5487637576023245`*^9, 3.5487637693554997`*^9}, {3.5487638266782317`*^9, 
   3.5487639483303957`*^9}, {3.548764013751937*^9, 3.548764030776639*^9}, {
   3.5487640706826296`*^9, 3.5487641701285734`*^9}, {3.5487642124928093`*^9, 
   3.548764212763836*^9}, {3.548764743316886*^9, 3.5487648898635397`*^9}, {
   3.548765687999345*^9, 3.5487658401675606`*^9}, {3.5487823848683596`*^9, 
   3.5487823961723595`*^9}, 3.623409924055402*^9, {3.62388740399349*^9, 
   3.623887406767249*^9}},
 CellLabel->
  "In[510]:=",ExpressionUUID->"3301b22c-c588-42ac-b72f-f878b5fc808c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"terminalsFromRule", "[", 
    RowBox[{"rule_", ",", "nonTerminals_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"prefix", "/@", 
      RowBox[{"rule", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"MemberQ", "[", 
        RowBox[{"nonTerminals", ",", "#"}], "]"}]}], "&"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.5487629341629887`*^9, 3.548762939064479*^9}, {
   3.5487630046040325`*^9, 3.5487630093645086`*^9}, {3.5487635846270285`*^9, 
   3.548763628755441*^9}, {3.548763659085474*^9, 3.548763717217286*^9}, {
   3.5487637576023245`*^9, 3.5487637693554997`*^9}, {3.5487638266782317`*^9, 
   3.5487639483303957`*^9}, {3.548764013751937*^9, 3.548764030776639*^9}, {
   3.5487640706826296`*^9, 3.5487641701285734`*^9}, {3.5487642124928093`*^9, 
   3.548764212763836*^9}, {3.548764743316886*^9, 3.5487648898635397`*^9}, {
   3.548765687999345*^9, 3.5487658401675606`*^9}, {3.5487823848683596`*^9, 
   3.5487823961723595`*^9}, 3.623409924055402*^9, {3.62388740399349*^9, 
   3.623887413492853*^9}},
 CellLabel->
  "In[511]:=",ExpressionUUID->"1d4628ef-36f8-4b95-9e63-545e84460510"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"nonTerminalHeadFromRule", "[", 
    RowBox[{"rule_", ",", "nonTerminals_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"h", "=", 
       RowBox[{"rule", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"nonTerminals", ",", "h"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Throw", "[", 
         RowBox[{"{", 
          RowBox[{
          "\"\<NON-TERMINAL HEAD FROM RULE: CATASTROPHE\>\"", ",", " ", 
           "nonTerminals", ",", " ", "h"}], "}"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "h"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5487629341629887`*^9, 3.548762939064479*^9}, {
   3.5487630046040325`*^9, 3.5487630093645086`*^9}, {3.5487635846270285`*^9, 
   3.548763628755441*^9}, {3.548763659085474*^9, 3.548763717217286*^9}, {
   3.5487637576023245`*^9, 3.5487637693554997`*^9}, {3.5487638266782317`*^9, 
   3.5487639483303957`*^9}, {3.548764013751937*^9, 3.548764030776639*^9}, {
   3.5487640706826296`*^9, 3.5487641701285734`*^9}, {3.5487642124928093`*^9, 
   3.548764212763836*^9}, {3.548764743316886*^9, 3.5487648898635397`*^9}, {
   3.548765687999345*^9, 3.5487658401675606`*^9}, {3.5487823848683596`*^9, 
   3.5487823961723595`*^9}, 3.623409924055402*^9, {3.62388740399349*^9, 
   3.6238874231073313`*^9}, 3.8413114816780643`*^9},
 CellLabel->
  "In[512]:=",ExpressionUUID->"24deb93c-24d8-4cab-9b18-60d4bf2be014"],

Cell[BoxData[
 RowBox[{
  RowBox[{"arityFromPrefixRule", "[", "rule_", "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"lens", "=", 
      RowBox[{"Union", "[", 
       RowBox[{"Length", "/@", 
        RowBox[{"suffix", "/@", 
         RowBox[{"rule", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", "lens"}], ">", "1"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Throw", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<ARITY FROM PREFIX RULE: CATASTROPHE\>\"", ",", "lens"}],
          "}"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"First", "@", "lens"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5487629341629887`*^9, 3.548762939064479*^9}, {
   3.5487630046040325`*^9, 3.5487630093645086`*^9}, {3.5487635846270285`*^9, 
   3.548763628755441*^9}, {3.548763659085474*^9, 3.548763717217286*^9}, {
   3.5487637576023245`*^9, 3.5487637693554997`*^9}, {3.5487638266782317`*^9, 
   3.5487639483303957`*^9}, {3.548764013751937*^9, 3.548764030776639*^9}, {
   3.5487640706826296`*^9, 3.5487641701285734`*^9}, {3.5487642124928093`*^9, 
   3.548764212763836*^9}, {3.548764743316886*^9, 3.5487648898635397`*^9}, {
   3.548765687999345*^9, 3.5487658401675606`*^9}, {3.5487823848683596`*^9, 
   3.5487823961723595`*^9}, 3.623409924055402*^9, {3.62388740399349*^9, 
   3.6238874231073313`*^9}},
 CellLabel->
  "In[513]:=",ExpressionUUID->"792ce188-984a-4908-a965-4b0f6e4c07f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["genParserBody, parserDefFromGrammarRule", "Section",
 CellChangeTimes->{{3.549018840645653*^9, 3.549018849365039*^9}, 
   3.549019072170439*^9},ExpressionUUID->"3e07325c-6177-4ccc-8d67-\
8e39374cdc37"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"genParserBody", ",", "parserDefFromGrammarRule"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.5487642551920786`*^9, 3.5487642881003695`*^9}, {
   3.548764554706027*^9, 3.5487646546400194`*^9}, {3.5487660157981215`*^9, 
   3.5487660415416956`*^9}, {3.548766113128854*^9, 3.5487662587504144`*^9}, {
   3.548766354306969*^9, 3.548766372248763*^9}, {3.548766419098448*^9, 
   3.548766548177354*^9}, {3.5487666074362793`*^9, 3.5487666483503704`*^9}, {
   3.548767035927368*^9, 3.548767043084221*^9}, {3.5487670750806675`*^9, 
   3.5487671080330753`*^9}, {3.54876714075253*^9, 3.5487671500136776`*^9}, {
   3.5487671950106764`*^9, 3.548767259594757*^9}, {3.548767368398992*^9, 
   3.54876752142638*^9}, {3.5487676461037607`*^9, 3.5487678702327604`*^9}, {
   3.5487679442047606`*^9, 3.5487680240897603`*^9}, {3.5487681493557606`*^9, 
   3.5487681637187605`*^9}, {3.5487682032967606`*^9, 
   3.5487682305897603`*^9}, {3.54877144842099*^9, 3.5487714494108906`*^9}, {
   3.5487715045073805`*^9, 3.5487715052513065`*^9}, {3.548771668858944*^9, 
   3.5487717150833206`*^9}, {3.548771746280317*^9, 3.548771752079317*^9}, {
   3.548771798253317*^9, 3.548771864978317*^9}, {3.548772022707317*^9, 
   3.548772066840317*^9}, {3.548772413135317*^9, 3.5487724154063168`*^9}, 
   3.548772519258317*^9, {3.548772841491317*^9, 3.548772843065317*^9}, {
   3.548772922161174*^9, 3.5487729482177787`*^9}, {3.5487730058785443`*^9, 
   3.548773128383794*^9}, {3.548773209302885*^9, 3.548773222907245*^9}, {
   3.548773271710125*^9, 3.5487732724541993`*^9}, {3.548773330487002*^9, 
   3.5487733501109643`*^9}, {3.5487734488438363`*^9, 3.548773452019154*^9}, {
   3.5487736822571754`*^9, 3.548773715281478*^9}, {3.5487737481867676`*^9, 
   3.548773751123061*^9}, {3.5487738451564636`*^9, 3.5487738453544836`*^9}, {
   3.5487738850664544`*^9, 3.5487738857055187`*^9}, {3.548773925793707*^9, 
   3.5487739426977067`*^9}, {3.5487742337787066`*^9, 3.548774235997707*^9}, {
   3.5487742997997065`*^9, 3.548774301023707*^9}, {3.548774331758707*^9, 
   3.5487743349817066`*^9}, {3.5487744302897067`*^9, 3.548774446695707*^9}, {
   3.5487747134997067`*^9, 3.5487747617457066`*^9}, {3.5487748199887066`*^9, 
   3.548774989863577*^9}, {3.5487750466912594`*^9, 3.5487751442630157`*^9}, {
   3.548775210149604*^9, 3.5487752109876876`*^9}, {3.548775247444333*^9, 
   3.5487752477653646`*^9}, {3.548775610003585*^9, 3.548775617071292*^9}, {
   3.5487756533529196`*^9, 3.5487756821638002`*^9}, {3.54877573296488*^9, 
   3.548775764479031*^9}, {3.548775852515834*^9, 3.54877588338092*^9}, {
   3.5487759152871103`*^9, 3.5487759200065823`*^9}, {3.5487759761361403`*^9, 
   3.54877598757314*^9}, {3.5487760287661405`*^9, 3.5487760288151407`*^9}, {
   3.548780064862323*^9, 3.5487801132121572`*^9}, 3.5487801525260887`*^9, {
   3.5487801921920547`*^9, 3.5487801947213078`*^9}, {3.548780276643499*^9, 
   3.548780415818415*^9}, {3.5487804472545586`*^9, 3.5487804722370567`*^9}, {
   3.548780754811311*^9, 3.54878078350518*^9}, 3.5487810163844657`*^9, {
   3.5487822609653597`*^9, 3.548782264695359*^9}, {3.5487824043103595`*^9, 
   3.548782406999359*^9}, {3.5487825425123596`*^9, 3.5487826523793592`*^9}, 
   3.5487917755196853`*^9, 3.548972642585658*^9, {3.5489727072943597`*^9, 
   3.5489727573192205`*^9}, {3.54897295748267*^9, 3.5489729626959677`*^9}, {
   3.5489731736280327`*^9, 3.5489731864597664`*^9}, {3.549013568039856*^9, 
   3.549013571847638*^9}, {3.549013683133875*^9, 3.5490136995668154`*^9}, {
   3.549018905772961*^9, 3.5490189233669453`*^9}, {3.54901907300368*^9, 
   3.5490190759598103`*^9}, {3.549361555518035*^9, 3.549361557391142*^9}},
 CellLabel->
  "In[514]:=",ExpressionUUID->"353a9312-83d2-46bb-b6c7-62e214743a0e"],

Cell["For arity-0 productions:", "Text",
 CellChangeTimes->{{3.841221266655713*^9, 
  3.841221275974936*^9}},ExpressionUUID->"4f6aafd7-3aeb-4397-99f0-\
80755bc12b18"],

Cell[BoxData[
 RowBox[{
  RowBox[{"genParserBody", "[", 
   RowBox[{
   "0", ",", "tok_", ",", "toks_", ",", "head_", ",", "parts_", ",", 
    "parse_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"{", 
   RowBox[{"toks", ",", 
    RowBox[{"head", "[", 
     RowBox[{"tok", ",", 
      RowBox[{"Sequence", "@@", "parts"}]}], "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.5487642551920786`*^9, 3.5487642881003695`*^9}, {
   3.548764554706027*^9, 3.5487646546400194`*^9}, {3.5487660157981215`*^9, 
   3.5487660415416956`*^9}, {3.548766113128854*^9, 3.5487662587504144`*^9}, {
   3.548766354306969*^9, 3.548766372248763*^9}, {3.548766419098448*^9, 
   3.548766548177354*^9}, {3.5487666074362793`*^9, 3.5487666483503704`*^9}, {
   3.548767035927368*^9, 3.548767043084221*^9}, {3.5487670750806675`*^9, 
   3.5487671080330753`*^9}, {3.54876714075253*^9, 3.5487671500136776`*^9}, {
   3.5487671950106764`*^9, 3.548767259594757*^9}, {3.548767368398992*^9, 
   3.54876752142638*^9}, {3.5487676461037607`*^9, 3.5487678702327604`*^9}, {
   3.5487679442047606`*^9, 3.5487680240897603`*^9}, {3.5487681493557606`*^9, 
   3.5487681637187605`*^9}, {3.5487682032967606`*^9, 
   3.5487682305897603`*^9}, {3.54877144842099*^9, 3.5487714494108906`*^9}, {
   3.5487715045073805`*^9, 3.5487715052513065`*^9}, {3.548771668858944*^9, 
   3.5487717150833206`*^9}, {3.548771746280317*^9, 3.548771752079317*^9}, {
   3.548771798253317*^9, 3.548771864978317*^9}, {3.548772022707317*^9, 
   3.548772066840317*^9}, {3.548772413135317*^9, 3.5487724154063168`*^9}, 
   3.548772519258317*^9, {3.548772841491317*^9, 3.548772843065317*^9}, {
   3.548772922161174*^9, 3.5487729482177787`*^9}, {3.5487730058785443`*^9, 
   3.548773128383794*^9}, {3.548773209302885*^9, 3.548773222907245*^9}, {
   3.548773271710125*^9, 3.5487732724541993`*^9}, {3.548773330487002*^9, 
   3.5487733501109643`*^9}, {3.5487734488438363`*^9, 3.548773452019154*^9}, {
   3.5487736822571754`*^9, 3.548773715281478*^9}, {3.5487737481867676`*^9, 
   3.548773751123061*^9}, {3.5487738451564636`*^9, 3.5487738453544836`*^9}, {
   3.5487738850664544`*^9, 3.5487738857055187`*^9}, {3.548773925793707*^9, 
   3.5487739426977067`*^9}, {3.5487742337787066`*^9, 3.548774235997707*^9}, {
   3.5487742997997065`*^9, 3.548774301023707*^9}, {3.548774331758707*^9, 
   3.5487743349817066`*^9}, {3.5487744302897067`*^9, 3.548774446695707*^9}, {
   3.5487747134997067`*^9, 3.5487747617457066`*^9}, {3.5487748199887066`*^9, 
   3.548774989863577*^9}, {3.5487750466912594`*^9, 3.5487751442630157`*^9}, {
   3.548775210149604*^9, 3.5487752109876876`*^9}, {3.548775247444333*^9, 
   3.5487752477653646`*^9}, {3.548775610003585*^9, 3.548775617071292*^9}, {
   3.5487756533529196`*^9, 3.5487756821638002`*^9}, {3.54877573296488*^9, 
   3.548775764479031*^9}, {3.548775852515834*^9, 3.54877588338092*^9}, {
   3.5487759152871103`*^9, 3.5487759200065823`*^9}, {3.5487759761361403`*^9, 
   3.54877598757314*^9}, {3.5487760287661405`*^9, 3.5487760288151407`*^9}, {
   3.548780064862323*^9, 3.5487801132121572`*^9}, 3.5487801525260887`*^9, {
   3.5487801921920547`*^9, 3.5487801947213078`*^9}, {3.548780276643499*^9, 
   3.548780415818415*^9}, {3.5487804472545586`*^9, 3.5487804722370567`*^9}, {
   3.548780754811311*^9, 3.54878078350518*^9}, 3.5487810163844657`*^9, {
   3.5487822609653597`*^9, 3.548782264695359*^9}, {3.5487824043103595`*^9, 
   3.548782406999359*^9}, {3.5487825425123596`*^9, 3.5487826523793592`*^9}, 
   3.5487917755196853`*^9, 3.548972642585658*^9, {3.5489727072943597`*^9, 
   3.5489727573192205`*^9}, {3.54897295748267*^9, 3.5489729626959677`*^9}, {
   3.5489731736280327`*^9, 3.5489731864597664`*^9}, {3.549013568039856*^9, 
   3.549013571847638*^9}, {3.549013683133875*^9, 3.5490136995668154`*^9}, {
   3.549018905772961*^9, 3.5490189233669453`*^9}, {3.54901907300368*^9, 
   3.5490190759598103`*^9}, {3.549361555518035*^9, 3.5493615617733927`*^9}},
 CellLabel->
  "In[515]:=",ExpressionUUID->"345fb820-3dde-4a95-b0cc-7b9702ce6e5d"],

Cell["Recurse for productions with right-hand sides", "Text",
 CellChangeTimes->{{3.8412212877888823`*^9, 3.8412213059395742`*^9}, {
  3.841754151757331*^9, 
  3.841754154499384*^9}},ExpressionUUID->"7feadf99-fc45-4efb-b558-\
76eb9d6eb4c5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"remToks", ",", "partTree"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"remToks", "[", "list_List", "]"}], ":=", 
   RowBox[{"First", "@", "list"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"partTree", "[", "list_List", "]"}], ":=", 
    RowBox[{"First", "@", 
     RowBox[{"Rest", "@", "list"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox["genParserBody",
    Background->RGBColor[1, 1, 0]], "[", 
   RowBox[{
    RowBox[{"arity_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"#", ">", "0"}], "&"}], ")"}]}], ",", "tok_", ",", "toks_", 
    ",", "head_", ",", "parts_", ",", "parse_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"rec", "=", 
      RowBox[{"parse", "[", "toks", "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     StyleBox["genParserBody",
      Background->RGBColor[1, 1, 0]], "[", 
     RowBox[{
      RowBox[{"arity", "-", "1"}], ",", "tok", ",", 
      RowBox[{"remToks", "@", "rec"}], ",", "\[IndentingNewLine]", "head", 
      ",", 
      RowBox[{"Join", "[", 
       RowBox[{"parts", ",", 
        RowBox[{"{", 
         RowBox[{"partTree", "@", "rec"}], "}"}]}], "]"}], ",", "parse"}], 
     "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.5487642551920786`*^9, 3.5487642881003695`*^9}, {
   3.548764554706027*^9, 3.5487646546400194`*^9}, {3.5487660157981215`*^9, 
   3.5487660415416956`*^9}, {3.548766113128854*^9, 3.5487662587504144`*^9}, {
   3.548766354306969*^9, 3.548766372248763*^9}, {3.548766419098448*^9, 
   3.548766548177354*^9}, {3.5487666074362793`*^9, 3.5487666483503704`*^9}, {
   3.548767035927368*^9, 3.548767043084221*^9}, {3.5487670750806675`*^9, 
   3.5487671080330753`*^9}, {3.54876714075253*^9, 3.5487671500136776`*^9}, {
   3.5487671950106764`*^9, 3.548767259594757*^9}, {3.548767368398992*^9, 
   3.54876752142638*^9}, {3.5487676461037607`*^9, 3.5487678702327604`*^9}, {
   3.5487679442047606`*^9, 3.5487680240897603`*^9}, {3.5487681493557606`*^9, 
   3.5487681637187605`*^9}, {3.5487682032967606`*^9, 
   3.5487682305897603`*^9}, {3.54877144842099*^9, 3.5487714494108906`*^9}, {
   3.5487715045073805`*^9, 3.5487715052513065`*^9}, {3.548771668858944*^9, 
   3.5487717150833206`*^9}, {3.548771746280317*^9, 3.548771752079317*^9}, {
   3.548771798253317*^9, 3.548771864978317*^9}, {3.548772022707317*^9, 
   3.548772066840317*^9}, {3.548772413135317*^9, 3.5487724154063168`*^9}, 
   3.548772519258317*^9, {3.548772841491317*^9, 3.548772843065317*^9}, {
   3.548772922161174*^9, 3.5487729482177787`*^9}, {3.5487730058785443`*^9, 
   3.548773128383794*^9}, {3.548773209302885*^9, 3.548773222907245*^9}, {
   3.548773271710125*^9, 3.5487732724541993`*^9}, {3.548773330487002*^9, 
   3.5487733501109643`*^9}, {3.5487734488438363`*^9, 3.548773452019154*^9}, {
   3.5487736822571754`*^9, 3.548773715281478*^9}, {3.5487737481867676`*^9, 
   3.548773751123061*^9}, {3.5487738451564636`*^9, 3.5487738453544836`*^9}, {
   3.5487738850664544`*^9, 3.5487738857055187`*^9}, {3.548773925793707*^9, 
   3.5487739426977067`*^9}, {3.5487742337787066`*^9, 3.548774235997707*^9}, {
   3.5487742997997065`*^9, 3.548774301023707*^9}, {3.548774331758707*^9, 
   3.5487743349817066`*^9}, {3.5487744302897067`*^9, 3.548774446695707*^9}, {
   3.5487747134997067`*^9, 3.5487747617457066`*^9}, {3.5487748199887066`*^9, 
   3.548774989863577*^9}, {3.5487750466912594`*^9, 3.5487751442630157`*^9}, {
   3.548775210149604*^9, 3.5487752109876876`*^9}, {3.548775247444333*^9, 
   3.5487752477653646`*^9}, {3.548775610003585*^9, 3.548775617071292*^9}, {
   3.5487756533529196`*^9, 3.5487756821638002`*^9}, {3.54877573296488*^9, 
   3.548775764479031*^9}, {3.548775852515834*^9, 3.54877588338092*^9}, {
   3.5487759152871103`*^9, 3.5487759200065823`*^9}, {3.5487759761361403`*^9, 
   3.54877598757314*^9}, {3.5487760287661405`*^9, 3.5487760288151407`*^9}, {
   3.548780064862323*^9, 3.5487801132121572`*^9}, 3.5487801525260887`*^9, {
   3.5487801921920547`*^9, 3.5487801947213078`*^9}, {3.548780276643499*^9, 
   3.548780415818415*^9}, {3.5487804472545586`*^9, 3.5487804722370567`*^9}, {
   3.548780754811311*^9, 3.54878078350518*^9}, 3.5487810163844657`*^9, {
   3.5487822609653597`*^9, 3.548782264695359*^9}, {3.5487824043103595`*^9, 
   3.548782406999359*^9}, {3.5487825425123596`*^9, 3.5487826523793592`*^9}, 
   3.5487917755196853`*^9, 3.548972642585658*^9, {3.5489727072943597`*^9, 
   3.5489727573192205`*^9}, {3.54897295748267*^9, 3.5489729626959677`*^9}, {
   3.5489731736280327`*^9, 3.5489731864597664`*^9}, {3.549013568039856*^9, 
   3.549013571847638*^9}, {3.549013683133875*^9, 3.5490136995668154`*^9}, {
   3.549018905772961*^9, 3.5490189233669453`*^9}, {3.54901907300368*^9, 
   3.5490190759598103`*^9}, {3.549361555518035*^9, 3.5493615645015483`*^9}, {
   3.84122062885121*^9, 3.8412206556264*^9}, 3.8412212538968153`*^9, {
   3.841311579570304*^9, 3.841311590250588*^9}, {3.841686248485667*^9, 
   3.841686265073935*^9}},
 CellLabel->
  "In[516]:=",ExpressionUUID->"876773fd-7a70-4239-b947-a10b5bfd96ee"],

Cell[TextData[{
 "Accumulate the above overloads of ",
 StyleBox["parserTargetSym", "Input"],
 ". For each set of terminals in a rule, write a ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " pattern to recognize those ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " ",
 StyleBox["Alternatives", "Input"],
 " (",
 StyleBox["firstPattern", "Input"],
 " below). The second pattern just picks up the tree-so-far. ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " ",
 StyleBox["Alternatives", "Input"],
 " are not our alternatives. They are part of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s pattern sub-language."
}], "Text",
 CellChangeTimes->{{3.841311712705439*^9, 3.841311790829403*^9}, {
  3.8413119076885633`*^9, 3.841311915040742*^9}, {3.841316524431582*^9, 
  3.841316622006033*^9}, {3.84175411299279*^9, 3.841754115268146*^9}, {
  3.841754249558713*^9, 3.841754268390995*^9}, {3.912372239094277*^9, 
  3.912372299999194*^9}, {3.912545489736084*^9, 
  3.912545489828595*^9}},ExpressionUUID->"ecdf866c-dffd-4766-b2c2-\
930a04c91e33"],

Cell[BoxData[
 RowBox[{
  RowBox[{"parserDefFromGrammarRule", "[", 
   RowBox[{
    StyleBox[
     RowBox[{
      StyleBox["parserTargetSym",
       Background->RGBColor[1, 1, 0]], "_"}]], ",", "rule_", ",", 
    "nonTerminals_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tok", ",", "toks", ",", "tree", ",", "parts", ",", "xs"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ts", "=", 
          RowBox[{"terminalsFromRule", "[", 
           RowBox[{"rule", ",", "nonTerminals"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"h", "=", 
          RowBox[{"nonTerminalHeadFromRule", "[", 
           RowBox[{"rule", ",", "nonTerminals"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"a", "=", 
          RowBox[{"arityFromPrefixRule", "[", "rule", "]"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "@", "ts"}], "=!=", "0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", "then", " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"firstPattern", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"tok", ":", 
                 RowBox[{"Alternatives", "@@", "ts"}]}], ",", "toks___"}], 
               "}"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"secondPattern", "=", 
              RowBox[{"tree_", ":", "Null"}]}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"perform", " ", "the", " ", "def", " ", "in"}], "-", 
             RowBox[{"place", " ", "by", " ", "side"}], "-", 
             RowBox[{
             "effect", " ", "on", " ", "the", " ", "given", " ", "symbol"}]}],
             " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             StyleBox["parserTargetSym",
              Background->RGBColor[1, 1, 0]], "[", 
             RowBox[{"firstPattern", ",", "secondPattern"}], "]"}], ":=", 
            "\[IndentingNewLine]", 
            RowBox[{
             StyleBox["genParserBody",
              Background->RGBColor[1, 0.85, 0.85]], "[", 
             RowBox[{"a", ",", "tok", ",", 
              RowBox[{"{", "toks", "}"}], ",", "h", ",", 
              RowBox[{"{", "}"}], ",", 
              StyleBox["parserTargetSym",
               Background->RGBColor[1, 1, 0]]}], "]"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", "else", " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           StyleBox["parserTargetSym",
            Background->RGBColor[1, 1, 0]], "[", 
           RowBox[{
            RowBox[{"{", "}"}], ",", 
            RowBox[{"tree_", ":", "Null"}]}], "]"}], ":=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "}"}], ",", "tree"}], "}"}]}]}], "]"}]}], "]"}], ";",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       StyleBox["parserTargetSym",
        Background->RGBColor[1, 1, 0]], "[", "xs___", "]"}], ":=", 
      RowBox[{"Throw", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"ToString", "@", 
           StyleBox["parserTargetSym",
            Background->RGBColor[1, 1, 0]]}], "<>", 
          "\"\<: CATASTROPHE: \>\""}], ",", "xs"}], "}"}], "]"}]}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5487642551920786`*^9, 3.5487642881003695`*^9}, {
   3.548764554706027*^9, 3.5487646546400194`*^9}, {3.5487660157981215`*^9, 
   3.5487660415416956`*^9}, {3.548766113128854*^9, 3.5487662587504144`*^9}, {
   3.548766354306969*^9, 3.548766372248763*^9}, {3.548766419098448*^9, 
   3.548766548177354*^9}, {3.5487666074362793`*^9, 3.5487666483503704`*^9}, {
   3.548767035927368*^9, 3.548767043084221*^9}, {3.5487670750806675`*^9, 
   3.5487671080330753`*^9}, {3.54876714075253*^9, 3.5487671500136776`*^9}, {
   3.5487671950106764`*^9, 3.548767259594757*^9}, {3.548767368398992*^9, 
   3.54876752142638*^9}, {3.5487676461037607`*^9, 3.5487678702327604`*^9}, {
   3.5487679442047606`*^9, 3.5487680240897603`*^9}, {3.5487681493557606`*^9, 
   3.5487681637187605`*^9}, {3.5487682032967606`*^9, 
   3.5487682305897603`*^9}, {3.54877144842099*^9, 3.5487714494108906`*^9}, {
   3.5487715045073805`*^9, 3.5487715052513065`*^9}, {3.548771668858944*^9, 
   3.5487717150833206`*^9}, {3.548771746280317*^9, 3.548771752079317*^9}, {
   3.548771798253317*^9, 3.548771864978317*^9}, {3.548772022707317*^9, 
   3.548772066840317*^9}, {3.548772413135317*^9, 3.5487724154063168`*^9}, 
   3.548772519258317*^9, {3.548772841491317*^9, 3.548772843065317*^9}, {
   3.548772922161174*^9, 3.5487729482177787`*^9}, {3.5487730058785443`*^9, 
   3.548773128383794*^9}, {3.548773209302885*^9, 3.548773222907245*^9}, {
   3.548773271710125*^9, 3.5487732724541993`*^9}, {3.548773330487002*^9, 
   3.5487733501109643`*^9}, {3.5487734488438363`*^9, 3.548773452019154*^9}, {
   3.5487736822571754`*^9, 3.548773715281478*^9}, {3.5487737481867676`*^9, 
   3.548773751123061*^9}, {3.5487738451564636`*^9, 3.5487738453544836`*^9}, {
   3.5487738850664544`*^9, 3.5487738857055187`*^9}, {3.548773925793707*^9, 
   3.5487739426977067`*^9}, {3.5487742337787066`*^9, 3.548774235997707*^9}, {
   3.5487742997997065`*^9, 3.548774301023707*^9}, {3.548774331758707*^9, 
   3.5487743349817066`*^9}, {3.5487744302897067`*^9, 3.548774446695707*^9}, {
   3.5487747134997067`*^9, 3.5487747617457066`*^9}, {3.5487748199887066`*^9, 
   3.548774989863577*^9}, {3.5487750466912594`*^9, 3.5487751442630157`*^9}, {
   3.548775210149604*^9, 3.5487752109876876`*^9}, {3.548775247444333*^9, 
   3.5487752477653646`*^9}, {3.548775610003585*^9, 3.548775617071292*^9}, {
   3.5487756533529196`*^9, 3.5487756821638002`*^9}, {3.54877573296488*^9, 
   3.548775764479031*^9}, {3.548775852515834*^9, 3.54877588338092*^9}, {
   3.5487759152871103`*^9, 3.5487759200065823`*^9}, {3.5487759761361403`*^9, 
   3.54877598757314*^9}, {3.5487760287661405`*^9, 3.5487760288151407`*^9}, {
   3.548780064862323*^9, 3.5487801132121572`*^9}, 3.5487801525260887`*^9, {
   3.5487801921920547`*^9, 3.5487801947213078`*^9}, {3.548780276643499*^9, 
   3.548780415818415*^9}, {3.5487804472545586`*^9, 3.5487804722370567`*^9}, {
   3.548780754811311*^9, 3.54878078350518*^9}, 3.5487810163844657`*^9, {
   3.5487822609653597`*^9, 3.548782264695359*^9}, {3.5487824043103595`*^9, 
   3.548782406999359*^9}, {3.5487825425123596`*^9, 3.5487826523793592`*^9}, 
   3.5487917755196853`*^9, 3.548972642585658*^9, {3.5489727072943597`*^9, 
   3.5489727573192205`*^9}, {3.54897295748267*^9, 3.5489729626959677`*^9}, {
   3.5489731736280327`*^9, 3.5489731864597664`*^9}, {3.549013568039856*^9, 
   3.549013571847638*^9}, {3.549013683133875*^9, 3.5490136995668154`*^9}, {
   3.549018905772961*^9, 3.5490189233669453`*^9}, {3.54901907300368*^9, 
   3.5490190759598103`*^9}, {3.549361555518035*^9, 3.5493615645015483`*^9}, {
   3.623887755297329*^9, 3.623887766814921*^9}, {3.6238878389077797`*^9, 
   3.6238878613317823`*^9}, {3.623887899833766*^9, 3.623887908977084*^9}, {
   3.623887948887939*^9, 3.62388796326434*^9}, 3.841228206238839*^9, {
   3.841316480822844*^9, 3.8413165075344973`*^9}, {3.841392965129376*^9, 
   3.841392966533388*^9}},
 CellLabel->
  "In[520]:=",ExpressionUUID->"75bc6916-e6f8-4415-8671-3faa870d4c00"],

Cell[TextData[{
 "Build a parser up by side-effect into a variable (",
 StyleBox["parserTable", "Input"],
 ", a parameter below) by scanning ",
 StyleBox["parserDefFromGrammarRule", "Input"],
 " over all the rules in the grammar:"
}], "Text",
 CellChangeTimes->{{3.54876804243976*^9, 3.5487680505507603`*^9}, {
   3.623887498344653*^9, 3.6238875040146847`*^9}, {3.8413119310801773`*^9, 
   3.841311960569578*^9}, {3.841686367783781*^9, 3.841686370868761*^9}, {
   3.841687093885372*^9, 3.841687113119574*^9}, 
   3.84175435216129*^9},ExpressionUUID->"fcdd07f7-6174-422f-b8c3-\
b92e5476c9a9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "parserPatterns", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"parserPatterns", "[", 
    RowBox[{"grammar_", ",", "parserTable_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Scan", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       StyleBox["parserDefFromGrammarRule",
        Background->RGBColor[1, 0.85, 0.85]], "[", 
       RowBox[{"parserTable", ",", "#", ",", 
        RowBox[{"nonTerminalsFromGrammar", "@", "grammar"}]}], "]"}], "&"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"DownValues", "@", "grammar"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.841319189959306*^9, 3.84131929113958*^9}},
 CellLabel->
  "In[521]:=",ExpressionUUID->"b5bf3e74-e27f-45d9-a85c-375b147d816f"],

Cell[TextData[{
 StyleBox["That\[CloseCurlyQuote]s it for the parser generator!",
  FontSlant->"Italic"],
 " It\[CloseCurlyQuote]s equivalent to a ",
 StyleBox["yacc", "Input"],
 " for our massively simplified PPF grammars. It\[CloseCurlyQuote]s small \
because it doesn\[CloseCurlyQuote]t consider punctuation, operator \
precedence, and overloads in the object language of the PPF."
}], "Text",
 CellChangeTimes->{{3.841754276100254*^9, 3.8417543464965353`*^9}, {
  3.841754392474866*^9, 
  3.8417544031983767`*^9}},ExpressionUUID->"ec7b07d2-a890-4675-ab5e-\
ecfebfb0c3c1"],

Cell["Build a parser from our grammar, automatically:", "Text",
 CellChangeTimes->{{3.84168714492264*^9, 
  3.841687155318791*^9}},ExpressionUUID->"a8bf3ac9-13b0-45cf-ac24-\
a06cd93b4a08"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "$exprTable", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"parserPatterns", "[", 
   RowBox[{"F", ",", "$exprTable"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.841610968890296*^9, 3.841610996555987*^9}},
 CellLabel->
  "In[523]:=",ExpressionUUID->"f4123dc4-f960-42bd-944d-241da6be6be8"],

Cell[TextData[{
 "Make a little ad-hoc function to generate random sentences, parse them, and \
then typeset them in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.8416871780196733`*^9, 3.841687226586586*^9}, {
  3.912372362923972*^9, 
  3.9123723676792297`*^9}},ExpressionUUID->"cd175786-41da-4e51-a928-\
126964bca70d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "$fexpr", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$fexpr", "[", 
   RowBox[{"dummy_", ",", 
    RowBox[{"depth_", ":", "20"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"sen", "=", 
      RowBox[{"generateSentence", "[", "\[IndentingNewLine]", 
       RowBox[{"FProbabilized", ",", "FVar", ",", 
        RowBox[{"terminalsFromGrammar", "@", "F"}], ",", "depth"}], "]"}]}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"parse", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"$exprTable", "@", "sen"}], ")"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"interp", "=", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"FInt", "[", "RandomInteger", "]"}], "\[RuleDelayed]", 
             RowBox[{"RandomInteger", "[", "10", "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"FVar", "\[Rule]", "Identity"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"FSum", "|", "FProd"}], ")"}], "[", 
              RowBox[{"f_", ",", "args__"}], "]"}], "\[RuleDelayed]", 
             RowBox[{"Apply", "[", 
              RowBox[{"f", ",", 
               RowBox[{"{", "args", "}"}]}], "]"}]}]}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"TreeForm", "[", 
           RowBox[{"parse", ",", 
            RowBox[{"VertexLabeling", "\[Rule]", "Automatic"}]}], "]"}], ",", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"parse", "//.", "interp"}], "//", "FullSimplify"}], 
           ")"}]}], "}"}]}], "]"}]}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8416495566650953`*^9, 3.841649609862783*^9}, {
  3.841649645100088*^9, 3.8416496475721607`*^9}, {3.841649690910379*^9, 
  3.841649715686039*^9}, {3.8416765847617607`*^9, 3.841676597245163*^9}, {
  3.84167679519763*^9, 3.841676849917198*^9}, {3.841677007447156*^9, 
  3.841677055317708*^9}},
 CellLabel->
  "In[525]:=",ExpressionUUID->"763d4777-830e-4997-ac56-ab4dde17d4a1"],

Cell["\<\
Here\[CloseCurlyQuote]s an animation that exhibits typeset expressions, their \
leaf counts, and their parse trees. It keeps track of the biggest expression \
found so far, for bragging rights.\
\>", "Text",
 CellChangeTimes->{{3.841687234086936*^9, 
  3.841687283017783*^9}},ExpressionUUID->"45e9fd4d-2a0b-4fe6-81a2-\
ceff0b406be1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"$fcontender", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Animate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", "e"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"t", ",", "e"}], "}"}], "=", 
       RowBox[{"$fexpr", "[", 
        RowBox[{"dummy", ",", "30"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"le", "=", 
          RowBox[{"LeafCount", "[", "e", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"le", ">", 
            RowBox[{"LeafCount", "@", "$fcontender"}]}], ",", 
           RowBox[{"$fcontender", "=", "e"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Grid", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"e", ",", "SpanFromLeft"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"le", ",", "t"}], "}"}]}], "}"}], ",", 
           RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}]}], "]"}]}]}], "]"}],
    ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"dummy", ",", "1", ",", "25", ",", "1"}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.841649627755375*^9, 3.841649665787197*^9}, {
   3.841649720061504*^9, 3.841649775873583*^9}, {3.841649823403294*^9, 
   3.84164991173984*^9}, 3.8416764826378727`*^9, {3.841676515492391*^9, 
   3.84167654967482*^9}, {3.841676603830494*^9, 3.841676634882786*^9}, {
   3.841676869161889*^9, 3.8416769443032427`*^9}, {3.841677068645981*^9, 
   3.8416770773825912`*^9}, {3.91237249354186*^9, 3.912372493950522*^9}},
 CellLabel->
  "In[527]:=",ExpressionUUID->"b710322f-65df-42c5-bbdf-5917777e52e6"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`dummy$$ = 19, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`dummy$$], 1, 25, 1}}, Typeset`size$$ = {
    304., {123.7010498046875, 132.2989501953125}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`dummy$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`t$, $CellContext`e$}, {$CellContext`t$, \
$CellContext`e$} = $CellContext`$fexpr[$CellContext`dummy$$, 30]; 
        With[{$CellContext`le$ = LeafCount[$CellContext`e$]}, 
          If[$CellContext`le$ > 
            LeafCount[$CellContext`$fcontender], $CellContext`$fcontender = \
$CellContext`e$]; 
          Grid[{{$CellContext`e$, 
              SpanFromLeft}, {$CellContext`le$, $CellContext`t$}}, Frame -> 
            All]]], "Specifications" :> {{$CellContext`dummy$$, 1, 25, 1, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{807., {226., 235.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.841676895906672*^9, 3.841676945214694*^9}, {
   3.8416770695090218`*^9, 3.841677078342742*^9}, 3.84168728569702*^9, 
   3.8416873292937403`*^9, 3.841687414278845*^9, {3.8417544254761677`*^9, 
   3.8417544525067987`*^9}, {3.841760383098612*^9, 3.841760402025487*^9}, 
   3.911252421019495*^9, 3.91125438311788*^9, 3.9112546475821867`*^9, 
   3.9112974519284554`*^9, 3.912368778944622*^9, {3.91236993311191*^9, 
   3.91236995537952*^9}, 3.912372494593484*^9, 3.912545657690346*^9},
 CellLabel->
  "Out[528]=",ExpressionUUID->"0d7d099f-7861-4f9a-86eb-b197578e6e01"]
}, Open  ]],

Cell["Here\[CloseCurlyQuote]s the biggest one found so far.", "Text",
 CellChangeTimes->{{3.9112533328735657`*^9, 
  3.9112533478688726`*^9}},ExpressionUUID->"68e996d5-c061-4deb-9463-\
d2792ee992f1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", 
  RowBox[{"$fcontender", "//", "FullSimplify"}], "]"}]], "Input",
 CellChangeTimes->{{3.841676962146185*^9, 3.841676988293538*^9}, {
  3.912372402852037*^9, 3.912372407645329*^9}},
 CellLabel->
  "In[529]:=",ExpressionUUID->"8f3a2375-99a9-4809-b005-8de4b66526d1"],

Cell[BoxData[
 DynamicBox[ToBoxes[
   FullSimplify[$CellContext`$fcontender], StandardForm],
  ImageSizeCache->{1006.2, {132., 26.}}]], "Output",
 CellChangeTimes->{{3.841676972884017*^9, 3.841676989603538*^9}, 
   3.841687329452323*^9, 3.841687414626606*^9, 3.841754452615716*^9, {
   3.841760383204508*^9, 3.841760402182473*^9}, 3.911252421424865*^9, 
   3.911254383181937*^9, 3.911254647630621*^9, 3.911297452013068*^9, 
   3.9123687789977283`*^9, {3.912369933132053*^9, 3.912369955434589*^9}, 
   3.912372420026311*^9, 3.912545665835485*^9},
 CellLabel->
  "Out[529]=",ExpressionUUID->"c514fefe-e8f3-411f-afa3-f98072e9bacd"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->None,
WindowSize->{1280, 1387},
WindowMargins->{{1280, Automatic}, {Automatic, 0}},
ShowSelection->True,
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
Magnification:>1.5 Inherited,
FrontEndVersion->"13.3 for Mac OS X ARM (64-bit) (July 24, 2023)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"166eca9f-115c-4600-b168-22638386a5fc"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 806, 12, 144, "Title",ExpressionUUID->"e69ed4d1-2852-407b-a4d7-ebd11ce6da7a"],
Cell[1388, 36, 432, 6, 97, "Subtitle",ExpressionUUID->"0a45aa99-9a6b-4a8b-87c8-96d50b07cda3"],
Cell[CellGroupData[{
Cell[1845, 46, 202, 4, 103, "Chapter",ExpressionUUID->"6f10638c-7ff3-4b8f-aaee-89dcd0cbfa99"],
Cell[2050, 52, 2117, 36, 225, "Text",ExpressionUUID->"bbda9b87-c4db-4655-a455-38e3805c54c5"],
Cell[4170, 90, 403, 9, 52, "Text",ExpressionUUID->"0aa8fa81-9ef7-47fb-b5d6-8761ace044fb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4610, 104, 157, 3, 103, "Chapter",ExpressionUUID->"4b6c4671-deb2-4ebd-9655-0d86c8023d9c"],
Cell[4770, 109, 1457, 27, 87, "Text",ExpressionUUID->"d937f960-e89d-423c-aa98-28657fe651c0"],
Cell[6230, 138, 1717, 31, 121, "Text",ExpressionUUID->"9c0e221e-02fd-4e7d-82d3-f8658c78f293"],
Cell[7950, 171, 1815, 31, 190, "Text",ExpressionUUID->"719ff646-967d-44d5-87c0-dba723377a69"],
Cell[9768, 204, 1945, 30, 190, "Text",ExpressionUUID->"b155b3fb-1f41-449b-a624-88737d14b1f0"],
Cell[11716, 236, 1076, 18, 190, "Text",ExpressionUUID->"43f55824-d6df-4d5e-a261-1b42bce9948f"],
Cell[12795, 256, 233, 6, 52, "Text",ExpressionUUID->"209d9897-2fab-4fcb-81e1-f38ea86c0744"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13065, 267, 260, 4, 103, "Chapter",ExpressionUUID->"0d758d12-92c3-4bc0-92b1-0c83967c71bb"],
Cell[13328, 273, 243, 5, 63, "Input",ExpressionUUID->"61746ed5-bbf8-41e4-b8f0-14c0ca47e0fb",
 InitializationCell->True],
Cell[13574, 280, 940, 19, 121, "Text",ExpressionUUID->"55d453db-05f8-4e44-ada6-95403f2d9ff5"],
Cell[14517, 301, 357, 7, 63, "Input",ExpressionUUID->"504ea0b2-cf1b-43f8-ae18-65a5cba5770d",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[14899, 312, 157, 3, 104, "Section",ExpressionUUID->"b87a6a81-d0e3-4bb0-a83d-4adb3f5309f2"],
Cell[CellGroupData[{
Cell[15081, 319, 96, 0, 52, "Subsection",ExpressionUUID->"01d377e3-b65c-4210-be0e-64ecc355db75"],
Cell[15180, 321, 116, 0, 46, "Text",ExpressionUUID->"3f84a35f-ed36-45eb-af81-6834d13ef344"],
Cell[15299, 323, 173, 4, 103, "Text",ExpressionUUID->"87a80c3e-3a02-4d3b-ac57-c89d0717ef5c"],
Cell[15475, 329, 710, 16, 388, "Text",ExpressionUUID->"3c9ca2de-43a0-4ba5-9d78-de9fb6288a39"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16222, 350, 93, 0, 52, "Subsection",ExpressionUUID->"165cc488-78b1-484a-903e-200209df4bd3"],
Cell[CellGroupData[{
Cell[16340, 354, 9403, 249, 2028, "Code",ExpressionUUID->"500b62a9-1a1e-4f53-9d90-cd4e46b87f86"],
Cell[25746, 605, 488, 7, 70, "Output",ExpressionUUID->"7796d4ad-2db0-4db0-af89-4716a3b8a09b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26271, 617, 286, 7, 114, "Code",ExpressionUUID->"c94d5995-6bbe-4314-b8ad-10821b7e72a7"],
Cell[26560, 626, 500, 7, 70, "Output",ExpressionUUID->"f55f691f-777a-4fdb-80db-a7100f1ab39d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[27109, 639, 116, 0, 52, "Subsection",ExpressionUUID->"4e78ca56-0977-4500-ba23-3998924fdc76"],
Cell[CellGroupData[{
Cell[27250, 643, 98, 0, 37, "Subsubsection",ExpressionUUID->"3aa5eb10-d9b1-4b54-86d3-3c82d28a0708"],
Cell[27351, 645, 184, 3, 46, "Text",ExpressionUUID->"c9440c6d-9860-474f-af4c-2db7e4abf22b"],
Cell[27538, 650, 14888, 476, 1680, "Code",ExpressionUUID->"7f271bd2-6211-48c9-bd19-5314cfd7d516"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[42475, 1132, 110, 0, 52, "Subsection",ExpressionUUID->"fef9798f-62f8-4a85-b1ac-cb9b784217c7"],
Cell[42588, 1134, 756, 20, 201, "Code",ExpressionUUID->"168a115d-fc11-42fa-a18a-485728639349"],
Cell[43347, 1156, 1830, 48, 375, "Code",ExpressionUUID->"7990fc0f-e44a-44ef-9f1f-660e3c4a1973"],
Cell[45180, 1206, 1150, 23, 433, "Code",ExpressionUUID->"8cb727dd-809b-4feb-9cb7-63c9ec894863"],
Cell[46333, 1231, 663, 17, 201, "Code",ExpressionUUID->"8558d62c-17ac-4fbb-80a5-faece94adbee"],
Cell[46999, 1250, 666, 17, 201, "Code",ExpressionUUID->"cfabc3a6-6aac-4da4-9498-b305238cdee2"],
Cell[47668, 1269, 667, 17, 201, "Code",ExpressionUUID->"63edef23-4062-4cea-8f2e-ca04b18815ad"],
Cell[48338, 1288, 512, 13, 201, "Code",ExpressionUUID->"19abb58a-e3f5-4047-a48d-b920c898c90c"],
Cell[CellGroupData[{
Cell[48875, 1305, 102, 0, 38, "Subsubsection",ExpressionUUID->"8293d681-c451-43e0-95e3-324b82f142c4"],
Cell[48980, 1307, 121, 0, 45, "Text",ExpressionUUID->"1a85e5af-dd6b-4112-8fcf-ad53241754a4"],
Cell[49104, 1309, 1014, 27, 172, "Code",ExpressionUUID->"0a3234fc-a4c2-4c16-81fe-7ba48cb56b64"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50155, 1341, 99, 0, 38, "Subsubsection",ExpressionUUID->"b0697cd1-1ff2-48e2-8a27-d486d8816031"],
Cell[50257, 1343, 145, 2, 45, "Text",ExpressionUUID->"1e74f2c3-4780-4533-b680-9719d6439283"],
Cell[50405, 1347, 1400, 40, 288, "Code",ExpressionUUID->"2fefa5f1-a6e8-4066-a66a-c738f5451191"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51842, 1392, 88, 0, 38, "Subsubsection",ExpressionUUID->"aa6f7e20-3d0d-406e-9660-4c62a09655b2"],
Cell[51933, 1394, 102, 0, 45, "Text",ExpressionUUID->"e22eb7e3-fe15-4a01-893b-2f226faff80a"],
Cell[52038, 1396, 1836, 50, 230, "Code",ExpressionUUID->"17a20211-e84d-4d7c-afc2-8023af3000c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53911, 1451, 100, 0, 38, "Subsubsection",ExpressionUUID->"c4318ce1-ebc2-4286-b51c-ba8334a3bdb0"],
Cell[54014, 1453, 2296, 65, 374, "Code",ExpressionUUID->"f34b6bfc-9590-4e08-b871-d28936bee66f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56347, 1523, 98, 0, 38, "Subsubsection",ExpressionUUID->"5b11f8a7-cfb8-4b11-a17d-3e09ec245995"],
Cell[56448, 1525, 167, 3, 45, "Text",ExpressionUUID->"2e44e189-101d-4eb3-858e-a80cedeea133"],
Cell[56618, 1530, 4308, 110, 633, "Code",ExpressionUUID->"cb5263c0-b3df-4ac4-98f5-5e7af8299993"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60963, 1645, 98, 0, 38, "Subsubsection",ExpressionUUID->"0cd72aba-b0c2-4414-afbb-e89a4fdd4532"],
Cell[61064, 1647, 173, 3, 45, "Text",ExpressionUUID->"a8eba8cc-52eb-447e-83a6-5384488b25d6"],
Cell[61240, 1652, 6370, 160, 1008, "Code",ExpressionUUID->"5e417c0b-f4dc-46e1-b7cd-dd3b64c342a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67647, 1817, 98, 0, 38, "Subsubsection",ExpressionUUID->"d2fcf693-8071-47bf-8713-74d3743d7f02"],
Cell[67748, 1819, 186, 3, 45, "Text",ExpressionUUID->"1147bdc0-e2d5-4e97-875b-64a42d24bb30"],
Cell[67937, 1824, 1685, 48, 288, "Code",ExpressionUUID->"fd121ca3-5fa2-4bf0-af84-e6a33b68020a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[69671, 1878, 99, 0, 52, "Subsection",ExpressionUUID->"73298867-8fff-49ec-9c57-b2fa723ad1e7"],
Cell[CellGroupData[{
Cell[69795, 1882, 92, 0, 38, "Subsubsection",ExpressionUUID->"c7dbba06-fb2f-4729-aa8f-d6dcccacdf0a"],
Cell[69890, 1884, 217, 3, 74, "Text",ExpressionUUID->"eb8983d9-c232-4b11-9c64-8b34580061a1"],
Cell[70110, 1889, 537, 16, 116, "Code",ExpressionUUID->"6792d8ed-d8f7-4b83-9910-39185b5bee2c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70684, 1910, 94, 0, 38, "Subsubsection",ExpressionUUID->"c25bba10-c2de-4284-9187-9b9daeef0060"],
Cell[70781, 1912, 152, 2, 45, "Text",ExpressionUUID->"2c6bbfd5-f129-4653-8576-5bbaf59ec88b"],
Cell[70936, 1916, 413, 12, 115, "Code",ExpressionUUID->"4a72d879-70a0-4b0c-a7c7-ff116bcd5c4c"],
Cell[71352, 1930, 333, 5, 103, "Text",ExpressionUUID->"882816fa-8b1f-4059-909f-e01f5d948942"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71722, 1940, 92, 0, 38, "Subsubsection",ExpressionUUID->"a39501bf-c78c-4699-a799-add73907332c"],
Cell[71817, 1942, 324, 10, 85, "Code",ExpressionUUID->"4e7d7f3e-a499-4e75-aeea-3362139d1f17"],
Cell[72144, 1954, 509, 15, 115, "Code",ExpressionUUID->"8cae289e-6891-4c0b-bf1c-58636adafac4"],
Cell[72656, 1971, 170, 3, 45, "Text",ExpressionUUID->"d07400d8-9dca-4c87-a34b-587e1b3df0df"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72863, 1979, 94, 0, 38, "Subsubsection",ExpressionUUID->"690d697c-6bf4-4d15-bb18-7d868d347f09"],
Cell[72960, 1981, 304, 9, 85, "Code",ExpressionUUID->"b0c746cf-4f98-4687-9284-3474ca630f6b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73301, 1995, 93, 0, 38, "Subsubsection",ExpressionUUID->"88131707-3a71-429a-aeb2-6c99c7c39c33"],
Cell[73397, 1997, 369, 11, 115, "Code",ExpressionUUID->"b9594195-a4d3-4367-90c1-33ad65d15ae3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73803, 2013, 97, 0, 38, "Subsubsection",ExpressionUUID->"93c58720-766f-406d-8ced-4d1f632669f3"],
Cell[73903, 2015, 314, 10, 115, "Code",ExpressionUUID->"200d8bc8-fa9b-460a-971e-90bbafa21114"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74254, 2030, 94, 0, 38, "Subsubsection",ExpressionUUID->"d4ca49c2-2795-4c21-a884-a6d4fb9baeaa"],
Cell[74351, 2032, 586, 18, 115, "Code",ExpressionUUID->"dfc2ae43-5afd-4722-8548-6a23b583caea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74974, 2055, 96, 0, 38, "Subsubsection",ExpressionUUID->"fd9ef2f7-b8d1-4626-8e51-b35fea8f5a7c"],
Cell[75073, 2057, 415, 12, 115, "Code",ExpressionUUID->"3b1765e2-5825-4668-8fc4-99c921e2a22b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75525, 2074, 92, 0, 38, "Subsubsection",ExpressionUUID->"fa47b82f-4248-4117-9365-877cc99f8e66"],
Cell[75620, 2076, 256, 7, 85, "Code",ExpressionUUID->"cd8b4fb3-41eb-4e2e-9856-d6bd9959d46e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[75925, 2089, 84, 0, 52, "Subsection",ExpressionUUID->"7509bc54-94d2-48b9-99ca-957740f52461"],
Cell[76012, 2091, 131, 0, 45, "Text",ExpressionUUID->"c629731e-1099-4755-8da1-330ec0e5d94e"],
Cell[CellGroupData[{
Cell[76168, 2095, 90, 0, 38, "Subsubsection",ExpressionUUID->"da4294a3-c3c4-469e-875e-9c23fc948c7c"],
Cell[76261, 2097, 324, 9, 85, "Code",ExpressionUUID->"61a5c939-d8d9-4241-afbe-962c9d629006"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76622, 2111, 93, 0, 38, "Subsubsection",ExpressionUUID->"b7797b5e-877a-4eca-aad7-9b600f0aa948"],
Cell[76718, 2113, 254, 7, 85, "Code",ExpressionUUID->"f730c576-deed-4244-93cc-48ce1281165f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77009, 2125, 105, 0, 38, "Subsubsection",ExpressionUUID->"d9619a8e-8234-4de3-81d3-39c7502f80e8"],
Cell[77117, 2127, 347, 10, 85, "Code",ExpressionUUID->"e6ffb523-8e9c-4aec-a7dc-1bdedc2eab74"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77501, 2142, 113, 0, 38, "Subsubsection",ExpressionUUID->"6a60a07c-59fd-4312-af3b-e9653b10125c"],
Cell[77617, 2144, 836, 24, 144, "Code",ExpressionUUID->"bd1bc238-caf2-476c-ba63-b94f6de1af2c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78490, 2173, 115, 0, 38, "Subsubsection",ExpressionUUID->"c05d6cc1-d84e-4dc5-b72d-1534cd013b17"],
Cell[CellGroupData[{
Cell[78630, 2177, 220, 5, 85, "Code",ExpressionUUID->"6ffa52bf-3fce-4472-9a36-2579ef3b7da3"],
Cell[78853, 2184, 579, 11, 70, "Output",ExpressionUUID->"ba1ce181-cd56-4b41-aa7a-6295a2303c11"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[79481, 2201, 106, 0, 38, "Subsubsection",ExpressionUUID->"82f9f33e-8761-4bf9-9cca-e7dfcfd4f2fc"],
Cell[79590, 2203, 1064, 32, 201, "Code",ExpressionUUID->"2f0f54ab-6a78-434d-8043-d430a040b119"],
Cell[80657, 2237, 677, 19, 144, "Code",ExpressionUUID->"072f464d-6e18-4302-b233-3bebc1dc1e65"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81371, 2261, 107, 0, 38, "Subsubsection",ExpressionUUID->"491eb74a-e814-436e-9bfa-eff2ff36e86b"],
Cell[81481, 2263, 1109, 33, 201, "Code",ExpressionUUID->"1e229e25-29d1-4fa6-8db9-05b966104299"],
Cell[82593, 2298, 937, 27, 172, "Code",ExpressionUUID->"3d8b7954-e30f-4200-95b2-b17ff3e7c1c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83567, 2330, 94, 0, 38, "Subsubsection",ExpressionUUID->"1a81c544-38c6-4a5e-8de3-71db6b28cdd3"],
Cell[83664, 2332, 186, 3, 45, "Text",ExpressionUUID->"e8c5af63-13f0-4c39-b1df-e0bc4a20c6ec"],
Cell[83853, 2337, 333, 8, 85, "Code",ExpressionUUID->"cdc00838-2d04-42b0-8fae-2deb3e22c285"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84223, 2350, 100, 0, 38, "Subsubsection",ExpressionUUID->"60679aa2-c488-4930-8f53-6e0704bcbc33"],
Cell[84326, 2352, 112, 0, 45, "Text",ExpressionUUID->"e15071b0-4445-44d8-9edb-4fabefaf5c1c"],
Cell[84441, 2354, 765, 16, 416, "Text",ExpressionUUID->"f2db20fb-0e70-43f8-bafe-28d829e6db7e"],
Cell[85209, 2372, 179, 3, 45, "Text",ExpressionUUID->"efc0d484-5ca4-4882-883d-e2f334603869"],
Cell[85391, 2377, 1695, 47, 403, "Code",ExpressionUUID->"7efadd26-c315-48a7-b22f-2a7966d1d13b"]
}, Open  ]]
}, Open  ]],
Cell[87113, 2428, 96, 0, 52, "Subsection",ExpressionUUID->"0d603de4-9406-47a2-a7a9-0d08d2675747"],
Cell[CellGroupData[{
Cell[87234, 2432, 95, 0, 39, "Subsection",ExpressionUUID->"36aacbf0-6255-4e7a-bef6-249428975cd5"],
Cell[CellGroupData[{
Cell[87354, 2436, 90, 0, 38, "Subsubsection",ExpressionUUID->"6a74e123-7707-4d1e-947a-4bb0416c63b9"],
Cell[87447, 2438, 310, 10, 115, "Code",ExpressionUUID->"191fa8ba-5572-4d1e-ba07-2ed257306dd2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87794, 2453, 94, 0, 38, "Subsubsection",ExpressionUUID->"ee13e26e-4c1b-49eb-b914-fd486bfe1b59"],
Cell[87891, 2455, 322, 10, 115, "Code",ExpressionUUID->"afb13d6e-7af7-44aa-aa83-ef7ae8ba777f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88250, 2470, 93, 0, 38, "Subsubsection",ExpressionUUID->"36587a72-4958-4952-a65a-9fa35f3c274c"],
Cell[88346, 2472, 319, 10, 115, "Code",ExpressionUUID->"e53255d9-75df-443d-a45b-30ee716a5699"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88702, 2487, 99, 0, 38, "Subsubsection",ExpressionUUID->"0dcc5c12-5ef8-44a6-85ae-6f73cc6bb924"],
Cell[88804, 2489, 529, 11, 230, "Code",ExpressionUUID->"1ad49457-48a9-482b-9489-ba6e1423f465"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89370, 2505, 107, 0, 38, "Subsubsection",ExpressionUUID->"0de24acc-a559-4766-9a46-fcaddc82c442"],
Cell[89480, 2507, 1933, 47, 374, "Code",ExpressionUUID->"4a4ae9b4-6894-498e-9cd8-f9b24128b5a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91450, 2559, 112, 0, 38, "Subsubsection",ExpressionUUID->"3ed3d5bb-89f1-44e4-a6d9-e13d7995257b"],
Cell[91565, 2561, 557, 16, 144, "Code",ExpressionUUID->"197ba930-dfaa-41a1-b2be-e484abb07cfb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92159, 2582, 107, 0, 38, "Subsubsection",ExpressionUUID->"12b0e600-9ce5-4be8-9b42-d7595646d789"],
Cell[92269, 2584, 2109, 57, 374, "Code",ExpressionUUID->"3fd3c5b0-3215-474a-8f06-c611522f439a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94415, 2646, 118, 0, 38, "Subsubsection",ExpressionUUID->"04513e03-73b7-4818-b8bd-c2b931f9f15b"],
Cell[94536, 2648, 1591, 42, 374, "Code",ExpressionUUID->"00f6220a-fb4f-48d1-bc88-4883398a907e"],
Cell[96130, 2692, 4224, 107, 720, "Code",ExpressionUUID->"5d14dfdb-f8e6-4f3e-a005-733b4d908917"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100391, 2804, 122, 0, 38, "Subsubsection",ExpressionUUID->"72183c84-6dd8-43f9-b7ad-bcf2ed364545"],
Cell[100516, 2806, 290, 5, 74, "Text",ExpressionUUID->"70b0b71e-fee7-4aa0-a31e-dd590366e262"],
Cell[100809, 2813, 2451, 61, 403, "Code",ExpressionUUID->"ffcadabf-cc7a-4b78-9ad9-77c2c7ead840"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103297, 2879, 111, 0, 38, "Subsubsection",ExpressionUUID->"2fbde722-b584-4d96-8bc5-664db1cb0758"],
Cell[103411, 2881, 166, 3, 45, "Text",ExpressionUUID->"84a7be90-768e-467e-bb4d-57da69029d7e"],
Cell[103580, 2886, 2366, 60, 403, "Code",ExpressionUUID->"c24008e4-6b3f-4c4f-bee6-55f5cf2e69ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105983, 2951, 116, 0, 38, "Subsubsection",ExpressionUUID->"27c97463-6b04-4071-88fa-c764745a4684"],
Cell[106102, 2953, 731, 21, 201, "Code",ExpressionUUID->"ba325467-dfed-44f3-9ea4-8a601c9c87ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106870, 2979, 111, 0, 38, "Subsubsection",ExpressionUUID->"cc8d2c82-4b48-4368-a0c8-c6df16e33650"],
Cell[106984, 2981, 369, 9, 115, "Code",ExpressionUUID->"58a7de99-4a13-4c40-aa81-3eada93263e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107390, 2995, 132, 0, 38, "Subsubsection",ExpressionUUID->"cfbd2610-83f0-44c2-a2eb-b50e5428c258"],
Cell[107525, 2997, 90, 0, 45, "Text",ExpressionUUID->"646b6beb-0264-4fd2-a773-91f4c550651f"],
Cell[107618, 2999, 307, 8, 85, "Code",ExpressionUUID->"a714c516-9eea-4fc3-a5a1-9acc2f3e6119"],
Cell[107928, 3009, 86, 0, 45, "Text",ExpressionUUID->"651d822f-e15e-46f0-ae66-55841bad84c3"],
Cell[108017, 3011, 624, 17, 115, "Code",ExpressionUUID->"b2bdf701-5841-4baa-9c9e-c852485cdb02"],
Cell[108644, 3030, 90, 0, 45, "Text",ExpressionUUID->"04c9dbc4-ad73-4a00-be6d-ddf08c7cd413"],
Cell[108737, 3032, 677, 19, 144, "Code",ExpressionUUID->"2005d2c2-e9eb-4860-bf8c-c82326b67de1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109451, 3056, 144, 3, 60, "Subsubsection",ExpressionUUID->"f3b24b55-2bb5-47d8-8bee-e3b88ff8f16e"],
Cell[109598, 3061, 90, 0, 45, "Text",ExpressionUUID->"79a15d7c-efb0-4ffe-9100-38c27d6f4a05"],
Cell[109691, 3063, 310, 8, 85, "Code",ExpressionUUID->"9ea3d41d-4f64-4172-9054-d049a88e1c91"],
Cell[110004, 3073, 86, 0, 45, "Text",ExpressionUUID->"79b09eba-a0aa-44b5-bab9-583361c9b144"],
Cell[110093, 3075, 566, 15, 115, "Code",ExpressionUUID->"b35330a0-be2d-42ca-8c0a-163e910c245d"],
Cell[110662, 3092, 90, 0, 45, "Text",ExpressionUUID->"f2102d95-8534-4528-91ad-13e58bde12d1"],
Cell[110755, 3094, 689, 19, 144, "Code",ExpressionUUID->"94020f4c-a833-4991-96b5-fce65f6636e8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[111493, 3119, 97, 0, 52, "Subsection",ExpressionUUID->"12dbaf85-df85-42fb-a345-b6f685ca3826"],
Cell[111593, 3121, 3540, 79, 1065, "Code",ExpressionUUID->"3fe47434-7ab6-4ae8-be56-c9802ebc47bc"],
Cell[115136, 3202, 3285, 74, 1008, "Code",ExpressionUUID->"2beb7c88-ee58-4b2f-a8c7-26516ff134d9"],
Cell[118424, 3278, 602, 13, 201, "Code",ExpressionUUID->"aa24f16e-3c7e-4593-b41c-b28ffed7c408"],
Cell[119029, 3293, 741, 17, 230, "Code",ExpressionUUID->"2f2b06f3-67c7-410e-b29c-ac25457de37f"],
Cell[119773, 3312, 877, 20, 259, "Code",ExpressionUUID->"39b10216-4d98-40eb-97e7-1a4384debb14"],
Cell[120653, 3334, 707, 17, 201, "Code",ExpressionUUID->"71a88793-8edf-4983-82d8-831ea88d4777"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121397, 3356, 85, 0, 52, "Subsection",ExpressionUUID->"c67d4ef2-2ea2-47a9-b2c9-daf896e55f9b"],
Cell[121485, 3358, 211, 6, 85, "Code",ExpressionUUID->"05a08509-3638-4042-826b-c15c75f752a2"],
Cell[121699, 3366, 158, 4, 85, "Code",ExpressionUUID->"f9e99ad9-9af3-4074-9de3-82ccec9d220b"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[121918, 3377, 216, 4, 103, "Chapter",ExpressionUUID->"c6fea088-9084-404a-9dbd-dfd1fc71b462"],
Cell[122137, 3383, 528, 10, 87, "Text",ExpressionUUID->"df137a6f-012f-413e-9396-12deee535cde"],
Cell[CellGroupData[{
Cell[122690, 3397, 160, 3, 104, "Section",ExpressionUUID->"9cd88974-9d17-4a85-86cd-7ea469772cfd"],
Cell[122853, 3402, 471, 7, 52, "Text",ExpressionUUID->"b6cab472-0ccd-46b5-9b0b-7a47c2c3739b"],
Cell[123327, 3411, 1276, 38, 121, "Text",ExpressionUUID->"4c8c4044-cfcf-4280-8e3c-8de099459c90"],
Cell[124606, 3451, 762, 18, 87, "Text",ExpressionUUID->"a8909ef6-0262-4e21-a15a-ec5479370da8"],
Cell[125371, 3471, 1035, 23, 156, "Text",ExpressionUUID->"e406e2a6-7d94-4149-a159-d41216a0b9d9"],
Cell[126409, 3496, 3165, 98, 401, "Input",ExpressionUUID->"ae668ba2-b16e-4471-a577-c2e070314a4d"],
Cell[129577, 3596, 862, 24, 87, "Text",ExpressionUUID->"9fc65ee6-6873-4b2a-b23b-187ce91d6020"],
Cell[130442, 3622, 1808, 39, 87, "Text",ExpressionUUID->"7aecaa2d-5fa0-45dd-8896-36d54ffff7fd"],
Cell[132253, 3663, 1819, 34, 52, "Text",ExpressionUUID->"86c3e653-96cd-4e80-900d-99b6ec90a024"],
Cell[134075, 3699, 996, 31, 87, "Text",ExpressionUUID->"bfe7cd85-f0a4-46e7-8e2d-54db03fe6e99"],
Cell[135074, 3732, 592, 19, 87, "Text",ExpressionUUID->"ba4d9147-8b7d-4783-9693-d5154b2d4cf4"],
Cell[135669, 3753, 1577, 45, 156, "Text",ExpressionUUID->"80269b5b-1d0e-46c8-88d6-8950d4deda8e"],
Cell[137249, 3800, 2147, 39, 156, "Text",ExpressionUUID->"5eeb37a0-4f41-496d-833f-fb2d5664e3f5"],
Cell[139399, 3841, 957, 24, 87, "Text",ExpressionUUID->"e3ae6d4c-5e44-482a-9157-6da7bac6e294"],
Cell[140359, 3867, 1189, 22, 52, "Text",ExpressionUUID->"9cd60e70-1465-4be6-9bdd-f54f5cf80bd2"],
Cell[141551, 3891, 1712, 36, 156, "Text",ExpressionUUID->"019d4216-3d1b-410e-a628-d00052ccc5a2"],
Cell[CellGroupData[{
Cell[143288, 3931, 1344, 35, 219, "Input",ExpressionUUID->"b35bb83a-8d19-42b3-885d-2989c6369bbf"],
Cell[144635, 3968, 43720, 1135, 1067, "Output",ExpressionUUID->"a4cfc0d3-9f6f-495e-925b-c0084e0c0b26"]
}, Open  ]],
Cell[188370, 5106, 375, 10, 52, "Text",ExpressionUUID->"00fc6a52-1e27-42d6-be8f-dd34b29b2151"],
Cell[CellGroupData[{
Cell[188770, 5120, 727, 19, 126, "Input",ExpressionUUID->"c8435255-caf6-40f1-af3d-12988e3b4b31"],
Cell[189500, 5141, 804, 13, 84, "Output",ExpressionUUID->"eca7f91e-7c4c-4950-b489-732dad638bbb"]
}, Open  ]],
Cell[190319, 5157, 553, 10, 87, "Text",ExpressionUUID->"7c8ace97-2057-40ce-8724-32a5c669c804"],
Cell[190875, 5169, 639, 16, 95, "Input",ExpressionUUID->"e490d708-2abb-4def-9ce8-8a6ed2abc2ba"],
Cell[191517, 5187, 1288, 34, 121, "Text",ExpressionUUID->"c17595f9-8017-4fba-be6a-ee085fcc82e6"],
Cell[CellGroupData[{
Cell[192830, 5225, 350, 7, 63, "Input",ExpressionUUID->"811aeb9a-9d90-4324-948e-bac779c8d6de"],
Cell[193183, 5234, 19060, 544, 1051, "Output",ExpressionUUID->"6e08a6cf-4a04-4310-af38-47c896247415"]
}, Open  ]],
Cell[212258, 5781, 553, 12, 52, "Text",ExpressionUUID->"119cf89d-1777-4b86-90bd-15d200583ce2"],
Cell[CellGroupData[{
Cell[212836, 5797, 274, 6, 63, "Input",ExpressionUUID->"e5ad9465-2130-4327-af87-803ec2800b75"],
Cell[213113, 5805, 933, 17, 112, "Output",ExpressionUUID->"ffe9662d-86c9-4fa2-8af3-50d7810e8d00"]
}, Open  ]],
Cell[214061, 5825, 492, 12, 52, "Text",ExpressionUUID->"27dd5a6a-6038-466a-af06-59fa93ac1e75"],
Cell[CellGroupData[{
Cell[214578, 5841, 901, 19, 219, "Input",ExpressionUUID->"e1a30d71-ec62-4d9d-81de-e0234deb3007"],
Cell[215482, 5862, 1110, 21, 105, "Output",ExpressionUUID->"609dbbe5-d0f9-43a2-ba94-9b2ec45bf69c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[216653, 5890, 383, 6, 103, "Chapter",ExpressionUUID->"de58f9e4-ce80-4697-a283-a7dce78e64b5"],
Cell[CellGroupData[{
Cell[217061, 5900, 232, 4, 104, "Section",ExpressionUUID->"ac7cd585-7ee7-4b0d-b074-520964b4683f"],
Cell[217296, 5906, 1182, 23, 156, "Text",ExpressionUUID->"0cf3ea91-98ba-4f77-bb8a-baefeb991566"],
Cell[218481, 5931, 3960, 83, 529, "Input",ExpressionUUID->"32f333a9-f192-4fee-ac40-c53289832f66"],
Cell[222444, 6016, 738, 12, 121, "Text",ExpressionUUID->"8335e098-b38b-472e-a387-e02f2bb9ccad"],
Cell[223185, 6030, 794, 21, 149, "Input",ExpressionUUID->"f253462d-e344-472c-b1c0-1fbe75de0abd"],
Cell[223982, 6053, 266, 10, 52, "Text",ExpressionUUID->"833b37b5-1ba7-4408-9624-758d1eb94ea9"],
Cell[CellGroupData[{
Cell[224273, 6067, 667, 13, 126, "Input",ExpressionUUID->"2ee4e8a4-ea40-4970-a082-29c1733ad41b"],
Cell[224943, 6082, 128910, 3124, 2019, "Output",ExpressionUUID->"9d76b149-92bf-497e-bcb6-57d7b9f5c74f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[353902, 9212, 169, 3, 104, "Section",ExpressionUUID->"0054a0ba-857f-47c4-910f-7bec8952e275"],
Cell[354074, 9217, 303, 7, 52, "Text",ExpressionUUID->"4416d463-87e5-4652-98ad-5a9157c19230"],
Cell[354380, 9226, 2740, 42, 87, "Text",ExpressionUUID->"b3186b13-6ab5-417c-8eab-99ebcdbdf7c3"],
Cell[357123, 9270, 2769, 44, 126, "Input",ExpressionUUID->"f5707359-66ac-4c45-9776-e8ddc176aeb5"],
Cell[359895, 9316, 2827, 41, 87, "Text",ExpressionUUID->"28756831-3542-40d1-aa60-483c3a4cd0bd"],
Cell[362725, 9359, 3888, 73, 219, "Input",ExpressionUUID->"cfc9d35c-953c-4520-bc5c-b43e6dc6c33d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[366650, 9437, 476, 9, 161, "Section",ExpressionUUID->"613354b5-bbd3-4abd-bf80-6d92f5128966"],
Cell[367129, 9448, 763, 16, 87, "Text",ExpressionUUID->"d7f99f2e-af13-4274-86ee-0b648bf64556"],
Cell[CellGroupData[{
Cell[367917, 9468, 217, 4, 51, "Subsection",ExpressionUUID->"77f478ec-bc47-4fd1-a1e1-3445e73f9f2c"],
Cell[368137, 9474, 518, 12, 87, "Text",ExpressionUUID->"a3d0e713-e4dd-4b67-8e8d-973b0e1a98bf"],
Cell[368658, 9488, 701, 17, 126, "Input",ExpressionUUID->"7bdb4e0e-503a-42bd-8247-d309af24c67a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[369396, 9510, 259, 4, 51, "Subsection",ExpressionUUID->"b3e91311-6b80-4fdc-8da8-6d08e630f9c6"],
Cell[369658, 9516, 312, 7, 87, "Text",ExpressionUUID->"be91e04b-5f2e-4635-a3fb-fd61125596f6"],
Cell[369973, 9525, 2240, 33, 63, "Input",ExpressionUUID->"5a3b8b5d-1c30-4787-a065-64e756d1f0f5"],
Cell[372216, 9560, 362, 7, 52, "Text",ExpressionUUID->"ade8db40-6411-4aaa-8533-872310a7916b"],
Cell[372581, 9569, 228, 4, 52, "Text",ExpressionUUID->"dc011c32-cbb7-4120-880b-e3012322489a"],
Cell[372812, 9575, 3706, 60, 188, "Input",ExpressionUUID->"09c9a31f-d33c-41ed-b1c9-0ff028a1d006"],
Cell[376521, 9637, 282, 4, 52, "Text",ExpressionUUID->"3a3a4cee-fb44-45c2-b794-9e916f47f6b0"],
Cell[376806, 9643, 8633, 165, 746, "Input",ExpressionUUID->"f2aaf48e-9741-463f-97cc-829ea378b918"],
Cell[385442, 9810, 2374, 33, 52, "Text",ExpressionUUID->"7572c186-9387-4870-bbc8-66e830432a00"],
Cell[387819, 9845, 4539, 78, 219, "Input",ExpressionUUID->"864691ab-c843-4e7e-bb8c-16581c848d66"]
}, Open  ]],
Cell[CellGroupData[{
Cell[392395, 9928, 202, 3, 51, "Subsection",ExpressionUUID->"c04cef19-7726-4b2a-a30b-ff89946c6072"],
Cell[392600, 9933, 1383, 20, 63, "Input",ExpressionUUID->"71b720d9-659a-45c9-b0f6-40fdd31ca60b"],
Cell[393986, 9955, 2285, 42, 126, "Input",ExpressionUUID->"e9be814a-67ce-480d-ab13-498a1120acf8"],
Cell[396274, 9999, 447, 8, 87, "Text",ExpressionUUID->"6e79fccb-9016-4d0b-860b-d131f326a361"],
Cell[CellGroupData[{
Cell[396746, 10011, 1251, 30, 188, "Input",ExpressionUUID->"3746a2c7-605e-4e00-bf50-ad538a4fec9c"],
Cell[398000, 10043, 2714, 52, 224, "Output",ExpressionUUID->"e0a3d009-7f06-437b-9ba6-299e75117049"]
}, Open  ]],
Cell[400729, 10098, 242, 6, 52, "Text",ExpressionUUID->"3e75b929-8e73-4998-9ba4-ddb3bc9bebcf"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[401032, 10111, 217, 4, 103, "Chapter",ExpressionUUID->"d92ffcbc-9f80-4bef-bc3e-c04e4499c54a"],
Cell[401252, 10117, 1014, 19, 121, "Text",ExpressionUUID->"524e96a9-af81-44bd-ad9b-48f2386f9495"],
Cell[402269, 10138, 803, 13, 87, "Text",ExpressionUUID->"82079b4d-a9ac-43dc-a4df-df03ba09c575"],
Cell[403075, 10153, 571, 11, 52, "Text",ExpressionUUID->"f60a7c78-847c-46bd-9552-2906164d5936"],
Cell[403649, 10166, 245, 4, 52, "Text",ExpressionUUID->"3e16c00a-bd9d-497c-a778-a97c11c9d4b7"],
Cell[CellGroupData[{
Cell[403919, 10174, 395, 7, 63, "Input",ExpressionUUID->"80672418-2dc1-4b80-b419-c850f8d30180"],
Cell[404317, 10183, 4975, 110, 231, "Output",ExpressionUUID->"ab6b7afb-db62-4f8c-8728-2a4266c32622"]
}, Open  ]],
Cell[409307, 10296, 288, 7, 52, "Text",ExpressionUUID->"ebf99490-484d-4750-ab27-6d656f0d0451"],
Cell[CellGroupData[{
Cell[409620, 10307, 337, 10, 332, "Section",ExpressionUUID->"36e32a9d-5bcc-4960-b4fd-405da8b8b783"],
Cell[409960, 10319, 1059, 17, 188, "Input",ExpressionUUID->"aebe5819-f0cb-456b-89e3-74f23ecda387"],
Cell[411022, 10338, 905, 15, 63, "Input",ExpressionUUID->"3301b22c-c588-42ac-b72f-f878b5fc808c"],
Cell[411930, 10355, 1248, 27, 95, "Input",ExpressionUUID->"1d4628ef-36f8-4b95-9e63-545e84460510"],
Cell[413181, 10384, 1701, 38, 188, "Input",ExpressionUUID->"24deb93c-24d8-4cab-9b18-60d4bf2be014"],
Cell[414885, 10424, 1588, 35, 157, "Input",ExpressionUUID->"792ce188-984a-4908-a965-4b0f6e4c07f5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[416510, 10464, 207, 3, 104, "Section",ExpressionUUID->"3e07325c-6177-4ccc-8d67-8e39374cdc37"],
Cell[416720, 10469, 3761, 53, 63, "Input",ExpressionUUID->"353a9312-83d2-46bb-b6c7-62e214743a0e"],
Cell[420484, 10524, 166, 3, 52, "Text",ExpressionUUID->"4f6aafd7-3aeb-4397-99f0-80755bc12b18"],
Cell[420653, 10529, 3979, 59, 95, "Input",ExpressionUUID->"345fb820-3dde-4a95-b0cc-7b9702ce6e5d"],
Cell[424635, 10590, 240, 4, 52, "Text",ExpressionUUID->"7feadf99-fc45-4efb-b558-76eb9d6eb4c5"],
Cell[424878, 10596, 5215, 95, 281, "Input",ExpressionUUID->"876773fd-7a70-4239-b947-a10b5bfd96ee"],
Cell[430096, 10693, 1086, 29, 121, "Text",ExpressionUUID->"ecdf866c-dffd-4766-b2c2-930a04c91e33"],
Cell[431185, 10724, 7642, 149, 560, "Input",ExpressionUUID->"75bc6916-e6f8-4415-8671-3faa870d4c00"],
Cell[438830, 10875, 591, 12, 87, "Text",ExpressionUUID->"fcdd07f7-6174-422f-b8c3-b92e5476c9a9"],
Cell[439424, 10889, 820, 21, 188, "Input",ExpressionUUID->"b5bf3e74-e27f-45d9-a85c-375b147d816f"],
Cell[440247, 10912, 575, 12, 87, "Text",ExpressionUUID->"ec7b07d2-a890-4675-ab5e-ecfebfb0c3c1"],
Cell[440825, 10926, 188, 3, 52, "Text",ExpressionUUID->"a8bf3ac9-13b0-45cf-ac24-a06cd93b4a08"],
Cell[441016, 10931, 358, 8, 95, "Input",ExpressionUUID->"f4123dc4-f960-42bd-944d-241da6be6be8"],
Cell[441377, 10941, 364, 10, 52, "Text",ExpressionUUID->"cd175786-41da-4e51-a928-126964bca70d"],
Cell[441744, 10953, 2426, 59, 344, "Input",ExpressionUUID->"763d4777-830e-4997-ac56-ab4dde17d4a1"],
Cell[444173, 11014, 343, 7, 87, "Text",ExpressionUUID->"45e9fd4d-2a0b-4fe6-81a2-ceff0b406be1"],
Cell[CellGroupData[{
Cell[444541, 11025, 1928, 48, 281, "Input",ExpressionUUID->"b710322f-65df-42c5-bbdf-5917777e52e6"],
Cell[446472, 11075, 2818, 53, 521, "Output",ExpressionUUID->"0d7d099f-7861-4f9a-86eb-b197578e6e01"]
}, Open  ]],
Cell[449305, 11131, 199, 3, 52, "Text",ExpressionUUID->"68e996d5-c061-4deb-9463-d2792ee992f1"],
Cell[CellGroupData[{
Cell[449529, 11138, 303, 6, 63, "Input",ExpressionUUID->"8f3a2375-99a9-4809-b005-8de4b66526d1"],
Cell[449835, 11146, 628, 11, 218, "Output",ExpressionUUID->"c514fefe-e8f3-411f-afa3-f98072e9bacd"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

